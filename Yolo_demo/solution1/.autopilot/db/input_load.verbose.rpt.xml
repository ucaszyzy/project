<profile>

<section name = "Vivado HLS Report for 'input_load'" level="0">
<item name = "Date">Thu Jul 29 20:17:29 2021
</item>
<item name = "Version">2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)</item>
<item name = "Project">Yolo_demo</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 10.166, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">?, ?, ?, ?, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="grp_mmcpy_inputpixel_m2b_fu_348">mmcpy_inputpixel_m2b, 1, 45, 1, 45, none</column>
<column name="grp_copy_input2buf_row_fu_391">copy_input2buf_row, ?, ?, ?, ?, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- Loop 1">?, ?, 4 ~ 48, -, -, 1 ~ 64, no</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, 4, -, -</column>
<column name="Expression">-, -, 0, 388</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, 0, 1038, 2528</column>
<column name="Memory">0, -, 512, 112</column>
<column name="Multiplexer">-, -, -, 764</column>
<column name="Register">-, -, 256, -</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">0, 1, 1, 7</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="grp_copy_input2buf_row_fu_391">copy_input2buf_row, 0, 0, 393, 1192</column>
<column name="grp_mmcpy_inputpixel_m2b_fu_348">mmcpy_inputpixel_m2b, 0, 0, 645, 1336</column>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
<column name="YOLO2_FPGA_mac_mujbC_U76">YOLO2_FPGA_mac_mujbC, i0 * i1 - i2</column>
<column name="YOLO2_FPGA_mac_mujbC_U77">YOLO2_FPGA_mac_mujbC, i0 * i1 - i2</column>
<column name="YOLO2_FPGA_mac_mulbW_U79">YOLO2_FPGA_mac_mulbW, i0 * i1 + i2</column>
<column name="YOLO2_FPGA_mul_mukbM_U78">YOLO2_FPGA_mul_mukbM, i0 * i1</column>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="input_memcpy_buffer0_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
<column name="input_memcpy_buffer1_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
<column name="input_memcpy_buffer2_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
<column name="input_memcpy_buffer3_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
<column name="input_memcpy_buffer0_1_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
<column name="input_memcpy_buffer1_1_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
<column name="input_memcpy_buffer2_1_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
<column name="input_memcpy_buffer3_1_U">input_load_input_bkb, 0, 64, 14, 28, 32, 1, 896</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="TMP_t2_V_fu_838_p2">+, 0, 0, 15, 6, 1</column>
<column name="r_V_11_fu_566_p2">+, 0, 0, 8, 12, 12</column>
<column name="r_V_12_fu_571_p2">+, 0, 0, 8, 2, 12</column>
<column name="r_V_13_fu_606_p2">+, 0, 0, 8, 12, 12</column>
<column name="r_V_14_fu_611_p2">+, 0, 0, 8, 2, 12</column>
<column name="r_V_18_fu_736_p2">+, 0, 0, 37, 30, 30</column>
<column name="r_V_19_fu_804_p2">+, 0, 0, 15, 1, 7</column>
<column name="r_V_1_fu_823_p2">+, 0, 0, 15, 7, 7</column>
<column name="t2_V_fu_943_p2">+, 0, 0, 15, 6, 6</column>
<column name="tmp_46_fu_584_p2">+, 0, 0, 15, 6, 6</column>
<column name="tmp_50_fu_631_p2">+, 0, 0, 15, 6, 6</column>
<column name="col_len_V_fu_716_p2">-, 0, 0, 15, 6, 6</column>
<column name="row_len_V_fu_652_p2">-, 0, 0, 15, 6, 6</column>
<column name="IsRowPixel_fu_864_p2">and, 0, 0, 2, 1, 1</column>
<column name="grp_fu_431_p2">icmp, 0, 0, 11, 6, 1</column>
<column name="sel_tmp2_fu_747_p2">icmp, 0, 0, 13, 9, 5</column>
<column name="sel_tmp_fu_741_p2">icmp, 0, 0, 13, 9, 4</column>
<column name="tmp_48_fu_590_p2">icmp, 0, 0, 13, 12, 1</column>
<column name="tmp_49_fu_621_p2">icmp, 0, 0, 13, 12, 12</column>
<column name="tmp_52_fu_833_p2">icmp, 0, 0, 11, 7, 7</column>
<column name="tmp_53_fu_848_p2">icmp, 0, 0, 11, 7, 7</column>
<column name="tmp_54_fu_870_p2">icmp, 0, 0, 11, 6, 6</column>
<column name="tmp_fu_554_p2">icmp, 0, 0, 13, 12, 1</column>
<column name="tmp_s_fu_696_p2">icmp, 0, 0, 13, 12, 12</column>
<column name="ult_fu_853_p2">icmp, 0, 0, 11, 6, 6</column>
<column name="ap_block_state6_on_subcall_done">or, 0, 0, 2, 1, 1</column>
<column name="tmp_21_fu_753_p2">or, 0, 0, 2, 1, 1</column>
<column name="TCol_left_V_1_fu_686_p3">select, 0, 0, 10, 1, 10</column>
<column name="TRow_top_V_1_fu_595_p3">select, 0, 0, 10, 1, 10</column>
<column name="p_2_fu_759_p3">select, 0, 0, 9, 1, 6</column>
<column name="p_3_fu_767_p3">select, 0, 0, 6, 1, 5</column>
<column name="p_4_fu_783_p3">select, 0, 0, 3, 1, 3</column>
<column name="sel_tmp9_fu_775_p3">select, 0, 0, 4, 1, 2</column>
<column name="tmp_18_fu_705_p3">select, 0, 0, 6, 1, 6</column>
<column name="tmp_20_fu_640_p3">select, 0, 0, 6, 1, 6</column>
<column name="ColSub_V_fu_795_p2">xor, 0, 0, 2, 1, 1</column>
<column name="RowSub_V_fu_670_p2">xor, 0, 0, 2, 1, 1</column>
<column name="rev_fu_858_p2">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">41, 8, 1, 8</column>
<column name="ap_phi_mux_pingpong_1_phi_fu_339_p4">15, 3, 1, 3</column>
<column name="grp_copy_input2buf_row_fu_391_RowBeginByte_0_V_re">15, 3, 1, 3</column>
<column name="grp_copy_input2buf_row_fu_391_RowBeginByte_1_V_re">15, 3, 1, 3</column>
<column name="grp_copy_input2buf_row_fu_391_RowBeginByte_2_V_re">15, 3, 1, 3</column>
<column name="grp_copy_input2buf_row_fu_391_RowBeginByte_3_V_re">15, 3, 1, 3</column>
<column name="grp_copy_input2buf_row_fu_391_enable">15, 3, 1, 3</column>
<column name="grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_q0">15, 3, 32, 96</column>
<column name="grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_q0">15, 3, 32, 96</column>
<column name="grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_q0">15, 3, 32, 96</column>
<column name="grp_copy_input2buf_row_fu_391_input_memcpy_buffer_q0">15, 3, 32, 96</column>
<column name="grp_copy_input2buf_row_fu_391_next_t2_0_V_read">15, 3, 6, 18</column>
<column name="grp_copy_input2buf_row_fu_391_p_read15">15, 3, 1, 3</column>
<column name="grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_0_V_read">15, 3, 1, 3</column>
<column name="grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_1_V_read">15, 3, 1, 3</column>
<column name="grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_2_V_read">15, 3, 1, 3</column>
<column name="grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_3_V_read">15, 3, 1, 3</column>
<column name="input_buffer_0_ce0">9, 2, 1, 2</column>
<column name="input_buffer_0_we0">9, 2, 1, 2</column>
<column name="input_buffer_1_ce0">9, 2, 1, 2</column>
<column name="input_buffer_1_we0">9, 2, 1, 2</column>
<column name="input_buffer_2_ce0">9, 2, 1, 2</column>
<column name="input_buffer_2_we0">9, 2, 1, 2</column>
<column name="input_buffer_3_ce0">9, 2, 1, 2</column>
<column name="input_buffer_3_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer0_1_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer0_1_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer0_1_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer0_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer0_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer0_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer1_1_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer1_1_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer1_1_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer1_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer1_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer1_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer2_1_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer2_1_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer2_1_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer2_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer2_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer2_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer3_1_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer3_1_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer3_1_we0">9, 2, 1, 2</column>
<column name="input_memcpy_buffer3_address0">15, 3, 5, 15</column>
<column name="input_memcpy_buffer3_ce0">15, 3, 1, 3</column>
<column name="input_memcpy_buffer3_we0">9, 2, 1, 2</column>
<column name="m_axi_input1_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input1_RREADY">9, 2, 1, 2</column>
<column name="m_axi_input2_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input2_RREADY">9, 2, 1, 2</column>
<column name="m_axi_input3_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input3_RREADY">9, 2, 1, 2</column>
<column name="m_axi_input_r_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input_r_RREADY">9, 2, 1, 2</column>
<column name="p_5_reg_300">9, 2, 6, 12</column>
<column name="p_6_reg_311">9, 2, 6, 12</column>
<column name="pingpong_reg_323">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ColSub_V_reg_1214">1, 0, 1, 0</column>
<column name="IHxIW_18b_V_reg_1101">18, 0, 18, 0</column>
<column name="IsRowPixel_reg_1247">1, 0, 1, 0</column>
<column name="RowBeginByte2_0_V_1_fu_182">1, 0, 1, 0</column>
<column name="RowBeginByte2_1_V_1_fu_186">1, 0, 1, 0</column>
<column name="RowBeginByte2_2_V_1_fu_190">1, 0, 1, 0</column>
<column name="RowBeginByte2_3_V_1_fu_194">1, 0, 1, 0</column>
<column name="RowBeginByte_0_V_1_fu_166">1, 0, 1, 0</column>
<column name="RowBeginByte_1_V_1_fu_170">1, 0, 1, 0</column>
<column name="RowBeginByte_2_V_1_fu_174">1, 0, 1, 0</column>
<column name="RowBeginByte_3_V_1_fu_178">1, 0, 1, 0</column>
<column name="RowSub_V_reg_1142">1, 0, 1, 0</column>
<column name="TCol_left_V_reg_1111">10, 0, 10, 0</column>
<column name="TMP_t2_V_reg_1242">6, 0, 6, 0</column>
<column name="TN_MIN_3b_V_reg_1184">3, 0, 3, 0</column>
<column name="TRow_top_V_1_reg_1126">10, 0, 10, 0</column>
<column name="TRow_top_V_reg_1081">10, 0, 10, 0</column>
<column name="ap_CS_fsm">7, 0, 7, 0</column>
<column name="col_len_V_reg_1189">6, 0, 6, 0</column>
<column name="grp_copy_input2buf_row_fu_391_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_mmcpy_inputpixel_m2b_fu_348_ap_start_reg">1, 0, 1, 0</column>
<column name="next_IsRowPixel2_0_1_fu_162">1, 0, 1, 0</column>
<column name="next_IsRowPixel_0_1_fu_154">1, 0, 1, 0</column>
<column name="next_t22_0_V_1_fu_158">6, 0, 6, 0</column>
<column name="next_t2_0_V_1_fu_150">6, 0, 6, 0</column>
<column name="p_2_reg_1199">9, 0, 9, 0</column>
<column name="p_3_reg_1204">6, 0, 6, 0</column>
<column name="p_4_reg_1209">3, 0, 3, 0</column>
<column name="p_5_reg_300">6, 0, 6, 0</column>
<column name="p_6_reg_311">6, 0, 6, 0</column>
<column name="pingpong_reg_323">1, 0, 1, 0</column>
<column name="r_V_12_reg_1116">12, 0, 12, 0</column>
<column name="r_V_15_reg_1137">29, 0, 29, 0</column>
<column name="r_V_18_reg_1194">30, 0, 30, 0</column>
<column name="r_V_19_reg_1219">7, 0, 7, 0</column>
<column name="r_V_1_reg_1234">7, 0, 7, 0</column>
<column name="r_V_21_reg_1075">12, 0, 12, 0</column>
<column name="rhs_V_2_reg_1070">1, 0, 12, 11</column>
<column name="rhs_V_reg_1065">2, 0, 11, 9</column>
<column name="row_len_V_reg_1131">6, 0, 6, 0</column>
<column name="tmp_46_reg_1121">6, 0, 6, 0</column>
<column name="tmp_51_reg_1229">3, 0, 6, 3</column>
<column name="tmp_54_reg_1252">1, 0, 1, 0</column>
<column name="tmp_56_reg_1262">1, 0, 1, 0</column>
<column name="tmp_58_reg_1257">1, 0, 1, 0</column>
<column name="tmp_81_cast_reg_1224">1, 0, 6, 5</column>
<column name="tmp_81_reg_1086">6, 0, 6, 0</column>
<column name="tmp_86_reg_1091">1, 0, 1, 0</column>
<column name="tmp_88_reg_1149">1, 0, 1, 0</column>
<column name="tmp_reg_1106">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, input_load, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, input_load, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, input_load, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, input_load, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, input_load, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, input_load, return value</column>
<column name="m_axi_input_r_AWVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWADDR">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWLEN">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWSIZE">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWBURST">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWLOCK">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWCACHE">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWPROT">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWQOS">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWREGION">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WDATA">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WSTRB">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WLAST">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARADDR">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARLEN">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARSIZE">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARBURST">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARLOCK">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARCACHE">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARPROT">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARQOS">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARREGION">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RVALID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RREADY">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RDATA">in, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RLAST">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RUSER">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RRESP">in, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BVALID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BREADY">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BRESP">in, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BUSER">in, 1, m_axi, input_r, pointer</column>
<column name="input_offset">in, 30, ap_none, input_offset, scalar</column>
<column name="m_axi_input1_AWVALID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWREADY">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWADDR">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWLEN">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWSIZE">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWBURST">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWLOCK">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWCACHE">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWPROT">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWQOS">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWREGION">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWUSER">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WVALID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WREADY">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WDATA">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_WSTRB">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_WLAST">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WUSER">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARVALID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARREADY">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARADDR">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARLEN">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARSIZE">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARBURST">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARLOCK">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARCACHE">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARPROT">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARQOS">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARREGION">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARUSER">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RVALID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RREADY">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RDATA">in, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_RLAST">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RUSER">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RRESP">in, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_BVALID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_BREADY">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_BRESP">in, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_BID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_BUSER">in, 1, m_axi, input1, pointer</column>
<column name="input1_offset">in, 30, ap_none, input1_offset, scalar</column>
<column name="m_axi_input2_AWVALID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWREADY">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWADDR">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWLEN">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWSIZE">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWBURST">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWLOCK">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWCACHE">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWPROT">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWQOS">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWREGION">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWUSER">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WVALID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WREADY">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WDATA">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_WSTRB">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_WLAST">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WUSER">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARVALID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARREADY">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARADDR">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARLEN">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARSIZE">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARBURST">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARLOCK">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARCACHE">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARPROT">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARQOS">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARREGION">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARUSER">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RVALID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RREADY">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RDATA">in, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_RLAST">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RUSER">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RRESP">in, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_BVALID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_BREADY">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_BRESP">in, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_BID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_BUSER">in, 1, m_axi, input2, pointer</column>
<column name="input2_offset">in, 30, ap_none, input2_offset, scalar</column>
<column name="m_axi_input3_AWVALID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWREADY">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWADDR">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWLEN">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWSIZE">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWBURST">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWLOCK">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWCACHE">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWPROT">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWQOS">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWREGION">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWUSER">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WVALID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WREADY">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WDATA">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_WSTRB">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_WLAST">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WUSER">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARVALID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARREADY">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARADDR">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARLEN">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARSIZE">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARBURST">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARLOCK">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARCACHE">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARPROT">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARQOS">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARREGION">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARUSER">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RVALID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RREADY">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RDATA">in, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_RLAST">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RUSER">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RRESP">in, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_BVALID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_BREADY">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_BRESP">in, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_BID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_BUSER">in, 1, m_axi, input3, pointer</column>
<column name="input3_offset">in, 30, ap_none, input3_offset, scalar</column>
<column name="input_buffer_0_address0">out, 12, ap_memory, input_buffer_0, array</column>
<column name="input_buffer_0_ce0">out, 1, ap_memory, input_buffer_0, array</column>
<column name="input_buffer_0_we0">out, 1, ap_memory, input_buffer_0, array</column>
<column name="input_buffer_0_d0">out, 16, ap_memory, input_buffer_0, array</column>
<column name="input_buffer_1_address0">out, 12, ap_memory, input_buffer_1, array</column>
<column name="input_buffer_1_ce0">out, 1, ap_memory, input_buffer_1, array</column>
<column name="input_buffer_1_we0">out, 1, ap_memory, input_buffer_1, array</column>
<column name="input_buffer_1_d0">out, 16, ap_memory, input_buffer_1, array</column>
<column name="input_buffer_2_address0">out, 12, ap_memory, input_buffer_2, array</column>
<column name="input_buffer_2_ce0">out, 1, ap_memory, input_buffer_2, array</column>
<column name="input_buffer_2_we0">out, 1, ap_memory, input_buffer_2, array</column>
<column name="input_buffer_2_d0">out, 16, ap_memory, input_buffer_2, array</column>
<column name="input_buffer_3_address0">out, 12, ap_memory, input_buffer_3, array</column>
<column name="input_buffer_3_ce0">out, 1, ap_memory, input_buffer_3, array</column>
<column name="input_buffer_3_we0">out, 1, ap_memory, input_buffer_3, array</column>
<column name="input_buffer_3_d0">out, 16, ap_memory, input_buffer_3, array</column>
<column name="r">in, 32, ap_none, r, scalar</column>
<column name="c">in, 32, ap_none, c, scalar</column>
<column name="n">in, 32, ap_none, n, scalar</column>
<column name="Kernel_stride">in, 32, ap_none, Kernel_stride, scalar</column>
<column name="Padding">in, 32, ap_none, Padding, scalar</column>
<column name="TRow">in, 8, ap_none, TRow, scalar</column>
<column name="TCol">in, 8, ap_none, TCol, scalar</column>
<column name="Input_w">in, 32, ap_none, Input_w, scalar</column>
<column name="Input_h">in, 32, ap_none, Input_h, scalar</column>
<column name="TN_MIN">in, 32, ap_none, TN_MIN, scalar</column>
<column name="IHxIW">in, 19, ap_none, IHxIW, scalar</column>
<column name="LayerType">in, 2, ap_none, LayerType, scalar</column>
<column name="trow_loops_V">in, 6, ap_none, trow_loops_V, scalar</column>
</table>
</item>
</section>
</profile>
