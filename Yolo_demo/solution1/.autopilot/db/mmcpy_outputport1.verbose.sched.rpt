

================================================================
== Vivado HLS Report for 'mmcpy_outputport1'
================================================================
* Date:           Thu Jul 29 20:17:21 2021

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        Yolo_demo
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|  263|    1|  263|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------+-----+-----+----------+-----------+-----------+---------+----------+
        |                                |  Latency  | Iteration|  Initiation Interval  |   Trip  |          |
        |            Loop Name           | min | max |  Latency |  achieved |   target  |  Count  | Pipelined|
        +--------------------------------+-----+-----+----------+-----------+-----------+---------+----------+
        |- memcpy.Output.output_tmp.gep  |    0|  256|         3|          1|          1| 0 ~ 255 |    yes   |
        +--------------------------------+-----+-----+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (enable)
	10  / (!enable)
2 --> 
	3  / true
3 --> 
	6  / (exitcond)
	4  / (!exitcond)
4 --> 
	5  / true
5 --> 
	3  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.55>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%OutputLength_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %OutputLength)"   --->   Operation 11 'read' 'OutputLength_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%OutputOffset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %OutputOffset)"   --->   Operation 12 'read' 'OutputOffset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%mLoop_V_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %mLoop_V)"   --->   Operation 13 'read' 'mLoop_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tm_V_2_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %tm_V_2)"   --->   Operation 14 'read' 'tm_V_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%Output_offset_read = call i30 @_ssdm_op_Read.ap_auto.i30(i30 %Output_offset)"   --->   Operation 15 'read' 'Output_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %Output_r, [6 x i8]* @p_str16, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 512, [10 x i8]* @p_str19, [6 x i8]* @p_str18, [1 x i8]* @p_str1, i32 1, i32 1, i32 64, i32 64, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 16 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.42ns)   --->   "%enable = icmp ult i6 %tm_V_2_read, %mLoop_V_read" [cnn.cpp:663]   --->   Operation 17 'icmp' 'enable' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %enable, label %1, label %._crit_edge" [cnn.cpp:664]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_cast = sext i32 %OutputOffset_read to i33" [cnn.cpp:667]   --->   Operation 19 'sext' 'tmp_cast' <Predicate = (enable)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sext_cast = zext i30 %Output_offset_read to i33"   --->   Operation 20 'zext' 'sext_cast' <Predicate = (enable)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (2.55ns)   --->   "%sum = add i33 %tmp_cast, %sext_cast" [cnn.cpp:667]   --->   Operation 21 'add' 'sum' <Predicate = (enable)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sum_cast = sext i33 %sum to i64" [cnn.cpp:667]   --->   Operation 22 'sext' 'sum_cast' <Predicate = (enable)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%Output_addr = getelementptr i32* %Output_r, i64 %sum_cast" [cnn.cpp:667]   --->   Operation 23 'getelementptr' 'Output_addr' <Predicate = (enable)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_83_i32_shr_cast2 = zext i8 %OutputLength_read to i32" [cnn.cpp:667]   --->   Operation 24 'zext' 'tmp_83_i32_shr_cast2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (8.75ns)   --->   "%Output_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %Output_addr, i32 %tmp_83_i32_shr_cast2)" [cnn.cpp:667]   --->   Operation 25 'writereq' 'Output_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 26 [1/1] (1.76ns)   --->   "br label %burst.wr.header"   --->   Operation 26 'br' <Predicate = true> <Delay = 1.76>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%indvar = phi i8 [ 0, %1 ], [ %indvar_next, %burst.wr.body ]"   --->   Operation 27 'phi' 'indvar' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.55ns)   --->   "%exitcond = icmp eq i8 %indvar, %OutputLength_read"   --->   Operation 28 'icmp' 'exitcond' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 255, i64 0)"   --->   Operation 29 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.91ns)   --->   "%indvar_next = add i8 %indvar, 1"   --->   Operation 30 'add' 'indvar_next' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %._crit_edge.loopexit, label %burst.wr.body"   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%indvar1 = zext i8 %indvar to i64"   --->   Operation 32 'zext' 'indvar1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%output_tmp_addr = getelementptr [169 x i32]* %output_tmp, i64 0, i64 %indvar1" [cnn.cpp:667]   --->   Operation 33 'getelementptr' 'output_tmp_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 34 [2/2] (3.25ns)   --->   "%output_tmp_load = load i32* %output_tmp_addr, align 4" [cnn.cpp:667]   --->   Operation 34 'load' 'output_tmp_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 35 [1/2] (3.25ns)   --->   "%output_tmp_load = load i32* %output_tmp_addr, align 4" [cnn.cpp:667]   --->   Operation 35 'load' 'output_tmp_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region)"   --->   Operation 36 'specregionbegin' 'burstwrite_rbegin' <Predicate = (!exitcond)> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str90)"   --->   Operation 37 'specpipeline' <Predicate = (!exitcond)> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopName([29 x i8]* @memcpy_OC_Output_OC_s)"   --->   Operation 38 'specloopname' 'empty_20' <Predicate = (!exitcond)> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %Output_addr, i32 %output_tmp_load, i4 -1)" [cnn.cpp:667]   --->   Operation 39 'write' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region, i32 %burstwrite_rbegin)"   --->   Operation 40 'specregionend' 'burstwrite_rend' <Predicate = (!exitcond)> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "br label %burst.wr.header"   --->   Operation 41 'br' <Predicate = (!exitcond)> <Delay = 0.00>

State 6 <SV = 3> <Delay = 8.75>
ST_6 : Operation 42 [5/5] (8.75ns)   --->   "%Output_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %Output_addr)" [cnn.cpp:667]   --->   Operation 42 'writeresp' 'Output_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 4> <Delay = 8.75>
ST_7 : Operation 43 [4/5] (8.75ns)   --->   "%Output_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %Output_addr)" [cnn.cpp:667]   --->   Operation 43 'writeresp' 'Output_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 5> <Delay = 8.75>
ST_8 : Operation 44 [3/5] (8.75ns)   --->   "%Output_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %Output_addr)" [cnn.cpp:667]   --->   Operation 44 'writeresp' 'Output_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 6> <Delay = 8.75>
ST_9 : Operation 45 [2/5] (8.75ns)   --->   "%Output_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %Output_addr)" [cnn.cpp:667]   --->   Operation 45 'writeresp' 'Output_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 7> <Delay = 8.75>
ST_10 : Operation 46 [1/5] (8.75ns)   --->   "%Output_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %Output_addr)" [cnn.cpp:667]   --->   Operation 46 'writeresp' 'Output_addr_wr_resp' <Predicate = (enable)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 47 [1/1] (0.00ns)   --->   "br label %._crit_edge"   --->   Operation 47 'br' <Predicate = (enable)> <Delay = 0.00>
ST_10 : Operation 48 [1/1] (0.00ns)   --->   "ret void" [cnn.cpp:668]   --->   Operation 48 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.55ns
The critical path consists of the following:
	wire read on port 'OutputOffset' [9]  (0 ns)
	'add' operation ('sum', cnn.cpp:667) [19]  (2.55 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus request on port 'Output_r' (cnn.cpp:667) [23]  (8.75 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'phi' operation ('indvar') with incoming values : ('indvar_next') [26]  (0 ns)
	'getelementptr' operation ('output_tmp_addr', cnn.cpp:667) [36]  (0 ns)
	'load' operation ('output_tmp_load', cnn.cpp:667) on array 'output_tmp' [37]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('output_tmp_load', cnn.cpp:667) on array 'output_tmp' [37]  (3.25 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus write on port 'Output_r' (cnn.cpp:667) [38]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus access on port 'Output_r' (cnn.cpp:667) [42]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus access on port 'Output_r' (cnn.cpp:667) [42]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus access on port 'Output_r' (cnn.cpp:667) [42]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus access on port 'Output_r' (cnn.cpp:667) [42]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus access on port 'Output_r' (cnn.cpp:667) [42]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
