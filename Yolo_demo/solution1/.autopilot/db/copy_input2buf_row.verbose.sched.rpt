

================================================================
== Vivado HLS Report for 'copy_input2buf_row'
================================================================
* Date:           Thu Jul 29 20:17:07 2021

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        Yolo_demo
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.610|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         3|          1|          1|     ?|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (enable_read)
	6  / (!enable_read)
2 --> 
	3  / true
3 --> 
	6  / (exitcond_flatten)
	4  / (!exitcond_flatten)
4 --> 
	5  / true
5 --> 
	3  / true
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.94>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%T2Rate_V_read = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %T2Rate_V)"   --->   Operation 7 'read' 'T2Rate_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%enable_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %enable)"   --->   Operation 8 'read' 'enable_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %p_read15)"   --->   Operation 9 'read' 'p_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%next_t2_0_V_read_1 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %next_t2_0_V_read)"   --->   Operation 10 'read' 'next_t2_0_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%LayerType_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %LayerType)"   --->   Operation 11 'read' 'LayerType_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%TCol_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %TCol)"   --->   Operation 12 'read' 'TCol_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%RowBeginByte_3_V_re_1 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %RowBeginByte_3_V_re)"   --->   Operation 13 'read' 'RowBeginByte_3_V_re_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%RowBeginByte_2_V_re_1 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %RowBeginByte_2_V_re)"   --->   Operation 14 'read' 'RowBeginByte_2_V_re_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%RowBeginByte_1_V_re_1 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %RowBeginByte_1_V_re)"   --->   Operation 15 'read' 'RowBeginByte_1_V_re_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%RowBeginByte_0_V_re_1 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %RowBeginByte_0_V_re)"   --->   Operation 16 'read' 'RowBeginByte_0_V_re_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%ColSub_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %ColSub_V)"   --->   Operation 17 'read' 'ColSub_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%RowSub_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %RowSub_V)"   --->   Operation 18 'read' 'RowSub_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%col_len_V_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %col_len_V)"   --->   Operation 19 'read' 'col_len_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%row_len_V_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %row_len_V)"   --->   Operation 20 'read' 'row_len_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %enable_read, label %codeRepl, label %._crit_edge" [cnn.cpp:131]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%IsRowInit_flag_1 = alloca i1"   --->   Operation 22 'alloca' 'IsRowInit_flag_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_0 = alloca i32"   --->   Operation 23 'alloca' 'input_mmcpy_offset_0' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_1 = alloca i32"   --->   Operation 24 'alloca' 'input_mmcpy_offset_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_2 = alloca i32"   --->   Operation 25 'alloca' 'input_mmcpy_offset_2' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_3 = alloca i32"   --->   Operation 26 'alloca' 'input_mmcpy_offset_3' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%NextInputFlag_0_1 = alloca i1"   --->   Operation 27 'alloca' 'NextInputFlag_0_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%NextInputFlag_1_1 = alloca i1"   --->   Operation 28 'alloca' 'NextInputFlag_1_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%NextInputFlag_2_1 = alloca i1"   --->   Operation 29 'alloca' 'NextInputFlag_2_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%NextInputFlag_3_1 = alloca i1"   --->   Operation 30 'alloca' 'NextInputFlag_3_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%cnt_0_V_1 = alloca i1"   --->   Operation 31 'alloca' 'cnt_0_V_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%cnt_1_V_1 = alloca i1"   --->   Operation 32 'alloca' 'cnt_1_V_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%cnt_2_V_1 = alloca i1"   --->   Operation 33 'alloca' 'cnt_2_V_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%cnt_3_V_1 = alloca i1"   --->   Operation 34 'alloca' 'cnt_3_V_1' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%input_array_0_0 = alloca i16"   --->   Operation 35 'alloca' 'input_array_0_0' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%input_array_0_1_2 = alloca i16"   --->   Operation 36 'alloca' 'input_array_0_1_2' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%input_array_1_0 = alloca i16"   --->   Operation 37 'alloca' 'input_array_1_0' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%input_array_1_1_2 = alloca i16"   --->   Operation 38 'alloca' 'input_array_1_1_2' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%input_array_2_0 = alloca i16"   --->   Operation 39 'alloca' 'input_array_2_0' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%input_array_2_1_2 = alloca i16"   --->   Operation 40 'alloca' 'input_array_2_1_2' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%input_array_3_0 = alloca i16"   --->   Operation 41 'alloca' 'input_array_3_0' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%input_array_3_1_2 = alloca i16"   --->   Operation 42 'alloca' 'input_array_3_1_2' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (1.42ns)   --->   "%initial = icmp eq i6 %next_t2_0_V_read_1, 0" [cnn.cpp:141]   --->   Operation 43 'icmp' 'initial' <Predicate = (enable_read)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%t2_local_V_load = load i6* @t2_local_V, align 1" [cnn.cpp:174]   --->   Operation 44 'load' 't2_local_V_load' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (1.18ns)   --->   "%t2r_V = select i1 %initial, i6 0, i6 %t2_local_V_load" [cnn.cpp:142]   --->   Operation 45 'select' 't2r_V' <Predicate = (enable_read)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.95ns)   --->   "%tmp = icmp eq i2 %LayerType_read, 1" [cnn.cpp:148]   --->   Operation 46 'icmp' 'tmp' <Predicate = (enable_read)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (1.65ns)   --->   "%T2R_V = add i3 %T2Rate_V_read, 1" [cnn.cpp:168]   --->   Operation 47 'add' 'T2R_V' <Predicate = (enable_read)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.98ns)   --->   "%T2R_V_1 = select i1 %p_read, i3 %T2Rate_V_read, i3 %T2R_V" [cnn.cpp:166]   --->   Operation 48 'select' 'T2R_V_1' <Predicate = (enable_read)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%lhs_V = zext i6 %t2r_V to i7" [cnn.cpp:174]   --->   Operation 49 'zext' 'lhs_V' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%rhs_V = zext i3 %T2R_V_1 to i7" [cnn.cpp:174]   --->   Operation 50 'zext' 'rhs_V' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_29 = zext i3 %T2R_V_1 to i6" [cnn.cpp:166]   --->   Operation 51 'zext' 'tmp_29' <Predicate = (enable_read)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (1.82ns)   --->   "%r_V = add i7 %rhs_V, %lhs_V" [cnn.cpp:174]   --->   Operation 52 'add' 'r_V' <Predicate = (enable_read)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (1.48ns)   --->   "%tmp_s = icmp ult i7 %r_V, 53" [cnn.cpp:175]   --->   Operation 53 'icmp' 'tmp_s' <Predicate = (enable_read)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (1.82ns)   --->   "%phitmp = add i6 %tmp_29, %t2r_V" [cnn.cpp:175]   --->   Operation 54 'add' 'phitmp' <Predicate = (enable_read)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (1.76ns)   --->   "store i32 0, i32* %input_mmcpy_offset_3"   --->   Operation 55 'store' <Predicate = (enable_read)> <Delay = 1.76>
ST_1 : Operation 56 [1/1] (1.76ns)   --->   "store i32 0, i32* %input_mmcpy_offset_2"   --->   Operation 56 'store' <Predicate = (enable_read)> <Delay = 1.76>
ST_1 : Operation 57 [1/1] (1.76ns)   --->   "store i32 0, i32* %input_mmcpy_offset_1"   --->   Operation 57 'store' <Predicate = (enable_read)> <Delay = 1.76>
ST_1 : Operation 58 [1/1] (1.76ns)   --->   "store i32 0, i32* %input_mmcpy_offset_0"   --->   Operation 58 'store' <Predicate = (enable_read)> <Delay = 1.76>
ST_1 : Operation 59 [1/1] (1.76ns)   --->   "store i1 true, i1* %IsRowInit_flag_1"   --->   Operation 59 'store' <Predicate = (enable_read)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.60>
ST_2 : Operation 60 [1/1] (0.80ns)   --->   "%p_s = select i1 %tmp, i16 -32767, i16 0" [cnn.cpp:148]   --->   Operation 60 'select' 'p_s' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.18ns)   --->   "%T2R_bound_V = select i1 %tmp_s, i6 %phitmp, i6 -11" [cnn.cpp:175]   --->   Operation 61 'select' 'T2R_bound_V' <Predicate = true> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_94_cast = zext i1 %RowSub_V_read to i6" [cnn.cpp:184]   --->   Operation 62 'zext' 'tmp_94_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_95_cast = zext i1 %ColSub_V_read to i9" [cnn.cpp:184]   --->   Operation 63 'zext' 'tmp_95_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_95_cast_cast = zext i1 %ColSub_V_read to i8" [cnn.cpp:184]   --->   Operation 64 'zext' 'tmp_95_cast_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%lhs_V_9 = zext i6 %col_len_V_read to i7" [cnn.cpp:184]   --->   Operation 65 'zext' 'lhs_V_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%rhs_V_7 = zext i1 %ColSub_V_read to i7" [cnn.cpp:184]   --->   Operation 66 'zext' 'rhs_V_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (1.82ns)   --->   "%r_V_22 = add i7 %rhs_V_7, %lhs_V_9" [cnn.cpp:184]   --->   Operation 67 'add' 'r_V_22' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_96_cast_cast = zext i7 %r_V_22 to i8" [cnn.cpp:183]   --->   Operation 68 'zext' 'tmp_96_cast_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%lhs_V_2 = zext i6 %row_len_V_read to i7" [cnn.cpp:183]   --->   Operation 69 'zext' 'lhs_V_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%rhs_V_1 = zext i1 %RowSub_V_read to i7" [cnn.cpp:183]   --->   Operation 70 'zext' 'rhs_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (1.82ns)   --->   "%r_V_2 = add i7 %rhs_V_1, %lhs_V_2" [cnn.cpp:183]   --->   Operation 71 'add' 'r_V_2' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (1.42ns)   --->   "%tmp_60 = icmp ugt i6 %t2r_V, %T2R_bound_V" [cnn.cpp:142]   --->   Operation 72 'icmp' 'tmp_60' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node tmp_61)   --->   "%umax1 = select i1 %tmp_60, i6 %t2r_V, i6 %T2R_bound_V" [cnn.cpp:142]   --->   Operation 73 'select' 'umax1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (1.82ns) (out node of the LUT)   --->   "%tmp_61 = sub i6 %umax1, %t2r_V" [cnn.cpp:179]   --->   Operation 74 'sub' 'tmp_61' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%cast = zext i6 %tmp_61 to i14" [cnn.cpp:179]   --->   Operation 75 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%cast2 = zext i8 %TCol_read to i14"   --->   Operation 76 'zext' 'cast2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (4.17ns)   --->   "%bound = mul i14 %cast, %cast2" [cnn.cpp:179]   --->   Operation 77 'mul' 'bound' <Predicate = true> <Delay = 4.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (1.76ns)   --->   "br label %.preheader" [cnn.cpp:179]   --->   Operation 78 'br' <Predicate = true> <Delay = 1.76>

State 3 <SV = 2> <Delay = 5.34>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i14 [ 0, %codeRepl ], [ %indvar_flatten_next, %2 ]"   --->   Operation 79 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%p_7 = phi i6 [ %t2r_V, %codeRepl ], [ %tmp_77_mid2_v, %2 ]"   --->   Operation 80 'phi' 'p_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%t3 = phi i8 [ 0, %codeRepl ], [ %t3_1, %2 ]"   --->   Operation 81 'phi' 't3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_99_cast4 = zext i6 %p_7 to i7" [cnn.cpp:183]   --->   Operation 82 'zext' 'tmp_99_cast4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (1.42ns)   --->   "%tmp_62 = icmp ult i6 %p_7, %tmp_94_cast" [cnn.cpp:183]   --->   Operation 83 'icmp' 'tmp_62' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (1.48ns)   --->   "%ult = icmp ult i7 %tmp_99_cast4, %r_V_2" [cnn.cpp:183]   --->   Operation 84 'icmp' 'ult' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node tmp1)   --->   "%rev = xor i1 %ult, true" [cnn.cpp:183]   --->   Operation 85 'xor' 'rev' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.97ns) (out node of the LUT)   --->   "%tmp1 = or i1 %tmp_62, %rev" [cnn.cpp:187]   --->   Operation 86 'or' 'tmp1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (2.20ns)   --->   "%exitcond_flatten = icmp eq i14 %indvar_flatten, %bound" [cnn.cpp:179]   --->   Operation 87 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (1.81ns)   --->   "%indvar_flatten_next = add i14 %indvar_flatten, 1"   --->   Operation 88 'add' 'indvar_flatten_next' <Predicate = true> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %mergeST, label %.preheader.preheader" [cnn.cpp:179]   --->   Operation 89 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (1.82ns)   --->   "%t2r_V_1 = add i6 %p_7, 1" [cnn.cpp:179]   --->   Operation 90 'add' 't2r_V_1' <Predicate = (!exitcond_flatten)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (1.55ns)   --->   "%exitcond = icmp eq i8 %t3, %TCol_read" [cnn.cpp:180]   --->   Operation 91 'icmp' 'exitcond' <Predicate = (!exitcond_flatten)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (1.24ns)   --->   "%t3_mid2 = select i1 %exitcond, i8 0, i8 %t3" [cnn.cpp:180]   --->   Operation 92 'select' 't3_mid2' <Predicate = (!exitcond_flatten)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_99_cast4_mid1 = zext i6 %t2r_V_1 to i7" [cnn.cpp:183]   --->   Operation 93 'zext' 'tmp_99_cast4_mid1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (1.42ns)   --->   "%tmp_76_mid1 = icmp ult i6 %t2r_V_1, %tmp_94_cast" [cnn.cpp:183]   --->   Operation 94 'icmp' 'tmp_76_mid1' <Predicate = (!exitcond_flatten)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (1.18ns)   --->   "%tmp_77_mid2_v = select i1 %exitcond, i6 %t2r_V_1, i6 %p_7" [cnn.cpp:276]   --->   Operation 95 'select' 'tmp_77_mid2_v' <Predicate = (!exitcond_flatten)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (1.48ns)   --->   "%ult1 = icmp ult i7 %tmp_99_cast4_mid1, %r_V_2" [cnn.cpp:183]   --->   Operation 96 'icmp' 'ult1' <Predicate = (!exitcond_flatten)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node brmerge)   --->   "%rev1 = xor i1 %ult1, true" [cnn.cpp:183]   --->   Operation 97 'xor' 'rev1' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node brmerge)   --->   "%tmp1_mid1 = or i1 %tmp_76_mid1, %rev1" [cnn.cpp:187]   --->   Operation 98 'or' 'tmp1_mid1' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node brmerge)   --->   "%tmp1_mid2 = select i1 %exitcond, i1 %tmp1_mid1, i1 %tmp1" [cnn.cpp:187]   --->   Operation 99 'select' 'tmp1_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%t3_cast = zext i8 %t3_mid2 to i9" [cnn.cpp:180]   --->   Operation 100 'zext' 't3_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [cnn.cpp:181]   --->   Operation 101 'specregionbegin' 'tmp_30' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (1.55ns)   --->   "%tmp_64 = icmp ult i8 %t3_mid2, %tmp_95_cast_cast" [cnn.cpp:184]   --->   Operation 102 'icmp' 'tmp_64' <Predicate = (!exitcond_flatten)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (1.55ns)   --->   "%ult2 = icmp ult i8 %t3_mid2, %tmp_96_cast_cast" [cnn.cpp:180]   --->   Operation 103 'icmp' 'ult2' <Predicate = (!exitcond_flatten)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node brmerge)   --->   "%rev2 = xor i1 %ult2, true" [cnn.cpp:180]   --->   Operation 104 'xor' 'rev2' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 105 [1/1] (1.55ns)   --->   "%tmp_65 = icmp eq i9 %t3_cast, %tmp_95_cast" [cnn.cpp:185]   --->   Operation 105 'icmp' 'tmp_65' <Predicate = (!exitcond_flatten)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node brmerge)   --->   "%tmp2 = or i1 %rev2, %tmp_64" [cnn.cpp:187]   --->   Operation 106 'or' 'tmp2' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (0.99ns) (out node of the LUT)   --->   "%brmerge = or i1 %tmp2, %tmp1_mid2" [cnn.cpp:187]   --->   Operation 107 'or' 'brmerge' <Predicate = (!exitcond_flatten)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "br i1 %brmerge, label %1, label %._crit_edge10_ifconv" [cnn.cpp:187]   --->   Operation 108 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_30)" [cnn.cpp:282]   --->   Operation 109 'specregionend' 'empty' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (1.91ns)   --->   "%t3_1 = add i8 %t3_mid2, 1" [cnn.cpp:180]   --->   Operation 110 'add' 't3_1' <Predicate = (!exitcond_flatten)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "br label %.preheader" [cnn.cpp:180]   --->   Operation 111 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.01>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%IsRowInit_flag_1_loa = load i1* %IsRowInit_flag_1" [cnn.cpp:185]   --->   Operation 112 'load' 'IsRowInit_flag_1_loa' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.97ns)   --->   "%IsRowInit = and i1 %tmp_65, %IsRowInit_flag_1_loa" [cnn.cpp:185]   --->   Operation 113 'and' 'IsRowInit' <Predicate = (!exitcond_flatten)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_0_1 = load i32* %input_mmcpy_offset_0" [cnn.cpp:206]   --->   Operation 114 'load' 'input_mmcpy_offset_0_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_1_1 = load i32* %input_mmcpy_offset_1" [cnn.cpp:214]   --->   Operation 115 'load' 'input_mmcpy_offset_1_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_2_1 = load i32* %input_mmcpy_offset_2" [cnn.cpp:222]   --->   Operation 116 'load' 'input_mmcpy_offset_2_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%input_mmcpy_offset_3_1 = load i32* %input_mmcpy_offset_3" [cnn.cpp:230]   --->   Operation 117 'load' 'input_mmcpy_offset_3_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%NextInputFlag_0_1_lo = load i1* %NextInputFlag_0_1" [cnn.cpp:189]   --->   Operation 118 'load' 'NextInputFlag_0_1_lo' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%NextInputFlag_1_1_lo = load i1* %NextInputFlag_1_1" [cnn.cpp:189]   --->   Operation 119 'load' 'NextInputFlag_1_1_lo' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%NextInputFlag_2_1_lo = load i1* %NextInputFlag_2_1" [cnn.cpp:189]   --->   Operation 120 'load' 'NextInputFlag_2_1_lo' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "%NextInputFlag_3_1_lo = load i1* %NextInputFlag_3_1" [cnn.cpp:189]   --->   Operation 121 'load' 'NextInputFlag_3_1_lo' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%cnt_0_V_1_load = load i1* %cnt_0_V_1" [cnn.cpp:189]   --->   Operation 122 'load' 'cnt_0_V_1_load' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%cnt_1_V_1_load = load i1* %cnt_1_V_1" [cnn.cpp:189]   --->   Operation 123 'load' 'cnt_1_V_1_load' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%cnt_2_V_1_load = load i1* %cnt_2_V_1" [cnn.cpp:189]   --->   Operation 124 'load' 'cnt_2_V_1_load' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%cnt_3_V_1_load = load i1* %cnt_3_V_1" [cnn.cpp:189]   --->   Operation 125 'load' 'cnt_3_V_1_load' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.99ns)   --->   "%p_read3_cnt_V_3_1 = select i1 %IsRowInit, i1 %RowBeginByte_3_V_re_1, i1 %cnt_3_V_1_load" [cnn.cpp:189]   --->   Operation 126 'select' 'p_read3_cnt_V_3_1' <Predicate = (!brmerge)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 127 [1/1] (0.99ns)   --->   "%p_read2_cnt_V_2_1 = select i1 %IsRowInit, i1 %RowBeginByte_2_V_re_1, i1 %cnt_2_V_1_load" [cnn.cpp:189]   --->   Operation 127 'select' 'p_read2_cnt_V_2_1' <Predicate = (!brmerge)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 128 [1/1] (0.99ns)   --->   "%p_read1_cnt_V_1_1 = select i1 %IsRowInit, i1 %RowBeginByte_1_V_re_1, i1 %cnt_1_V_1_load" [cnn.cpp:189]   --->   Operation 128 'select' 'p_read1_cnt_V_1_1' <Predicate = (!brmerge)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 129 [1/1] (0.99ns)   --->   "%p_read_cnt_V_0_1 = select i1 %IsRowInit, i1 %RowBeginByte_0_V_re_1, i1 %cnt_0_V_1_load" [cnn.cpp:189]   --->   Operation 129 'select' 'p_read_cnt_V_0_1' <Predicate = (!brmerge)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 130 [1/1] (0.97ns)   --->   "%p_NextInputFlag_3_1 = or i1 %IsRowInit, %NextInputFlag_3_1_lo" [cnn.cpp:189]   --->   Operation 130 'or' 'p_NextInputFlag_3_1' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 131 [1/1] (0.97ns)   --->   "%p_NextInputFlag_2_1 = or i1 %IsRowInit, %NextInputFlag_2_1_lo" [cnn.cpp:189]   --->   Operation 131 'or' 'p_NextInputFlag_2_1' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 132 [1/1] (0.97ns)   --->   "%p_NextInputFlag_1_1 = or i1 %IsRowInit, %NextInputFlag_1_1_lo" [cnn.cpp:189]   --->   Operation 132 'or' 'p_NextInputFlag_1_1' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [1/1] (0.97ns)   --->   "%p_NextInputFlag_0_1 = or i1 %IsRowInit, %NextInputFlag_0_1_lo" [cnn.cpp:189]   --->   Operation 133 'or' 'p_NextInputFlag_0_1' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (0.97ns)   --->   "%p_IsRowInit_flag_1 = xor i1 %IsRowInit, %IsRowInit_flag_1_loa" [cnn.cpp:189]   --->   Operation 134 'xor' 'p_IsRowInit_flag_1' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_67 = sext i32 %input_mmcpy_offset_0_1 to i64" [cnn.cpp:204]   --->   Operation 135 'sext' 'tmp_67' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%input_memcpy_buffer_s = getelementptr [28 x i32]* %input_memcpy_buffer, i64 0, i64 %tmp_67" [cnn.cpp:204]   --->   Operation 136 'getelementptr' 'input_memcpy_buffer_s' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 137 [2/2] (2.32ns)   --->   "%input_memcpy_buffer_1 = load i32* %input_memcpy_buffer_s, align 4" [cnn.cpp:204]   --->   Operation 137 'load' 'input_memcpy_buffer_1' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_4 : Operation 138 [1/1] (2.55ns)   --->   "%input_mmcpy_offset_0_2 = add nsw i32 1, %input_mmcpy_offset_0_1" [cnn.cpp:206]   --->   Operation 138 'add' 'input_mmcpy_offset_0_2' <Predicate = (!brmerge)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 139 [1/1] (0.69ns)   --->   "%input_mmcpy_offset_0_3 = select i1 %p_NextInputFlag_0_1, i32 %input_mmcpy_offset_0_2, i32 %input_mmcpy_offset_0_1" [cnn.cpp:189]   --->   Operation 139 'select' 'input_mmcpy_offset_0_3' <Predicate = (!brmerge)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_68 = sext i32 %input_mmcpy_offset_1_1 to i64" [cnn.cpp:212]   --->   Operation 140 'sext' 'tmp_68' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%input_memcpy_buffer1_2 = getelementptr [28 x i32]* %input_memcpy_buffer1, i64 0, i64 %tmp_68" [cnn.cpp:212]   --->   Operation 141 'getelementptr' 'input_memcpy_buffer1_2' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 142 [2/2] (2.32ns)   --->   "%input_memcpy_buffer1_3 = load i32* %input_memcpy_buffer1_2, align 4" [cnn.cpp:212]   --->   Operation 142 'load' 'input_memcpy_buffer1_3' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_4 : Operation 143 [1/1] (2.55ns)   --->   "%input_mmcpy_offset_1_2 = add nsw i32 1, %input_mmcpy_offset_1_1" [cnn.cpp:214]   --->   Operation 143 'add' 'input_mmcpy_offset_1_2' <Predicate = (!brmerge)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 144 [1/1] (0.69ns)   --->   "%input_mmcpy_offset_1_3 = select i1 %p_NextInputFlag_1_1, i32 %input_mmcpy_offset_1_2, i32 %input_mmcpy_offset_1_1" [cnn.cpp:189]   --->   Operation 144 'select' 'input_mmcpy_offset_1_3' <Predicate = (!brmerge)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 145 [1/1] (0.00ns)   --->   "%tmp_69 = sext i32 %input_mmcpy_offset_2_1 to i64" [cnn.cpp:220]   --->   Operation 145 'sext' 'tmp_69' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 146 [1/1] (0.00ns)   --->   "%input_memcpy_buffer2_2 = getelementptr [28 x i32]* %input_memcpy_buffer2, i64 0, i64 %tmp_69" [cnn.cpp:220]   --->   Operation 146 'getelementptr' 'input_memcpy_buffer2_2' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 147 [2/2] (2.32ns)   --->   "%input_memcpy_buffer2_3 = load i32* %input_memcpy_buffer2_2, align 4" [cnn.cpp:220]   --->   Operation 147 'load' 'input_memcpy_buffer2_3' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_4 : Operation 148 [1/1] (2.55ns)   --->   "%input_mmcpy_offset_2_2 = add nsw i32 1, %input_mmcpy_offset_2_1" [cnn.cpp:222]   --->   Operation 148 'add' 'input_mmcpy_offset_2_2' <Predicate = (!brmerge)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 149 [1/1] (0.69ns)   --->   "%input_mmcpy_offset_2_3 = select i1 %p_NextInputFlag_2_1, i32 %input_mmcpy_offset_2_2, i32 %input_mmcpy_offset_2_1" [cnn.cpp:189]   --->   Operation 149 'select' 'input_mmcpy_offset_2_3' <Predicate = (!brmerge)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_70 = sext i32 %input_mmcpy_offset_3_1 to i64" [cnn.cpp:228]   --->   Operation 150 'sext' 'tmp_70' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 151 [1/1] (0.00ns)   --->   "%input_memcpy_buffer3_2 = getelementptr [28 x i32]* %input_memcpy_buffer3, i64 0, i64 %tmp_70" [cnn.cpp:228]   --->   Operation 151 'getelementptr' 'input_memcpy_buffer3_2' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 152 [2/2] (2.32ns)   --->   "%input_memcpy_buffer3_3 = load i32* %input_memcpy_buffer3_2, align 4" [cnn.cpp:228]   --->   Operation 152 'load' 'input_memcpy_buffer3_3' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_4 : Operation 153 [1/1] (2.55ns)   --->   "%input_mmcpy_offset_3_2 = add nsw i32 1, %input_mmcpy_offset_3_1" [cnn.cpp:230]   --->   Operation 153 'add' 'input_mmcpy_offset_3_2' <Predicate = (!brmerge)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 154 [1/1] (0.69ns)   --->   "%input_mmcpy_offset_3_3 = select i1 %p_NextInputFlag_3_1, i32 %input_mmcpy_offset_3_2, i32 %input_mmcpy_offset_3_1" [cnn.cpp:189]   --->   Operation 154 'select' 'input_mmcpy_offset_3_3' <Predicate = (!brmerge)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 155 [1/1] (0.97ns)   --->   "%cnt_0_V = xor i1 %p_read_cnt_V_0_1, true" [cnn.cpp:239]   --->   Operation 155 'xor' 'cnt_0_V' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 156 [1/1] (0.97ns)   --->   "%cnt_1_V = xor i1 %p_read1_cnt_V_1_1, true" [cnn.cpp:248]   --->   Operation 156 'xor' 'cnt_1_V' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 157 [1/1] (0.97ns)   --->   "%cnt_2_V = xor i1 %p_read2_cnt_V_2_1, true" [cnn.cpp:257]   --->   Operation 157 'xor' 'cnt_2_V' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 158 [1/1] (0.97ns)   --->   "%cnt_3_V = xor i1 %p_read3_cnt_V_3_1, true" [cnn.cpp:266]   --->   Operation 158 'xor' 'cnt_3_V' <Predicate = (!brmerge)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 159 [1/1] (0.00ns)   --->   "store i1 %cnt_3_V, i1* %cnt_3_V_1" [cnn.cpp:269]   --->   Operation 159 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 160 [1/1] (0.00ns)   --->   "store i1 %cnt_2_V, i1* %cnt_2_V_1" [cnn.cpp:260]   --->   Operation 160 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 161 [1/1] (0.00ns)   --->   "store i1 %cnt_1_V, i1* %cnt_1_V_1" [cnn.cpp:251]   --->   Operation 161 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 162 [1/1] (0.00ns)   --->   "store i1 %cnt_0_V, i1* %cnt_0_V_1" [cnn.cpp:242]   --->   Operation 162 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 163 [1/1] (0.00ns)   --->   "store i1 %p_read3_cnt_V_3_1, i1* %NextInputFlag_3_1" [cnn.cpp:189]   --->   Operation 163 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 164 [1/1] (0.00ns)   --->   "store i1 %p_read2_cnt_V_2_1, i1* %NextInputFlag_2_1" [cnn.cpp:189]   --->   Operation 164 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 165 [1/1] (0.00ns)   --->   "store i1 %p_read1_cnt_V_1_1, i1* %NextInputFlag_1_1" [cnn.cpp:189]   --->   Operation 165 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 166 [1/1] (0.00ns)   --->   "store i1 %p_read_cnt_V_0_1, i1* %NextInputFlag_0_1" [cnn.cpp:189]   --->   Operation 166 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_4 : Operation 167 [1/1] (1.76ns)   --->   "store i32 %input_mmcpy_offset_3_3, i32* %input_mmcpy_offset_3" [cnn.cpp:230]   --->   Operation 167 'store' <Predicate = (!brmerge)> <Delay = 1.76>
ST_4 : Operation 168 [1/1] (1.76ns)   --->   "store i32 %input_mmcpy_offset_2_3, i32* %input_mmcpy_offset_2" [cnn.cpp:222]   --->   Operation 168 'store' <Predicate = (!brmerge)> <Delay = 1.76>
ST_4 : Operation 169 [1/1] (1.76ns)   --->   "store i32 %input_mmcpy_offset_1_3, i32* %input_mmcpy_offset_1" [cnn.cpp:214]   --->   Operation 169 'store' <Predicate = (!brmerge)> <Delay = 1.76>
ST_4 : Operation 170 [1/1] (1.76ns)   --->   "store i32 %input_mmcpy_offset_0_3, i32* %input_mmcpy_offset_0" [cnn.cpp:206]   --->   Operation 170 'store' <Predicate = (!brmerge)> <Delay = 1.76>
ST_4 : Operation 171 [1/1] (1.76ns)   --->   "store i1 %p_IsRowInit_flag_1, i1* %IsRowInit_flag_1" [cnn.cpp:189]   --->   Operation 171 'store' <Predicate = (!brmerge)> <Delay = 1.76>

State 5 <SV = 4> <Delay = 8.54>
ST_5 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_77_mid2_cast = zext i6 %tmp_77_mid2_v to i12" [cnn.cpp:276]   --->   Operation 172 'zext' 'tmp_77_mid2_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_5 : Operation 173 [1/1] (3.74ns)   --->   "%tmp_63 = mul i12 %tmp_77_mid2_cast, 53" [cnn.cpp:276]   --->   Operation 173 'mul' 'tmp_63' <Predicate = (!exitcond_flatten)> <Delay = 3.74> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 174 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [cnn.cpp:182]   --->   Operation 174 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_5 : Operation 175 [1/1] (0.00ns)   --->   "%input_array_0_0_lo = load i16* %input_array_0_0"   --->   Operation 175 'load' 'input_array_0_0_lo' <Predicate = (!brmerge & !p_NextInputFlag_0_1)> <Delay = 0.00>
ST_5 : Operation 176 [1/1] (0.00ns)   --->   "%input_array_0_1_2_s = load i16* %input_array_0_1_2"   --->   Operation 176 'load' 'input_array_0_1_2_s' <Predicate = (!brmerge & !p_NextInputFlag_0_1)> <Delay = 0.00>
ST_5 : Operation 177 [1/1] (0.00ns)   --->   "%input_array_1_0_lo = load i16* %input_array_1_0"   --->   Operation 177 'load' 'input_array_1_0_lo' <Predicate = (!brmerge & !p_NextInputFlag_1_1)> <Delay = 0.00>
ST_5 : Operation 178 [1/1] (0.00ns)   --->   "%input_array_1_1_2_s = load i16* %input_array_1_1_2"   --->   Operation 178 'load' 'input_array_1_1_2_s' <Predicate = (!brmerge & !p_NextInputFlag_1_1)> <Delay = 0.00>
ST_5 : Operation 179 [1/1] (0.00ns)   --->   "%input_array_2_0_lo = load i16* %input_array_2_0"   --->   Operation 179 'load' 'input_array_2_0_lo' <Predicate = (!brmerge & !p_NextInputFlag_2_1)> <Delay = 0.00>
ST_5 : Operation 180 [1/1] (0.00ns)   --->   "%input_array_2_1_2_s = load i16* %input_array_2_1_2"   --->   Operation 180 'load' 'input_array_2_1_2_s' <Predicate = (!brmerge & !p_NextInputFlag_2_1)> <Delay = 0.00>
ST_5 : Operation 181 [1/1] (0.00ns)   --->   "%input_array_3_0_lo = load i16* %input_array_3_0"   --->   Operation 181 'load' 'input_array_3_0_lo' <Predicate = (!brmerge & !p_NextInputFlag_3_1)> <Delay = 0.00>
ST_5 : Operation 182 [1/1] (0.00ns)   --->   "%input_array_3_1_2_s = load i16* %input_array_3_1_2"   --->   Operation 182 'load' 'input_array_3_1_2_s' <Predicate = (!brmerge & !p_NextInputFlag_3_1)> <Delay = 0.00>
ST_5 : Operation 183 [1/2] (2.32ns)   --->   "%input_memcpy_buffer_1 = load i32* %input_memcpy_buffer_s, align 4" [cnn.cpp:204]   --->   Operation 183 'load' 'input_memcpy_buffer_1' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 184 [1/1] (0.00ns)   --->   "%input_array_0_0_2 = trunc i32 %input_memcpy_buffer_1 to i16" [cnn.cpp:204]   --->   Operation 184 'trunc' 'input_array_0_0_2' <Predicate = (!brmerge & p_NextInputFlag_0_1)> <Delay = 0.00>
ST_5 : Operation 185 [1/1] (0.00ns)   --->   "%input_array_0_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %input_memcpy_buffer_1, i32 16, i32 31)" [cnn.cpp:205]   --->   Operation 185 'partselect' 'input_array_0_1' <Predicate = (!brmerge & p_NextInputFlag_0_1)> <Delay = 0.00>
ST_5 : Operation 186 [1/1] (0.80ns)   --->   "%input_array_0_1_1 = select i1 %p_NextInputFlag_0_1, i16 %input_array_0_1, i16 %input_array_0_1_2_s" [cnn.cpp:189]   --->   Operation 186 'select' 'input_array_0_1_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 187 [1/1] (0.80ns)   --->   "%input_array_0_0_1 = select i1 %p_NextInputFlag_0_1, i16 %input_array_0_0_2, i16 %input_array_0_0_lo" [cnn.cpp:189]   --->   Operation 187 'select' 'input_array_0_0_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 188 [1/2] (2.32ns)   --->   "%input_memcpy_buffer1_3 = load i32* %input_memcpy_buffer1_2, align 4" [cnn.cpp:212]   --->   Operation 188 'load' 'input_memcpy_buffer1_3' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 189 [1/1] (0.00ns)   --->   "%input_array_1_0_2 = trunc i32 %input_memcpy_buffer1_3 to i16" [cnn.cpp:212]   --->   Operation 189 'trunc' 'input_array_1_0_2' <Predicate = (!brmerge & p_NextInputFlag_1_1)> <Delay = 0.00>
ST_5 : Operation 190 [1/1] (0.00ns)   --->   "%input_array_1_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %input_memcpy_buffer1_3, i32 16, i32 31)" [cnn.cpp:213]   --->   Operation 190 'partselect' 'input_array_1_1' <Predicate = (!brmerge & p_NextInputFlag_1_1)> <Delay = 0.00>
ST_5 : Operation 191 [1/1] (0.80ns)   --->   "%input_array_1_1_1 = select i1 %p_NextInputFlag_1_1, i16 %input_array_1_1, i16 %input_array_1_1_2_s" [cnn.cpp:189]   --->   Operation 191 'select' 'input_array_1_1_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 192 [1/1] (0.80ns)   --->   "%input_array_1_0_1 = select i1 %p_NextInputFlag_1_1, i16 %input_array_1_0_2, i16 %input_array_1_0_lo" [cnn.cpp:189]   --->   Operation 192 'select' 'input_array_1_0_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 193 [1/2] (2.32ns)   --->   "%input_memcpy_buffer2_3 = load i32* %input_memcpy_buffer2_2, align 4" [cnn.cpp:220]   --->   Operation 193 'load' 'input_memcpy_buffer2_3' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 194 [1/1] (0.00ns)   --->   "%input_array_2_0_2 = trunc i32 %input_memcpy_buffer2_3 to i16" [cnn.cpp:220]   --->   Operation 194 'trunc' 'input_array_2_0_2' <Predicate = (!brmerge & p_NextInputFlag_2_1)> <Delay = 0.00>
ST_5 : Operation 195 [1/1] (0.00ns)   --->   "%input_array_2_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %input_memcpy_buffer2_3, i32 16, i32 31)" [cnn.cpp:221]   --->   Operation 195 'partselect' 'input_array_2_1' <Predicate = (!brmerge & p_NextInputFlag_2_1)> <Delay = 0.00>
ST_5 : Operation 196 [1/1] (0.80ns)   --->   "%input_array_2_1_1 = select i1 %p_NextInputFlag_2_1, i16 %input_array_2_1, i16 %input_array_2_1_2_s" [cnn.cpp:189]   --->   Operation 196 'select' 'input_array_2_1_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 197 [1/1] (0.80ns)   --->   "%input_array_2_0_1 = select i1 %p_NextInputFlag_2_1, i16 %input_array_2_0_2, i16 %input_array_2_0_lo" [cnn.cpp:189]   --->   Operation 197 'select' 'input_array_2_0_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 198 [1/2] (2.32ns)   --->   "%input_memcpy_buffer3_3 = load i32* %input_memcpy_buffer3_2, align 4" [cnn.cpp:228]   --->   Operation 198 'load' 'input_memcpy_buffer3_3' <Predicate = (!brmerge)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 199 [1/1] (0.00ns)   --->   "%input_array_3_0_2 = trunc i32 %input_memcpy_buffer3_3 to i16" [cnn.cpp:228]   --->   Operation 199 'trunc' 'input_array_3_0_2' <Predicate = (!brmerge & p_NextInputFlag_3_1)> <Delay = 0.00>
ST_5 : Operation 200 [1/1] (0.00ns)   --->   "%input_array_3_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %input_memcpy_buffer3_3, i32 16, i32 31)" [cnn.cpp:229]   --->   Operation 200 'partselect' 'input_array_3_1' <Predicate = (!brmerge & p_NextInputFlag_3_1)> <Delay = 0.00>
ST_5 : Operation 201 [1/1] (0.80ns)   --->   "%input_array_3_1_1 = select i1 %p_NextInputFlag_3_1, i16 %input_array_3_1, i16 %input_array_3_1_2_s" [cnn.cpp:189]   --->   Operation 201 'select' 'input_array_3_1_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 202 [1/1] (0.80ns)   --->   "%input_array_3_0_1 = select i1 %p_NextInputFlag_3_1, i16 %input_array_3_0_2, i16 %input_array_3_0_lo" [cnn.cpp:189]   --->   Operation 202 'select' 'input_array_3_0_1' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 203 [1/1] (0.80ns)   --->   "%input_array_load_phi = select i1 %p_read_cnt_V_0_1, i16 %input_array_0_1_1, i16 %input_array_0_0_1" [cnn.cpp:234]   --->   Operation 203 'select' 'input_array_load_phi' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 204 [1/1] (0.00ns)   --->   "%tmp_75_cast = zext i8 %t3_mid2 to i12" [cnn.cpp:180]   --->   Operation 204 'zext' 'tmp_75_cast' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 205 [1/1] (1.54ns)   --->   "%tmp_71 = add i12 %tmp_75_cast, %tmp_63" [cnn.cpp:180]   --->   Operation 205 'add' 'tmp_71' <Predicate = (!brmerge)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_76_cast = zext i12 %tmp_71 to i64" [cnn.cpp:180]   --->   Operation 206 'zext' 'tmp_76_cast' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 207 [1/1] (0.00ns)   --->   "%input_buffer_0_addr_1 = getelementptr [2809 x i16]* %input_buffer_0, i64 0, i64 %tmp_76_cast" [cnn.cpp:180]   --->   Operation 207 'getelementptr' 'input_buffer_0_addr_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 208 [1/1] (0.00ns)   --->   "%input_buffer_1_addr_1 = getelementptr [2809 x i16]* %input_buffer_1, i64 0, i64 %tmp_76_cast" [cnn.cpp:180]   --->   Operation 208 'getelementptr' 'input_buffer_1_addr_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 209 [1/1] (0.00ns)   --->   "%input_buffer_2_addr_1 = getelementptr [2809 x i16]* %input_buffer_2, i64 0, i64 %tmp_76_cast" [cnn.cpp:180]   --->   Operation 209 'getelementptr' 'input_buffer_2_addr_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 210 [1/1] (0.00ns)   --->   "%input_buffer_3_addr_1 = getelementptr [2809 x i16]* %input_buffer_3, i64 0, i64 %tmp_76_cast" [cnn.cpp:180]   --->   Operation 210 'getelementptr' 'input_buffer_3_addr_1' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 211 [1/1] (3.25ns)   --->   "store i16 %input_array_load_phi, i16* %input_buffer_0_addr_1, align 2" [cnn.cpp:234]   --->   Operation 211 'store' <Predicate = (!brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 212 [1/1] (0.80ns)   --->   "%input_array_load_1_p = select i1 %p_read1_cnt_V_1_1, i16 %input_array_1_1_1, i16 %input_array_1_0_1" [cnn.cpp:235]   --->   Operation 212 'select' 'input_array_load_1_p' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 213 [1/1] (3.25ns)   --->   "store i16 %input_array_load_1_p, i16* %input_buffer_1_addr_1, align 2" [cnn.cpp:235]   --->   Operation 213 'store' <Predicate = (!brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 214 [1/1] (0.80ns)   --->   "%input_array_load_2_p = select i1 %p_read2_cnt_V_2_1, i16 %input_array_2_1_1, i16 %input_array_2_0_1" [cnn.cpp:236]   --->   Operation 214 'select' 'input_array_load_2_p' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 215 [1/1] (3.25ns)   --->   "store i16 %input_array_load_2_p, i16* %input_buffer_2_addr_1, align 2" [cnn.cpp:236]   --->   Operation 215 'store' <Predicate = (!brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 216 [1/1] (0.80ns)   --->   "%input_array_load_3_p = select i1 %p_read3_cnt_V_3_1, i16 %input_array_3_1_1, i16 %input_array_3_0_1" [cnn.cpp:237]   --->   Operation 216 'select' 'input_array_load_3_p' <Predicate = (!brmerge)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 217 [1/1] (3.25ns)   --->   "store i16 %input_array_load_3_p, i16* %input_buffer_3_addr_1, align 2" [cnn.cpp:237]   --->   Operation 217 'store' <Predicate = (!brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 218 [1/1] (0.00ns)   --->   "store i16 %input_array_3_1_1, i16* %input_array_3_1_2" [cnn.cpp:229]   --->   Operation 218 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 219 [1/1] (0.00ns)   --->   "store i16 %input_array_3_0_1, i16* %input_array_3_0" [cnn.cpp:228]   --->   Operation 219 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 220 [1/1] (0.00ns)   --->   "store i16 %input_array_2_1_1, i16* %input_array_2_1_2" [cnn.cpp:221]   --->   Operation 220 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 221 [1/1] (0.00ns)   --->   "store i16 %input_array_2_0_1, i16* %input_array_2_0" [cnn.cpp:220]   --->   Operation 221 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 222 [1/1] (0.00ns)   --->   "store i16 %input_array_1_1_1, i16* %input_array_1_1_2" [cnn.cpp:213]   --->   Operation 222 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 223 [1/1] (0.00ns)   --->   "store i16 %input_array_1_0_1, i16* %input_array_1_0" [cnn.cpp:212]   --->   Operation 223 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 224 [1/1] (0.00ns)   --->   "store i16 %input_array_0_1_1, i16* %input_array_0_1_2" [cnn.cpp:205]   --->   Operation 224 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 225 [1/1] (0.00ns)   --->   "store i16 %input_array_0_0_1, i16* %input_array_0_0" [cnn.cpp:204]   --->   Operation 225 'store' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 226 [1/1] (0.00ns)   --->   "br label %2" [cnn.cpp:274]   --->   Operation 226 'br' <Predicate = (!brmerge)> <Delay = 0.00>
ST_5 : Operation 227 [1/1] (0.00ns)   --->   "%tmp_69_cast = zext i8 %t3_mid2 to i12" [cnn.cpp:180]   --->   Operation 227 'zext' 'tmp_69_cast' <Predicate = (brmerge)> <Delay = 0.00>
ST_5 : Operation 228 [1/1] (1.54ns)   --->   "%tmp_66 = add i12 %tmp_63, %tmp_69_cast" [cnn.cpp:276]   --->   Operation 228 'add' 'tmp_66' <Predicate = (brmerge)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 229 [1/1] (0.00ns)   --->   "%tmp_70_cast = zext i12 %tmp_66 to i64" [cnn.cpp:276]   --->   Operation 229 'zext' 'tmp_70_cast' <Predicate = (brmerge)> <Delay = 0.00>
ST_5 : Operation 230 [1/1] (0.00ns)   --->   "%input_buffer_0_addr = getelementptr [2809 x i16]* %input_buffer_0, i64 0, i64 %tmp_70_cast" [cnn.cpp:276]   --->   Operation 230 'getelementptr' 'input_buffer_0_addr' <Predicate = (brmerge)> <Delay = 0.00>
ST_5 : Operation 231 [1/1] (0.00ns)   --->   "%input_buffer_1_addr = getelementptr [2809 x i16]* %input_buffer_1, i64 0, i64 %tmp_70_cast" [cnn.cpp:276]   --->   Operation 231 'getelementptr' 'input_buffer_1_addr' <Predicate = (brmerge)> <Delay = 0.00>
ST_5 : Operation 232 [1/1] (0.00ns)   --->   "%input_buffer_2_addr = getelementptr [2809 x i16]* %input_buffer_2, i64 0, i64 %tmp_70_cast" [cnn.cpp:276]   --->   Operation 232 'getelementptr' 'input_buffer_2_addr' <Predicate = (brmerge)> <Delay = 0.00>
ST_5 : Operation 233 [1/1] (0.00ns)   --->   "%input_buffer_3_addr = getelementptr [2809 x i16]* %input_buffer_3, i64 0, i64 %tmp_70_cast" [cnn.cpp:276]   --->   Operation 233 'getelementptr' 'input_buffer_3_addr' <Predicate = (brmerge)> <Delay = 0.00>
ST_5 : Operation 234 [1/1] (3.25ns)   --->   "store i16 %p_s, i16* %input_buffer_0_addr, align 2" [cnn.cpp:276]   --->   Operation 234 'store' <Predicate = (brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 235 [1/1] (3.25ns)   --->   "store i16 %p_s, i16* %input_buffer_1_addr, align 2" [cnn.cpp:277]   --->   Operation 235 'store' <Predicate = (brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 236 [1/1] (3.25ns)   --->   "store i16 %p_s, i16* %input_buffer_2_addr, align 2" [cnn.cpp:278]   --->   Operation 236 'store' <Predicate = (brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 237 [1/1] (3.25ns)   --->   "store i16 %p_s, i16* %input_buffer_3_addr, align 2" [cnn.cpp:279]   --->   Operation 237 'store' <Predicate = (brmerge)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 2809> <RAM>
ST_5 : Operation 238 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 238 'br' <Predicate = (brmerge)> <Delay = 0.00>

State 6 <SV = 3> <Delay = 0.00>
ST_6 : Operation 239 [1/1] (0.00ns)   --->   "store i6 %phitmp, i6* @t2_local_V, align 1" [cnn.cpp:144]   --->   Operation 239 'store' <Predicate = (enable_read)> <Delay = 0.00>
ST_6 : Operation 240 [1/1] (0.00ns)   --->   "br label %._crit_edge" [cnn.cpp:285]   --->   Operation 240 'br' <Predicate = (enable_read)> <Delay = 0.00>
ST_6 : Operation 241 [1/1] (0.00ns)   --->   "ret void" [cnn.cpp:285]   --->   Operation 241 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 5.94ns
The critical path consists of the following:
	wire read on port 'T2Rate_V' [24]  (0 ns)
	'add' operation ('T2R.V', cnn.cpp:168) [66]  (1.65 ns)
	'select' operation ('T2R.V', cnn.cpp:166) [67]  (0.98 ns)
	'add' operation ('r.V', cnn.cpp:174) [71]  (1.83 ns)
	'icmp' operation ('tmp_s', cnn.cpp:175) [72]  (1.49 ns)

 <State 2>: 8.61ns
The critical path consists of the following:
	'select' operation ('T2R_bound.V', cnn.cpp:175) [74]  (1.19 ns)
	'icmp' operation ('tmp_60', cnn.cpp:142) [85]  (1.43 ns)
	'select' operation ('umax1', cnn.cpp:142) [86]  (0 ns)
	'sub' operation ('tmp_61', cnn.cpp:179) [87]  (1.83 ns)
	'mul' operation ('bound', cnn.cpp:179) [90]  (4.17 ns)

 <State 3>: 5.34ns
The critical path consists of the following:
	'phi' operation ('t3') with incoming values : ('t3', cnn.cpp:180) [100]  (0 ns)
	'icmp' operation ('exitcond', cnn.cpp:180) [112]  (1.55 ns)
	'select' operation ('t3_mid2', cnn.cpp:180) [113]  (1.25 ns)
	'icmp' operation ('tmp_64', cnn.cpp:184) [126]  (1.55 ns)
	'or' operation ('tmp2', cnn.cpp:187) [131]  (0 ns)
	'or' operation ('brmerge', cnn.cpp:187) [132]  (0.993 ns)

 <State 4>: 5.02ns
The critical path consists of the following:
	'load' operation ('input_mmcpy_offset_0_1', cnn.cpp:206) on local variable 'input_mmcpy_offset[0]' [135]  (0 ns)
	'add' operation ('input_mmcpy_offset[0]', cnn.cpp:206) [169]  (2.55 ns)
	'select' operation ('input_mmcpy_offset[0]', cnn.cpp:189) [172]  (0.698 ns)
	'store' operation (cnn.cpp:206) of variable 'input_mmcpy_offset[0]', cnn.cpp:189 on local variable 'input_mmcpy_offset[0]' [238]  (1.77 ns)

 <State 5>: 8.54ns
The critical path consists of the following:
	'mul' operation ('tmp_63', cnn.cpp:276) [118]  (3.74 ns)
	'add' operation ('tmp_66', cnn.cpp:276) [243]  (1.55 ns)
	'getelementptr' operation ('input_buffer_1_addr', cnn.cpp:276) [246]  (0 ns)
	'store' operation (cnn.cpp:277) of variable 'p_s', cnn.cpp:148 on array 'input_buffer_1' [250]  (3.25 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
