<profile>

<section name = "Vivado HLS Report for 'mmcpy_inputpixel_m2b'" level="0">
<item name = "Date">Thu Jul 29 20:17:28 2021
</item>
<item name = "Version">2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)</item>
<item name = "Project">Yolo_demo</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.750, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">1, 45, 1, 45, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="grp_mmcpy_inputport_fu_250">mmcpy_inputport, 1, 43, 1, 43, none</column>
<column name="grp_mmcpy_inputport2_fu_262">mmcpy_inputport2, 1, 43, 1, 43, none</column>
<column name="grp_mmcpy_inputport1_fu_274">mmcpy_inputport1, 1, 43, 1, 43, none</column>
<column name="grp_mmcpy_inputport3_fu_286">mmcpy_inputport3, 1, 43, 1, 43, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, -, 0, 347</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, -, 392, 770</column>
<column name="Memory">-, -, -, -</column>
<column name="Multiplexer">-, -, -, 219</column>
<column name="Register">-, -, 253, -</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, 2</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="grp_mmcpy_inputport_fu_250">mmcpy_inputport, 0, 0, 98, 195</column>
<column name="grp_mmcpy_inputport1_fu_274">mmcpy_inputport1, 0, 0, 98, 194</column>
<column name="grp_mmcpy_inputport2_fu_262">mmcpy_inputport2, 0, 0, 98, 195</column>
<column name="grp_mmcpy_inputport3_fu_286">mmcpy_inputport3, 0, 0, 98, 186</column>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="r_V_1_fu_453_p2">+, 0, 0, 15, 7, 7</column>
<column name="r_V_3_fu_544_p2">+, 0, 0, 15, 7, 7</column>
<column name="r_V_fu_388_p2">+, 0, 0, 15, 7, 7</column>
<column name="tmp_101_1_fu_428_p2">+, 0, 0, 39, 32, 32</column>
<column name="tmp_101_2_fu_501_p2">+, 0, 0, 39, 32, 32</column>
<column name="tmp_101_3_fu_520_p2">+, 0, 0, 39, 32, 32</column>
<column name="tmp_109_1_fu_475_p2">+, 0, 0, 15, 1, 6</column>
<column name="tmp_109_3_fu_566_p2">+, 0, 0, 15, 1, 6</column>
<column name="tmp_32_fu_409_p2">+, 0, 0, 15, 1, 6</column>
<column name="tmp_s_fu_316_p2">+, 0, 0, 39, 32, 32</column>
<column name="tmp_100_3_fu_366_p2">-, 0, 0, 28, 21, 21</column>
<column name="init_fu_302_p2">icmp, 0, 0, 11, 6, 1</column>
<column name="ap_block_state3_on_subcall_done">or, 0, 0, 2, 1, 1</column>
<column name="RowIntNum_1_fu_481_p3">select, 0, 0, 6, 1, 6</column>
<column name="RowIntNum_2_fu_415_p3">select, 0, 0, 6, 1, 6</column>
<column name="RowIntNum_3_fu_572_p3">select, 0, 0, 6, 1, 6</column>
<column name="storemerge_fu_322_p3">select, 0, 0, 32, 1, 32</column>
<column name="RowBeginByte_V1_fu_444_p2">xor, 0, 0, 2, 1, 1</column>
<column name="RowBeginByte_V3_fu_536_p2">xor, 0, 0, 2, 1, 1</column>
<column name="tmp_105_1_cast2_fu_459_p2">xor, 0, 0, 2, 1, 1</column>
<column name="tmp_105_3_cast1_fu_550_p2">xor, 0, 0, 2, 1, 1</column>
<column name="tmp_55_cast3_fu_394_p2">xor, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="RowBeginByte_0_V_wr_reg_241">9, 2, 1, 2</column>
<column name="RowBeginByte_1_V_wr_reg_214">9, 2, 1, 2</column>
<column name="RowBeginByte_2_V_wr_reg_223">9, 2, 1, 2</column>
<column name="RowBeginByte_3_V_wr_reg_232">9, 2, 1, 2</column>
<column name="ap_NS_fsm">21, 4, 1, 4</column>
<column name="ap_phi_mux_RowBeginByte_0_V_wr_phi_fu_244_p4">9, 2, 1, 2</column>
<column name="ap_phi_mux_RowBeginByte_1_V_wr_phi_fu_217_p4">9, 2, 1, 2</column>
<column name="ap_phi_mux_RowBeginByte_2_V_wr_phi_fu_226_p4">9, 2, 1, 2</column>
<column name="ap_phi_mux_RowBeginByte_3_V_wr_phi_fu_235_p4">9, 2, 1, 2</column>
<column name="ap_return_0">9, 2, 6, 12</column>
<column name="ap_return_1">9, 2, 1, 2</column>
<column name="ap_return_2">9, 2, 1, 2</column>
<column name="ap_return_3">9, 2, 1, 2</column>
<column name="ap_return_4">9, 2, 1, 2</column>
<column name="ap_return_5">9, 2, 1, 2</column>
<column name="m_axi_input1_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input1_RREADY">9, 2, 1, 2</column>
<column name="m_axi_input2_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input2_RREADY">9, 2, 1, 2</column>
<column name="m_axi_input3_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input3_RREADY">9, 2, 1, 2</column>
<column name="m_axi_input_r_ARVALID">9, 2, 1, 2</column>
<column name="m_axi_input_r_RREADY">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="RowBeginByte_0_V_wr_reg_241">1, 0, 1, 0</column>
<column name="RowBeginByte_1_V_wr_reg_214">1, 0, 1, 0</column>
<column name="RowBeginByte_2_V_wr_reg_223">1, 0, 1, 0</column>
<column name="RowBeginByte_3_V_wr_reg_232">1, 0, 1, 0</column>
<column name="RowBeginByte_V1_reg_733">1, 0, 1, 0</column>
<column name="RowBeginByte_V3_reg_753">1, 0, 1, 0</column>
<column name="RowIntNum_1_reg_738">6, 0, 6, 0</column>
<column name="RowIntNum_2_reg_722">6, 0, 6, 0</column>
<column name="RowIntNum_3_reg_758">6, 0, 6, 0</column>
<column name="ap_CS_fsm">3, 0, 3, 0</column>
<column name="ap_return_0_preg">6, 0, 6, 0</column>
<column name="ap_return_1_preg">1, 0, 1, 0</column>
<column name="ap_return_2_preg">1, 0, 1, 0</column>
<column name="ap_return_3_preg">1, 0, 1, 0</column>
<column name="ap_return_4_preg">1, 0, 1, 0</column>
<column name="ap_return_5_preg">1, 0, 1, 0</column>
<column name="grp_mmcpy_inputport1_fu_274_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_mmcpy_inputport2_fu_262_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_mmcpy_inputport3_fu_286_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_mmcpy_inputport_fu_250_ap_start_reg">1, 0, 1, 0</column>
<column name="storemerge_reg_690">32, 0, 32, 0</column>
<column name="tmp_100_3_reg_712">21, 0, 21, 0</column>
<column name="tmp_18_reg_697">31, 0, 31, 0</column>
<column name="tmp_21_reg_728">31, 0, 31, 0</column>
<column name="tmp_23_reg_743">31, 0, 31, 0</column>
<column name="tmp_26_reg_748">31, 0, 31, 0</column>
<column name="tmp_59_reg_702">1, 0, 1, 0</column>
<column name="tmp_62_reg_717">1, 0, 1, 0</column>
<column name="tmp_inoffset">32, 0, 32, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_return_0">out, 6, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_return_1">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_return_2">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_return_3">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_return_4">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="ap_return_5">out, 1, ap_ctrl_hs, mmcpy_inputpixel_m2b, return value</column>
<column name="m_axi_input_r_AWVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWADDR">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWLEN">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWSIZE">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWBURST">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWLOCK">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWCACHE">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWPROT">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWQOS">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWREGION">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WDATA">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WSTRB">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WLAST">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARADDR">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARLEN">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARSIZE">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARBURST">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARLOCK">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARCACHE">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARPROT">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARQOS">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARREGION">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RVALID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RREADY">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RDATA">in, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RLAST">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RUSER">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RRESP">in, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BVALID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BREADY">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BRESP">in, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BUSER">in, 1, m_axi, input_r, pointer</column>
<column name="input_offset">in, 30, ap_none, input_offset, scalar</column>
<column name="m_axi_input1_AWVALID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWREADY">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWADDR">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWLEN">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWSIZE">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWBURST">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWLOCK">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWCACHE">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWPROT">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWQOS">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWREGION">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_AWUSER">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WVALID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WREADY">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WDATA">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_WSTRB">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_WLAST">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_WUSER">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARVALID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARREADY">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARADDR">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARID">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARLEN">out, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARSIZE">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARBURST">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARLOCK">out, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARCACHE">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARPROT">out, 3, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARQOS">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARREGION">out, 4, m_axi, input1, pointer</column>
<column name="m_axi_input1_ARUSER">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RVALID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RREADY">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RDATA">in, 32, m_axi, input1, pointer</column>
<column name="m_axi_input1_RLAST">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RUSER">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_RRESP">in, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_BVALID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_BREADY">out, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_BRESP">in, 2, m_axi, input1, pointer</column>
<column name="m_axi_input1_BID">in, 1, m_axi, input1, pointer</column>
<column name="m_axi_input1_BUSER">in, 1, m_axi, input1, pointer</column>
<column name="input1_offset">in, 30, ap_none, input1_offset, scalar</column>
<column name="m_axi_input2_AWVALID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWREADY">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWADDR">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWLEN">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWSIZE">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWBURST">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWLOCK">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWCACHE">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWPROT">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWQOS">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWREGION">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_AWUSER">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WVALID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WREADY">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WDATA">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_WSTRB">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_WLAST">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_WUSER">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARVALID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARREADY">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARADDR">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARID">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARLEN">out, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARSIZE">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARBURST">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARLOCK">out, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARCACHE">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARPROT">out, 3, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARQOS">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARREGION">out, 4, m_axi, input2, pointer</column>
<column name="m_axi_input2_ARUSER">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RVALID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RREADY">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RDATA">in, 32, m_axi, input2, pointer</column>
<column name="m_axi_input2_RLAST">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RUSER">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_RRESP">in, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_BVALID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_BREADY">out, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_BRESP">in, 2, m_axi, input2, pointer</column>
<column name="m_axi_input2_BID">in, 1, m_axi, input2, pointer</column>
<column name="m_axi_input2_BUSER">in, 1, m_axi, input2, pointer</column>
<column name="input2_offset">in, 30, ap_none, input2_offset, scalar</column>
<column name="m_axi_input3_AWVALID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWREADY">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWADDR">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWLEN">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWSIZE">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWBURST">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWLOCK">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWCACHE">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWPROT">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWQOS">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWREGION">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_AWUSER">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WVALID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WREADY">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WDATA">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_WSTRB">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_WLAST">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_WUSER">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARVALID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARREADY">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARADDR">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARID">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARLEN">out, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARSIZE">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARBURST">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARLOCK">out, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARCACHE">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARPROT">out, 3, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARQOS">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARREGION">out, 4, m_axi, input3, pointer</column>
<column name="m_axi_input3_ARUSER">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RVALID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RREADY">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RDATA">in, 32, m_axi, input3, pointer</column>
<column name="m_axi_input3_RLAST">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RUSER">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_RRESP">in, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_BVALID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_BREADY">out, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_BRESP">in, 2, m_axi, input3, pointer</column>
<column name="m_axi_input3_BID">in, 1, m_axi, input3, pointer</column>
<column name="m_axi_input3_BUSER">in, 1, m_axi, input3, pointer</column>
<column name="input3_offset">in, 30, ap_none, input3_offset, scalar</column>
<column name="input_memcpy_buffer_address0">out, 5, ap_memory, input_memcpy_buffer, array</column>
<column name="input_memcpy_buffer_ce0">out, 1, ap_memory, input_memcpy_buffer, array</column>
<column name="input_memcpy_buffer_we0">out, 1, ap_memory, input_memcpy_buffer, array</column>
<column name="input_memcpy_buffer_d0">out, 32, ap_memory, input_memcpy_buffer, array</column>
<column name="input_memcpy_buffer1_address0">out, 5, ap_memory, input_memcpy_buffer1, array</column>
<column name="input_memcpy_buffer1_ce0">out, 1, ap_memory, input_memcpy_buffer1, array</column>
<column name="input_memcpy_buffer1_we0">out, 1, ap_memory, input_memcpy_buffer1, array</column>
<column name="input_memcpy_buffer1_d0">out, 32, ap_memory, input_memcpy_buffer1, array</column>
<column name="input_memcpy_buffer2_address0">out, 5, ap_memory, input_memcpy_buffer2, array</column>
<column name="input_memcpy_buffer2_ce0">out, 1, ap_memory, input_memcpy_buffer2, array</column>
<column name="input_memcpy_buffer2_we0">out, 1, ap_memory, input_memcpy_buffer2, array</column>
<column name="input_memcpy_buffer2_d0">out, 32, ap_memory, input_memcpy_buffer2, array</column>
<column name="input_memcpy_buffer3_address0">out, 5, ap_memory, input_memcpy_buffer3, array</column>
<column name="input_memcpy_buffer3_ce0">out, 1, ap_memory, input_memcpy_buffer3, array</column>
<column name="input_memcpy_buffer3_we0">out, 1, ap_memory, input_memcpy_buffer3, array</column>
<column name="input_memcpy_buffer3_d0">out, 32, ap_memory, input_memcpy_buffer3, array</column>
<column name="RowBeginByte_0_V_read">in, 1, ap_none, RowBeginByte_0_V_read, scalar</column>
<column name="RowBeginByte_1_V_read">in, 1, ap_none, RowBeginByte_1_V_read, scalar</column>
<column name="RowBeginByte_2_V_read">in, 1, ap_none, RowBeginByte_2_V_read, scalar</column>
<column name="RowBeginByte_3_V_read">in, 1, ap_none, RowBeginByte_3_V_read, scalar</column>
<column name="TN_MIN_3b_V">in, 3, ap_none, TN_MIN_3b_V, scalar</column>
<column name="next_t2_0_V_write">in, 6, ap_none, next_t2_0_V_write, scalar</column>
<column name="IN_OFFSET">in, 30, ap_none, IN_OFFSET, scalar</column>
<column name="RowIncreaseLength_V">in, 9, ap_none, RowIncreaseLength_V, scalar</column>
<column name="IHxIW_18b_V">in, 18, ap_none, IHxIW_18b_V, scalar</column>
<column name="ColIncreaseLength_V">in, 6, ap_none, ColIncreaseLength_V, scalar</column>
<column name="IsRowPixel">in, 1, ap_none, IsRowPixel, scalar</column>
<column name="enable">in, 1, ap_none, enable, scalar</column>
</table>
</item>
</section>
</profile>
