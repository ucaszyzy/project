// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="YOLO2_FPGA,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.166000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=178,HLS_SYN_DSP=156,HLS_SYN_FF=32091,HLS_SYN_LUT=56549,HLS_VERSION=2018_2}" *)

module YOLO2_FPGA (
        ap_clk,
        ap_rst_n,
        m_axi_DATA_BUS1_AWVALID,
        m_axi_DATA_BUS1_AWREADY,
        m_axi_DATA_BUS1_AWADDR,
        m_axi_DATA_BUS1_AWID,
        m_axi_DATA_BUS1_AWLEN,
        m_axi_DATA_BUS1_AWSIZE,
        m_axi_DATA_BUS1_AWBURST,
        m_axi_DATA_BUS1_AWLOCK,
        m_axi_DATA_BUS1_AWCACHE,
        m_axi_DATA_BUS1_AWPROT,
        m_axi_DATA_BUS1_AWQOS,
        m_axi_DATA_BUS1_AWREGION,
        m_axi_DATA_BUS1_AWUSER,
        m_axi_DATA_BUS1_WVALID,
        m_axi_DATA_BUS1_WREADY,
        m_axi_DATA_BUS1_WDATA,
        m_axi_DATA_BUS1_WSTRB,
        m_axi_DATA_BUS1_WLAST,
        m_axi_DATA_BUS1_WID,
        m_axi_DATA_BUS1_WUSER,
        m_axi_DATA_BUS1_ARVALID,
        m_axi_DATA_BUS1_ARREADY,
        m_axi_DATA_BUS1_ARADDR,
        m_axi_DATA_BUS1_ARID,
        m_axi_DATA_BUS1_ARLEN,
        m_axi_DATA_BUS1_ARSIZE,
        m_axi_DATA_BUS1_ARBURST,
        m_axi_DATA_BUS1_ARLOCK,
        m_axi_DATA_BUS1_ARCACHE,
        m_axi_DATA_BUS1_ARPROT,
        m_axi_DATA_BUS1_ARQOS,
        m_axi_DATA_BUS1_ARREGION,
        m_axi_DATA_BUS1_ARUSER,
        m_axi_DATA_BUS1_RVALID,
        m_axi_DATA_BUS1_RREADY,
        m_axi_DATA_BUS1_RDATA,
        m_axi_DATA_BUS1_RLAST,
        m_axi_DATA_BUS1_RID,
        m_axi_DATA_BUS1_RUSER,
        m_axi_DATA_BUS1_RRESP,
        m_axi_DATA_BUS1_BVALID,
        m_axi_DATA_BUS1_BREADY,
        m_axi_DATA_BUS1_BRESP,
        m_axi_DATA_BUS1_BID,
        m_axi_DATA_BUS1_BUSER,
        m_axi_DATA_BUS2_AWVALID,
        m_axi_DATA_BUS2_AWREADY,
        m_axi_DATA_BUS2_AWADDR,
        m_axi_DATA_BUS2_AWID,
        m_axi_DATA_BUS2_AWLEN,
        m_axi_DATA_BUS2_AWSIZE,
        m_axi_DATA_BUS2_AWBURST,
        m_axi_DATA_BUS2_AWLOCK,
        m_axi_DATA_BUS2_AWCACHE,
        m_axi_DATA_BUS2_AWPROT,
        m_axi_DATA_BUS2_AWQOS,
        m_axi_DATA_BUS2_AWREGION,
        m_axi_DATA_BUS2_AWUSER,
        m_axi_DATA_BUS2_WVALID,
        m_axi_DATA_BUS2_WREADY,
        m_axi_DATA_BUS2_WDATA,
        m_axi_DATA_BUS2_WSTRB,
        m_axi_DATA_BUS2_WLAST,
        m_axi_DATA_BUS2_WID,
        m_axi_DATA_BUS2_WUSER,
        m_axi_DATA_BUS2_ARVALID,
        m_axi_DATA_BUS2_ARREADY,
        m_axi_DATA_BUS2_ARADDR,
        m_axi_DATA_BUS2_ARID,
        m_axi_DATA_BUS2_ARLEN,
        m_axi_DATA_BUS2_ARSIZE,
        m_axi_DATA_BUS2_ARBURST,
        m_axi_DATA_BUS2_ARLOCK,
        m_axi_DATA_BUS2_ARCACHE,
        m_axi_DATA_BUS2_ARPROT,
        m_axi_DATA_BUS2_ARQOS,
        m_axi_DATA_BUS2_ARREGION,
        m_axi_DATA_BUS2_ARUSER,
        m_axi_DATA_BUS2_RVALID,
        m_axi_DATA_BUS2_RREADY,
        m_axi_DATA_BUS2_RDATA,
        m_axi_DATA_BUS2_RLAST,
        m_axi_DATA_BUS2_RID,
        m_axi_DATA_BUS2_RUSER,
        m_axi_DATA_BUS2_RRESP,
        m_axi_DATA_BUS2_BVALID,
        m_axi_DATA_BUS2_BREADY,
        m_axi_DATA_BUS2_BRESP,
        m_axi_DATA_BUS2_BID,
        m_axi_DATA_BUS2_BUSER,
        m_axi_DATA_BUS3_AWVALID,
        m_axi_DATA_BUS3_AWREADY,
        m_axi_DATA_BUS3_AWADDR,
        m_axi_DATA_BUS3_AWID,
        m_axi_DATA_BUS3_AWLEN,
        m_axi_DATA_BUS3_AWSIZE,
        m_axi_DATA_BUS3_AWBURST,
        m_axi_DATA_BUS3_AWLOCK,
        m_axi_DATA_BUS3_AWCACHE,
        m_axi_DATA_BUS3_AWPROT,
        m_axi_DATA_BUS3_AWQOS,
        m_axi_DATA_BUS3_AWREGION,
        m_axi_DATA_BUS3_AWUSER,
        m_axi_DATA_BUS3_WVALID,
        m_axi_DATA_BUS3_WREADY,
        m_axi_DATA_BUS3_WDATA,
        m_axi_DATA_BUS3_WSTRB,
        m_axi_DATA_BUS3_WLAST,
        m_axi_DATA_BUS3_WID,
        m_axi_DATA_BUS3_WUSER,
        m_axi_DATA_BUS3_ARVALID,
        m_axi_DATA_BUS3_ARREADY,
        m_axi_DATA_BUS3_ARADDR,
        m_axi_DATA_BUS3_ARID,
        m_axi_DATA_BUS3_ARLEN,
        m_axi_DATA_BUS3_ARSIZE,
        m_axi_DATA_BUS3_ARBURST,
        m_axi_DATA_BUS3_ARLOCK,
        m_axi_DATA_BUS3_ARCACHE,
        m_axi_DATA_BUS3_ARPROT,
        m_axi_DATA_BUS3_ARQOS,
        m_axi_DATA_BUS3_ARREGION,
        m_axi_DATA_BUS3_ARUSER,
        m_axi_DATA_BUS3_RVALID,
        m_axi_DATA_BUS3_RREADY,
        m_axi_DATA_BUS3_RDATA,
        m_axi_DATA_BUS3_RLAST,
        m_axi_DATA_BUS3_RID,
        m_axi_DATA_BUS3_RUSER,
        m_axi_DATA_BUS3_RRESP,
        m_axi_DATA_BUS3_BVALID,
        m_axi_DATA_BUS3_BREADY,
        m_axi_DATA_BUS3_BRESP,
        m_axi_DATA_BUS3_BID,
        m_axi_DATA_BUS3_BUSER,
        m_axi_DATA_BUS4_AWVALID,
        m_axi_DATA_BUS4_AWREADY,
        m_axi_DATA_BUS4_AWADDR,
        m_axi_DATA_BUS4_AWID,
        m_axi_DATA_BUS4_AWLEN,
        m_axi_DATA_BUS4_AWSIZE,
        m_axi_DATA_BUS4_AWBURST,
        m_axi_DATA_BUS4_AWLOCK,
        m_axi_DATA_BUS4_AWCACHE,
        m_axi_DATA_BUS4_AWPROT,
        m_axi_DATA_BUS4_AWQOS,
        m_axi_DATA_BUS4_AWREGION,
        m_axi_DATA_BUS4_AWUSER,
        m_axi_DATA_BUS4_WVALID,
        m_axi_DATA_BUS4_WREADY,
        m_axi_DATA_BUS4_WDATA,
        m_axi_DATA_BUS4_WSTRB,
        m_axi_DATA_BUS4_WLAST,
        m_axi_DATA_BUS4_WID,
        m_axi_DATA_BUS4_WUSER,
        m_axi_DATA_BUS4_ARVALID,
        m_axi_DATA_BUS4_ARREADY,
        m_axi_DATA_BUS4_ARADDR,
        m_axi_DATA_BUS4_ARID,
        m_axi_DATA_BUS4_ARLEN,
        m_axi_DATA_BUS4_ARSIZE,
        m_axi_DATA_BUS4_ARBURST,
        m_axi_DATA_BUS4_ARLOCK,
        m_axi_DATA_BUS4_ARCACHE,
        m_axi_DATA_BUS4_ARPROT,
        m_axi_DATA_BUS4_ARQOS,
        m_axi_DATA_BUS4_ARREGION,
        m_axi_DATA_BUS4_ARUSER,
        m_axi_DATA_BUS4_RVALID,
        m_axi_DATA_BUS4_RREADY,
        m_axi_DATA_BUS4_RDATA,
        m_axi_DATA_BUS4_RLAST,
        m_axi_DATA_BUS4_RID,
        m_axi_DATA_BUS4_RUSER,
        m_axi_DATA_BUS4_RRESP,
        m_axi_DATA_BUS4_BVALID,
        m_axi_DATA_BUS4_BREADY,
        m_axi_DATA_BUS4_BRESP,
        m_axi_DATA_BUS4_BID,
        m_axi_DATA_BUS4_BUSER,
        m_axi_DATA_BUS5_AWVALID,
        m_axi_DATA_BUS5_AWREADY,
        m_axi_DATA_BUS5_AWADDR,
        m_axi_DATA_BUS5_AWID,
        m_axi_DATA_BUS5_AWLEN,
        m_axi_DATA_BUS5_AWSIZE,
        m_axi_DATA_BUS5_AWBURST,
        m_axi_DATA_BUS5_AWLOCK,
        m_axi_DATA_BUS5_AWCACHE,
        m_axi_DATA_BUS5_AWPROT,
        m_axi_DATA_BUS5_AWQOS,
        m_axi_DATA_BUS5_AWREGION,
        m_axi_DATA_BUS5_AWUSER,
        m_axi_DATA_BUS5_WVALID,
        m_axi_DATA_BUS5_WREADY,
        m_axi_DATA_BUS5_WDATA,
        m_axi_DATA_BUS5_WSTRB,
        m_axi_DATA_BUS5_WLAST,
        m_axi_DATA_BUS5_WID,
        m_axi_DATA_BUS5_WUSER,
        m_axi_DATA_BUS5_ARVALID,
        m_axi_DATA_BUS5_ARREADY,
        m_axi_DATA_BUS5_ARADDR,
        m_axi_DATA_BUS5_ARID,
        m_axi_DATA_BUS5_ARLEN,
        m_axi_DATA_BUS5_ARSIZE,
        m_axi_DATA_BUS5_ARBURST,
        m_axi_DATA_BUS5_ARLOCK,
        m_axi_DATA_BUS5_ARCACHE,
        m_axi_DATA_BUS5_ARPROT,
        m_axi_DATA_BUS5_ARQOS,
        m_axi_DATA_BUS5_ARREGION,
        m_axi_DATA_BUS5_ARUSER,
        m_axi_DATA_BUS5_RVALID,
        m_axi_DATA_BUS5_RREADY,
        m_axi_DATA_BUS5_RDATA,
        m_axi_DATA_BUS5_RLAST,
        m_axi_DATA_BUS5_RID,
        m_axi_DATA_BUS5_RUSER,
        m_axi_DATA_BUS5_RRESP,
        m_axi_DATA_BUS5_BVALID,
        m_axi_DATA_BUS5_BREADY,
        m_axi_DATA_BUS5_BRESP,
        m_axi_DATA_BUS5_BID,
        m_axi_DATA_BUS5_BUSER,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 9;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS1_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS1_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_USER_VALUE = 0;
parameter    C_M_AXI_DATA_BUS1_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_BUS1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS2_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS2_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS2_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS2_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS2_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS2_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS2_USER_VALUE = 0;
parameter    C_M_AXI_DATA_BUS2_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_BUS2_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_BUS3_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS3_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS3_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS3_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS3_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS3_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS3_USER_VALUE = 0;
parameter    C_M_AXI_DATA_BUS3_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_BUS3_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_BUS4_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS4_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS4_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS4_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS4_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS4_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS4_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS4_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS4_USER_VALUE = 0;
parameter    C_M_AXI_DATA_BUS4_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_BUS4_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_BUS5_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS5_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS5_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS5_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS5_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS5_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS5_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS5_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS5_USER_VALUE = 0;
parameter    C_M_AXI_DATA_BUS5_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_BUS5_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_BUS1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_BUS2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_BUS3_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_BUS4_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_BUS5_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_DATA_BUS1_AWVALID;
input   m_axi_DATA_BUS1_AWREADY;
output  [C_M_AXI_DATA_BUS1_ADDR_WIDTH - 1:0] m_axi_DATA_BUS1_AWADDR;
output  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_AWID;
output  [7:0] m_axi_DATA_BUS1_AWLEN;
output  [2:0] m_axi_DATA_BUS1_AWSIZE;
output  [1:0] m_axi_DATA_BUS1_AWBURST;
output  [1:0] m_axi_DATA_BUS1_AWLOCK;
output  [3:0] m_axi_DATA_BUS1_AWCACHE;
output  [2:0] m_axi_DATA_BUS1_AWPROT;
output  [3:0] m_axi_DATA_BUS1_AWQOS;
output  [3:0] m_axi_DATA_BUS1_AWREGION;
output  [C_M_AXI_DATA_BUS1_AWUSER_WIDTH - 1:0] m_axi_DATA_BUS1_AWUSER;
output   m_axi_DATA_BUS1_WVALID;
input   m_axi_DATA_BUS1_WREADY;
output  [C_M_AXI_DATA_BUS1_DATA_WIDTH - 1:0] m_axi_DATA_BUS1_WDATA;
output  [C_M_AXI_DATA_BUS1_WSTRB_WIDTH - 1:0] m_axi_DATA_BUS1_WSTRB;
output   m_axi_DATA_BUS1_WLAST;
output  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_WID;
output  [C_M_AXI_DATA_BUS1_WUSER_WIDTH - 1:0] m_axi_DATA_BUS1_WUSER;
output   m_axi_DATA_BUS1_ARVALID;
input   m_axi_DATA_BUS1_ARREADY;
output  [C_M_AXI_DATA_BUS1_ADDR_WIDTH - 1:0] m_axi_DATA_BUS1_ARADDR;
output  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_ARID;
output  [7:0] m_axi_DATA_BUS1_ARLEN;
output  [2:0] m_axi_DATA_BUS1_ARSIZE;
output  [1:0] m_axi_DATA_BUS1_ARBURST;
output  [1:0] m_axi_DATA_BUS1_ARLOCK;
output  [3:0] m_axi_DATA_BUS1_ARCACHE;
output  [2:0] m_axi_DATA_BUS1_ARPROT;
output  [3:0] m_axi_DATA_BUS1_ARQOS;
output  [3:0] m_axi_DATA_BUS1_ARREGION;
output  [C_M_AXI_DATA_BUS1_ARUSER_WIDTH - 1:0] m_axi_DATA_BUS1_ARUSER;
input   m_axi_DATA_BUS1_RVALID;
output   m_axi_DATA_BUS1_RREADY;
input  [C_M_AXI_DATA_BUS1_DATA_WIDTH - 1:0] m_axi_DATA_BUS1_RDATA;
input   m_axi_DATA_BUS1_RLAST;
input  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_RID;
input  [C_M_AXI_DATA_BUS1_RUSER_WIDTH - 1:0] m_axi_DATA_BUS1_RUSER;
input  [1:0] m_axi_DATA_BUS1_RRESP;
input   m_axi_DATA_BUS1_BVALID;
output   m_axi_DATA_BUS1_BREADY;
input  [1:0] m_axi_DATA_BUS1_BRESP;
input  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_BID;
input  [C_M_AXI_DATA_BUS1_BUSER_WIDTH - 1:0] m_axi_DATA_BUS1_BUSER;
output   m_axi_DATA_BUS2_AWVALID;
input   m_axi_DATA_BUS2_AWREADY;
output  [C_M_AXI_DATA_BUS2_ADDR_WIDTH - 1:0] m_axi_DATA_BUS2_AWADDR;
output  [C_M_AXI_DATA_BUS2_ID_WIDTH - 1:0] m_axi_DATA_BUS2_AWID;
output  [7:0] m_axi_DATA_BUS2_AWLEN;
output  [2:0] m_axi_DATA_BUS2_AWSIZE;
output  [1:0] m_axi_DATA_BUS2_AWBURST;
output  [1:0] m_axi_DATA_BUS2_AWLOCK;
output  [3:0] m_axi_DATA_BUS2_AWCACHE;
output  [2:0] m_axi_DATA_BUS2_AWPROT;
output  [3:0] m_axi_DATA_BUS2_AWQOS;
output  [3:0] m_axi_DATA_BUS2_AWREGION;
output  [C_M_AXI_DATA_BUS2_AWUSER_WIDTH - 1:0] m_axi_DATA_BUS2_AWUSER;
output   m_axi_DATA_BUS2_WVALID;
input   m_axi_DATA_BUS2_WREADY;
output  [C_M_AXI_DATA_BUS2_DATA_WIDTH - 1:0] m_axi_DATA_BUS2_WDATA;
output  [C_M_AXI_DATA_BUS2_WSTRB_WIDTH - 1:0] m_axi_DATA_BUS2_WSTRB;
output   m_axi_DATA_BUS2_WLAST;
output  [C_M_AXI_DATA_BUS2_ID_WIDTH - 1:0] m_axi_DATA_BUS2_WID;
output  [C_M_AXI_DATA_BUS2_WUSER_WIDTH - 1:0] m_axi_DATA_BUS2_WUSER;
output   m_axi_DATA_BUS2_ARVALID;
input   m_axi_DATA_BUS2_ARREADY;
output  [C_M_AXI_DATA_BUS2_ADDR_WIDTH - 1:0] m_axi_DATA_BUS2_ARADDR;
output  [C_M_AXI_DATA_BUS2_ID_WIDTH - 1:0] m_axi_DATA_BUS2_ARID;
output  [7:0] m_axi_DATA_BUS2_ARLEN;
output  [2:0] m_axi_DATA_BUS2_ARSIZE;
output  [1:0] m_axi_DATA_BUS2_ARBURST;
output  [1:0] m_axi_DATA_BUS2_ARLOCK;
output  [3:0] m_axi_DATA_BUS2_ARCACHE;
output  [2:0] m_axi_DATA_BUS2_ARPROT;
output  [3:0] m_axi_DATA_BUS2_ARQOS;
output  [3:0] m_axi_DATA_BUS2_ARREGION;
output  [C_M_AXI_DATA_BUS2_ARUSER_WIDTH - 1:0] m_axi_DATA_BUS2_ARUSER;
input   m_axi_DATA_BUS2_RVALID;
output   m_axi_DATA_BUS2_RREADY;
input  [C_M_AXI_DATA_BUS2_DATA_WIDTH - 1:0] m_axi_DATA_BUS2_RDATA;
input   m_axi_DATA_BUS2_RLAST;
input  [C_M_AXI_DATA_BUS2_ID_WIDTH - 1:0] m_axi_DATA_BUS2_RID;
input  [C_M_AXI_DATA_BUS2_RUSER_WIDTH - 1:0] m_axi_DATA_BUS2_RUSER;
input  [1:0] m_axi_DATA_BUS2_RRESP;
input   m_axi_DATA_BUS2_BVALID;
output   m_axi_DATA_BUS2_BREADY;
input  [1:0] m_axi_DATA_BUS2_BRESP;
input  [C_M_AXI_DATA_BUS2_ID_WIDTH - 1:0] m_axi_DATA_BUS2_BID;
input  [C_M_AXI_DATA_BUS2_BUSER_WIDTH - 1:0] m_axi_DATA_BUS2_BUSER;
output   m_axi_DATA_BUS3_AWVALID;
input   m_axi_DATA_BUS3_AWREADY;
output  [C_M_AXI_DATA_BUS3_ADDR_WIDTH - 1:0] m_axi_DATA_BUS3_AWADDR;
output  [C_M_AXI_DATA_BUS3_ID_WIDTH - 1:0] m_axi_DATA_BUS3_AWID;
output  [7:0] m_axi_DATA_BUS3_AWLEN;
output  [2:0] m_axi_DATA_BUS3_AWSIZE;
output  [1:0] m_axi_DATA_BUS3_AWBURST;
output  [1:0] m_axi_DATA_BUS3_AWLOCK;
output  [3:0] m_axi_DATA_BUS3_AWCACHE;
output  [2:0] m_axi_DATA_BUS3_AWPROT;
output  [3:0] m_axi_DATA_BUS3_AWQOS;
output  [3:0] m_axi_DATA_BUS3_AWREGION;
output  [C_M_AXI_DATA_BUS3_AWUSER_WIDTH - 1:0] m_axi_DATA_BUS3_AWUSER;
output   m_axi_DATA_BUS3_WVALID;
input   m_axi_DATA_BUS3_WREADY;
output  [C_M_AXI_DATA_BUS3_DATA_WIDTH - 1:0] m_axi_DATA_BUS3_WDATA;
output  [C_M_AXI_DATA_BUS3_WSTRB_WIDTH - 1:0] m_axi_DATA_BUS3_WSTRB;
output   m_axi_DATA_BUS3_WLAST;
output  [C_M_AXI_DATA_BUS3_ID_WIDTH - 1:0] m_axi_DATA_BUS3_WID;
output  [C_M_AXI_DATA_BUS3_WUSER_WIDTH - 1:0] m_axi_DATA_BUS3_WUSER;
output   m_axi_DATA_BUS3_ARVALID;
input   m_axi_DATA_BUS3_ARREADY;
output  [C_M_AXI_DATA_BUS3_ADDR_WIDTH - 1:0] m_axi_DATA_BUS3_ARADDR;
output  [C_M_AXI_DATA_BUS3_ID_WIDTH - 1:0] m_axi_DATA_BUS3_ARID;
output  [7:0] m_axi_DATA_BUS3_ARLEN;
output  [2:0] m_axi_DATA_BUS3_ARSIZE;
output  [1:0] m_axi_DATA_BUS3_ARBURST;
output  [1:0] m_axi_DATA_BUS3_ARLOCK;
output  [3:0] m_axi_DATA_BUS3_ARCACHE;
output  [2:0] m_axi_DATA_BUS3_ARPROT;
output  [3:0] m_axi_DATA_BUS3_ARQOS;
output  [3:0] m_axi_DATA_BUS3_ARREGION;
output  [C_M_AXI_DATA_BUS3_ARUSER_WIDTH - 1:0] m_axi_DATA_BUS3_ARUSER;
input   m_axi_DATA_BUS3_RVALID;
output   m_axi_DATA_BUS3_RREADY;
input  [C_M_AXI_DATA_BUS3_DATA_WIDTH - 1:0] m_axi_DATA_BUS3_RDATA;
input   m_axi_DATA_BUS3_RLAST;
input  [C_M_AXI_DATA_BUS3_ID_WIDTH - 1:0] m_axi_DATA_BUS3_RID;
input  [C_M_AXI_DATA_BUS3_RUSER_WIDTH - 1:0] m_axi_DATA_BUS3_RUSER;
input  [1:0] m_axi_DATA_BUS3_RRESP;
input   m_axi_DATA_BUS3_BVALID;
output   m_axi_DATA_BUS3_BREADY;
input  [1:0] m_axi_DATA_BUS3_BRESP;
input  [C_M_AXI_DATA_BUS3_ID_WIDTH - 1:0] m_axi_DATA_BUS3_BID;
input  [C_M_AXI_DATA_BUS3_BUSER_WIDTH - 1:0] m_axi_DATA_BUS3_BUSER;
output   m_axi_DATA_BUS4_AWVALID;
input   m_axi_DATA_BUS4_AWREADY;
output  [C_M_AXI_DATA_BUS4_ADDR_WIDTH - 1:0] m_axi_DATA_BUS4_AWADDR;
output  [C_M_AXI_DATA_BUS4_ID_WIDTH - 1:0] m_axi_DATA_BUS4_AWID;
output  [7:0] m_axi_DATA_BUS4_AWLEN;
output  [2:0] m_axi_DATA_BUS4_AWSIZE;
output  [1:0] m_axi_DATA_BUS4_AWBURST;
output  [1:0] m_axi_DATA_BUS4_AWLOCK;
output  [3:0] m_axi_DATA_BUS4_AWCACHE;
output  [2:0] m_axi_DATA_BUS4_AWPROT;
output  [3:0] m_axi_DATA_BUS4_AWQOS;
output  [3:0] m_axi_DATA_BUS4_AWREGION;
output  [C_M_AXI_DATA_BUS4_AWUSER_WIDTH - 1:0] m_axi_DATA_BUS4_AWUSER;
output   m_axi_DATA_BUS4_WVALID;
input   m_axi_DATA_BUS4_WREADY;
output  [C_M_AXI_DATA_BUS4_DATA_WIDTH - 1:0] m_axi_DATA_BUS4_WDATA;
output  [C_M_AXI_DATA_BUS4_WSTRB_WIDTH - 1:0] m_axi_DATA_BUS4_WSTRB;
output   m_axi_DATA_BUS4_WLAST;
output  [C_M_AXI_DATA_BUS4_ID_WIDTH - 1:0] m_axi_DATA_BUS4_WID;
output  [C_M_AXI_DATA_BUS4_WUSER_WIDTH - 1:0] m_axi_DATA_BUS4_WUSER;
output   m_axi_DATA_BUS4_ARVALID;
input   m_axi_DATA_BUS4_ARREADY;
output  [C_M_AXI_DATA_BUS4_ADDR_WIDTH - 1:0] m_axi_DATA_BUS4_ARADDR;
output  [C_M_AXI_DATA_BUS4_ID_WIDTH - 1:0] m_axi_DATA_BUS4_ARID;
output  [7:0] m_axi_DATA_BUS4_ARLEN;
output  [2:0] m_axi_DATA_BUS4_ARSIZE;
output  [1:0] m_axi_DATA_BUS4_ARBURST;
output  [1:0] m_axi_DATA_BUS4_ARLOCK;
output  [3:0] m_axi_DATA_BUS4_ARCACHE;
output  [2:0] m_axi_DATA_BUS4_ARPROT;
output  [3:0] m_axi_DATA_BUS4_ARQOS;
output  [3:0] m_axi_DATA_BUS4_ARREGION;
output  [C_M_AXI_DATA_BUS4_ARUSER_WIDTH - 1:0] m_axi_DATA_BUS4_ARUSER;
input   m_axi_DATA_BUS4_RVALID;
output   m_axi_DATA_BUS4_RREADY;
input  [C_M_AXI_DATA_BUS4_DATA_WIDTH - 1:0] m_axi_DATA_BUS4_RDATA;
input   m_axi_DATA_BUS4_RLAST;
input  [C_M_AXI_DATA_BUS4_ID_WIDTH - 1:0] m_axi_DATA_BUS4_RID;
input  [C_M_AXI_DATA_BUS4_RUSER_WIDTH - 1:0] m_axi_DATA_BUS4_RUSER;
input  [1:0] m_axi_DATA_BUS4_RRESP;
input   m_axi_DATA_BUS4_BVALID;
output   m_axi_DATA_BUS4_BREADY;
input  [1:0] m_axi_DATA_BUS4_BRESP;
input  [C_M_AXI_DATA_BUS4_ID_WIDTH - 1:0] m_axi_DATA_BUS4_BID;
input  [C_M_AXI_DATA_BUS4_BUSER_WIDTH - 1:0] m_axi_DATA_BUS4_BUSER;
output   m_axi_DATA_BUS5_AWVALID;
input   m_axi_DATA_BUS5_AWREADY;
output  [C_M_AXI_DATA_BUS5_ADDR_WIDTH - 1:0] m_axi_DATA_BUS5_AWADDR;
output  [C_M_AXI_DATA_BUS5_ID_WIDTH - 1:0] m_axi_DATA_BUS5_AWID;
output  [7:0] m_axi_DATA_BUS5_AWLEN;
output  [2:0] m_axi_DATA_BUS5_AWSIZE;
output  [1:0] m_axi_DATA_BUS5_AWBURST;
output  [1:0] m_axi_DATA_BUS5_AWLOCK;
output  [3:0] m_axi_DATA_BUS5_AWCACHE;
output  [2:0] m_axi_DATA_BUS5_AWPROT;
output  [3:0] m_axi_DATA_BUS5_AWQOS;
output  [3:0] m_axi_DATA_BUS5_AWREGION;
output  [C_M_AXI_DATA_BUS5_AWUSER_WIDTH - 1:0] m_axi_DATA_BUS5_AWUSER;
output   m_axi_DATA_BUS5_WVALID;
input   m_axi_DATA_BUS5_WREADY;
output  [C_M_AXI_DATA_BUS5_DATA_WIDTH - 1:0] m_axi_DATA_BUS5_WDATA;
output  [C_M_AXI_DATA_BUS5_WSTRB_WIDTH - 1:0] m_axi_DATA_BUS5_WSTRB;
output   m_axi_DATA_BUS5_WLAST;
output  [C_M_AXI_DATA_BUS5_ID_WIDTH - 1:0] m_axi_DATA_BUS5_WID;
output  [C_M_AXI_DATA_BUS5_WUSER_WIDTH - 1:0] m_axi_DATA_BUS5_WUSER;
output   m_axi_DATA_BUS5_ARVALID;
input   m_axi_DATA_BUS5_ARREADY;
output  [C_M_AXI_DATA_BUS5_ADDR_WIDTH - 1:0] m_axi_DATA_BUS5_ARADDR;
output  [C_M_AXI_DATA_BUS5_ID_WIDTH - 1:0] m_axi_DATA_BUS5_ARID;
output  [7:0] m_axi_DATA_BUS5_ARLEN;
output  [2:0] m_axi_DATA_BUS5_ARSIZE;
output  [1:0] m_axi_DATA_BUS5_ARBURST;
output  [1:0] m_axi_DATA_BUS5_ARLOCK;
output  [3:0] m_axi_DATA_BUS5_ARCACHE;
output  [2:0] m_axi_DATA_BUS5_ARPROT;
output  [3:0] m_axi_DATA_BUS5_ARQOS;
output  [3:0] m_axi_DATA_BUS5_ARREGION;
output  [C_M_AXI_DATA_BUS5_ARUSER_WIDTH - 1:0] m_axi_DATA_BUS5_ARUSER;
input   m_axi_DATA_BUS5_RVALID;
output   m_axi_DATA_BUS5_RREADY;
input  [C_M_AXI_DATA_BUS5_DATA_WIDTH - 1:0] m_axi_DATA_BUS5_RDATA;
input   m_axi_DATA_BUS5_RLAST;
input  [C_M_AXI_DATA_BUS5_ID_WIDTH - 1:0] m_axi_DATA_BUS5_RID;
input  [C_M_AXI_DATA_BUS5_RUSER_WIDTH - 1:0] m_axi_DATA_BUS5_RUSER;
input  [1:0] m_axi_DATA_BUS5_RRESP;
input   m_axi_DATA_BUS5_BVALID;
output   m_axi_DATA_BUS5_BREADY;
input  [1:0] m_axi_DATA_BUS5_BRESP;
input  [C_M_AXI_DATA_BUS5_ID_WIDTH - 1:0] m_axi_DATA_BUS5_BID;
input  [C_M_AXI_DATA_BUS5_BUSER_WIDTH - 1:0] m_axi_DATA_BUS5_BUSER;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] Input_r;
reg   [31:0] Input_r_0_data_reg;
reg    Input_r_0_vld_reg;
reg    Input_r_0_ack_out;
wire   [31:0] Input1;
wire   [31:0] Input2;
wire   [31:0] Input3;
wire   [31:0] Output_r;
reg   [31:0] Output_r_0_data_reg;
reg    Output_r_0_vld_reg;
reg    Output_r_0_ack_out;
wire   [31:0] Output1;
wire   [31:0] Weight;
reg   [31:0] Weight_0_data_reg;
reg    Weight_0_vld_reg;
reg    Weight_0_ack_out;
wire   [31:0] Beta;
reg   [31:0] Beta_0_data_reg;
reg    Beta_0_vld_reg;
reg    Beta_0_ack_out;
wire   [31:0] InFM_num;
reg   [31:0] InFM_num_0_data_reg;
reg    InFM_num_0_vld_reg;
reg    InFM_num_0_ack_out;
wire   [31:0] OutFM_num;
reg   [31:0] OutFM_num_0_data_reg;
reg    OutFM_num_0_vld_reg;
reg    OutFM_num_0_ack_out;
wire   [31:0] Kernel_size;
reg   [31:0] Kernel_size_0_data_reg;
reg    Kernel_size_0_vld_reg;
reg    Kernel_size_0_ack_out;
wire   [31:0] Kernel_stride;
reg   [31:0] Kernel_stride_0_data_reg;
reg    Kernel_stride_0_vld_reg;
reg    Kernel_stride_0_ack_out;
wire   [31:0] Input_w;
reg   [31:0] Input_w_0_data_reg;
reg    Input_w_0_vld_reg;
reg    Input_w_0_ack_out;
wire   [31:0] Input_h;
reg   [31:0] Input_h_0_data_reg;
reg    Input_h_0_vld_reg;
reg    Input_h_0_ack_out;
wire   [31:0] output_w;
reg   [31:0] output_w_0_data_reg;
reg    output_w_0_vld_reg;
reg    output_w_0_ack_out;
wire   [31:0] output_h;
reg   [31:0] output_h_0_data_reg;
reg    output_h_0_vld_reg;
reg    output_h_0_ack_out;
wire   [31:0] Padding;
reg   [31:0] Padding_0_data_reg;
reg    Padding_0_vld_reg;
reg    Padding_0_ack_out;
wire    IsNL;
reg    IsNL_0_data_reg;
reg    IsNL_0_vld_reg;
reg    IsNL_0_ack_out;
wire    IsBN;
wire   [31:0] TM;
reg   [31:0] TM_0_data_reg;
reg    TM_0_vld_reg;
reg    TM_0_ack_out;
wire   [31:0] TN;
reg   [31:0] TN_0_data_reg;
reg    TN_0_vld_reg;
reg    TN_0_ack_out;
wire   [31:0] TR;
reg   [31:0] TR_0_data_reg;
reg    TR_0_vld_reg;
reg    TR_0_ack_out;
wire   [31:0] TC;
reg   [31:0] TC_0_data_reg;
reg    TC_0_vld_reg;
reg    TC_0_ack_out;
wire   [31:0] mLoops;
reg   [31:0] mLoops_0_data_reg;
reg    mLoops_0_vld_reg;
reg    mLoops_0_ack_out;
wire   [31:0] nLoops;
reg   [31:0] nLoops_0_data_reg;
reg    nLoops_0_vld_reg;
reg    nLoops_0_ack_out;
wire   [31:0] rLoops;
reg   [31:0] rLoops_0_data_reg;
reg    rLoops_0_vld_reg;
reg    rLoops_0_ack_out;
wire   [31:0] cLoops;
reg   [31:0] cLoops_0_data_reg;
reg    cLoops_0_vld_reg;
reg    cLoops_0_ack_out;
wire   [31:0] LayerType;
reg   [31:0] LayerType_0_data_reg;
reg    LayerType_0_vld_reg;
reg    LayerType_0_ack_out;
wire   [31:0] InputQ;
reg   [31:0] InputQ_0_data_reg;
reg    InputQ_0_vld_reg;
reg    InputQ_0_ack_out;
wire   [31:0] OutputQ;
reg   [31:0] OutputQ_0_data_reg;
reg    OutputQ_0_vld_reg;
reg    OutputQ_0_ack_out;
wire   [31:0] WeightQ;
reg   [31:0] WeightQ_0_data_reg;
reg    WeightQ_0_vld_reg;
reg    WeightQ_0_ack_out;
wire   [31:0] BetaQ;
reg   [31:0] BetaQ_0_data_reg;
reg    BetaQ_0_vld_reg;
reg    BetaQ_0_ack_out;
wire   [31:0] trow_loops;
reg   [31:0] trow_loops_0_data_reg;
reg    trow_loops_0_vld_reg;
reg    trow_loops_0_ack_out;
reg   [9:0] beta_buffer_address0;
reg    beta_buffer_ce0;
reg    beta_buffer_we0;
wire   [15:0] beta_buffer_q0;
reg    beta_buffer_ce1;
reg    beta_buffer_we1;
reg   [9:0] output_buffer1_0_address0;
reg    output_buffer1_0_ce0;
reg    output_buffer1_0_we0;
wire   [31:0] output_buffer1_0_q0;
reg    output_buffer1_0_ce1;
reg    output_buffer1_0_we1;
reg   [9:0] output_buffer1_1_address0;
reg    output_buffer1_1_ce0;
reg    output_buffer1_1_we0;
wire   [31:0] output_buffer1_1_q0;
reg    output_buffer1_1_ce1;
reg    output_buffer1_1_we1;
reg   [9:0] output_buffer1_2_address0;
reg    output_buffer1_2_ce0;
reg    output_buffer1_2_we0;
wire   [31:0] output_buffer1_2_q0;
reg    output_buffer1_2_ce1;
reg    output_buffer1_2_we1;
reg   [9:0] output_buffer1_3_address0;
reg    output_buffer1_3_ce0;
reg    output_buffer1_3_we0;
wire   [31:0] output_buffer1_3_q0;
reg    output_buffer1_3_ce1;
reg    output_buffer1_3_we1;
reg   [9:0] output_buffer1_4_address0;
reg    output_buffer1_4_ce0;
wire   [31:0] output_buffer1_4_q0;
reg    output_buffer1_4_ce1;
reg    output_buffer1_4_we1;
reg   [9:0] output_buffer1_5_address0;
reg    output_buffer1_5_ce0;
wire   [31:0] output_buffer1_5_q0;
reg    output_buffer1_5_ce1;
reg    output_buffer1_5_we1;
reg   [9:0] output_buffer1_6_address0;
reg    output_buffer1_6_ce0;
wire   [31:0] output_buffer1_6_q0;
reg    output_buffer1_6_ce1;
reg    output_buffer1_6_we1;
reg   [9:0] output_buffer1_7_address0;
reg    output_buffer1_7_ce0;
wire   [31:0] output_buffer1_7_q0;
reg    output_buffer1_7_ce1;
reg    output_buffer1_7_we1;
reg   [9:0] output_buffer1_8_address0;
reg    output_buffer1_8_ce0;
wire   [31:0] output_buffer1_8_q0;
reg    output_buffer1_8_ce1;
reg    output_buffer1_8_we1;
reg   [9:0] output_buffer1_9_address0;
reg    output_buffer1_9_ce0;
wire   [31:0] output_buffer1_9_q0;
reg    output_buffer1_9_ce1;
reg    output_buffer1_9_we1;
reg   [9:0] output_buffer1_10_address0;
reg    output_buffer1_10_ce0;
wire   [31:0] output_buffer1_10_q0;
reg    output_buffer1_10_ce1;
reg    output_buffer1_10_we1;
reg   [9:0] output_buffer1_11_address0;
reg    output_buffer1_11_ce0;
wire   [31:0] output_buffer1_11_q0;
reg    output_buffer1_11_ce1;
reg    output_buffer1_11_we1;
reg   [9:0] output_buffer1_12_address0;
reg    output_buffer1_12_ce0;
wire   [31:0] output_buffer1_12_q0;
reg    output_buffer1_12_ce1;
reg    output_buffer1_12_we1;
reg   [9:0] output_buffer1_13_address0;
reg    output_buffer1_13_ce0;
wire   [31:0] output_buffer1_13_q0;
reg    output_buffer1_13_ce1;
reg    output_buffer1_13_we1;
reg   [9:0] output_buffer1_14_address0;
reg    output_buffer1_14_ce0;
wire   [31:0] output_buffer1_14_q0;
reg    output_buffer1_14_ce1;
reg    output_buffer1_14_we1;
reg   [9:0] output_buffer1_15_address0;
reg    output_buffer1_15_ce0;
wire   [31:0] output_buffer1_15_q0;
reg    output_buffer1_15_ce1;
reg    output_buffer1_15_we1;
reg   [9:0] output_buffer1_16_address0;
reg    output_buffer1_16_ce0;
wire   [31:0] output_buffer1_16_q0;
reg    output_buffer1_16_ce1;
reg    output_buffer1_16_we1;
reg   [9:0] output_buffer1_17_address0;
reg    output_buffer1_17_ce0;
wire   [31:0] output_buffer1_17_q0;
reg    output_buffer1_17_ce1;
reg    output_buffer1_17_we1;
reg   [9:0] output_buffer1_18_address0;
reg    output_buffer1_18_ce0;
wire   [31:0] output_buffer1_18_q0;
reg    output_buffer1_18_ce1;
reg    output_buffer1_18_we1;
reg   [9:0] output_buffer1_19_address0;
reg    output_buffer1_19_ce0;
wire   [31:0] output_buffer1_19_q0;
reg    output_buffer1_19_ce1;
reg    output_buffer1_19_we1;
reg   [9:0] output_buffer1_20_address0;
reg    output_buffer1_20_ce0;
wire   [31:0] output_buffer1_20_q0;
reg    output_buffer1_20_ce1;
reg    output_buffer1_20_we1;
reg   [9:0] output_buffer1_21_address0;
reg    output_buffer1_21_ce0;
wire   [31:0] output_buffer1_21_q0;
reg    output_buffer1_21_ce1;
reg    output_buffer1_21_we1;
reg   [9:0] output_buffer1_22_address0;
reg    output_buffer1_22_ce0;
wire   [31:0] output_buffer1_22_q0;
reg    output_buffer1_22_ce1;
reg    output_buffer1_22_we1;
reg   [9:0] output_buffer1_23_address0;
reg    output_buffer1_23_ce0;
wire   [31:0] output_buffer1_23_q0;
reg    output_buffer1_23_ce1;
reg    output_buffer1_23_we1;
reg   [9:0] output_buffer1_24_address0;
reg    output_buffer1_24_ce0;
wire   [31:0] output_buffer1_24_q0;
reg    output_buffer1_24_ce1;
reg    output_buffer1_24_we1;
reg   [9:0] output_buffer1_25_address0;
reg    output_buffer1_25_ce0;
wire   [31:0] output_buffer1_25_q0;
reg    output_buffer1_25_ce1;
reg    output_buffer1_25_we1;
reg   [9:0] output_buffer1_26_address0;
reg    output_buffer1_26_ce0;
wire   [31:0] output_buffer1_26_q0;
reg    output_buffer1_26_ce1;
reg    output_buffer1_26_we1;
reg   [9:0] output_buffer1_27_address0;
reg    output_buffer1_27_ce0;
wire   [31:0] output_buffer1_27_q0;
reg    output_buffer1_27_ce1;
reg    output_buffer1_27_we1;
reg   [9:0] output_buffer1_28_address0;
reg    output_buffer1_28_ce0;
wire   [31:0] output_buffer1_28_q0;
reg    output_buffer1_28_ce1;
reg    output_buffer1_28_we1;
reg   [9:0] output_buffer1_29_address0;
reg    output_buffer1_29_ce0;
wire   [31:0] output_buffer1_29_q0;
reg    output_buffer1_29_ce1;
reg    output_buffer1_29_we1;
reg   [9:0] output_buffer1_30_address0;
reg    output_buffer1_30_ce0;
wire   [31:0] output_buffer1_30_q0;
reg    output_buffer1_30_ce1;
reg    output_buffer1_30_we1;
reg   [9:0] output_buffer1_31_address0;
reg    output_buffer1_31_ce0;
wire   [31:0] output_buffer1_31_q0;
reg    output_buffer1_31_ce1;
reg    output_buffer1_31_we1;
reg   [9:0] output_buffer_0_address0;
reg    output_buffer_0_ce0;
reg    output_buffer_0_we0;
wire   [31:0] output_buffer_0_q0;
reg    output_buffer_0_ce1;
reg    output_buffer_0_we1;
reg   [9:0] output_buffer_1_address0;
reg    output_buffer_1_ce0;
reg    output_buffer_1_we0;
wire   [31:0] output_buffer_1_q0;
reg    output_buffer_1_ce1;
reg    output_buffer_1_we1;
reg   [9:0] output_buffer_2_address0;
reg    output_buffer_2_ce0;
reg    output_buffer_2_we0;
wire   [31:0] output_buffer_2_q0;
reg    output_buffer_2_ce1;
reg    output_buffer_2_we1;
reg   [9:0] output_buffer_3_address0;
reg    output_buffer_3_ce0;
reg    output_buffer_3_we0;
wire   [31:0] output_buffer_3_q0;
reg    output_buffer_3_ce1;
reg    output_buffer_3_we1;
reg   [9:0] output_buffer_4_address0;
reg    output_buffer_4_ce0;
wire   [31:0] output_buffer_4_q0;
reg    output_buffer_4_ce1;
reg    output_buffer_4_we1;
reg   [9:0] output_buffer_5_address0;
reg    output_buffer_5_ce0;
wire   [31:0] output_buffer_5_q0;
reg    output_buffer_5_ce1;
reg    output_buffer_5_we1;
reg   [9:0] output_buffer_6_address0;
reg    output_buffer_6_ce0;
wire   [31:0] output_buffer_6_q0;
reg    output_buffer_6_ce1;
reg    output_buffer_6_we1;
reg   [9:0] output_buffer_7_address0;
reg    output_buffer_7_ce0;
wire   [31:0] output_buffer_7_q0;
reg    output_buffer_7_ce1;
reg    output_buffer_7_we1;
reg   [9:0] output_buffer_8_address0;
reg    output_buffer_8_ce0;
wire   [31:0] output_buffer_8_q0;
reg    output_buffer_8_ce1;
reg    output_buffer_8_we1;
reg   [9:0] output_buffer_9_address0;
reg    output_buffer_9_ce0;
wire   [31:0] output_buffer_9_q0;
reg    output_buffer_9_ce1;
reg    output_buffer_9_we1;
reg   [9:0] output_buffer_10_address0;
reg    output_buffer_10_ce0;
wire   [31:0] output_buffer_10_q0;
reg    output_buffer_10_ce1;
reg    output_buffer_10_we1;
reg   [9:0] output_buffer_11_address0;
reg    output_buffer_11_ce0;
wire   [31:0] output_buffer_11_q0;
reg    output_buffer_11_ce1;
reg    output_buffer_11_we1;
reg   [9:0] output_buffer_12_address0;
reg    output_buffer_12_ce0;
wire   [31:0] output_buffer_12_q0;
reg    output_buffer_12_ce1;
reg    output_buffer_12_we1;
reg   [9:0] output_buffer_13_address0;
reg    output_buffer_13_ce0;
wire   [31:0] output_buffer_13_q0;
reg    output_buffer_13_ce1;
reg    output_buffer_13_we1;
reg   [9:0] output_buffer_14_address0;
reg    output_buffer_14_ce0;
wire   [31:0] output_buffer_14_q0;
reg    output_buffer_14_ce1;
reg    output_buffer_14_we1;
reg   [9:0] output_buffer_15_address0;
reg    output_buffer_15_ce0;
wire   [31:0] output_buffer_15_q0;
reg    output_buffer_15_ce1;
reg    output_buffer_15_we1;
reg   [9:0] output_buffer_16_address0;
reg    output_buffer_16_ce0;
wire   [31:0] output_buffer_16_q0;
reg    output_buffer_16_ce1;
reg    output_buffer_16_we1;
reg   [9:0] output_buffer_17_address0;
reg    output_buffer_17_ce0;
wire   [31:0] output_buffer_17_q0;
reg    output_buffer_17_ce1;
reg    output_buffer_17_we1;
reg   [9:0] output_buffer_18_address0;
reg    output_buffer_18_ce0;
wire   [31:0] output_buffer_18_q0;
reg    output_buffer_18_ce1;
reg    output_buffer_18_we1;
reg   [9:0] output_buffer_19_address0;
reg    output_buffer_19_ce0;
wire   [31:0] output_buffer_19_q0;
reg    output_buffer_19_ce1;
reg    output_buffer_19_we1;
reg   [9:0] output_buffer_20_address0;
reg    output_buffer_20_ce0;
wire   [31:0] output_buffer_20_q0;
reg    output_buffer_20_ce1;
reg    output_buffer_20_we1;
reg   [9:0] output_buffer_21_address0;
reg    output_buffer_21_ce0;
wire   [31:0] output_buffer_21_q0;
reg    output_buffer_21_ce1;
reg    output_buffer_21_we1;
reg   [9:0] output_buffer_22_address0;
reg    output_buffer_22_ce0;
wire   [31:0] output_buffer_22_q0;
reg    output_buffer_22_ce1;
reg    output_buffer_22_we1;
reg   [9:0] output_buffer_23_address0;
reg    output_buffer_23_ce0;
wire   [31:0] output_buffer_23_q0;
reg    output_buffer_23_ce1;
reg    output_buffer_23_we1;
reg   [9:0] output_buffer_24_address0;
reg    output_buffer_24_ce0;
wire   [31:0] output_buffer_24_q0;
reg    output_buffer_24_ce1;
reg    output_buffer_24_we1;
reg   [9:0] output_buffer_25_address0;
reg    output_buffer_25_ce0;
wire   [31:0] output_buffer_25_q0;
reg    output_buffer_25_ce1;
reg    output_buffer_25_we1;
reg   [9:0] output_buffer_26_address0;
reg    output_buffer_26_ce0;
wire   [31:0] output_buffer_26_q0;
reg    output_buffer_26_ce1;
reg    output_buffer_26_we1;
reg   [9:0] output_buffer_27_address0;
reg    output_buffer_27_ce0;
wire   [31:0] output_buffer_27_q0;
reg    output_buffer_27_ce1;
reg    output_buffer_27_we1;
reg   [9:0] output_buffer_28_address0;
reg    output_buffer_28_ce0;
wire   [31:0] output_buffer_28_q0;
reg    output_buffer_28_ce1;
reg    output_buffer_28_we1;
reg   [9:0] output_buffer_29_address0;
reg    output_buffer_29_ce0;
wire   [31:0] output_buffer_29_q0;
reg    output_buffer_29_ce1;
reg    output_buffer_29_we1;
reg   [9:0] output_buffer_30_address0;
reg    output_buffer_30_ce0;
wire   [31:0] output_buffer_30_q0;
reg    output_buffer_30_ce1;
reg    output_buffer_30_we1;
reg   [9:0] output_buffer_31_address0;
reg    output_buffer_31_ce0;
wire   [31:0] output_buffer_31_q0;
reg    output_buffer_31_ce1;
reg    output_buffer_31_we1;
reg    DATA_BUS1_AWVALID;
wire    DATA_BUS1_AWREADY;
reg    DATA_BUS1_WVALID;
wire    DATA_BUS1_WREADY;
reg    DATA_BUS1_ARVALID;
wire    DATA_BUS1_ARREADY;
wire    DATA_BUS1_RVALID;
reg    DATA_BUS1_RREADY;
wire   [31:0] DATA_BUS1_RDATA;
wire    DATA_BUS1_RLAST;
wire   [0:0] DATA_BUS1_RID;
wire   [0:0] DATA_BUS1_RUSER;
wire   [1:0] DATA_BUS1_RRESP;
wire    DATA_BUS1_BVALID;
reg    DATA_BUS1_BREADY;
wire   [1:0] DATA_BUS1_BRESP;
wire   [0:0] DATA_BUS1_BID;
wire   [0:0] DATA_BUS1_BUSER;
reg    DATA_BUS2_AWVALID;
wire    DATA_BUS2_AWREADY;
reg    DATA_BUS2_WVALID;
wire    DATA_BUS2_WREADY;
reg    DATA_BUS2_ARVALID;
wire    DATA_BUS2_ARREADY;
wire    DATA_BUS2_RVALID;
reg    DATA_BUS2_RREADY;
wire   [31:0] DATA_BUS2_RDATA;
wire    DATA_BUS2_RLAST;
wire   [0:0] DATA_BUS2_RID;
wire   [0:0] DATA_BUS2_RUSER;
wire   [1:0] DATA_BUS2_RRESP;
wire    DATA_BUS2_BVALID;
reg    DATA_BUS2_BREADY;
wire   [1:0] DATA_BUS2_BRESP;
wire   [0:0] DATA_BUS2_BID;
wire   [0:0] DATA_BUS2_BUSER;
wire    DATA_BUS3_AWREADY;
wire    DATA_BUS3_WREADY;
reg    DATA_BUS3_ARVALID;
wire    DATA_BUS3_ARREADY;
wire    DATA_BUS3_RVALID;
reg    DATA_BUS3_RREADY;
wire   [31:0] DATA_BUS3_RDATA;
wire    DATA_BUS3_RLAST;
wire   [0:0] DATA_BUS3_RID;
wire   [0:0] DATA_BUS3_RUSER;
wire   [1:0] DATA_BUS3_RRESP;
wire    DATA_BUS3_BVALID;
wire   [1:0] DATA_BUS3_BRESP;
wire   [0:0] DATA_BUS3_BID;
wire   [0:0] DATA_BUS3_BUSER;
wire    DATA_BUS4_AWREADY;
wire    DATA_BUS4_WREADY;
reg    DATA_BUS4_ARVALID;
wire    DATA_BUS4_ARREADY;
wire    DATA_BUS4_RVALID;
reg    DATA_BUS4_RREADY;
wire   [31:0] DATA_BUS4_RDATA;
wire    DATA_BUS4_RLAST;
wire   [0:0] DATA_BUS4_RID;
wire   [0:0] DATA_BUS4_RUSER;
wire   [1:0] DATA_BUS4_RRESP;
wire    DATA_BUS4_BVALID;
wire   [1:0] DATA_BUS4_BRESP;
wire   [0:0] DATA_BUS4_BID;
wire   [0:0] DATA_BUS4_BUSER;
wire    DATA_BUS5_AWREADY;
wire    DATA_BUS5_WREADY;
reg    DATA_BUS5_ARVALID;
wire    DATA_BUS5_ARREADY;
reg   [31:0] DATA_BUS5_ARADDR;
reg   [0:0] DATA_BUS5_ARID;
reg   [31:0] DATA_BUS5_ARLEN;
reg   [2:0] DATA_BUS5_ARSIZE;
reg   [1:0] DATA_BUS5_ARBURST;
reg   [1:0] DATA_BUS5_ARLOCK;
reg   [3:0] DATA_BUS5_ARCACHE;
reg   [2:0] DATA_BUS5_ARPROT;
reg   [3:0] DATA_BUS5_ARQOS;
reg   [3:0] DATA_BUS5_ARREGION;
reg   [0:0] DATA_BUS5_ARUSER;
wire    DATA_BUS5_RVALID;
reg    DATA_BUS5_RREADY;
wire   [31:0] DATA_BUS5_RDATA;
wire    DATA_BUS5_RLAST;
wire   [0:0] DATA_BUS5_RID;
wire   [0:0] DATA_BUS5_RUSER;
wire   [1:0] DATA_BUS5_RRESP;
wire    DATA_BUS5_BVALID;
wire   [1:0] DATA_BUS5_BRESP;
wire   [0:0] DATA_BUS5_BID;
wire   [0:0] DATA_BUS5_BUSER;
reg   [29:0] Output2_reg_2606;
reg   [29:0] Input5_reg_2611;
reg   [29:0] Input6_reg_2616;
reg   [29:0] Input7_reg_2621;
reg   [31:0] LayerType_read_reg_2626;
wire    ap_CS_fsm_state2;
reg   [31:0] cLoops_read_reg_2632;
reg   [31:0] rLoops_read_reg_2637;
reg   [31:0] nLoops_read_reg_2642;
reg   [31:0] mLoops_read_reg_2647;
reg   [31:0] TC_read_reg_2652;
reg   [31:0] TR_read_reg_2659;
reg   [31:0] TN_read_reg_2666;
reg   [31:0] TM_read_reg_2671;
reg   [0:0] IsNL_read_reg_2679;
reg   [31:0] Padding_read_reg_2684;
reg   [31:0] output_h_read_reg_2689;
reg   [31:0] output_w_read_reg_2694;
reg   [31:0] Input_h_read_reg_2700;
reg   [31:0] Input_w_read_reg_2705;
reg   [31:0] Kernel_stride_read_reg_2710;
reg   [31:0] Kernel_size_read_reg_2715;
reg   [31:0] OutFM_num_read_reg_2720;
reg   [31:0] InFM_num_read_reg_2726;
reg   [29:0] Beta1_reg_2731;
reg   [29:0] Weight1_reg_2736;
reg   [29:0] Output3_reg_2741;
reg   [29:0] Input4_reg_2746;
wire   [5:0] trow_loops_6b_V_fu_2266_p1;
reg   [5:0] trow_loops_6b_V_reg_2751;
wire   [17:0] r_V_fu_2278_p2;
reg   [17:0] r_V_reg_2756;
wire  signed [7:0] grp_fu_2580_p4;
reg   [7:0] TRow_reg_2761;
wire  signed [7:0] grp_fu_2590_p4;
reg   [7:0] TCol_reg_2766;
wire   [18:0] r_V_24_fu_2600_p2;
reg   [18:0] r_V_24_reg_2771;
wire   [31:0] mLoops_add1_fu_2308_p2;
reg   [31:0] mLoops_add1_reg_2776;
wire   [31:0] mLoops_bound_fu_2326_p3;
reg   [31:0] mLoops_bound_reg_2781;
wire   [7:0] InterSubBeta_fu_2338_p2;
reg   [7:0] InterSubBeta_reg_2786;
wire   [7:0] WeightAddInputSubInt_fu_2358_p2;
reg   [7:0] WeightAddInputSubInt_reg_2791;
wire   [7:0] InterSubOutput_fu_2368_p2;
reg   [7:0] InterSubOutput_reg_2796;
wire   [0:0] tmp_114_fu_2374_p2;
reg   [0:0] tmp_114_reg_2801;
wire   [30:0] r_1_fu_2389_p2;
reg   [30:0] r_1_reg_2835;
wire    ap_CS_fsm_state4;
wire   [31:0] TR_MIN_fu_2405_p3;
reg   [31:0] TR_MIN_reg_2840;
wire   [0:0] tmp_115_fu_2384_p2;
wire   [30:0] c_1_fu_2421_p2;
reg   [30:0] c_1_reg_2848;
wire    ap_CS_fsm_state5;
wire   [31:0] TC_MIN_fu_2437_p3;
reg   [31:0] TC_MIN_reg_2853;
wire   [0:0] tmp_121_fu_2416_p2;
wire   [31:0] TMP_R_1_fu_2444_p2;
wire   [30:0] m_1_fu_2458_p2;
reg   [30:0] m_1_reg_2867;
wire    ap_CS_fsm_state6;
wire   [31:0] TM_MIN_fu_2474_p3;
reg   [31:0] TM_MIN_reg_2872;
wire   [0:0] tmp_124_fu_2453_p2;
wire   [0:0] input_flag_fu_2508_p2;
reg   [0:0] input_flag_reg_2877;
wire   [0:0] process_flag_fu_2520_p3;
reg   [0:0] process_flag_reg_2882;
wire   [0:0] write_flag_fu_2532_p2;
reg   [0:0] write_flag_reg_2887;
reg   [31:0] TMP_M_next0_0_1_loa_reg_2892;
reg   [31:0] TMP_M_next1_0_1_loa_reg_2898;
reg   [31:0] TM_MIN_next0_0_1_lo_reg_2904;
reg   [31:0] TM_MIN_next1_0_1_lo_reg_2910;
wire   [31:0] TMP_C_1_fu_2550_p2;
wire   [31:0] TMP_M_1_fu_2575_p2;
wire    ap_CS_fsm_state8;
wire    grp_intra_pingpong_wrapp_fu_1230_ap_idle;
wire    grp_intra_pingpong_wrapp_fu_1230_ap_ready;
wire    grp_intra_pingpong_wrapp_fu_1230_ap_done;
reg   [0:0] pingpongm_reg_1205;
wire    grp_write_back_output_re_fu_2003_ap_idle;
wire    grp_write_back_output_re_fu_2003_ap_ready;
wire    grp_write_back_output_re_fu_2003_ap_done;
reg    ap_block_state8_on_subcall_done;
wire    grp_intra_pingpong_wrapp_fu_1230_ap_start;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WDATA;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WSTRB;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WLAST;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WID;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_RREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_BREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WDATA;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WSTRB;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WLAST;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WID;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_RREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_BREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WDATA;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WSTRB;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WLAST;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WID;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_RREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_BREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WDATA;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WSTRB;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WLAST;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WID;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_RREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_BREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WDATA;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WSTRB;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WLAST;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WID;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARVALID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARADDR;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARID;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARLEN;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARSIZE;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARBURST;
wire   [1:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARLOCK;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARCACHE;
wire   [2:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARPROT;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARQOS;
wire   [3:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARREGION;
wire   [0:0] grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARUSER;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_RREADY;
wire    grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_BREADY;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we0;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we0;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we0;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we0;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_q0;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce1;
wire    grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_we1;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_d1;
wire   [9:0] grp_intra_pingpong_wrapp_fu_1230_beta_buffer_address0;
wire    grp_intra_pingpong_wrapp_fu_1230_beta_buffer_ce0;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_p_read;
reg   [31:0] grp_intra_pingpong_wrapp_fu_1230_p_read1;
reg    grp_intra_pingpong_wrapp_fu_1230_pingpongx_offset;
wire    grp_intra_pingpong_wrapp_fu_1230_input_flag;
wire    grp_intra_pingpong_wrapp_fu_1230_process_flag;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_ap_return_0;
wire   [31:0] grp_intra_pingpong_wrapp_fu_1230_ap_return_1;
wire    grp_write_back_output_re_fu_2003_ap_start;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_0_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_0_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_0_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_1_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_1_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_1_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_2_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_2_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_2_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_3_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_3_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_3_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_4_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_4_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_4_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_5_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_5_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_5_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_6_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_6_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_6_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_7_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_7_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_7_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_8_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_8_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_8_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_9_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_9_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_9_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_10_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_10_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_10_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_11_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_11_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_11_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_12_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_12_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_12_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_13_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_13_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_13_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_14_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_14_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_14_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_15_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_15_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_15_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_16_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_16_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_16_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_17_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_17_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_17_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_18_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_18_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_18_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_19_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_19_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_19_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_20_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_20_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_20_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_21_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_21_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_21_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_22_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_22_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_22_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_23_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_23_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_23_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_24_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_24_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_24_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_25_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_25_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_25_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_26_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_26_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_26_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_27_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_27_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_27_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_28_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_28_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_28_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_29_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_29_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_29_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_30_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_30_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_30_q0;
wire   [9:0] grp_write_back_output_re_fu_2003_output_buffer_31_address0;
wire    grp_write_back_output_re_fu_2003_output_buffer_31_ce0;
reg   [31:0] grp_write_back_output_re_fu_2003_output_buffer_31_q0;
wire    grp_write_back_output_re_fu_2003_m_axi_Output_r_AWVALID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWADDR;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWLEN;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWSIZE;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWBURST;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWLOCK;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWCACHE;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWPROT;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWQOS;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWREGION;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_AWUSER;
wire    grp_write_back_output_re_fu_2003_m_axi_Output_r_WVALID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_WDATA;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_WSTRB;
wire    grp_write_back_output_re_fu_2003_m_axi_Output_r_WLAST;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_WID;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_WUSER;
wire    grp_write_back_output_re_fu_2003_m_axi_Output_r_ARVALID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARADDR;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARLEN;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARSIZE;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARBURST;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARLOCK;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARCACHE;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARPROT;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARQOS;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARREGION;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output_r_ARUSER;
wire    grp_write_back_output_re_fu_2003_m_axi_Output_r_RREADY;
wire    grp_write_back_output_re_fu_2003_m_axi_Output_r_BREADY;
wire    grp_write_back_output_re_fu_2003_m_axi_Output1_AWVALID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWADDR;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWLEN;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWSIZE;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWBURST;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWLOCK;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWCACHE;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWPROT;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWQOS;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWREGION;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output1_AWUSER;
wire    grp_write_back_output_re_fu_2003_m_axi_Output1_WVALID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output1_WDATA;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output1_WSTRB;
wire    grp_write_back_output_re_fu_2003_m_axi_Output1_WLAST;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output1_WID;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output1_WUSER;
wire    grp_write_back_output_re_fu_2003_m_axi_Output1_ARVALID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARADDR;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARID;
wire   [31:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARLEN;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARSIZE;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARBURST;
wire   [1:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARLOCK;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARCACHE;
wire   [2:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARPROT;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARQOS;
wire   [3:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARREGION;
wire   [0:0] grp_write_back_output_re_fu_2003_m_axi_Output1_ARUSER;
wire    grp_write_back_output_re_fu_2003_m_axi_Output1_RREADY;
wire    grp_write_back_output_re_fu_2003_m_axi_Output1_BREADY;
reg   [31:0] grp_write_back_output_re_fu_2003_m;
reg   [31:0] grp_write_back_output_re_fu_2003_TM_MIN;
wire    grp_write_back_output_re_fu_2003_write_flag;
wire    grp_write_back_output_re_fu_2003_IsNL;
wire    grp_copy_beta_fu_2132_ap_start;
wire    grp_copy_beta_fu_2132_ap_done;
wire    grp_copy_beta_fu_2132_ap_idle;
wire    grp_copy_beta_fu_2132_ap_ready;
wire    grp_copy_beta_fu_2132_m_axi_Beta_AWVALID;
wire   [31:0] grp_copy_beta_fu_2132_m_axi_Beta_AWADDR;
wire   [0:0] grp_copy_beta_fu_2132_m_axi_Beta_AWID;
wire   [31:0] grp_copy_beta_fu_2132_m_axi_Beta_AWLEN;
wire   [2:0] grp_copy_beta_fu_2132_m_axi_Beta_AWSIZE;
wire   [1:0] grp_copy_beta_fu_2132_m_axi_Beta_AWBURST;
wire   [1:0] grp_copy_beta_fu_2132_m_axi_Beta_AWLOCK;
wire   [3:0] grp_copy_beta_fu_2132_m_axi_Beta_AWCACHE;
wire   [2:0] grp_copy_beta_fu_2132_m_axi_Beta_AWPROT;
wire   [3:0] grp_copy_beta_fu_2132_m_axi_Beta_AWQOS;
wire   [3:0] grp_copy_beta_fu_2132_m_axi_Beta_AWREGION;
wire   [0:0] grp_copy_beta_fu_2132_m_axi_Beta_AWUSER;
wire    grp_copy_beta_fu_2132_m_axi_Beta_WVALID;
wire   [31:0] grp_copy_beta_fu_2132_m_axi_Beta_WDATA;
wire   [3:0] grp_copy_beta_fu_2132_m_axi_Beta_WSTRB;
wire    grp_copy_beta_fu_2132_m_axi_Beta_WLAST;
wire   [0:0] grp_copy_beta_fu_2132_m_axi_Beta_WID;
wire   [0:0] grp_copy_beta_fu_2132_m_axi_Beta_WUSER;
wire    grp_copy_beta_fu_2132_m_axi_Beta_ARVALID;
wire   [31:0] grp_copy_beta_fu_2132_m_axi_Beta_ARADDR;
wire   [0:0] grp_copy_beta_fu_2132_m_axi_Beta_ARID;
wire   [31:0] grp_copy_beta_fu_2132_m_axi_Beta_ARLEN;
wire   [2:0] grp_copy_beta_fu_2132_m_axi_Beta_ARSIZE;
wire   [1:0] grp_copy_beta_fu_2132_m_axi_Beta_ARBURST;
wire   [1:0] grp_copy_beta_fu_2132_m_axi_Beta_ARLOCK;
wire   [3:0] grp_copy_beta_fu_2132_m_axi_Beta_ARCACHE;
wire   [2:0] grp_copy_beta_fu_2132_m_axi_Beta_ARPROT;
wire   [3:0] grp_copy_beta_fu_2132_m_axi_Beta_ARQOS;
wire   [3:0] grp_copy_beta_fu_2132_m_axi_Beta_ARREGION;
wire   [0:0] grp_copy_beta_fu_2132_m_axi_Beta_ARUSER;
wire    grp_copy_beta_fu_2132_m_axi_Beta_RREADY;
wire    grp_copy_beta_fu_2132_m_axi_Beta_BREADY;
wire   [9:0] grp_copy_beta_fu_2132_beta_buffer_address0;
wire    grp_copy_beta_fu_2132_beta_buffer_ce0;
wire    grp_copy_beta_fu_2132_beta_buffer_we0;
wire   [15:0] grp_copy_beta_fu_2132_beta_buffer_d0;
wire   [9:0] grp_copy_beta_fu_2132_beta_buffer_address1;
wire    grp_copy_beta_fu_2132_beta_buffer_ce1;
wire    grp_copy_beta_fu_2132_beta_buffer_we1;
wire   [15:0] grp_copy_beta_fu_2132_beta_buffer_d1;
reg   [30:0] r_reg_1136;
wire    ap_CS_fsm_state3;
reg    ap_block_state3_on_subcall_done;
reg   [31:0] TMP_R_reg_1147;
reg   [30:0] c_reg_1159;
reg   [31:0] TMP_C_reg_1170;
reg   [30:0] m_reg_1182;
reg   [31:0] TMP_M_reg_1193;
wire   [0:0] ap_phi_mux_pingpongm_phi_fu_1209_p4;
reg   [0:0] ap_phi_mux_pingpongm_1_phi_fu_1221_p4;
reg    grp_intra_pingpong_wrapp_fu_1230_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
reg    grp_write_back_output_re_fu_2003_ap_start_reg;
reg    grp_copy_beta_fu_2132_ap_start_reg;
reg   [31:0] TMP_M_next0_0_1_fu_928;
reg   [31:0] TMP_M_next1_0_1_fu_932;
reg   [31:0] TM_MIN_next0_0_1_fu_936;
reg   [31:0] TM_MIN_next1_0_1_fu_940;
wire   [8:0] output_h_9b_V_fu_2234_p1;
wire   [8:0] output_w_9b_V_fu_2238_p1;
wire   [8:0] r_V_fu_2278_p0;
wire   [8:0] r_V_fu_2278_p1;
wire   [4:0] TR_5b_V_fu_2242_p1;
wire   [1:0] Kernel_stride_2b_V_fu_2250_p1;
wire   [1:0] Kernel_size_2b_V_fu_2254_p1;
wire   [4:0] TC_5b_V_fu_2246_p1;
wire   [9:0] Input_h_10b_V_fu_2258_p1;
wire   [8:0] Input_w_9b_V_fu_2262_p1;
wire   [0:0] tmp_113_fu_2320_p2;
wire   [31:0] mLoops_add2_fu_2314_p2;
wire   [7:0] tmp_fu_2334_p1;
wire   [7:0] tmp_117_fu_2344_p1;
wire   [7:0] tmp1_fu_2352_p2;
wire   [7:0] tmp_118_fu_2348_p1;
wire   [7:0] tmp_119_fu_2364_p1;
wire   [31:0] r_cast_fu_2380_p1;
wire   [31:0] tmp_116_fu_2395_p2;
wire   [0:0] tmp_120_fu_2400_p2;
wire   [31:0] c_cast_fu_2412_p1;
wire   [31:0] tmp_122_fu_2427_p2;
wire   [0:0] tmp_123_fu_2432_p2;
wire   [31:0] m_cast_fu_2449_p1;
wire   [31:0] tmp_125_fu_2464_p2;
wire   [0:0] tmp_126_fu_2469_p2;
wire   [0:0] MneMLoopsaddOne_fu_2498_p2;
wire   [0:0] MnemLoops_fu_2493_p2;
wire   [0:0] MneMLoopsaddOne_0_s_fu_2503_p2;
wire   [0:0] MneZero_fu_2481_p2;
wire   [0:0] MneMLoopsaddOne_0_1_fu_2514_p2;
wire   [0:0] MneOne_fu_2487_p2;
wire   [0:0] MneOne_0_s_fu_2527_p2;
wire  signed [0:0] grp_fu_2580_p0;
wire   [4:0] grp_fu_2580_p1;
wire   [1:0] grp_fu_2580_p2;
wire   [7:0] tmp_108_fu_2288_p1;
wire   [1:0] grp_fu_2580_p3;
wire   [7:0] tmp_110_fu_2292_p1;
wire  signed [0:0] grp_fu_2590_p0;
wire   [4:0] grp_fu_2590_p1;
wire   [1:0] grp_fu_2590_p2;
wire   [1:0] grp_fu_2590_p3;
wire   [9:0] r_V_24_fu_2600_p0;
wire   [8:0] r_V_24_fu_2600_p1;
wire    ap_CS_fsm_state10;
reg   [9:0] ap_NS_fsm;
wire   [5:0] grp_fu_2580_p10;
wire   [5:0] grp_fu_2590_p10;
wire   [18:0] r_V_24_fu_2600_p00;
wire   [18:0] r_V_24_fu_2600_p10;
wire   [17:0] r_V_fu_2278_p00;
wire   [17:0] r_V_fu_2278_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 Input_r_0_data_reg = 32'd0;
#0 Input_r_0_vld_reg = 1'b0;
#0 Output_r_0_data_reg = 32'd0;
#0 Output_r_0_vld_reg = 1'b0;
#0 Weight_0_data_reg = 32'd0;
#0 Weight_0_vld_reg = 1'b0;
#0 Beta_0_data_reg = 32'd0;
#0 Beta_0_vld_reg = 1'b0;
#0 InFM_num_0_data_reg = 32'd0;
#0 InFM_num_0_vld_reg = 1'b0;
#0 OutFM_num_0_data_reg = 32'd0;
#0 OutFM_num_0_vld_reg = 1'b0;
#0 Kernel_size_0_data_reg = 32'd0;
#0 Kernel_size_0_vld_reg = 1'b0;
#0 Kernel_stride_0_data_reg = 32'd0;
#0 Kernel_stride_0_vld_reg = 1'b0;
#0 Input_w_0_data_reg = 32'd0;
#0 Input_w_0_vld_reg = 1'b0;
#0 Input_h_0_data_reg = 32'd0;
#0 Input_h_0_vld_reg = 1'b0;
#0 output_w_0_data_reg = 32'd0;
#0 output_w_0_vld_reg = 1'b0;
#0 output_h_0_data_reg = 32'd0;
#0 output_h_0_vld_reg = 1'b0;
#0 Padding_0_data_reg = 32'd0;
#0 Padding_0_vld_reg = 1'b0;
#0 IsNL_0_data_reg = 1'b0;
#0 IsNL_0_vld_reg = 1'b0;
#0 TM_0_data_reg = 32'd0;
#0 TM_0_vld_reg = 1'b0;
#0 TN_0_data_reg = 32'd0;
#0 TN_0_vld_reg = 1'b0;
#0 TR_0_data_reg = 32'd0;
#0 TR_0_vld_reg = 1'b0;
#0 TC_0_data_reg = 32'd0;
#0 TC_0_vld_reg = 1'b0;
#0 mLoops_0_data_reg = 32'd0;
#0 mLoops_0_vld_reg = 1'b0;
#0 nLoops_0_data_reg = 32'd0;
#0 nLoops_0_vld_reg = 1'b0;
#0 rLoops_0_data_reg = 32'd0;
#0 rLoops_0_vld_reg = 1'b0;
#0 cLoops_0_data_reg = 32'd0;
#0 cLoops_0_vld_reg = 1'b0;
#0 LayerType_0_data_reg = 32'd0;
#0 LayerType_0_vld_reg = 1'b0;
#0 InputQ_0_data_reg = 32'd0;
#0 InputQ_0_vld_reg = 1'b0;
#0 OutputQ_0_data_reg = 32'd0;
#0 OutputQ_0_vld_reg = 1'b0;
#0 WeightQ_0_data_reg = 32'd0;
#0 WeightQ_0_vld_reg = 1'b0;
#0 BetaQ_0_data_reg = 32'd0;
#0 BetaQ_0_vld_reg = 1'b0;
#0 trow_loops_0_data_reg = 32'd0;
#0 trow_loops_0_vld_reg = 1'b0;
#0 grp_intra_pingpong_wrapp_fu_1230_ap_start_reg = 1'b0;
#0 grp_write_back_output_re_fu_2003_ap_start_reg = 1'b0;
#0 grp_copy_beta_fu_2132_ap_start_reg = 1'b0;
end

YOLO2_FPGA_beta_beTV #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
beta_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(beta_buffer_address0),
    .ce0(beta_buffer_ce0),
    .we0(beta_buffer_we0),
    .d0(grp_copy_beta_fu_2132_beta_buffer_d0),
    .q0(beta_buffer_q0),
    .address1(grp_copy_beta_fu_2132_beta_buffer_address1),
    .ce1(beta_buffer_ce1),
    .we1(beta_buffer_we1),
    .d1(grp_copy_beta_fu_2132_beta_buffer_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_0_address0),
    .ce0(output_buffer1_0_ce0),
    .we0(output_buffer1_0_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d0),
    .q0(output_buffer1_0_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address1),
    .ce1(output_buffer1_0_ce1),
    .we1(output_buffer1_0_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_1_address0),
    .ce0(output_buffer1_1_ce0),
    .we0(output_buffer1_1_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d0),
    .q0(output_buffer1_1_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address1),
    .ce1(output_buffer1_1_ce1),
    .we1(output_buffer1_1_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_2_address0),
    .ce0(output_buffer1_2_ce0),
    .we0(output_buffer1_2_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d0),
    .q0(output_buffer1_2_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address1),
    .ce1(output_buffer1_2_ce1),
    .we1(output_buffer1_2_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_3_address0),
    .ce0(output_buffer1_3_ce0),
    .we0(output_buffer1_3_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d0),
    .q0(output_buffer1_3_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address1),
    .ce1(output_buffer1_3_ce1),
    .we1(output_buffer1_3_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_4_address0),
    .ce0(output_buffer1_4_ce0),
    .q0(output_buffer1_4_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address1),
    .ce1(output_buffer1_4_ce1),
    .we1(output_buffer1_4_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_5_address0),
    .ce0(output_buffer1_5_ce0),
    .q0(output_buffer1_5_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address1),
    .ce1(output_buffer1_5_ce1),
    .we1(output_buffer1_5_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_6_address0),
    .ce0(output_buffer1_6_ce0),
    .q0(output_buffer1_6_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address1),
    .ce1(output_buffer1_6_ce1),
    .we1(output_buffer1_6_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_7_address0),
    .ce0(output_buffer1_7_ce0),
    .q0(output_buffer1_7_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address1),
    .ce1(output_buffer1_7_ce1),
    .we1(output_buffer1_7_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_8_address0),
    .ce0(output_buffer1_8_ce0),
    .q0(output_buffer1_8_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address1),
    .ce1(output_buffer1_8_ce1),
    .we1(output_buffer1_8_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_9_address0),
    .ce0(output_buffer1_9_ce0),
    .q0(output_buffer1_9_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address1),
    .ce1(output_buffer1_9_ce1),
    .we1(output_buffer1_9_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_10_address0),
    .ce0(output_buffer1_10_ce0),
    .q0(output_buffer1_10_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address1),
    .ce1(output_buffer1_10_ce1),
    .we1(output_buffer1_10_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_11_address0),
    .ce0(output_buffer1_11_ce0),
    .q0(output_buffer1_11_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address1),
    .ce1(output_buffer1_11_ce1),
    .we1(output_buffer1_11_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_12_address0),
    .ce0(output_buffer1_12_ce0),
    .q0(output_buffer1_12_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address1),
    .ce1(output_buffer1_12_ce1),
    .we1(output_buffer1_12_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_13_address0),
    .ce0(output_buffer1_13_ce0),
    .q0(output_buffer1_13_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address1),
    .ce1(output_buffer1_13_ce1),
    .we1(output_buffer1_13_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_14_address0),
    .ce0(output_buffer1_14_ce0),
    .q0(output_buffer1_14_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address1),
    .ce1(output_buffer1_14_ce1),
    .we1(output_buffer1_14_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_15_address0),
    .ce0(output_buffer1_15_ce0),
    .q0(output_buffer1_15_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address1),
    .ce1(output_buffer1_15_ce1),
    .we1(output_buffer1_15_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_16_address0),
    .ce0(output_buffer1_16_ce0),
    .q0(output_buffer1_16_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address1),
    .ce1(output_buffer1_16_ce1),
    .we1(output_buffer1_16_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_17_address0),
    .ce0(output_buffer1_17_ce0),
    .q0(output_buffer1_17_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address1),
    .ce1(output_buffer1_17_ce1),
    .we1(output_buffer1_17_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_18_address0),
    .ce0(output_buffer1_18_ce0),
    .q0(output_buffer1_18_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address1),
    .ce1(output_buffer1_18_ce1),
    .we1(output_buffer1_18_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_19_address0),
    .ce0(output_buffer1_19_ce0),
    .q0(output_buffer1_19_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address1),
    .ce1(output_buffer1_19_ce1),
    .we1(output_buffer1_19_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_20_address0),
    .ce0(output_buffer1_20_ce0),
    .q0(output_buffer1_20_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address1),
    .ce1(output_buffer1_20_ce1),
    .we1(output_buffer1_20_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_21_address0),
    .ce0(output_buffer1_21_ce0),
    .q0(output_buffer1_21_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address1),
    .ce1(output_buffer1_21_ce1),
    .we1(output_buffer1_21_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_22_address0),
    .ce0(output_buffer1_22_ce0),
    .q0(output_buffer1_22_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address1),
    .ce1(output_buffer1_22_ce1),
    .we1(output_buffer1_22_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_23_address0),
    .ce0(output_buffer1_23_ce0),
    .q0(output_buffer1_23_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address1),
    .ce1(output_buffer1_23_ce1),
    .we1(output_buffer1_23_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_24_address0),
    .ce0(output_buffer1_24_ce0),
    .q0(output_buffer1_24_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address1),
    .ce1(output_buffer1_24_ce1),
    .we1(output_buffer1_24_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_25_address0),
    .ce0(output_buffer1_25_ce0),
    .q0(output_buffer1_25_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address1),
    .ce1(output_buffer1_25_ce1),
    .we1(output_buffer1_25_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_26_address0),
    .ce0(output_buffer1_26_ce0),
    .q0(output_buffer1_26_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address1),
    .ce1(output_buffer1_26_ce1),
    .we1(output_buffer1_26_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_27_address0),
    .ce0(output_buffer1_27_ce0),
    .q0(output_buffer1_27_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address1),
    .ce1(output_buffer1_27_ce1),
    .we1(output_buffer1_27_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_28_address0),
    .ce0(output_buffer1_28_ce0),
    .q0(output_buffer1_28_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address1),
    .ce1(output_buffer1_28_ce1),
    .we1(output_buffer1_28_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_29_address0),
    .ce0(output_buffer1_29_ce0),
    .q0(output_buffer1_29_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address1),
    .ce1(output_buffer1_29_ce1),
    .we1(output_buffer1_29_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_30_address0),
    .ce0(output_buffer1_30_ce0),
    .q0(output_buffer1_30_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address1),
    .ce1(output_buffer1_30_ce1),
    .we1(output_buffer1_30_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer1_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_31_address0),
    .ce0(output_buffer1_31_ce0),
    .q0(output_buffer1_31_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address1),
    .ce1(output_buffer1_31_ce1),
    .we1(output_buffer1_31_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_0_address0),
    .ce0(output_buffer_0_ce0),
    .we0(output_buffer_0_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d0),
    .q0(output_buffer_0_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address1),
    .ce1(output_buffer_0_ce1),
    .we1(output_buffer_0_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_1_address0),
    .ce0(output_buffer_1_ce0),
    .we0(output_buffer_1_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d0),
    .q0(output_buffer_1_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address1),
    .ce1(output_buffer_1_ce1),
    .we1(output_buffer_1_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_2_address0),
    .ce0(output_buffer_2_ce0),
    .we0(output_buffer_2_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d0),
    .q0(output_buffer_2_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address1),
    .ce1(output_buffer_2_ce1),
    .we1(output_buffer_2_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d1)
);

YOLO2_FPGA_outputeUV #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_3_address0),
    .ce0(output_buffer_3_ce0),
    .we0(output_buffer_3_we0),
    .d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d0),
    .q0(output_buffer_3_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address1),
    .ce1(output_buffer_3_ce1),
    .we1(output_buffer_3_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_4_address0),
    .ce0(output_buffer_4_ce0),
    .q0(output_buffer_4_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address1),
    .ce1(output_buffer_4_ce1),
    .we1(output_buffer_4_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_5_address0),
    .ce0(output_buffer_5_ce0),
    .q0(output_buffer_5_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address1),
    .ce1(output_buffer_5_ce1),
    .we1(output_buffer_5_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_6_address0),
    .ce0(output_buffer_6_ce0),
    .q0(output_buffer_6_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address1),
    .ce1(output_buffer_6_ce1),
    .we1(output_buffer_6_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_7_address0),
    .ce0(output_buffer_7_ce0),
    .q0(output_buffer_7_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address1),
    .ce1(output_buffer_7_ce1),
    .we1(output_buffer_7_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_8_address0),
    .ce0(output_buffer_8_ce0),
    .q0(output_buffer_8_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address1),
    .ce1(output_buffer_8_ce1),
    .we1(output_buffer_8_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_9_address0),
    .ce0(output_buffer_9_ce0),
    .q0(output_buffer_9_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address1),
    .ce1(output_buffer_9_ce1),
    .we1(output_buffer_9_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_10_address0),
    .ce0(output_buffer_10_ce0),
    .q0(output_buffer_10_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address1),
    .ce1(output_buffer_10_ce1),
    .we1(output_buffer_10_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_11_address0),
    .ce0(output_buffer_11_ce0),
    .q0(output_buffer_11_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address1),
    .ce1(output_buffer_11_ce1),
    .we1(output_buffer_11_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_12_address0),
    .ce0(output_buffer_12_ce0),
    .q0(output_buffer_12_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address1),
    .ce1(output_buffer_12_ce1),
    .we1(output_buffer_12_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_13_address0),
    .ce0(output_buffer_13_ce0),
    .q0(output_buffer_13_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address1),
    .ce1(output_buffer_13_ce1),
    .we1(output_buffer_13_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_14_address0),
    .ce0(output_buffer_14_ce0),
    .q0(output_buffer_14_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address1),
    .ce1(output_buffer_14_ce1),
    .we1(output_buffer_14_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_15_address0),
    .ce0(output_buffer_15_ce0),
    .q0(output_buffer_15_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address1),
    .ce1(output_buffer_15_ce1),
    .we1(output_buffer_15_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_16_address0),
    .ce0(output_buffer_16_ce0),
    .q0(output_buffer_16_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address1),
    .ce1(output_buffer_16_ce1),
    .we1(output_buffer_16_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_17_address0),
    .ce0(output_buffer_17_ce0),
    .q0(output_buffer_17_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address1),
    .ce1(output_buffer_17_ce1),
    .we1(output_buffer_17_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_18_address0),
    .ce0(output_buffer_18_ce0),
    .q0(output_buffer_18_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address1),
    .ce1(output_buffer_18_ce1),
    .we1(output_buffer_18_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_19_address0),
    .ce0(output_buffer_19_ce0),
    .q0(output_buffer_19_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address1),
    .ce1(output_buffer_19_ce1),
    .we1(output_buffer_19_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_20_address0),
    .ce0(output_buffer_20_ce0),
    .q0(output_buffer_20_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address1),
    .ce1(output_buffer_20_ce1),
    .we1(output_buffer_20_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_21_address0),
    .ce0(output_buffer_21_ce0),
    .q0(output_buffer_21_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address1),
    .ce1(output_buffer_21_ce1),
    .we1(output_buffer_21_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_22_address0),
    .ce0(output_buffer_22_ce0),
    .q0(output_buffer_22_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address1),
    .ce1(output_buffer_22_ce1),
    .we1(output_buffer_22_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_23_address0),
    .ce0(output_buffer_23_ce0),
    .q0(output_buffer_23_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address1),
    .ce1(output_buffer_23_ce1),
    .we1(output_buffer_23_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_24_address0),
    .ce0(output_buffer_24_ce0),
    .q0(output_buffer_24_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address1),
    .ce1(output_buffer_24_ce1),
    .we1(output_buffer_24_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_25_address0),
    .ce0(output_buffer_25_ce0),
    .q0(output_buffer_25_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address1),
    .ce1(output_buffer_25_ce1),
    .we1(output_buffer_25_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_26_address0),
    .ce0(output_buffer_26_ce0),
    .q0(output_buffer_26_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address1),
    .ce1(output_buffer_26_ce1),
    .we1(output_buffer_26_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_27_address0),
    .ce0(output_buffer_27_ce0),
    .q0(output_buffer_27_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address1),
    .ce1(output_buffer_27_ce1),
    .we1(output_buffer_27_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_28_address0),
    .ce0(output_buffer_28_ce0),
    .q0(output_buffer_28_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address1),
    .ce1(output_buffer_28_ce1),
    .we1(output_buffer_28_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_29_address0),
    .ce0(output_buffer_29_ce0),
    .q0(output_buffer_29_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address1),
    .ce1(output_buffer_29_ce1),
    .we1(output_buffer_29_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_30_address0),
    .ce0(output_buffer_30_ce0),
    .q0(output_buffer_30_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address1),
    .ce1(output_buffer_30_ce1),
    .we1(output_buffer_30_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_d1)
);

YOLO2_FPGA_outputeYW #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
output_buffer_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_31_address0),
    .ce0(output_buffer_31_ce0),
    .q0(output_buffer_31_q0),
    .address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address1),
    .ce1(output_buffer_31_ce1),
    .we1(output_buffer_31_we1),
    .d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_d1)
);

YOLO2_FPGA_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
YOLO2_FPGA_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .Input_r(Input_r),
    .Input1(Input1),
    .Input2(Input2),
    .Input3(Input3),
    .Output_r(Output_r),
    .Output1(Output1),
    .Weight(Weight),
    .Beta(Beta),
    .InFM_num(InFM_num),
    .OutFM_num(OutFM_num),
    .Kernel_size(Kernel_size),
    .Kernel_stride(Kernel_stride),
    .Input_w(Input_w),
    .Input_h(Input_h),
    .output_w(output_w),
    .output_h(output_h),
    .Padding(Padding),
    .IsNL(IsNL),
    .IsBN(IsBN),
    .TM(TM),
    .TN(TN),
    .TR(TR),
    .TC(TC),
    .mLoops(mLoops),
    .nLoops(nLoops),
    .rLoops(rLoops),
    .cLoops(cLoops),
    .LayerType(LayerType),
    .InputQ(InputQ),
    .OutputQ(OutputQ),
    .WeightQ(WeightQ),
    .BetaQ(BetaQ),
    .trow_loops(trow_loops)
);

YOLO2_FPGA_DATA_BUS1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 1 ),
    .NUM_WRITE_OUTSTANDING( 1 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_BUS1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_BUS1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_BUS1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_BUS1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_BUS1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_BUS1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_BUS1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUS1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_BUS1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_BUS1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_BUS1_CACHE_VALUE ))
YOLO2_FPGA_DATA_BUS1_m_axi_U(
    .AWVALID(m_axi_DATA_BUS1_AWVALID),
    .AWREADY(m_axi_DATA_BUS1_AWREADY),
    .AWADDR(m_axi_DATA_BUS1_AWADDR),
    .AWID(m_axi_DATA_BUS1_AWID),
    .AWLEN(m_axi_DATA_BUS1_AWLEN),
    .AWSIZE(m_axi_DATA_BUS1_AWSIZE),
    .AWBURST(m_axi_DATA_BUS1_AWBURST),
    .AWLOCK(m_axi_DATA_BUS1_AWLOCK),
    .AWCACHE(m_axi_DATA_BUS1_AWCACHE),
    .AWPROT(m_axi_DATA_BUS1_AWPROT),
    .AWQOS(m_axi_DATA_BUS1_AWQOS),
    .AWREGION(m_axi_DATA_BUS1_AWREGION),
    .AWUSER(m_axi_DATA_BUS1_AWUSER),
    .WVALID(m_axi_DATA_BUS1_WVALID),
    .WREADY(m_axi_DATA_BUS1_WREADY),
    .WDATA(m_axi_DATA_BUS1_WDATA),
    .WSTRB(m_axi_DATA_BUS1_WSTRB),
    .WLAST(m_axi_DATA_BUS1_WLAST),
    .WID(m_axi_DATA_BUS1_WID),
    .WUSER(m_axi_DATA_BUS1_WUSER),
    .ARVALID(m_axi_DATA_BUS1_ARVALID),
    .ARREADY(m_axi_DATA_BUS1_ARREADY),
    .ARADDR(m_axi_DATA_BUS1_ARADDR),
    .ARID(m_axi_DATA_BUS1_ARID),
    .ARLEN(m_axi_DATA_BUS1_ARLEN),
    .ARSIZE(m_axi_DATA_BUS1_ARSIZE),
    .ARBURST(m_axi_DATA_BUS1_ARBURST),
    .ARLOCK(m_axi_DATA_BUS1_ARLOCK),
    .ARCACHE(m_axi_DATA_BUS1_ARCACHE),
    .ARPROT(m_axi_DATA_BUS1_ARPROT),
    .ARQOS(m_axi_DATA_BUS1_ARQOS),
    .ARREGION(m_axi_DATA_BUS1_ARREGION),
    .ARUSER(m_axi_DATA_BUS1_ARUSER),
    .RVALID(m_axi_DATA_BUS1_RVALID),
    .RREADY(m_axi_DATA_BUS1_RREADY),
    .RDATA(m_axi_DATA_BUS1_RDATA),
    .RLAST(m_axi_DATA_BUS1_RLAST),
    .RID(m_axi_DATA_BUS1_RID),
    .RUSER(m_axi_DATA_BUS1_RUSER),
    .RRESP(m_axi_DATA_BUS1_RRESP),
    .BVALID(m_axi_DATA_BUS1_BVALID),
    .BREADY(m_axi_DATA_BUS1_BREADY),
    .BRESP(m_axi_DATA_BUS1_BRESP),
    .BID(m_axi_DATA_BUS1_BID),
    .BUSER(m_axi_DATA_BUS1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_BUS1_ARVALID),
    .I_ARREADY(DATA_BUS1_ARREADY),
    .I_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARADDR),
    .I_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARID),
    .I_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARLEN),
    .I_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARSIZE),
    .I_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARLOCK),
    .I_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARCACHE),
    .I_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARQOS),
    .I_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARPROT),
    .I_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARUSER),
    .I_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARBURST),
    .I_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARREGION),
    .I_RVALID(DATA_BUS1_RVALID),
    .I_RREADY(DATA_BUS1_RREADY),
    .I_RDATA(DATA_BUS1_RDATA),
    .I_RID(DATA_BUS1_RID),
    .I_RUSER(DATA_BUS1_RUSER),
    .I_RRESP(DATA_BUS1_RRESP),
    .I_RLAST(DATA_BUS1_RLAST),
    .I_AWVALID(DATA_BUS1_AWVALID),
    .I_AWREADY(DATA_BUS1_AWREADY),
    .I_AWADDR(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWADDR),
    .I_AWID(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWID),
    .I_AWLEN(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWLEN),
    .I_AWSIZE(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWSIZE),
    .I_AWLOCK(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWLOCK),
    .I_AWCACHE(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWCACHE),
    .I_AWQOS(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWQOS),
    .I_AWPROT(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWPROT),
    .I_AWUSER(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWUSER),
    .I_AWBURST(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWBURST),
    .I_AWREGION(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWREGION),
    .I_WVALID(DATA_BUS1_WVALID),
    .I_WREADY(DATA_BUS1_WREADY),
    .I_WDATA(grp_write_back_output_re_fu_2003_m_axi_Output_r_WDATA),
    .I_WID(grp_write_back_output_re_fu_2003_m_axi_Output_r_WID),
    .I_WUSER(grp_write_back_output_re_fu_2003_m_axi_Output_r_WUSER),
    .I_WLAST(grp_write_back_output_re_fu_2003_m_axi_Output_r_WLAST),
    .I_WSTRB(grp_write_back_output_re_fu_2003_m_axi_Output_r_WSTRB),
    .I_BVALID(DATA_BUS1_BVALID),
    .I_BREADY(DATA_BUS1_BREADY),
    .I_BRESP(DATA_BUS1_BRESP),
    .I_BID(DATA_BUS1_BID),
    .I_BUSER(DATA_BUS1_BUSER)
);

YOLO2_FPGA_DATA_BUS2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 1 ),
    .NUM_WRITE_OUTSTANDING( 1 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_BUS2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_BUS2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_BUS2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_BUS2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_BUS2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_BUS2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_BUS2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUS2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_BUS2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_BUS2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_BUS2_CACHE_VALUE ))
YOLO2_FPGA_DATA_BUS2_m_axi_U(
    .AWVALID(m_axi_DATA_BUS2_AWVALID),
    .AWREADY(m_axi_DATA_BUS2_AWREADY),
    .AWADDR(m_axi_DATA_BUS2_AWADDR),
    .AWID(m_axi_DATA_BUS2_AWID),
    .AWLEN(m_axi_DATA_BUS2_AWLEN),
    .AWSIZE(m_axi_DATA_BUS2_AWSIZE),
    .AWBURST(m_axi_DATA_BUS2_AWBURST),
    .AWLOCK(m_axi_DATA_BUS2_AWLOCK),
    .AWCACHE(m_axi_DATA_BUS2_AWCACHE),
    .AWPROT(m_axi_DATA_BUS2_AWPROT),
    .AWQOS(m_axi_DATA_BUS2_AWQOS),
    .AWREGION(m_axi_DATA_BUS2_AWREGION),
    .AWUSER(m_axi_DATA_BUS2_AWUSER),
    .WVALID(m_axi_DATA_BUS2_WVALID),
    .WREADY(m_axi_DATA_BUS2_WREADY),
    .WDATA(m_axi_DATA_BUS2_WDATA),
    .WSTRB(m_axi_DATA_BUS2_WSTRB),
    .WLAST(m_axi_DATA_BUS2_WLAST),
    .WID(m_axi_DATA_BUS2_WID),
    .WUSER(m_axi_DATA_BUS2_WUSER),
    .ARVALID(m_axi_DATA_BUS2_ARVALID),
    .ARREADY(m_axi_DATA_BUS2_ARREADY),
    .ARADDR(m_axi_DATA_BUS2_ARADDR),
    .ARID(m_axi_DATA_BUS2_ARID),
    .ARLEN(m_axi_DATA_BUS2_ARLEN),
    .ARSIZE(m_axi_DATA_BUS2_ARSIZE),
    .ARBURST(m_axi_DATA_BUS2_ARBURST),
    .ARLOCK(m_axi_DATA_BUS2_ARLOCK),
    .ARCACHE(m_axi_DATA_BUS2_ARCACHE),
    .ARPROT(m_axi_DATA_BUS2_ARPROT),
    .ARQOS(m_axi_DATA_BUS2_ARQOS),
    .ARREGION(m_axi_DATA_BUS2_ARREGION),
    .ARUSER(m_axi_DATA_BUS2_ARUSER),
    .RVALID(m_axi_DATA_BUS2_RVALID),
    .RREADY(m_axi_DATA_BUS2_RREADY),
    .RDATA(m_axi_DATA_BUS2_RDATA),
    .RLAST(m_axi_DATA_BUS2_RLAST),
    .RID(m_axi_DATA_BUS2_RID),
    .RUSER(m_axi_DATA_BUS2_RUSER),
    .RRESP(m_axi_DATA_BUS2_RRESP),
    .BVALID(m_axi_DATA_BUS2_BVALID),
    .BREADY(m_axi_DATA_BUS2_BREADY),
    .BRESP(m_axi_DATA_BUS2_BRESP),
    .BID(m_axi_DATA_BUS2_BID),
    .BUSER(m_axi_DATA_BUS2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_BUS2_ARVALID),
    .I_ARREADY(DATA_BUS2_ARREADY),
    .I_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARADDR),
    .I_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARID),
    .I_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARLEN),
    .I_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARSIZE),
    .I_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARLOCK),
    .I_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARCACHE),
    .I_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARQOS),
    .I_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARPROT),
    .I_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARUSER),
    .I_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARBURST),
    .I_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARREGION),
    .I_RVALID(DATA_BUS2_RVALID),
    .I_RREADY(DATA_BUS2_RREADY),
    .I_RDATA(DATA_BUS2_RDATA),
    .I_RID(DATA_BUS2_RID),
    .I_RUSER(DATA_BUS2_RUSER),
    .I_RRESP(DATA_BUS2_RRESP),
    .I_RLAST(DATA_BUS2_RLAST),
    .I_AWVALID(DATA_BUS2_AWVALID),
    .I_AWREADY(DATA_BUS2_AWREADY),
    .I_AWADDR(grp_write_back_output_re_fu_2003_m_axi_Output1_AWADDR),
    .I_AWID(grp_write_back_output_re_fu_2003_m_axi_Output1_AWID),
    .I_AWLEN(grp_write_back_output_re_fu_2003_m_axi_Output1_AWLEN),
    .I_AWSIZE(grp_write_back_output_re_fu_2003_m_axi_Output1_AWSIZE),
    .I_AWLOCK(grp_write_back_output_re_fu_2003_m_axi_Output1_AWLOCK),
    .I_AWCACHE(grp_write_back_output_re_fu_2003_m_axi_Output1_AWCACHE),
    .I_AWQOS(grp_write_back_output_re_fu_2003_m_axi_Output1_AWQOS),
    .I_AWPROT(grp_write_back_output_re_fu_2003_m_axi_Output1_AWPROT),
    .I_AWUSER(grp_write_back_output_re_fu_2003_m_axi_Output1_AWUSER),
    .I_AWBURST(grp_write_back_output_re_fu_2003_m_axi_Output1_AWBURST),
    .I_AWREGION(grp_write_back_output_re_fu_2003_m_axi_Output1_AWREGION),
    .I_WVALID(DATA_BUS2_WVALID),
    .I_WREADY(DATA_BUS2_WREADY),
    .I_WDATA(grp_write_back_output_re_fu_2003_m_axi_Output1_WDATA),
    .I_WID(grp_write_back_output_re_fu_2003_m_axi_Output1_WID),
    .I_WUSER(grp_write_back_output_re_fu_2003_m_axi_Output1_WUSER),
    .I_WLAST(grp_write_back_output_re_fu_2003_m_axi_Output1_WLAST),
    .I_WSTRB(grp_write_back_output_re_fu_2003_m_axi_Output1_WSTRB),
    .I_BVALID(DATA_BUS2_BVALID),
    .I_BREADY(DATA_BUS2_BREADY),
    .I_BRESP(DATA_BUS2_BRESP),
    .I_BID(DATA_BUS2_BID),
    .I_BUSER(DATA_BUS2_BUSER)
);

YOLO2_FPGA_DATA_BUS3_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 1 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_BUS3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_BUS3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_BUS3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_BUS3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_BUS3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_BUS3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_BUS3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUS3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_BUS3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_BUS3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_BUS3_CACHE_VALUE ))
YOLO2_FPGA_DATA_BUS3_m_axi_U(
    .AWVALID(m_axi_DATA_BUS3_AWVALID),
    .AWREADY(m_axi_DATA_BUS3_AWREADY),
    .AWADDR(m_axi_DATA_BUS3_AWADDR),
    .AWID(m_axi_DATA_BUS3_AWID),
    .AWLEN(m_axi_DATA_BUS3_AWLEN),
    .AWSIZE(m_axi_DATA_BUS3_AWSIZE),
    .AWBURST(m_axi_DATA_BUS3_AWBURST),
    .AWLOCK(m_axi_DATA_BUS3_AWLOCK),
    .AWCACHE(m_axi_DATA_BUS3_AWCACHE),
    .AWPROT(m_axi_DATA_BUS3_AWPROT),
    .AWQOS(m_axi_DATA_BUS3_AWQOS),
    .AWREGION(m_axi_DATA_BUS3_AWREGION),
    .AWUSER(m_axi_DATA_BUS3_AWUSER),
    .WVALID(m_axi_DATA_BUS3_WVALID),
    .WREADY(m_axi_DATA_BUS3_WREADY),
    .WDATA(m_axi_DATA_BUS3_WDATA),
    .WSTRB(m_axi_DATA_BUS3_WSTRB),
    .WLAST(m_axi_DATA_BUS3_WLAST),
    .WID(m_axi_DATA_BUS3_WID),
    .WUSER(m_axi_DATA_BUS3_WUSER),
    .ARVALID(m_axi_DATA_BUS3_ARVALID),
    .ARREADY(m_axi_DATA_BUS3_ARREADY),
    .ARADDR(m_axi_DATA_BUS3_ARADDR),
    .ARID(m_axi_DATA_BUS3_ARID),
    .ARLEN(m_axi_DATA_BUS3_ARLEN),
    .ARSIZE(m_axi_DATA_BUS3_ARSIZE),
    .ARBURST(m_axi_DATA_BUS3_ARBURST),
    .ARLOCK(m_axi_DATA_BUS3_ARLOCK),
    .ARCACHE(m_axi_DATA_BUS3_ARCACHE),
    .ARPROT(m_axi_DATA_BUS3_ARPROT),
    .ARQOS(m_axi_DATA_BUS3_ARQOS),
    .ARREGION(m_axi_DATA_BUS3_ARREGION),
    .ARUSER(m_axi_DATA_BUS3_ARUSER),
    .RVALID(m_axi_DATA_BUS3_RVALID),
    .RREADY(m_axi_DATA_BUS3_RREADY),
    .RDATA(m_axi_DATA_BUS3_RDATA),
    .RLAST(m_axi_DATA_BUS3_RLAST),
    .RID(m_axi_DATA_BUS3_RID),
    .RUSER(m_axi_DATA_BUS3_RUSER),
    .RRESP(m_axi_DATA_BUS3_RRESP),
    .BVALID(m_axi_DATA_BUS3_BVALID),
    .BREADY(m_axi_DATA_BUS3_BREADY),
    .BRESP(m_axi_DATA_BUS3_BRESP),
    .BID(m_axi_DATA_BUS3_BID),
    .BUSER(m_axi_DATA_BUS3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_BUS3_ARVALID),
    .I_ARREADY(DATA_BUS3_ARREADY),
    .I_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARADDR),
    .I_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARID),
    .I_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARLEN),
    .I_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARSIZE),
    .I_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARLOCK),
    .I_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARCACHE),
    .I_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARQOS),
    .I_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARPROT),
    .I_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARUSER),
    .I_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARBURST),
    .I_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARREGION),
    .I_RVALID(DATA_BUS3_RVALID),
    .I_RREADY(DATA_BUS3_RREADY),
    .I_RDATA(DATA_BUS3_RDATA),
    .I_RID(DATA_BUS3_RID),
    .I_RUSER(DATA_BUS3_RUSER),
    .I_RRESP(DATA_BUS3_RRESP),
    .I_RLAST(DATA_BUS3_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(DATA_BUS3_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(DATA_BUS3_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(DATA_BUS3_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(DATA_BUS3_BRESP),
    .I_BID(DATA_BUS3_BID),
    .I_BUSER(DATA_BUS3_BUSER)
);

YOLO2_FPGA_DATA_BUS4_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 1 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_BUS4_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_BUS4_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_BUS4_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_BUS4_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_BUS4_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_BUS4_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_BUS4_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUS4_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_BUS4_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_BUS4_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_BUS4_CACHE_VALUE ))
YOLO2_FPGA_DATA_BUS4_m_axi_U(
    .AWVALID(m_axi_DATA_BUS4_AWVALID),
    .AWREADY(m_axi_DATA_BUS4_AWREADY),
    .AWADDR(m_axi_DATA_BUS4_AWADDR),
    .AWID(m_axi_DATA_BUS4_AWID),
    .AWLEN(m_axi_DATA_BUS4_AWLEN),
    .AWSIZE(m_axi_DATA_BUS4_AWSIZE),
    .AWBURST(m_axi_DATA_BUS4_AWBURST),
    .AWLOCK(m_axi_DATA_BUS4_AWLOCK),
    .AWCACHE(m_axi_DATA_BUS4_AWCACHE),
    .AWPROT(m_axi_DATA_BUS4_AWPROT),
    .AWQOS(m_axi_DATA_BUS4_AWQOS),
    .AWREGION(m_axi_DATA_BUS4_AWREGION),
    .AWUSER(m_axi_DATA_BUS4_AWUSER),
    .WVALID(m_axi_DATA_BUS4_WVALID),
    .WREADY(m_axi_DATA_BUS4_WREADY),
    .WDATA(m_axi_DATA_BUS4_WDATA),
    .WSTRB(m_axi_DATA_BUS4_WSTRB),
    .WLAST(m_axi_DATA_BUS4_WLAST),
    .WID(m_axi_DATA_BUS4_WID),
    .WUSER(m_axi_DATA_BUS4_WUSER),
    .ARVALID(m_axi_DATA_BUS4_ARVALID),
    .ARREADY(m_axi_DATA_BUS4_ARREADY),
    .ARADDR(m_axi_DATA_BUS4_ARADDR),
    .ARID(m_axi_DATA_BUS4_ARID),
    .ARLEN(m_axi_DATA_BUS4_ARLEN),
    .ARSIZE(m_axi_DATA_BUS4_ARSIZE),
    .ARBURST(m_axi_DATA_BUS4_ARBURST),
    .ARLOCK(m_axi_DATA_BUS4_ARLOCK),
    .ARCACHE(m_axi_DATA_BUS4_ARCACHE),
    .ARPROT(m_axi_DATA_BUS4_ARPROT),
    .ARQOS(m_axi_DATA_BUS4_ARQOS),
    .ARREGION(m_axi_DATA_BUS4_ARREGION),
    .ARUSER(m_axi_DATA_BUS4_ARUSER),
    .RVALID(m_axi_DATA_BUS4_RVALID),
    .RREADY(m_axi_DATA_BUS4_RREADY),
    .RDATA(m_axi_DATA_BUS4_RDATA),
    .RLAST(m_axi_DATA_BUS4_RLAST),
    .RID(m_axi_DATA_BUS4_RID),
    .RUSER(m_axi_DATA_BUS4_RUSER),
    .RRESP(m_axi_DATA_BUS4_RRESP),
    .BVALID(m_axi_DATA_BUS4_BVALID),
    .BREADY(m_axi_DATA_BUS4_BREADY),
    .BRESP(m_axi_DATA_BUS4_BRESP),
    .BID(m_axi_DATA_BUS4_BID),
    .BUSER(m_axi_DATA_BUS4_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_BUS4_ARVALID),
    .I_ARREADY(DATA_BUS4_ARREADY),
    .I_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARADDR),
    .I_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARID),
    .I_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARLEN),
    .I_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARSIZE),
    .I_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARLOCK),
    .I_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARCACHE),
    .I_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARQOS),
    .I_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARPROT),
    .I_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARUSER),
    .I_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARBURST),
    .I_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARREGION),
    .I_RVALID(DATA_BUS4_RVALID),
    .I_RREADY(DATA_BUS4_RREADY),
    .I_RDATA(DATA_BUS4_RDATA),
    .I_RID(DATA_BUS4_RID),
    .I_RUSER(DATA_BUS4_RUSER),
    .I_RRESP(DATA_BUS4_RRESP),
    .I_RLAST(DATA_BUS4_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(DATA_BUS4_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(DATA_BUS4_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(DATA_BUS4_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(DATA_BUS4_BRESP),
    .I_BID(DATA_BUS4_BID),
    .I_BUSER(DATA_BUS4_BUSER)
);

YOLO2_FPGA_DATA_BUS5_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 1 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_BUS5_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_BUS5_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_BUS5_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_BUS5_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_BUS5_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_BUS5_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_BUS5_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUS5_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_BUS5_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_BUS5_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_BUS5_CACHE_VALUE ))
YOLO2_FPGA_DATA_BUS5_m_axi_U(
    .AWVALID(m_axi_DATA_BUS5_AWVALID),
    .AWREADY(m_axi_DATA_BUS5_AWREADY),
    .AWADDR(m_axi_DATA_BUS5_AWADDR),
    .AWID(m_axi_DATA_BUS5_AWID),
    .AWLEN(m_axi_DATA_BUS5_AWLEN),
    .AWSIZE(m_axi_DATA_BUS5_AWSIZE),
    .AWBURST(m_axi_DATA_BUS5_AWBURST),
    .AWLOCK(m_axi_DATA_BUS5_AWLOCK),
    .AWCACHE(m_axi_DATA_BUS5_AWCACHE),
    .AWPROT(m_axi_DATA_BUS5_AWPROT),
    .AWQOS(m_axi_DATA_BUS5_AWQOS),
    .AWREGION(m_axi_DATA_BUS5_AWREGION),
    .AWUSER(m_axi_DATA_BUS5_AWUSER),
    .WVALID(m_axi_DATA_BUS5_WVALID),
    .WREADY(m_axi_DATA_BUS5_WREADY),
    .WDATA(m_axi_DATA_BUS5_WDATA),
    .WSTRB(m_axi_DATA_BUS5_WSTRB),
    .WLAST(m_axi_DATA_BUS5_WLAST),
    .WID(m_axi_DATA_BUS5_WID),
    .WUSER(m_axi_DATA_BUS5_WUSER),
    .ARVALID(m_axi_DATA_BUS5_ARVALID),
    .ARREADY(m_axi_DATA_BUS5_ARREADY),
    .ARADDR(m_axi_DATA_BUS5_ARADDR),
    .ARID(m_axi_DATA_BUS5_ARID),
    .ARLEN(m_axi_DATA_BUS5_ARLEN),
    .ARSIZE(m_axi_DATA_BUS5_ARSIZE),
    .ARBURST(m_axi_DATA_BUS5_ARBURST),
    .ARLOCK(m_axi_DATA_BUS5_ARLOCK),
    .ARCACHE(m_axi_DATA_BUS5_ARCACHE),
    .ARPROT(m_axi_DATA_BUS5_ARPROT),
    .ARQOS(m_axi_DATA_BUS5_ARQOS),
    .ARREGION(m_axi_DATA_BUS5_ARREGION),
    .ARUSER(m_axi_DATA_BUS5_ARUSER),
    .RVALID(m_axi_DATA_BUS5_RVALID),
    .RREADY(m_axi_DATA_BUS5_RREADY),
    .RDATA(m_axi_DATA_BUS5_RDATA),
    .RLAST(m_axi_DATA_BUS5_RLAST),
    .RID(m_axi_DATA_BUS5_RID),
    .RUSER(m_axi_DATA_BUS5_RUSER),
    .RRESP(m_axi_DATA_BUS5_RRESP),
    .BVALID(m_axi_DATA_BUS5_BVALID),
    .BREADY(m_axi_DATA_BUS5_BREADY),
    .BRESP(m_axi_DATA_BUS5_BRESP),
    .BID(m_axi_DATA_BUS5_BID),
    .BUSER(m_axi_DATA_BUS5_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_BUS5_ARVALID),
    .I_ARREADY(DATA_BUS5_ARREADY),
    .I_ARADDR(DATA_BUS5_ARADDR),
    .I_ARID(DATA_BUS5_ARID),
    .I_ARLEN(DATA_BUS5_ARLEN),
    .I_ARSIZE(DATA_BUS5_ARSIZE),
    .I_ARLOCK(DATA_BUS5_ARLOCK),
    .I_ARCACHE(DATA_BUS5_ARCACHE),
    .I_ARQOS(DATA_BUS5_ARQOS),
    .I_ARPROT(DATA_BUS5_ARPROT),
    .I_ARUSER(DATA_BUS5_ARUSER),
    .I_ARBURST(DATA_BUS5_ARBURST),
    .I_ARREGION(DATA_BUS5_ARREGION),
    .I_RVALID(DATA_BUS5_RVALID),
    .I_RREADY(DATA_BUS5_RREADY),
    .I_RDATA(DATA_BUS5_RDATA),
    .I_RID(DATA_BUS5_RID),
    .I_RUSER(DATA_BUS5_RUSER),
    .I_RRESP(DATA_BUS5_RRESP),
    .I_RLAST(DATA_BUS5_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(DATA_BUS5_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(DATA_BUS5_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(DATA_BUS5_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(DATA_BUS5_BRESP),
    .I_BID(DATA_BUS5_BID),
    .I_BUSER(DATA_BUS5_BUSER)
);

intra_pingpong_wrapp grp_intra_pingpong_wrapp_fu_1230(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_intra_pingpong_wrapp_fu_1230_ap_start),
    .ap_done(grp_intra_pingpong_wrapp_fu_1230_ap_done),
    .ap_idle(grp_intra_pingpong_wrapp_fu_1230_ap_idle),
    .ap_ready(grp_intra_pingpong_wrapp_fu_1230_ap_ready),
    .m_axi_Input_r_AWVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWVALID),
    .m_axi_Input_r_AWREADY(1'b0),
    .m_axi_Input_r_AWADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWADDR),
    .m_axi_Input_r_AWID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWID),
    .m_axi_Input_r_AWLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWLEN),
    .m_axi_Input_r_AWSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWSIZE),
    .m_axi_Input_r_AWBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWBURST),
    .m_axi_Input_r_AWLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWLOCK),
    .m_axi_Input_r_AWCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWCACHE),
    .m_axi_Input_r_AWPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWPROT),
    .m_axi_Input_r_AWQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWQOS),
    .m_axi_Input_r_AWREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWREGION),
    .m_axi_Input_r_AWUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_AWUSER),
    .m_axi_Input_r_WVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WVALID),
    .m_axi_Input_r_WREADY(1'b0),
    .m_axi_Input_r_WDATA(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WDATA),
    .m_axi_Input_r_WSTRB(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WSTRB),
    .m_axi_Input_r_WLAST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WLAST),
    .m_axi_Input_r_WID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WID),
    .m_axi_Input_r_WUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_WUSER),
    .m_axi_Input_r_ARVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARVALID),
    .m_axi_Input_r_ARREADY(DATA_BUS1_ARREADY),
    .m_axi_Input_r_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARADDR),
    .m_axi_Input_r_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARID),
    .m_axi_Input_r_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARLEN),
    .m_axi_Input_r_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARSIZE),
    .m_axi_Input_r_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARBURST),
    .m_axi_Input_r_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARLOCK),
    .m_axi_Input_r_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARCACHE),
    .m_axi_Input_r_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARPROT),
    .m_axi_Input_r_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARQOS),
    .m_axi_Input_r_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARREGION),
    .m_axi_Input_r_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARUSER),
    .m_axi_Input_r_RVALID(DATA_BUS1_RVALID),
    .m_axi_Input_r_RREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_RREADY),
    .m_axi_Input_r_RDATA(DATA_BUS1_RDATA),
    .m_axi_Input_r_RLAST(DATA_BUS1_RLAST),
    .m_axi_Input_r_RID(DATA_BUS1_RID),
    .m_axi_Input_r_RUSER(DATA_BUS1_RUSER),
    .m_axi_Input_r_RRESP(DATA_BUS1_RRESP),
    .m_axi_Input_r_BVALID(1'b0),
    .m_axi_Input_r_BREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_BREADY),
    .m_axi_Input_r_BRESP(2'd0),
    .m_axi_Input_r_BID(1'd0),
    .m_axi_Input_r_BUSER(1'd0),
    .Input_offset(Input4_reg_2746),
    .m_axi_Input1_AWVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWVALID),
    .m_axi_Input1_AWREADY(1'b0),
    .m_axi_Input1_AWADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWADDR),
    .m_axi_Input1_AWID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWID),
    .m_axi_Input1_AWLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWLEN),
    .m_axi_Input1_AWSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWSIZE),
    .m_axi_Input1_AWBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWBURST),
    .m_axi_Input1_AWLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWLOCK),
    .m_axi_Input1_AWCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWCACHE),
    .m_axi_Input1_AWPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWPROT),
    .m_axi_Input1_AWQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWQOS),
    .m_axi_Input1_AWREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWREGION),
    .m_axi_Input1_AWUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_AWUSER),
    .m_axi_Input1_WVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WVALID),
    .m_axi_Input1_WREADY(1'b0),
    .m_axi_Input1_WDATA(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WDATA),
    .m_axi_Input1_WSTRB(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WSTRB),
    .m_axi_Input1_WLAST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WLAST),
    .m_axi_Input1_WID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WID),
    .m_axi_Input1_WUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_WUSER),
    .m_axi_Input1_ARVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARVALID),
    .m_axi_Input1_ARREADY(DATA_BUS2_ARREADY),
    .m_axi_Input1_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARADDR),
    .m_axi_Input1_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARID),
    .m_axi_Input1_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARLEN),
    .m_axi_Input1_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARSIZE),
    .m_axi_Input1_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARBURST),
    .m_axi_Input1_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARLOCK),
    .m_axi_Input1_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARCACHE),
    .m_axi_Input1_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARPROT),
    .m_axi_Input1_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARQOS),
    .m_axi_Input1_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARREGION),
    .m_axi_Input1_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARUSER),
    .m_axi_Input1_RVALID(DATA_BUS2_RVALID),
    .m_axi_Input1_RREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_RREADY),
    .m_axi_Input1_RDATA(DATA_BUS2_RDATA),
    .m_axi_Input1_RLAST(DATA_BUS2_RLAST),
    .m_axi_Input1_RID(DATA_BUS2_RID),
    .m_axi_Input1_RUSER(DATA_BUS2_RUSER),
    .m_axi_Input1_RRESP(DATA_BUS2_RRESP),
    .m_axi_Input1_BVALID(1'b0),
    .m_axi_Input1_BREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_BREADY),
    .m_axi_Input1_BRESP(2'd0),
    .m_axi_Input1_BID(1'd0),
    .m_axi_Input1_BUSER(1'd0),
    .Input1_offset(Input7_reg_2621),
    .m_axi_Input2_AWVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWVALID),
    .m_axi_Input2_AWREADY(1'b0),
    .m_axi_Input2_AWADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWADDR),
    .m_axi_Input2_AWID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWID),
    .m_axi_Input2_AWLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWLEN),
    .m_axi_Input2_AWSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWSIZE),
    .m_axi_Input2_AWBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWBURST),
    .m_axi_Input2_AWLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWLOCK),
    .m_axi_Input2_AWCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWCACHE),
    .m_axi_Input2_AWPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWPROT),
    .m_axi_Input2_AWQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWQOS),
    .m_axi_Input2_AWREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWREGION),
    .m_axi_Input2_AWUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_AWUSER),
    .m_axi_Input2_WVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WVALID),
    .m_axi_Input2_WREADY(1'b0),
    .m_axi_Input2_WDATA(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WDATA),
    .m_axi_Input2_WSTRB(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WSTRB),
    .m_axi_Input2_WLAST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WLAST),
    .m_axi_Input2_WID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WID),
    .m_axi_Input2_WUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_WUSER),
    .m_axi_Input2_ARVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARVALID),
    .m_axi_Input2_ARREADY(DATA_BUS3_ARREADY),
    .m_axi_Input2_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARADDR),
    .m_axi_Input2_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARID),
    .m_axi_Input2_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARLEN),
    .m_axi_Input2_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARSIZE),
    .m_axi_Input2_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARBURST),
    .m_axi_Input2_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARLOCK),
    .m_axi_Input2_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARCACHE),
    .m_axi_Input2_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARPROT),
    .m_axi_Input2_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARQOS),
    .m_axi_Input2_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARREGION),
    .m_axi_Input2_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARUSER),
    .m_axi_Input2_RVALID(DATA_BUS3_RVALID),
    .m_axi_Input2_RREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_RREADY),
    .m_axi_Input2_RDATA(DATA_BUS3_RDATA),
    .m_axi_Input2_RLAST(DATA_BUS3_RLAST),
    .m_axi_Input2_RID(DATA_BUS3_RID),
    .m_axi_Input2_RUSER(DATA_BUS3_RUSER),
    .m_axi_Input2_RRESP(DATA_BUS3_RRESP),
    .m_axi_Input2_BVALID(1'b0),
    .m_axi_Input2_BREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_BREADY),
    .m_axi_Input2_BRESP(2'd0),
    .m_axi_Input2_BID(1'd0),
    .m_axi_Input2_BUSER(1'd0),
    .Input2_offset(Input6_reg_2616),
    .m_axi_Input3_AWVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWVALID),
    .m_axi_Input3_AWREADY(1'b0),
    .m_axi_Input3_AWADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWADDR),
    .m_axi_Input3_AWID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWID),
    .m_axi_Input3_AWLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWLEN),
    .m_axi_Input3_AWSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWSIZE),
    .m_axi_Input3_AWBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWBURST),
    .m_axi_Input3_AWLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWLOCK),
    .m_axi_Input3_AWCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWCACHE),
    .m_axi_Input3_AWPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWPROT),
    .m_axi_Input3_AWQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWQOS),
    .m_axi_Input3_AWREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWREGION),
    .m_axi_Input3_AWUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_AWUSER),
    .m_axi_Input3_WVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WVALID),
    .m_axi_Input3_WREADY(1'b0),
    .m_axi_Input3_WDATA(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WDATA),
    .m_axi_Input3_WSTRB(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WSTRB),
    .m_axi_Input3_WLAST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WLAST),
    .m_axi_Input3_WID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WID),
    .m_axi_Input3_WUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_WUSER),
    .m_axi_Input3_ARVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARVALID),
    .m_axi_Input3_ARREADY(DATA_BUS4_ARREADY),
    .m_axi_Input3_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARADDR),
    .m_axi_Input3_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARID),
    .m_axi_Input3_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARLEN),
    .m_axi_Input3_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARSIZE),
    .m_axi_Input3_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARBURST),
    .m_axi_Input3_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARLOCK),
    .m_axi_Input3_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARCACHE),
    .m_axi_Input3_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARPROT),
    .m_axi_Input3_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARQOS),
    .m_axi_Input3_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARREGION),
    .m_axi_Input3_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARUSER),
    .m_axi_Input3_RVALID(DATA_BUS4_RVALID),
    .m_axi_Input3_RREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_RREADY),
    .m_axi_Input3_RDATA(DATA_BUS4_RDATA),
    .m_axi_Input3_RLAST(DATA_BUS4_RLAST),
    .m_axi_Input3_RID(DATA_BUS4_RID),
    .m_axi_Input3_RUSER(DATA_BUS4_RUSER),
    .m_axi_Input3_RRESP(DATA_BUS4_RRESP),
    .m_axi_Input3_BVALID(1'b0),
    .m_axi_Input3_BREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_BREADY),
    .m_axi_Input3_BRESP(2'd0),
    .m_axi_Input3_BID(1'd0),
    .m_axi_Input3_BUSER(1'd0),
    .Input3_offset(Input5_reg_2611),
    .m_axi_Weight_AWVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWVALID),
    .m_axi_Weight_AWREADY(1'b0),
    .m_axi_Weight_AWADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWADDR),
    .m_axi_Weight_AWID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWID),
    .m_axi_Weight_AWLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWLEN),
    .m_axi_Weight_AWSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWSIZE),
    .m_axi_Weight_AWBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWBURST),
    .m_axi_Weight_AWLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWLOCK),
    .m_axi_Weight_AWCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWCACHE),
    .m_axi_Weight_AWPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWPROT),
    .m_axi_Weight_AWQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWQOS),
    .m_axi_Weight_AWREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWREGION),
    .m_axi_Weight_AWUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_AWUSER),
    .m_axi_Weight_WVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WVALID),
    .m_axi_Weight_WREADY(1'b0),
    .m_axi_Weight_WDATA(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WDATA),
    .m_axi_Weight_WSTRB(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WSTRB),
    .m_axi_Weight_WLAST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WLAST),
    .m_axi_Weight_WID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WID),
    .m_axi_Weight_WUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_WUSER),
    .m_axi_Weight_ARVALID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARVALID),
    .m_axi_Weight_ARREADY(DATA_BUS5_ARREADY),
    .m_axi_Weight_ARADDR(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARADDR),
    .m_axi_Weight_ARID(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARID),
    .m_axi_Weight_ARLEN(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARLEN),
    .m_axi_Weight_ARSIZE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARSIZE),
    .m_axi_Weight_ARBURST(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARBURST),
    .m_axi_Weight_ARLOCK(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARLOCK),
    .m_axi_Weight_ARCACHE(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARCACHE),
    .m_axi_Weight_ARPROT(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARPROT),
    .m_axi_Weight_ARQOS(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARQOS),
    .m_axi_Weight_ARREGION(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARREGION),
    .m_axi_Weight_ARUSER(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARUSER),
    .m_axi_Weight_RVALID(DATA_BUS5_RVALID),
    .m_axi_Weight_RREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_RREADY),
    .m_axi_Weight_RDATA(DATA_BUS5_RDATA),
    .m_axi_Weight_RLAST(DATA_BUS5_RLAST),
    .m_axi_Weight_RID(DATA_BUS5_RID),
    .m_axi_Weight_RUSER(DATA_BUS5_RUSER),
    .m_axi_Weight_RRESP(DATA_BUS5_RRESP),
    .m_axi_Weight_BVALID(1'b0),
    .m_axi_Weight_BREADY(grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_BREADY),
    .m_axi_Weight_BRESP(2'd0),
    .m_axi_Weight_BID(1'd0),
    .m_axi_Weight_BUSER(1'd0),
    .Weight_offset(Weight1_reg_2736),
    .output_buffer_0_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address0),
    .output_buffer_0_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce0),
    .output_buffer_0_we0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we0),
    .output_buffer_0_d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d0),
    .output_buffer_0_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_q0),
    .output_buffer_0_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address1),
    .output_buffer_0_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce1),
    .output_buffer_0_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we1),
    .output_buffer_0_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_d1),
    .output_buffer_1_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address0),
    .output_buffer_1_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce0),
    .output_buffer_1_we0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we0),
    .output_buffer_1_d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d0),
    .output_buffer_1_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_q0),
    .output_buffer_1_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address1),
    .output_buffer_1_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce1),
    .output_buffer_1_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we1),
    .output_buffer_1_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_d1),
    .output_buffer_2_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address0),
    .output_buffer_2_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce0),
    .output_buffer_2_we0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we0),
    .output_buffer_2_d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d0),
    .output_buffer_2_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_q0),
    .output_buffer_2_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address1),
    .output_buffer_2_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce1),
    .output_buffer_2_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we1),
    .output_buffer_2_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_d1),
    .output_buffer_3_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address0),
    .output_buffer_3_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce0),
    .output_buffer_3_we0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we0),
    .output_buffer_3_d0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d0),
    .output_buffer_3_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_q0),
    .output_buffer_3_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address1),
    .output_buffer_3_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce1),
    .output_buffer_3_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we1),
    .output_buffer_3_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_d1),
    .output_buffer_4_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address0),
    .output_buffer_4_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce0),
    .output_buffer_4_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_q0),
    .output_buffer_4_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address1),
    .output_buffer_4_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce1),
    .output_buffer_4_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_we1),
    .output_buffer_4_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_d1),
    .output_buffer_5_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address0),
    .output_buffer_5_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce0),
    .output_buffer_5_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_q0),
    .output_buffer_5_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address1),
    .output_buffer_5_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce1),
    .output_buffer_5_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_we1),
    .output_buffer_5_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_d1),
    .output_buffer_6_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address0),
    .output_buffer_6_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce0),
    .output_buffer_6_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_q0),
    .output_buffer_6_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address1),
    .output_buffer_6_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce1),
    .output_buffer_6_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_we1),
    .output_buffer_6_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_d1),
    .output_buffer_7_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address0),
    .output_buffer_7_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce0),
    .output_buffer_7_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_q0),
    .output_buffer_7_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address1),
    .output_buffer_7_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce1),
    .output_buffer_7_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_we1),
    .output_buffer_7_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_d1),
    .output_buffer_8_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address0),
    .output_buffer_8_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce0),
    .output_buffer_8_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_q0),
    .output_buffer_8_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address1),
    .output_buffer_8_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce1),
    .output_buffer_8_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_we1),
    .output_buffer_8_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_d1),
    .output_buffer_9_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address0),
    .output_buffer_9_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce0),
    .output_buffer_9_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_q0),
    .output_buffer_9_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address1),
    .output_buffer_9_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce1),
    .output_buffer_9_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_we1),
    .output_buffer_9_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_d1),
    .output_buffer_10_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address0),
    .output_buffer_10_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce0),
    .output_buffer_10_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_q0),
    .output_buffer_10_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address1),
    .output_buffer_10_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce1),
    .output_buffer_10_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_we1),
    .output_buffer_10_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_d1),
    .output_buffer_11_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address0),
    .output_buffer_11_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce0),
    .output_buffer_11_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_q0),
    .output_buffer_11_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address1),
    .output_buffer_11_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce1),
    .output_buffer_11_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_we1),
    .output_buffer_11_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_d1),
    .output_buffer_12_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address0),
    .output_buffer_12_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce0),
    .output_buffer_12_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_q0),
    .output_buffer_12_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address1),
    .output_buffer_12_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce1),
    .output_buffer_12_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_we1),
    .output_buffer_12_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_d1),
    .output_buffer_13_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address0),
    .output_buffer_13_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce0),
    .output_buffer_13_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_q0),
    .output_buffer_13_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address1),
    .output_buffer_13_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce1),
    .output_buffer_13_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_we1),
    .output_buffer_13_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_d1),
    .output_buffer_14_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address0),
    .output_buffer_14_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce0),
    .output_buffer_14_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_q0),
    .output_buffer_14_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address1),
    .output_buffer_14_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce1),
    .output_buffer_14_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_we1),
    .output_buffer_14_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_d1),
    .output_buffer_15_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address0),
    .output_buffer_15_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce0),
    .output_buffer_15_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_q0),
    .output_buffer_15_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address1),
    .output_buffer_15_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce1),
    .output_buffer_15_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_we1),
    .output_buffer_15_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_d1),
    .output_buffer_16_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address0),
    .output_buffer_16_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce0),
    .output_buffer_16_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_q0),
    .output_buffer_16_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address1),
    .output_buffer_16_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce1),
    .output_buffer_16_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_we1),
    .output_buffer_16_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_d1),
    .output_buffer_17_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address0),
    .output_buffer_17_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce0),
    .output_buffer_17_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_q0),
    .output_buffer_17_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address1),
    .output_buffer_17_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce1),
    .output_buffer_17_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_we1),
    .output_buffer_17_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_d1),
    .output_buffer_18_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address0),
    .output_buffer_18_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce0),
    .output_buffer_18_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_q0),
    .output_buffer_18_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address1),
    .output_buffer_18_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce1),
    .output_buffer_18_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_we1),
    .output_buffer_18_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_d1),
    .output_buffer_19_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address0),
    .output_buffer_19_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce0),
    .output_buffer_19_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_q0),
    .output_buffer_19_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address1),
    .output_buffer_19_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce1),
    .output_buffer_19_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_we1),
    .output_buffer_19_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_d1),
    .output_buffer_20_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address0),
    .output_buffer_20_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce0),
    .output_buffer_20_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_q0),
    .output_buffer_20_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address1),
    .output_buffer_20_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce1),
    .output_buffer_20_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_we1),
    .output_buffer_20_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_d1),
    .output_buffer_21_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address0),
    .output_buffer_21_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce0),
    .output_buffer_21_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_q0),
    .output_buffer_21_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address1),
    .output_buffer_21_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce1),
    .output_buffer_21_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_we1),
    .output_buffer_21_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_d1),
    .output_buffer_22_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address0),
    .output_buffer_22_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce0),
    .output_buffer_22_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_q0),
    .output_buffer_22_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address1),
    .output_buffer_22_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce1),
    .output_buffer_22_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_we1),
    .output_buffer_22_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_d1),
    .output_buffer_23_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address0),
    .output_buffer_23_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce0),
    .output_buffer_23_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_q0),
    .output_buffer_23_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address1),
    .output_buffer_23_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce1),
    .output_buffer_23_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_we1),
    .output_buffer_23_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_d1),
    .output_buffer_24_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address0),
    .output_buffer_24_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce0),
    .output_buffer_24_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_q0),
    .output_buffer_24_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address1),
    .output_buffer_24_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce1),
    .output_buffer_24_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_we1),
    .output_buffer_24_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_d1),
    .output_buffer_25_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address0),
    .output_buffer_25_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce0),
    .output_buffer_25_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_q0),
    .output_buffer_25_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address1),
    .output_buffer_25_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce1),
    .output_buffer_25_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_we1),
    .output_buffer_25_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_d1),
    .output_buffer_26_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address0),
    .output_buffer_26_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce0),
    .output_buffer_26_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_q0),
    .output_buffer_26_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address1),
    .output_buffer_26_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce1),
    .output_buffer_26_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_we1),
    .output_buffer_26_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_d1),
    .output_buffer_27_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address0),
    .output_buffer_27_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce0),
    .output_buffer_27_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_q0),
    .output_buffer_27_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address1),
    .output_buffer_27_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce1),
    .output_buffer_27_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_we1),
    .output_buffer_27_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_d1),
    .output_buffer_28_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address0),
    .output_buffer_28_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce0),
    .output_buffer_28_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_q0),
    .output_buffer_28_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address1),
    .output_buffer_28_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce1),
    .output_buffer_28_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_we1),
    .output_buffer_28_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_d1),
    .output_buffer_29_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address0),
    .output_buffer_29_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce0),
    .output_buffer_29_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_q0),
    .output_buffer_29_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address1),
    .output_buffer_29_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce1),
    .output_buffer_29_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_we1),
    .output_buffer_29_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_d1),
    .output_buffer_30_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address0),
    .output_buffer_30_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce0),
    .output_buffer_30_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_q0),
    .output_buffer_30_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address1),
    .output_buffer_30_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce1),
    .output_buffer_30_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_we1),
    .output_buffer_30_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_d1),
    .output_buffer_31_address0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address0),
    .output_buffer_31_ce0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce0),
    .output_buffer_31_q0(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_q0),
    .output_buffer_31_address1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address1),
    .output_buffer_31_ce1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce1),
    .output_buffer_31_we1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_we1),
    .output_buffer_31_d1(grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_d1),
    .beta_buffer_address0(grp_intra_pingpong_wrapp_fu_1230_beta_buffer_address0),
    .beta_buffer_ce0(grp_intra_pingpong_wrapp_fu_1230_beta_buffer_ce0),
    .beta_buffer_q0(beta_buffer_q0),
    .InFM_num(InFM_num_read_reg_2726),
    .Input_w(Input_w_read_reg_2705),
    .Input_h(Input_h_read_reg_2700),
    .Kernel_size(Kernel_size_read_reg_2715),
    .Kernel_stride(Kernel_stride_read_reg_2710),
    .TMP_R(TMP_R_reg_1147),
    .TMP_C(TMP_C_reg_1170),
    .TMP_M(TMP_M_reg_1193),
    .TM_MIN(TM_MIN_reg_2872),
    .TR_MIN(TR_MIN_reg_2840),
    .TC_MIN(TC_MIN_reg_2853),
    .TN(TN_read_reg_2666),
    .TRow(TRow_reg_2761),
    .TCol(TCol_reg_2766),
    .Padding(Padding_read_reg_2684),
    .IHxIW(r_V_24_reg_2771),
    .nLoops(nLoops_read_reg_2642),
    .LayerType(LayerType_read_reg_2626),
    .TM(TM_read_reg_2671),
    .p_read(grp_intra_pingpong_wrapp_fu_1230_p_read),
    .p_read1(grp_intra_pingpong_wrapp_fu_1230_p_read1),
    .pingpongx_offset(grp_intra_pingpong_wrapp_fu_1230_pingpongx_offset),
    .input_flag(grp_intra_pingpong_wrapp_fu_1230_input_flag),
    .process_flag(grp_intra_pingpong_wrapp_fu_1230_process_flag),
    .InterSubBeta(InterSubBeta_reg_2786),
    .WeightAddInputSubInter(WeightAddInputSubInt_reg_2791),
    .trow_loops_V(trow_loops_6b_V_reg_2751),
    .ap_return_0(grp_intra_pingpong_wrapp_fu_1230_ap_return_0),
    .ap_return_1(grp_intra_pingpong_wrapp_fu_1230_ap_return_1)
);

write_back_output_re grp_write_back_output_re_fu_2003(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_write_back_output_re_fu_2003_ap_start),
    .ap_done(grp_write_back_output_re_fu_2003_ap_done),
    .ap_idle(grp_write_back_output_re_fu_2003_ap_idle),
    .ap_ready(grp_write_back_output_re_fu_2003_ap_ready),
    .output_buffer_0_address0(grp_write_back_output_re_fu_2003_output_buffer_0_address0),
    .output_buffer_0_ce0(grp_write_back_output_re_fu_2003_output_buffer_0_ce0),
    .output_buffer_0_q0(grp_write_back_output_re_fu_2003_output_buffer_0_q0),
    .output_buffer_1_address0(grp_write_back_output_re_fu_2003_output_buffer_1_address0),
    .output_buffer_1_ce0(grp_write_back_output_re_fu_2003_output_buffer_1_ce0),
    .output_buffer_1_q0(grp_write_back_output_re_fu_2003_output_buffer_1_q0),
    .output_buffer_2_address0(grp_write_back_output_re_fu_2003_output_buffer_2_address0),
    .output_buffer_2_ce0(grp_write_back_output_re_fu_2003_output_buffer_2_ce0),
    .output_buffer_2_q0(grp_write_back_output_re_fu_2003_output_buffer_2_q0),
    .output_buffer_3_address0(grp_write_back_output_re_fu_2003_output_buffer_3_address0),
    .output_buffer_3_ce0(grp_write_back_output_re_fu_2003_output_buffer_3_ce0),
    .output_buffer_3_q0(grp_write_back_output_re_fu_2003_output_buffer_3_q0),
    .output_buffer_4_address0(grp_write_back_output_re_fu_2003_output_buffer_4_address0),
    .output_buffer_4_ce0(grp_write_back_output_re_fu_2003_output_buffer_4_ce0),
    .output_buffer_4_q0(grp_write_back_output_re_fu_2003_output_buffer_4_q0),
    .output_buffer_5_address0(grp_write_back_output_re_fu_2003_output_buffer_5_address0),
    .output_buffer_5_ce0(grp_write_back_output_re_fu_2003_output_buffer_5_ce0),
    .output_buffer_5_q0(grp_write_back_output_re_fu_2003_output_buffer_5_q0),
    .output_buffer_6_address0(grp_write_back_output_re_fu_2003_output_buffer_6_address0),
    .output_buffer_6_ce0(grp_write_back_output_re_fu_2003_output_buffer_6_ce0),
    .output_buffer_6_q0(grp_write_back_output_re_fu_2003_output_buffer_6_q0),
    .output_buffer_7_address0(grp_write_back_output_re_fu_2003_output_buffer_7_address0),
    .output_buffer_7_ce0(grp_write_back_output_re_fu_2003_output_buffer_7_ce0),
    .output_buffer_7_q0(grp_write_back_output_re_fu_2003_output_buffer_7_q0),
    .output_buffer_8_address0(grp_write_back_output_re_fu_2003_output_buffer_8_address0),
    .output_buffer_8_ce0(grp_write_back_output_re_fu_2003_output_buffer_8_ce0),
    .output_buffer_8_q0(grp_write_back_output_re_fu_2003_output_buffer_8_q0),
    .output_buffer_9_address0(grp_write_back_output_re_fu_2003_output_buffer_9_address0),
    .output_buffer_9_ce0(grp_write_back_output_re_fu_2003_output_buffer_9_ce0),
    .output_buffer_9_q0(grp_write_back_output_re_fu_2003_output_buffer_9_q0),
    .output_buffer_10_address0(grp_write_back_output_re_fu_2003_output_buffer_10_address0),
    .output_buffer_10_ce0(grp_write_back_output_re_fu_2003_output_buffer_10_ce0),
    .output_buffer_10_q0(grp_write_back_output_re_fu_2003_output_buffer_10_q0),
    .output_buffer_11_address0(grp_write_back_output_re_fu_2003_output_buffer_11_address0),
    .output_buffer_11_ce0(grp_write_back_output_re_fu_2003_output_buffer_11_ce0),
    .output_buffer_11_q0(grp_write_back_output_re_fu_2003_output_buffer_11_q0),
    .output_buffer_12_address0(grp_write_back_output_re_fu_2003_output_buffer_12_address0),
    .output_buffer_12_ce0(grp_write_back_output_re_fu_2003_output_buffer_12_ce0),
    .output_buffer_12_q0(grp_write_back_output_re_fu_2003_output_buffer_12_q0),
    .output_buffer_13_address0(grp_write_back_output_re_fu_2003_output_buffer_13_address0),
    .output_buffer_13_ce0(grp_write_back_output_re_fu_2003_output_buffer_13_ce0),
    .output_buffer_13_q0(grp_write_back_output_re_fu_2003_output_buffer_13_q0),
    .output_buffer_14_address0(grp_write_back_output_re_fu_2003_output_buffer_14_address0),
    .output_buffer_14_ce0(grp_write_back_output_re_fu_2003_output_buffer_14_ce0),
    .output_buffer_14_q0(grp_write_back_output_re_fu_2003_output_buffer_14_q0),
    .output_buffer_15_address0(grp_write_back_output_re_fu_2003_output_buffer_15_address0),
    .output_buffer_15_ce0(grp_write_back_output_re_fu_2003_output_buffer_15_ce0),
    .output_buffer_15_q0(grp_write_back_output_re_fu_2003_output_buffer_15_q0),
    .output_buffer_16_address0(grp_write_back_output_re_fu_2003_output_buffer_16_address0),
    .output_buffer_16_ce0(grp_write_back_output_re_fu_2003_output_buffer_16_ce0),
    .output_buffer_16_q0(grp_write_back_output_re_fu_2003_output_buffer_16_q0),
    .output_buffer_17_address0(grp_write_back_output_re_fu_2003_output_buffer_17_address0),
    .output_buffer_17_ce0(grp_write_back_output_re_fu_2003_output_buffer_17_ce0),
    .output_buffer_17_q0(grp_write_back_output_re_fu_2003_output_buffer_17_q0),
    .output_buffer_18_address0(grp_write_back_output_re_fu_2003_output_buffer_18_address0),
    .output_buffer_18_ce0(grp_write_back_output_re_fu_2003_output_buffer_18_ce0),
    .output_buffer_18_q0(grp_write_back_output_re_fu_2003_output_buffer_18_q0),
    .output_buffer_19_address0(grp_write_back_output_re_fu_2003_output_buffer_19_address0),
    .output_buffer_19_ce0(grp_write_back_output_re_fu_2003_output_buffer_19_ce0),
    .output_buffer_19_q0(grp_write_back_output_re_fu_2003_output_buffer_19_q0),
    .output_buffer_20_address0(grp_write_back_output_re_fu_2003_output_buffer_20_address0),
    .output_buffer_20_ce0(grp_write_back_output_re_fu_2003_output_buffer_20_ce0),
    .output_buffer_20_q0(grp_write_back_output_re_fu_2003_output_buffer_20_q0),
    .output_buffer_21_address0(grp_write_back_output_re_fu_2003_output_buffer_21_address0),
    .output_buffer_21_ce0(grp_write_back_output_re_fu_2003_output_buffer_21_ce0),
    .output_buffer_21_q0(grp_write_back_output_re_fu_2003_output_buffer_21_q0),
    .output_buffer_22_address0(grp_write_back_output_re_fu_2003_output_buffer_22_address0),
    .output_buffer_22_ce0(grp_write_back_output_re_fu_2003_output_buffer_22_ce0),
    .output_buffer_22_q0(grp_write_back_output_re_fu_2003_output_buffer_22_q0),
    .output_buffer_23_address0(grp_write_back_output_re_fu_2003_output_buffer_23_address0),
    .output_buffer_23_ce0(grp_write_back_output_re_fu_2003_output_buffer_23_ce0),
    .output_buffer_23_q0(grp_write_back_output_re_fu_2003_output_buffer_23_q0),
    .output_buffer_24_address0(grp_write_back_output_re_fu_2003_output_buffer_24_address0),
    .output_buffer_24_ce0(grp_write_back_output_re_fu_2003_output_buffer_24_ce0),
    .output_buffer_24_q0(grp_write_back_output_re_fu_2003_output_buffer_24_q0),
    .output_buffer_25_address0(grp_write_back_output_re_fu_2003_output_buffer_25_address0),
    .output_buffer_25_ce0(grp_write_back_output_re_fu_2003_output_buffer_25_ce0),
    .output_buffer_25_q0(grp_write_back_output_re_fu_2003_output_buffer_25_q0),
    .output_buffer_26_address0(grp_write_back_output_re_fu_2003_output_buffer_26_address0),
    .output_buffer_26_ce0(grp_write_back_output_re_fu_2003_output_buffer_26_ce0),
    .output_buffer_26_q0(grp_write_back_output_re_fu_2003_output_buffer_26_q0),
    .output_buffer_27_address0(grp_write_back_output_re_fu_2003_output_buffer_27_address0),
    .output_buffer_27_ce0(grp_write_back_output_re_fu_2003_output_buffer_27_ce0),
    .output_buffer_27_q0(grp_write_back_output_re_fu_2003_output_buffer_27_q0),
    .output_buffer_28_address0(grp_write_back_output_re_fu_2003_output_buffer_28_address0),
    .output_buffer_28_ce0(grp_write_back_output_re_fu_2003_output_buffer_28_ce0),
    .output_buffer_28_q0(grp_write_back_output_re_fu_2003_output_buffer_28_q0),
    .output_buffer_29_address0(grp_write_back_output_re_fu_2003_output_buffer_29_address0),
    .output_buffer_29_ce0(grp_write_back_output_re_fu_2003_output_buffer_29_ce0),
    .output_buffer_29_q0(grp_write_back_output_re_fu_2003_output_buffer_29_q0),
    .output_buffer_30_address0(grp_write_back_output_re_fu_2003_output_buffer_30_address0),
    .output_buffer_30_ce0(grp_write_back_output_re_fu_2003_output_buffer_30_ce0),
    .output_buffer_30_q0(grp_write_back_output_re_fu_2003_output_buffer_30_q0),
    .output_buffer_31_address0(grp_write_back_output_re_fu_2003_output_buffer_31_address0),
    .output_buffer_31_ce0(grp_write_back_output_re_fu_2003_output_buffer_31_ce0),
    .output_buffer_31_q0(grp_write_back_output_re_fu_2003_output_buffer_31_q0),
    .m_axi_Output_r_AWVALID(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWVALID),
    .m_axi_Output_r_AWREADY(DATA_BUS1_AWREADY),
    .m_axi_Output_r_AWADDR(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWADDR),
    .m_axi_Output_r_AWID(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWID),
    .m_axi_Output_r_AWLEN(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWLEN),
    .m_axi_Output_r_AWSIZE(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWSIZE),
    .m_axi_Output_r_AWBURST(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWBURST),
    .m_axi_Output_r_AWLOCK(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWLOCK),
    .m_axi_Output_r_AWCACHE(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWCACHE),
    .m_axi_Output_r_AWPROT(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWPROT),
    .m_axi_Output_r_AWQOS(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWQOS),
    .m_axi_Output_r_AWREGION(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWREGION),
    .m_axi_Output_r_AWUSER(grp_write_back_output_re_fu_2003_m_axi_Output_r_AWUSER),
    .m_axi_Output_r_WVALID(grp_write_back_output_re_fu_2003_m_axi_Output_r_WVALID),
    .m_axi_Output_r_WREADY(DATA_BUS1_WREADY),
    .m_axi_Output_r_WDATA(grp_write_back_output_re_fu_2003_m_axi_Output_r_WDATA),
    .m_axi_Output_r_WSTRB(grp_write_back_output_re_fu_2003_m_axi_Output_r_WSTRB),
    .m_axi_Output_r_WLAST(grp_write_back_output_re_fu_2003_m_axi_Output_r_WLAST),
    .m_axi_Output_r_WID(grp_write_back_output_re_fu_2003_m_axi_Output_r_WID),
    .m_axi_Output_r_WUSER(grp_write_back_output_re_fu_2003_m_axi_Output_r_WUSER),
    .m_axi_Output_r_ARVALID(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARVALID),
    .m_axi_Output_r_ARREADY(1'b0),
    .m_axi_Output_r_ARADDR(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARADDR),
    .m_axi_Output_r_ARID(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARID),
    .m_axi_Output_r_ARLEN(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARLEN),
    .m_axi_Output_r_ARSIZE(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARSIZE),
    .m_axi_Output_r_ARBURST(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARBURST),
    .m_axi_Output_r_ARLOCK(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARLOCK),
    .m_axi_Output_r_ARCACHE(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARCACHE),
    .m_axi_Output_r_ARPROT(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARPROT),
    .m_axi_Output_r_ARQOS(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARQOS),
    .m_axi_Output_r_ARREGION(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARREGION),
    .m_axi_Output_r_ARUSER(grp_write_back_output_re_fu_2003_m_axi_Output_r_ARUSER),
    .m_axi_Output_r_RVALID(1'b0),
    .m_axi_Output_r_RREADY(grp_write_back_output_re_fu_2003_m_axi_Output_r_RREADY),
    .m_axi_Output_r_RDATA(32'd0),
    .m_axi_Output_r_RLAST(1'b0),
    .m_axi_Output_r_RID(1'd0),
    .m_axi_Output_r_RUSER(1'd0),
    .m_axi_Output_r_RRESP(2'd0),
    .m_axi_Output_r_BVALID(DATA_BUS1_BVALID),
    .m_axi_Output_r_BREADY(grp_write_back_output_re_fu_2003_m_axi_Output_r_BREADY),
    .m_axi_Output_r_BRESP(DATA_BUS1_BRESP),
    .m_axi_Output_r_BID(DATA_BUS1_BID),
    .m_axi_Output_r_BUSER(DATA_BUS1_BUSER),
    .Output_offset(Output3_reg_2741),
    .m_axi_Output1_AWVALID(grp_write_back_output_re_fu_2003_m_axi_Output1_AWVALID),
    .m_axi_Output1_AWREADY(DATA_BUS2_AWREADY),
    .m_axi_Output1_AWADDR(grp_write_back_output_re_fu_2003_m_axi_Output1_AWADDR),
    .m_axi_Output1_AWID(grp_write_back_output_re_fu_2003_m_axi_Output1_AWID),
    .m_axi_Output1_AWLEN(grp_write_back_output_re_fu_2003_m_axi_Output1_AWLEN),
    .m_axi_Output1_AWSIZE(grp_write_back_output_re_fu_2003_m_axi_Output1_AWSIZE),
    .m_axi_Output1_AWBURST(grp_write_back_output_re_fu_2003_m_axi_Output1_AWBURST),
    .m_axi_Output1_AWLOCK(grp_write_back_output_re_fu_2003_m_axi_Output1_AWLOCK),
    .m_axi_Output1_AWCACHE(grp_write_back_output_re_fu_2003_m_axi_Output1_AWCACHE),
    .m_axi_Output1_AWPROT(grp_write_back_output_re_fu_2003_m_axi_Output1_AWPROT),
    .m_axi_Output1_AWQOS(grp_write_back_output_re_fu_2003_m_axi_Output1_AWQOS),
    .m_axi_Output1_AWREGION(grp_write_back_output_re_fu_2003_m_axi_Output1_AWREGION),
    .m_axi_Output1_AWUSER(grp_write_back_output_re_fu_2003_m_axi_Output1_AWUSER),
    .m_axi_Output1_WVALID(grp_write_back_output_re_fu_2003_m_axi_Output1_WVALID),
    .m_axi_Output1_WREADY(DATA_BUS2_WREADY),
    .m_axi_Output1_WDATA(grp_write_back_output_re_fu_2003_m_axi_Output1_WDATA),
    .m_axi_Output1_WSTRB(grp_write_back_output_re_fu_2003_m_axi_Output1_WSTRB),
    .m_axi_Output1_WLAST(grp_write_back_output_re_fu_2003_m_axi_Output1_WLAST),
    .m_axi_Output1_WID(grp_write_back_output_re_fu_2003_m_axi_Output1_WID),
    .m_axi_Output1_WUSER(grp_write_back_output_re_fu_2003_m_axi_Output1_WUSER),
    .m_axi_Output1_ARVALID(grp_write_back_output_re_fu_2003_m_axi_Output1_ARVALID),
    .m_axi_Output1_ARREADY(1'b0),
    .m_axi_Output1_ARADDR(grp_write_back_output_re_fu_2003_m_axi_Output1_ARADDR),
    .m_axi_Output1_ARID(grp_write_back_output_re_fu_2003_m_axi_Output1_ARID),
    .m_axi_Output1_ARLEN(grp_write_back_output_re_fu_2003_m_axi_Output1_ARLEN),
    .m_axi_Output1_ARSIZE(grp_write_back_output_re_fu_2003_m_axi_Output1_ARSIZE),
    .m_axi_Output1_ARBURST(grp_write_back_output_re_fu_2003_m_axi_Output1_ARBURST),
    .m_axi_Output1_ARLOCK(grp_write_back_output_re_fu_2003_m_axi_Output1_ARLOCK),
    .m_axi_Output1_ARCACHE(grp_write_back_output_re_fu_2003_m_axi_Output1_ARCACHE),
    .m_axi_Output1_ARPROT(grp_write_back_output_re_fu_2003_m_axi_Output1_ARPROT),
    .m_axi_Output1_ARQOS(grp_write_back_output_re_fu_2003_m_axi_Output1_ARQOS),
    .m_axi_Output1_ARREGION(grp_write_back_output_re_fu_2003_m_axi_Output1_ARREGION),
    .m_axi_Output1_ARUSER(grp_write_back_output_re_fu_2003_m_axi_Output1_ARUSER),
    .m_axi_Output1_RVALID(1'b0),
    .m_axi_Output1_RREADY(grp_write_back_output_re_fu_2003_m_axi_Output1_RREADY),
    .m_axi_Output1_RDATA(32'd0),
    .m_axi_Output1_RLAST(1'b0),
    .m_axi_Output1_RID(1'd0),
    .m_axi_Output1_RUSER(1'd0),
    .m_axi_Output1_RRESP(2'd0),
    .m_axi_Output1_BVALID(DATA_BUS2_BVALID),
    .m_axi_Output1_BREADY(grp_write_back_output_re_fu_2003_m_axi_Output1_BREADY),
    .m_axi_Output1_BRESP(DATA_BUS2_BRESP),
    .m_axi_Output1_BID(DATA_BUS2_BID),
    .m_axi_Output1_BUSER(DATA_BUS2_BUSER),
    .Output1_offset(Output2_reg_2606),
    .r(TMP_R_reg_1147),
    .c(TMP_C_reg_1170),
    .m(grp_write_back_output_re_fu_2003_m),
    .Output_w(output_w_read_reg_2694),
    .TM_MIN(grp_write_back_output_re_fu_2003_TM_MIN),
    .TC_MIN(TC_MIN_reg_2853),
    .OHxOW(r_V_reg_2756),
    .write_flag(grp_write_back_output_re_fu_2003_write_flag),
    .IsNL(grp_write_back_output_re_fu_2003_IsNL),
    .InterSubOutput(InterSubOutput_reg_2796),
    .LayerType(LayerType_read_reg_2626)
);

copy_beta grp_copy_beta_fu_2132(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_copy_beta_fu_2132_ap_start),
    .ap_done(grp_copy_beta_fu_2132_ap_done),
    .ap_idle(grp_copy_beta_fu_2132_ap_idle),
    .ap_ready(grp_copy_beta_fu_2132_ap_ready),
    .m_axi_Beta_AWVALID(grp_copy_beta_fu_2132_m_axi_Beta_AWVALID),
    .m_axi_Beta_AWREADY(1'b0),
    .m_axi_Beta_AWADDR(grp_copy_beta_fu_2132_m_axi_Beta_AWADDR),
    .m_axi_Beta_AWID(grp_copy_beta_fu_2132_m_axi_Beta_AWID),
    .m_axi_Beta_AWLEN(grp_copy_beta_fu_2132_m_axi_Beta_AWLEN),
    .m_axi_Beta_AWSIZE(grp_copy_beta_fu_2132_m_axi_Beta_AWSIZE),
    .m_axi_Beta_AWBURST(grp_copy_beta_fu_2132_m_axi_Beta_AWBURST),
    .m_axi_Beta_AWLOCK(grp_copy_beta_fu_2132_m_axi_Beta_AWLOCK),
    .m_axi_Beta_AWCACHE(grp_copy_beta_fu_2132_m_axi_Beta_AWCACHE),
    .m_axi_Beta_AWPROT(grp_copy_beta_fu_2132_m_axi_Beta_AWPROT),
    .m_axi_Beta_AWQOS(grp_copy_beta_fu_2132_m_axi_Beta_AWQOS),
    .m_axi_Beta_AWREGION(grp_copy_beta_fu_2132_m_axi_Beta_AWREGION),
    .m_axi_Beta_AWUSER(grp_copy_beta_fu_2132_m_axi_Beta_AWUSER),
    .m_axi_Beta_WVALID(grp_copy_beta_fu_2132_m_axi_Beta_WVALID),
    .m_axi_Beta_WREADY(1'b0),
    .m_axi_Beta_WDATA(grp_copy_beta_fu_2132_m_axi_Beta_WDATA),
    .m_axi_Beta_WSTRB(grp_copy_beta_fu_2132_m_axi_Beta_WSTRB),
    .m_axi_Beta_WLAST(grp_copy_beta_fu_2132_m_axi_Beta_WLAST),
    .m_axi_Beta_WID(grp_copy_beta_fu_2132_m_axi_Beta_WID),
    .m_axi_Beta_WUSER(grp_copy_beta_fu_2132_m_axi_Beta_WUSER),
    .m_axi_Beta_ARVALID(grp_copy_beta_fu_2132_m_axi_Beta_ARVALID),
    .m_axi_Beta_ARREADY(DATA_BUS5_ARREADY),
    .m_axi_Beta_ARADDR(grp_copy_beta_fu_2132_m_axi_Beta_ARADDR),
    .m_axi_Beta_ARID(grp_copy_beta_fu_2132_m_axi_Beta_ARID),
    .m_axi_Beta_ARLEN(grp_copy_beta_fu_2132_m_axi_Beta_ARLEN),
    .m_axi_Beta_ARSIZE(grp_copy_beta_fu_2132_m_axi_Beta_ARSIZE),
    .m_axi_Beta_ARBURST(grp_copy_beta_fu_2132_m_axi_Beta_ARBURST),
    .m_axi_Beta_ARLOCK(grp_copy_beta_fu_2132_m_axi_Beta_ARLOCK),
    .m_axi_Beta_ARCACHE(grp_copy_beta_fu_2132_m_axi_Beta_ARCACHE),
    .m_axi_Beta_ARPROT(grp_copy_beta_fu_2132_m_axi_Beta_ARPROT),
    .m_axi_Beta_ARQOS(grp_copy_beta_fu_2132_m_axi_Beta_ARQOS),
    .m_axi_Beta_ARREGION(grp_copy_beta_fu_2132_m_axi_Beta_ARREGION),
    .m_axi_Beta_ARUSER(grp_copy_beta_fu_2132_m_axi_Beta_ARUSER),
    .m_axi_Beta_RVALID(DATA_BUS5_RVALID),
    .m_axi_Beta_RREADY(grp_copy_beta_fu_2132_m_axi_Beta_RREADY),
    .m_axi_Beta_RDATA(DATA_BUS5_RDATA),
    .m_axi_Beta_RLAST(DATA_BUS5_RLAST),
    .m_axi_Beta_RID(DATA_BUS5_RID),
    .m_axi_Beta_RUSER(DATA_BUS5_RUSER),
    .m_axi_Beta_RRESP(DATA_BUS5_RRESP),
    .m_axi_Beta_BVALID(1'b0),
    .m_axi_Beta_BREADY(grp_copy_beta_fu_2132_m_axi_Beta_BREADY),
    .m_axi_Beta_BRESP(2'd0),
    .m_axi_Beta_BID(1'd0),
    .m_axi_Beta_BUSER(1'd0),
    .Beta_offset(Beta1_reg_2731),
    .OFM_NUM(OutFM_num_read_reg_2720),
    .beta_buffer_address0(grp_copy_beta_fu_2132_beta_buffer_address0),
    .beta_buffer_ce0(grp_copy_beta_fu_2132_beta_buffer_ce0),
    .beta_buffer_we0(grp_copy_beta_fu_2132_beta_buffer_we0),
    .beta_buffer_d0(grp_copy_beta_fu_2132_beta_buffer_d0),
    .beta_buffer_address1(grp_copy_beta_fu_2132_beta_buffer_address1),
    .beta_buffer_ce1(grp_copy_beta_fu_2132_beta_buffer_ce1),
    .beta_buffer_we1(grp_copy_beta_fu_2132_beta_buffer_we1),
    .beta_buffer_d1(grp_copy_beta_fu_2132_beta_buffer_d1)
);

YOLO2_FPGA_ama_adfW5 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
YOLO2_FPGA_ama_adfW5_U1129(
    .din0(grp_fu_2580_p0),
    .din1(grp_fu_2580_p1),
    .din2(grp_fu_2580_p2),
    .din3(grp_fu_2580_p3),
    .dout(grp_fu_2580_p4)
);

YOLO2_FPGA_ama_adfW5 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
YOLO2_FPGA_ama_adfW5_U1130(
    .din0(grp_fu_2590_p0),
    .din1(grp_fu_2590_p1),
    .din2(grp_fu_2590_p2),
    .din3(grp_fu_2590_p3),
    .dout(grp_fu_2590_p4)
);

YOLO2_FPGA_mul_mufX5 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
YOLO2_FPGA_mul_mufX5_U1131(
    .din0(r_V_24_fu_2600_p0),
    .din1(r_V_24_fu_2600_p1),
    .dout(r_V_24_fu_2600_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_copy_beta_fu_2132_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_copy_beta_fu_2132_ap_start_reg <= 1'b1;
        end else if ((grp_copy_beta_fu_2132_ap_ready == 1'b1)) begin
            grp_copy_beta_fu_2132_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_intra_pingpong_wrapp_fu_1230_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
            grp_intra_pingpong_wrapp_fu_1230_ap_start_reg <= 1'b1;
        end else if ((grp_intra_pingpong_wrapp_fu_1230_ap_ready == 1'b1)) begin
            grp_intra_pingpong_wrapp_fu_1230_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_write_back_output_re_fu_2003_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
            grp_write_back_output_re_fu_2003_ap_start_reg <= 1'b1;
        end else if ((grp_write_back_output_re_fu_2003_ap_ready == 1'b1)) begin
            grp_write_back_output_re_fu_2003_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_124_fu_2453_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        TMP_C_reg_1170 <= TMP_C_1_fu_2550_p2;
    end else if (((tmp_115_fu_2384_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        TMP_C_reg_1170 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        TMP_M_reg_1193 <= TMP_M_1_fu_2575_p2;
    end else if (((tmp_121_fu_2416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        TMP_M_reg_1193 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_121_fu_2416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        TMP_R_reg_1147 <= TMP_R_1_fu_2444_p2;
    end else if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        TMP_R_reg_1147 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_124_fu_2453_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        c_reg_1159 <= c_1_reg_2848;
    end else if (((tmp_115_fu_2384_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c_reg_1159 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        m_reg_1182 <= m_1_reg_2867;
    end else if (((tmp_121_fu_2416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_reg_1182 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        pingpongm_reg_1205 <= ap_phi_mux_pingpongm_1_phi_fu_1221_p4;
    end else if (((tmp_121_fu_2416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        pingpongm_reg_1205 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_121_fu_2416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        r_reg_1136 <= r_1_reg_2835;
    end else if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        r_reg_1136 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Beta1_reg_2731 <= {{Beta_0_data_reg[31:2]}};
        InFM_num_read_reg_2726 <= InFM_num_0_data_reg;
        Input4_reg_2746 <= {{Input_r_0_data_reg[31:2]}};
        Input_h_read_reg_2700 <= Input_h_0_data_reg;
        Input_w_read_reg_2705 <= Input_w_0_data_reg;
        InterSubBeta_reg_2786 <= InterSubBeta_fu_2338_p2;
        InterSubOutput_reg_2796 <= InterSubOutput_fu_2368_p2;
        IsNL_read_reg_2679 <= IsNL_0_data_reg;
        Kernel_size_read_reg_2715 <= Kernel_size_0_data_reg;
        Kernel_stride_read_reg_2710 <= Kernel_stride_0_data_reg;
        LayerType_read_reg_2626 <= LayerType_0_data_reg;
        OutFM_num_read_reg_2720 <= OutFM_num_0_data_reg;
        Output3_reg_2741 <= {{Output_r_0_data_reg[31:2]}};
        Padding_read_reg_2684 <= Padding_0_data_reg;
        TC_read_reg_2652 <= TC_0_data_reg;
        TCol_reg_2766 <= grp_fu_2590_p4;
        TM_read_reg_2671 <= TM_0_data_reg;
        TN_read_reg_2666 <= TN_0_data_reg;
        TR_read_reg_2659 <= TR_0_data_reg;
        TRow_reg_2761 <= grp_fu_2580_p4;
        Weight1_reg_2736 <= {{Weight_0_data_reg[31:2]}};
        WeightAddInputSubInt_reg_2791 <= WeightAddInputSubInt_fu_2358_p2;
        cLoops_read_reg_2632 <= cLoops_0_data_reg;
        mLoops_add1_reg_2776 <= mLoops_add1_fu_2308_p2;
        mLoops_bound_reg_2781 <= mLoops_bound_fu_2326_p3;
        mLoops_read_reg_2647 <= mLoops_0_data_reg;
        nLoops_read_reg_2642 <= nLoops_0_data_reg;
        output_h_read_reg_2689 <= output_h_0_data_reg;
        output_w_read_reg_2694 <= output_w_0_data_reg;
        rLoops_read_reg_2637 <= rLoops_0_data_reg;
        r_V_24_reg_2771 <= r_V_24_fu_2600_p2;
        r_V_reg_2756 <= r_V_fu_2278_p2;
        tmp_114_reg_2801 <= tmp_114_fu_2374_p2;
        trow_loops_6b_V_reg_2751 <= trow_loops_6b_V_fu_2266_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == BetaQ_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == BetaQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == BetaQ_0_vld_reg)))) begin
        BetaQ_0_data_reg <= BetaQ;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Beta_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Beta_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Beta_0_vld_reg)))) begin
        Beta_0_data_reg <= Beta;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == InFM_num_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == InFM_num_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == InFM_num_0_vld_reg)))) begin
        InFM_num_0_data_reg <= InFM_num;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        Input5_reg_2611 <= {{Input3[31:2]}};
        Input6_reg_2616 <= {{Input2[31:2]}};
        Input7_reg_2621 <= {{Input1[31:2]}};
        Output2_reg_2606 <= {{Output1[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == InputQ_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == InputQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == InputQ_0_vld_reg)))) begin
        InputQ_0_data_reg <= InputQ;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Input_h_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Input_h_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Input_h_0_vld_reg)))) begin
        Input_h_0_data_reg <= Input_h;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Input_r_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Input_r_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Input_r_0_vld_reg)))) begin
        Input_r_0_data_reg <= Input_r;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Input_w_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Input_w_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Input_w_0_vld_reg)))) begin
        Input_w_0_data_reg <= Input_w;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == IsNL_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == IsNL_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == IsNL_0_vld_reg)))) begin
        IsNL_0_data_reg <= IsNL;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Kernel_size_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Kernel_size_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Kernel_size_0_vld_reg)))) begin
        Kernel_size_0_data_reg <= Kernel_size;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Kernel_stride_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Kernel_stride_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Kernel_stride_0_vld_reg)))) begin
        Kernel_stride_0_data_reg <= Kernel_stride;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LayerType_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == LayerType_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == LayerType_0_vld_reg)))) begin
        LayerType_0_data_reg <= LayerType;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == OutFM_num_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == OutFM_num_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == OutFM_num_0_vld_reg)))) begin
        OutFM_num_0_data_reg <= OutFM_num;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == OutputQ_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == OutputQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == OutputQ_0_vld_reg)))) begin
        OutputQ_0_data_reg <= OutputQ;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Output_r_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Output_r_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Output_r_0_vld_reg)))) begin
        Output_r_0_data_reg <= Output_r;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Padding_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Padding_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Padding_0_vld_reg)))) begin
        Padding_0_data_reg <= Padding;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == TC_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == TC_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == TC_0_vld_reg)))) begin
        TC_0_data_reg <= TC;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_121_fu_2416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        TC_MIN_reg_2853 <= TC_MIN_fu_2437_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        TMP_M_next0_0_1_fu_928 <= grp_intra_pingpong_wrapp_fu_1230_ap_return_0;
        TM_MIN_next0_0_1_fu_936 <= grp_intra_pingpong_wrapp_fu_1230_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_124_fu_2453_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        TMP_M_next0_0_1_loa_reg_2892 <= TMP_M_next0_0_1_fu_928;
        TMP_M_next1_0_1_loa_reg_2898 <= TMP_M_next1_0_1_fu_932;
        TM_MIN_next0_0_1_lo_reg_2904 <= TM_MIN_next0_0_1_fu_936;
        TM_MIN_next1_0_1_lo_reg_2910 <= TM_MIN_next1_0_1_fu_940;
        TM_MIN_reg_2872 <= TM_MIN_fu_2474_p3;
        input_flag_reg_2877 <= input_flag_fu_2508_p2;
        process_flag_reg_2882 <= process_flag_fu_2520_p3;
        write_flag_reg_2887 <= write_flag_fu_2532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        TMP_M_next1_0_1_fu_932 <= grp_intra_pingpong_wrapp_fu_1230_ap_return_0;
        TM_MIN_next1_0_1_fu_940 <= grp_intra_pingpong_wrapp_fu_1230_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == TM_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == TM_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == TM_0_vld_reg)))) begin
        TM_0_data_reg <= TM;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == TN_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == TN_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == TN_0_vld_reg)))) begin
        TN_0_data_reg <= TN;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == TR_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == TR_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == TR_0_vld_reg)))) begin
        TR_0_data_reg <= TR;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_115_fu_2384_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        TR_MIN_reg_2840 <= TR_MIN_fu_2405_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == WeightQ_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == WeightQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == WeightQ_0_vld_reg)))) begin
        WeightQ_0_data_reg <= WeightQ;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Weight_0_vld_reg) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Weight_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == Weight_0_vld_reg)))) begin
        Weight_0_data_reg <= Weight;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (cLoops_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (cLoops_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (cLoops_0_vld_reg == 1'b1)))) begin
        cLoops_0_data_reg <= cLoops;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c_1_reg_2848 <= c_1_fu_2421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (mLoops_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (mLoops_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (mLoops_0_vld_reg == 1'b1)))) begin
        mLoops_0_data_reg <= mLoops;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m_1_reg_2867 <= m_1_fu_2458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (nLoops_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (nLoops_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (nLoops_0_vld_reg == 1'b1)))) begin
        nLoops_0_data_reg <= nLoops;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output_h_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output_h_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (output_h_0_vld_reg == 1'b1)))) begin
        output_h_0_data_reg <= output_h;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output_w_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (output_w_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (output_w_0_vld_reg == 1'b1)))) begin
        output_w_0_data_reg <= output_w;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (rLoops_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (rLoops_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (rLoops_0_vld_reg == 1'b1)))) begin
        rLoops_0_data_reg <= rLoops;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        r_1_reg_2835 <= r_1_fu_2389_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (trow_loops_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (trow_loops_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (trow_loops_0_vld_reg == 1'b1)))) begin
        trow_loops_0_data_reg <= trow_loops;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        BetaQ_0_ack_out = 1'b1;
    end else begin
        BetaQ_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Beta_0_ack_out = 1'b1;
    end else begin
        Beta_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS1_ARVALID = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_ARVALID;
    end else begin
        DATA_BUS1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS1_AWVALID = grp_write_back_output_re_fu_2003_m_axi_Output_r_AWVALID;
    end else begin
        DATA_BUS1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS1_BREADY = grp_write_back_output_re_fu_2003_m_axi_Output_r_BREADY;
    end else begin
        DATA_BUS1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS1_RREADY = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input_r_RREADY;
    end else begin
        DATA_BUS1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS1_WVALID = grp_write_back_output_re_fu_2003_m_axi_Output_r_WVALID;
    end else begin
        DATA_BUS1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS2_ARVALID = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_ARVALID;
    end else begin
        DATA_BUS2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS2_AWVALID = grp_write_back_output_re_fu_2003_m_axi_Output1_AWVALID;
    end else begin
        DATA_BUS2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS2_BREADY = grp_write_back_output_re_fu_2003_m_axi_Output1_BREADY;
    end else begin
        DATA_BUS2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS2_RREADY = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input1_RREADY;
    end else begin
        DATA_BUS2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS2_WVALID = grp_write_back_output_re_fu_2003_m_axi_Output1_WVALID;
    end else begin
        DATA_BUS2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS3_ARVALID = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_ARVALID;
    end else begin
        DATA_BUS3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS3_RREADY = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input2_RREADY;
    end else begin
        DATA_BUS3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS4_ARVALID = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_ARVALID;
    end else begin
        DATA_BUS4_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS4_RREADY = grp_intra_pingpong_wrapp_fu_1230_m_axi_Input3_RREADY;
    end else begin
        DATA_BUS4_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARADDR = grp_copy_beta_fu_2132_m_axi_Beta_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARADDR = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARADDR;
    end else begin
        DATA_BUS5_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARBURST = grp_copy_beta_fu_2132_m_axi_Beta_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARBURST = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARBURST;
    end else begin
        DATA_BUS5_ARBURST = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARCACHE = grp_copy_beta_fu_2132_m_axi_Beta_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARCACHE = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARCACHE;
    end else begin
        DATA_BUS5_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARID = grp_copy_beta_fu_2132_m_axi_Beta_ARID;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARID = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARID;
    end else begin
        DATA_BUS5_ARID = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARLEN = grp_copy_beta_fu_2132_m_axi_Beta_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARLEN = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARLEN;
    end else begin
        DATA_BUS5_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARLOCK = grp_copy_beta_fu_2132_m_axi_Beta_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARLOCK = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARLOCK;
    end else begin
        DATA_BUS5_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARPROT = grp_copy_beta_fu_2132_m_axi_Beta_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARPROT = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARPROT;
    end else begin
        DATA_BUS5_ARPROT = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARQOS = grp_copy_beta_fu_2132_m_axi_Beta_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARQOS = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARQOS;
    end else begin
        DATA_BUS5_ARQOS = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARREGION = grp_copy_beta_fu_2132_m_axi_Beta_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARREGION = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARREGION;
    end else begin
        DATA_BUS5_ARREGION = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARSIZE = grp_copy_beta_fu_2132_m_axi_Beta_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARSIZE = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARSIZE;
    end else begin
        DATA_BUS5_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARUSER = grp_copy_beta_fu_2132_m_axi_Beta_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARUSER = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARUSER;
    end else begin
        DATA_BUS5_ARUSER = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_ARVALID = grp_copy_beta_fu_2132_m_axi_Beta_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_ARVALID = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_ARVALID;
    end else begin
        DATA_BUS5_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_114_fu_2374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        DATA_BUS5_RREADY = grp_copy_beta_fu_2132_m_axi_Beta_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        DATA_BUS5_RREADY = grp_intra_pingpong_wrapp_fu_1230_m_axi_Weight_RREADY;
    end else begin
        DATA_BUS5_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        InFM_num_0_ack_out = 1'b1;
    end else begin
        InFM_num_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        InputQ_0_ack_out = 1'b1;
    end else begin
        InputQ_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Input_h_0_ack_out = 1'b1;
    end else begin
        Input_h_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Input_r_0_ack_out = 1'b1;
    end else begin
        Input_r_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Input_w_0_ack_out = 1'b1;
    end else begin
        Input_w_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        IsNL_0_ack_out = 1'b1;
    end else begin
        IsNL_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Kernel_size_0_ack_out = 1'b1;
    end else begin
        Kernel_size_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Kernel_stride_0_ack_out = 1'b1;
    end else begin
        Kernel_stride_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        LayerType_0_ack_out = 1'b1;
    end else begin
        LayerType_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        OutFM_num_0_ack_out = 1'b1;
    end else begin
        OutFM_num_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        OutputQ_0_ack_out = 1'b1;
    end else begin
        OutputQ_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Output_r_0_ack_out = 1'b1;
    end else begin
        Output_r_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Padding_0_ack_out = 1'b1;
    end else begin
        Padding_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        TC_0_ack_out = 1'b1;
    end else begin
        TC_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        TM_0_ack_out = 1'b1;
    end else begin
        TM_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        TN_0_ack_out = 1'b1;
    end else begin
        TN_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        TR_0_ack_out = 1'b1;
    end else begin
        TR_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        WeightQ_0_ack_out = 1'b1;
    end else begin
        WeightQ_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Weight_0_ack_out = 1'b1;
    end else begin
        Weight_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            ap_phi_mux_pingpongm_1_phi_fu_1221_p4 = 1'd1;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            ap_phi_mux_pingpongm_1_phi_fu_1221_p4 = 1'd0;
        end else begin
            ap_phi_mux_pingpongm_1_phi_fu_1221_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_pingpongm_1_phi_fu_1221_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        beta_buffer_address0 = grp_copy_beta_fu_2132_beta_buffer_address0;
    end else if ((((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        beta_buffer_address0 = grp_intra_pingpong_wrapp_fu_1230_beta_buffer_address0;
    end else begin
        beta_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        beta_buffer_ce0 = grp_copy_beta_fu_2132_beta_buffer_ce0;
    end else if ((((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        beta_buffer_ce0 = grp_intra_pingpong_wrapp_fu_1230_beta_buffer_ce0;
    end else begin
        beta_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        beta_buffer_ce1 = grp_copy_beta_fu_2132_beta_buffer_ce1;
    end else begin
        beta_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        beta_buffer_we0 = grp_copy_beta_fu_2132_beta_buffer_we0;
    end else begin
        beta_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_114_reg_2801 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        beta_buffer_we1 = grp_copy_beta_fu_2132_beta_buffer_we1;
    end else begin
        beta_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cLoops_0_ack_out = 1'b1;
    end else begin
        cLoops_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_q0 = output_buffer_0_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_q0 = output_buffer1_0_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_q0 = output_buffer_10_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_q0 = output_buffer1_10_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_q0 = output_buffer_11_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_q0 = output_buffer1_11_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_q0 = output_buffer_12_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_q0 = output_buffer1_12_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_q0 = output_buffer_13_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_q0 = output_buffer1_13_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_q0 = output_buffer_14_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_q0 = output_buffer1_14_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_q0 = output_buffer_15_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_q0 = output_buffer1_15_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_q0 = output_buffer_16_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_q0 = output_buffer1_16_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_q0 = output_buffer_17_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_q0 = output_buffer1_17_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_q0 = output_buffer_18_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_q0 = output_buffer1_18_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_q0 = output_buffer_19_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_q0 = output_buffer1_19_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_q0 = output_buffer_1_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_q0 = output_buffer1_1_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_q0 = output_buffer_20_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_q0 = output_buffer1_20_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_q0 = output_buffer_21_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_q0 = output_buffer1_21_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_q0 = output_buffer_22_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_q0 = output_buffer1_22_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_q0 = output_buffer_23_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_q0 = output_buffer1_23_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_q0 = output_buffer_24_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_q0 = output_buffer1_24_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_q0 = output_buffer_25_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_q0 = output_buffer1_25_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_q0 = output_buffer_26_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_q0 = output_buffer1_26_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_q0 = output_buffer_27_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_q0 = output_buffer1_27_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_q0 = output_buffer_28_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_q0 = output_buffer1_28_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_q0 = output_buffer_29_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_q0 = output_buffer1_29_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_q0 = output_buffer_2_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_q0 = output_buffer1_2_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_q0 = output_buffer_30_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_q0 = output_buffer1_30_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_q0 = output_buffer_31_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_q0 = output_buffer1_31_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_q0 = output_buffer_3_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_q0 = output_buffer1_3_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_q0 = output_buffer_4_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_q0 = output_buffer1_4_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_q0 = output_buffer_5_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_q0 = output_buffer1_5_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_q0 = output_buffer_6_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_q0 = output_buffer1_6_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_q0 = output_buffer_7_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_q0 = output_buffer1_7_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_q0 = output_buffer_8_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_q0 = output_buffer1_8_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_q0 = output_buffer_9_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_q0 = output_buffer1_9_q0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_q0 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_p_read = TMP_M_next0_0_1_loa_reg_2892;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_p_read = TMP_M_next1_0_1_loa_reg_2898;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_p_read = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_p_read1 = TM_MIN_next0_0_1_lo_reg_2904;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_p_read1 = TM_MIN_next1_0_1_lo_reg_2910;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_p_read1 = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_intra_pingpong_wrapp_fu_1230_pingpongx_offset = 1'd1;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_intra_pingpong_wrapp_fu_1230_pingpongx_offset = 1'd0;
        end else begin
            grp_intra_pingpong_wrapp_fu_1230_pingpongx_offset = 'bx;
        end
    end else begin
        grp_intra_pingpong_wrapp_fu_1230_pingpongx_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_TM_MIN = TM_MIN_next1_0_1_lo_reg_2910;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_TM_MIN = TM_MIN_next0_0_1_lo_reg_2904;
        end else begin
            grp_write_back_output_re_fu_2003_TM_MIN = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_TM_MIN = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_m = TMP_M_next1_0_1_loa_reg_2898;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_m = TMP_M_next0_0_1_loa_reg_2892;
        end else begin
            grp_write_back_output_re_fu_2003_m = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_m = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_0_q0 = output_buffer1_0_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_0_q0 = output_buffer_0_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_0_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_10_q0 = output_buffer1_10_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_10_q0 = output_buffer_10_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_10_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_10_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_11_q0 = output_buffer1_11_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_11_q0 = output_buffer_11_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_11_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_11_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_12_q0 = output_buffer1_12_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_12_q0 = output_buffer_12_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_12_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_12_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_13_q0 = output_buffer1_13_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_13_q0 = output_buffer_13_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_13_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_13_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_14_q0 = output_buffer1_14_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_14_q0 = output_buffer_14_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_14_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_14_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_15_q0 = output_buffer1_15_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_15_q0 = output_buffer_15_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_15_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_15_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_16_q0 = output_buffer1_16_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_16_q0 = output_buffer_16_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_16_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_16_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_17_q0 = output_buffer1_17_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_17_q0 = output_buffer_17_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_17_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_17_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_18_q0 = output_buffer1_18_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_18_q0 = output_buffer_18_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_18_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_18_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_19_q0 = output_buffer1_19_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_19_q0 = output_buffer_19_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_19_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_19_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_1_q0 = output_buffer1_1_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_1_q0 = output_buffer_1_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_1_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_20_q0 = output_buffer1_20_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_20_q0 = output_buffer_20_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_20_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_20_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_21_q0 = output_buffer1_21_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_21_q0 = output_buffer_21_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_21_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_21_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_22_q0 = output_buffer1_22_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_22_q0 = output_buffer_22_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_22_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_22_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_23_q0 = output_buffer1_23_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_23_q0 = output_buffer_23_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_23_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_23_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_24_q0 = output_buffer1_24_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_24_q0 = output_buffer_24_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_24_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_24_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_25_q0 = output_buffer1_25_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_25_q0 = output_buffer_25_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_25_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_25_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_26_q0 = output_buffer1_26_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_26_q0 = output_buffer_26_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_26_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_26_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_27_q0 = output_buffer1_27_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_27_q0 = output_buffer_27_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_27_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_27_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_28_q0 = output_buffer1_28_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_28_q0 = output_buffer_28_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_28_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_28_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_29_q0 = output_buffer1_29_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_29_q0 = output_buffer_29_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_29_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_29_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_2_q0 = output_buffer1_2_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_2_q0 = output_buffer_2_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_2_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_30_q0 = output_buffer1_30_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_30_q0 = output_buffer_30_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_30_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_30_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_31_q0 = output_buffer1_31_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_31_q0 = output_buffer_31_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_31_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_31_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_3_q0 = output_buffer1_3_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_3_q0 = output_buffer_3_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_3_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_4_q0 = output_buffer1_4_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_4_q0 = output_buffer_4_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_4_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_4_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_5_q0 = output_buffer1_5_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_5_q0 = output_buffer_5_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_5_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_5_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_6_q0 = output_buffer1_6_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_6_q0 = output_buffer_6_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_6_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_6_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_7_q0 = output_buffer1_7_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_7_q0 = output_buffer_7_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_7_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_7_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_8_q0 = output_buffer1_8_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_8_q0 = output_buffer_8_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_8_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_8_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            grp_write_back_output_re_fu_2003_output_buffer_9_q0 = output_buffer1_9_q0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            grp_write_back_output_re_fu_2003_output_buffer_9_q0 = output_buffer_9_q0;
        end else begin
            grp_write_back_output_re_fu_2003_output_buffer_9_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_re_fu_2003_output_buffer_9_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mLoops_0_ack_out = 1'b1;
    end else begin
        mLoops_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        nLoops_0_ack_out = 1'b1;
    end else begin
        nLoops_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_0_address0 = grp_write_back_output_re_fu_2003_output_buffer_0_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_0_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address0;
        end else begin
            output_buffer1_0_address0 = 'bx;
        end
    end else begin
        output_buffer1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_0_ce0 = grp_write_back_output_re_fu_2003_output_buffer_0_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_0_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce0;
        end else begin
            output_buffer1_0_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_0_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce1;
    end else begin
        output_buffer1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_0_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we0;
    end else begin
        output_buffer1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_0_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we1;
    end else begin
        output_buffer1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_10_address0 = grp_write_back_output_re_fu_2003_output_buffer_10_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_10_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address0;
        end else begin
            output_buffer1_10_address0 = 'bx;
        end
    end else begin
        output_buffer1_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_10_ce0 = grp_write_back_output_re_fu_2003_output_buffer_10_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_10_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce0;
        end else begin
            output_buffer1_10_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_10_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce1;
    end else begin
        output_buffer1_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_10_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_we1;
    end else begin
        output_buffer1_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_11_address0 = grp_write_back_output_re_fu_2003_output_buffer_11_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_11_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address0;
        end else begin
            output_buffer1_11_address0 = 'bx;
        end
    end else begin
        output_buffer1_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_11_ce0 = grp_write_back_output_re_fu_2003_output_buffer_11_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_11_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce0;
        end else begin
            output_buffer1_11_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_11_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce1;
    end else begin
        output_buffer1_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_11_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_we1;
    end else begin
        output_buffer1_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_12_address0 = grp_write_back_output_re_fu_2003_output_buffer_12_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_12_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address0;
        end else begin
            output_buffer1_12_address0 = 'bx;
        end
    end else begin
        output_buffer1_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_12_ce0 = grp_write_back_output_re_fu_2003_output_buffer_12_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_12_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce0;
        end else begin
            output_buffer1_12_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_12_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce1;
    end else begin
        output_buffer1_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_12_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_we1;
    end else begin
        output_buffer1_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_13_address0 = grp_write_back_output_re_fu_2003_output_buffer_13_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_13_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address0;
        end else begin
            output_buffer1_13_address0 = 'bx;
        end
    end else begin
        output_buffer1_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_13_ce0 = grp_write_back_output_re_fu_2003_output_buffer_13_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_13_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce0;
        end else begin
            output_buffer1_13_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_13_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce1;
    end else begin
        output_buffer1_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_13_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_we1;
    end else begin
        output_buffer1_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_14_address0 = grp_write_back_output_re_fu_2003_output_buffer_14_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_14_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address0;
        end else begin
            output_buffer1_14_address0 = 'bx;
        end
    end else begin
        output_buffer1_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_14_ce0 = grp_write_back_output_re_fu_2003_output_buffer_14_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_14_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce0;
        end else begin
            output_buffer1_14_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_14_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce1;
    end else begin
        output_buffer1_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_14_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_we1;
    end else begin
        output_buffer1_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_15_address0 = grp_write_back_output_re_fu_2003_output_buffer_15_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_15_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address0;
        end else begin
            output_buffer1_15_address0 = 'bx;
        end
    end else begin
        output_buffer1_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_15_ce0 = grp_write_back_output_re_fu_2003_output_buffer_15_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_15_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce0;
        end else begin
            output_buffer1_15_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_15_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce1;
    end else begin
        output_buffer1_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_15_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_we1;
    end else begin
        output_buffer1_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_16_address0 = grp_write_back_output_re_fu_2003_output_buffer_16_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_16_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address0;
        end else begin
            output_buffer1_16_address0 = 'bx;
        end
    end else begin
        output_buffer1_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_16_ce0 = grp_write_back_output_re_fu_2003_output_buffer_16_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_16_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce0;
        end else begin
            output_buffer1_16_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_16_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce1;
    end else begin
        output_buffer1_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_16_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_we1;
    end else begin
        output_buffer1_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_17_address0 = grp_write_back_output_re_fu_2003_output_buffer_17_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_17_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address0;
        end else begin
            output_buffer1_17_address0 = 'bx;
        end
    end else begin
        output_buffer1_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_17_ce0 = grp_write_back_output_re_fu_2003_output_buffer_17_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_17_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce0;
        end else begin
            output_buffer1_17_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_17_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce1;
    end else begin
        output_buffer1_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_17_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_we1;
    end else begin
        output_buffer1_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_18_address0 = grp_write_back_output_re_fu_2003_output_buffer_18_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_18_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address0;
        end else begin
            output_buffer1_18_address0 = 'bx;
        end
    end else begin
        output_buffer1_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_18_ce0 = grp_write_back_output_re_fu_2003_output_buffer_18_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_18_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce0;
        end else begin
            output_buffer1_18_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_18_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce1;
    end else begin
        output_buffer1_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_18_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_we1;
    end else begin
        output_buffer1_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_19_address0 = grp_write_back_output_re_fu_2003_output_buffer_19_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_19_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address0;
        end else begin
            output_buffer1_19_address0 = 'bx;
        end
    end else begin
        output_buffer1_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_19_ce0 = grp_write_back_output_re_fu_2003_output_buffer_19_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_19_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce0;
        end else begin
            output_buffer1_19_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_19_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce1;
    end else begin
        output_buffer1_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_19_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_we1;
    end else begin
        output_buffer1_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_1_address0 = grp_write_back_output_re_fu_2003_output_buffer_1_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_1_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address0;
        end else begin
            output_buffer1_1_address0 = 'bx;
        end
    end else begin
        output_buffer1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_1_ce0 = grp_write_back_output_re_fu_2003_output_buffer_1_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_1_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce0;
        end else begin
            output_buffer1_1_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_1_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce1;
    end else begin
        output_buffer1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_1_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we0;
    end else begin
        output_buffer1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_1_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we1;
    end else begin
        output_buffer1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_20_address0 = grp_write_back_output_re_fu_2003_output_buffer_20_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_20_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address0;
        end else begin
            output_buffer1_20_address0 = 'bx;
        end
    end else begin
        output_buffer1_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_20_ce0 = grp_write_back_output_re_fu_2003_output_buffer_20_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_20_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce0;
        end else begin
            output_buffer1_20_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_20_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce1;
    end else begin
        output_buffer1_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_20_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_we1;
    end else begin
        output_buffer1_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_21_address0 = grp_write_back_output_re_fu_2003_output_buffer_21_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_21_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address0;
        end else begin
            output_buffer1_21_address0 = 'bx;
        end
    end else begin
        output_buffer1_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_21_ce0 = grp_write_back_output_re_fu_2003_output_buffer_21_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_21_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce0;
        end else begin
            output_buffer1_21_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_21_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce1;
    end else begin
        output_buffer1_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_21_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_we1;
    end else begin
        output_buffer1_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_22_address0 = grp_write_back_output_re_fu_2003_output_buffer_22_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_22_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address0;
        end else begin
            output_buffer1_22_address0 = 'bx;
        end
    end else begin
        output_buffer1_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_22_ce0 = grp_write_back_output_re_fu_2003_output_buffer_22_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_22_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce0;
        end else begin
            output_buffer1_22_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_22_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce1;
    end else begin
        output_buffer1_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_22_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_we1;
    end else begin
        output_buffer1_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_23_address0 = grp_write_back_output_re_fu_2003_output_buffer_23_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_23_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address0;
        end else begin
            output_buffer1_23_address0 = 'bx;
        end
    end else begin
        output_buffer1_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_23_ce0 = grp_write_back_output_re_fu_2003_output_buffer_23_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_23_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce0;
        end else begin
            output_buffer1_23_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_23_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce1;
    end else begin
        output_buffer1_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_23_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_we1;
    end else begin
        output_buffer1_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_24_address0 = grp_write_back_output_re_fu_2003_output_buffer_24_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_24_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address0;
        end else begin
            output_buffer1_24_address0 = 'bx;
        end
    end else begin
        output_buffer1_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_24_ce0 = grp_write_back_output_re_fu_2003_output_buffer_24_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_24_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce0;
        end else begin
            output_buffer1_24_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_24_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce1;
    end else begin
        output_buffer1_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_24_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_we1;
    end else begin
        output_buffer1_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_25_address0 = grp_write_back_output_re_fu_2003_output_buffer_25_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_25_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address0;
        end else begin
            output_buffer1_25_address0 = 'bx;
        end
    end else begin
        output_buffer1_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_25_ce0 = grp_write_back_output_re_fu_2003_output_buffer_25_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_25_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce0;
        end else begin
            output_buffer1_25_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_25_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce1;
    end else begin
        output_buffer1_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_25_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_we1;
    end else begin
        output_buffer1_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_26_address0 = grp_write_back_output_re_fu_2003_output_buffer_26_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_26_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address0;
        end else begin
            output_buffer1_26_address0 = 'bx;
        end
    end else begin
        output_buffer1_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_26_ce0 = grp_write_back_output_re_fu_2003_output_buffer_26_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_26_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce0;
        end else begin
            output_buffer1_26_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_26_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce1;
    end else begin
        output_buffer1_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_26_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_we1;
    end else begin
        output_buffer1_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_27_address0 = grp_write_back_output_re_fu_2003_output_buffer_27_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_27_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address0;
        end else begin
            output_buffer1_27_address0 = 'bx;
        end
    end else begin
        output_buffer1_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_27_ce0 = grp_write_back_output_re_fu_2003_output_buffer_27_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_27_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce0;
        end else begin
            output_buffer1_27_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_27_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce1;
    end else begin
        output_buffer1_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_27_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_we1;
    end else begin
        output_buffer1_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_28_address0 = grp_write_back_output_re_fu_2003_output_buffer_28_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_28_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address0;
        end else begin
            output_buffer1_28_address0 = 'bx;
        end
    end else begin
        output_buffer1_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_28_ce0 = grp_write_back_output_re_fu_2003_output_buffer_28_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_28_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce0;
        end else begin
            output_buffer1_28_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_28_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce1;
    end else begin
        output_buffer1_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_28_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_we1;
    end else begin
        output_buffer1_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_29_address0 = grp_write_back_output_re_fu_2003_output_buffer_29_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_29_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address0;
        end else begin
            output_buffer1_29_address0 = 'bx;
        end
    end else begin
        output_buffer1_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_29_ce0 = grp_write_back_output_re_fu_2003_output_buffer_29_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_29_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce0;
        end else begin
            output_buffer1_29_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_29_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce1;
    end else begin
        output_buffer1_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_29_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_we1;
    end else begin
        output_buffer1_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_2_address0 = grp_write_back_output_re_fu_2003_output_buffer_2_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_2_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address0;
        end else begin
            output_buffer1_2_address0 = 'bx;
        end
    end else begin
        output_buffer1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_2_ce0 = grp_write_back_output_re_fu_2003_output_buffer_2_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_2_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce0;
        end else begin
            output_buffer1_2_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_2_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce1;
    end else begin
        output_buffer1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_2_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we0;
    end else begin
        output_buffer1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_2_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we1;
    end else begin
        output_buffer1_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_30_address0 = grp_write_back_output_re_fu_2003_output_buffer_30_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_30_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address0;
        end else begin
            output_buffer1_30_address0 = 'bx;
        end
    end else begin
        output_buffer1_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_30_ce0 = grp_write_back_output_re_fu_2003_output_buffer_30_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_30_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce0;
        end else begin
            output_buffer1_30_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_30_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce1;
    end else begin
        output_buffer1_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_30_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_we1;
    end else begin
        output_buffer1_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_31_address0 = grp_write_back_output_re_fu_2003_output_buffer_31_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_31_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address0;
        end else begin
            output_buffer1_31_address0 = 'bx;
        end
    end else begin
        output_buffer1_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_31_ce0 = grp_write_back_output_re_fu_2003_output_buffer_31_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_31_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce0;
        end else begin
            output_buffer1_31_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_31_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce1;
    end else begin
        output_buffer1_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_31_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_we1;
    end else begin
        output_buffer1_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_3_address0 = grp_write_back_output_re_fu_2003_output_buffer_3_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_3_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address0;
        end else begin
            output_buffer1_3_address0 = 'bx;
        end
    end else begin
        output_buffer1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_3_ce0 = grp_write_back_output_re_fu_2003_output_buffer_3_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_3_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce0;
        end else begin
            output_buffer1_3_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_3_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce1;
    end else begin
        output_buffer1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_3_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we0;
    end else begin
        output_buffer1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_3_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we1;
    end else begin
        output_buffer1_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_4_address0 = grp_write_back_output_re_fu_2003_output_buffer_4_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_4_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address0;
        end else begin
            output_buffer1_4_address0 = 'bx;
        end
    end else begin
        output_buffer1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_4_ce0 = grp_write_back_output_re_fu_2003_output_buffer_4_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_4_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce0;
        end else begin
            output_buffer1_4_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_4_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce1;
    end else begin
        output_buffer1_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_4_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_we1;
    end else begin
        output_buffer1_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_5_address0 = grp_write_back_output_re_fu_2003_output_buffer_5_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_5_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address0;
        end else begin
            output_buffer1_5_address0 = 'bx;
        end
    end else begin
        output_buffer1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_5_ce0 = grp_write_back_output_re_fu_2003_output_buffer_5_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_5_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce0;
        end else begin
            output_buffer1_5_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_5_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce1;
    end else begin
        output_buffer1_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_5_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_we1;
    end else begin
        output_buffer1_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_6_address0 = grp_write_back_output_re_fu_2003_output_buffer_6_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_6_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address0;
        end else begin
            output_buffer1_6_address0 = 'bx;
        end
    end else begin
        output_buffer1_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_6_ce0 = grp_write_back_output_re_fu_2003_output_buffer_6_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_6_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce0;
        end else begin
            output_buffer1_6_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_6_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce1;
    end else begin
        output_buffer1_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_6_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_we1;
    end else begin
        output_buffer1_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_7_address0 = grp_write_back_output_re_fu_2003_output_buffer_7_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_7_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address0;
        end else begin
            output_buffer1_7_address0 = 'bx;
        end
    end else begin
        output_buffer1_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_7_ce0 = grp_write_back_output_re_fu_2003_output_buffer_7_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_7_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce0;
        end else begin
            output_buffer1_7_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_7_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce1;
    end else begin
        output_buffer1_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_7_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_we1;
    end else begin
        output_buffer1_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_8_address0 = grp_write_back_output_re_fu_2003_output_buffer_8_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_8_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address0;
        end else begin
            output_buffer1_8_address0 = 'bx;
        end
    end else begin
        output_buffer1_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_8_ce0 = grp_write_back_output_re_fu_2003_output_buffer_8_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_8_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce0;
        end else begin
            output_buffer1_8_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_8_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce1;
    end else begin
        output_buffer1_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_8_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_we1;
    end else begin
        output_buffer1_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_9_address0 = grp_write_back_output_re_fu_2003_output_buffer_9_address0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_9_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address0;
        end else begin
            output_buffer1_9_address0 = 'bx;
        end
    end else begin
        output_buffer1_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer1_9_ce0 = grp_write_back_output_re_fu_2003_output_buffer_9_ce0;
        end else if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer1_9_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce0;
        end else begin
            output_buffer1_9_ce0 = 1'b0;
        end
    end else begin
        output_buffer1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_9_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce1;
    end else begin
        output_buffer1_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer1_9_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_we1;
    end else begin
        output_buffer1_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_0_address0 = grp_write_back_output_re_fu_2003_output_buffer_0_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_0_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_address0;
        end else begin
            output_buffer_0_address0 = 'bx;
        end
    end else begin
        output_buffer_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_0_ce0 = grp_write_back_output_re_fu_2003_output_buffer_0_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_0_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce0;
        end else begin
            output_buffer_0_ce0 = 1'b0;
        end
    end else begin
        output_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_0_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_ce1;
    end else begin
        output_buffer_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_0_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we0;
    end else begin
        output_buffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_0_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_0_we1;
    end else begin
        output_buffer_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_10_address0 = grp_write_back_output_re_fu_2003_output_buffer_10_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_10_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_address0;
        end else begin
            output_buffer_10_address0 = 'bx;
        end
    end else begin
        output_buffer_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_10_ce0 = grp_write_back_output_re_fu_2003_output_buffer_10_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_10_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce0;
        end else begin
            output_buffer_10_ce0 = 1'b0;
        end
    end else begin
        output_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_10_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_ce1;
    end else begin
        output_buffer_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_10_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_10_we1;
    end else begin
        output_buffer_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_11_address0 = grp_write_back_output_re_fu_2003_output_buffer_11_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_11_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_address0;
        end else begin
            output_buffer_11_address0 = 'bx;
        end
    end else begin
        output_buffer_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_11_ce0 = grp_write_back_output_re_fu_2003_output_buffer_11_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_11_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce0;
        end else begin
            output_buffer_11_ce0 = 1'b0;
        end
    end else begin
        output_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_11_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_ce1;
    end else begin
        output_buffer_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_11_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_11_we1;
    end else begin
        output_buffer_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_12_address0 = grp_write_back_output_re_fu_2003_output_buffer_12_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_12_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_address0;
        end else begin
            output_buffer_12_address0 = 'bx;
        end
    end else begin
        output_buffer_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_12_ce0 = grp_write_back_output_re_fu_2003_output_buffer_12_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_12_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce0;
        end else begin
            output_buffer_12_ce0 = 1'b0;
        end
    end else begin
        output_buffer_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_12_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_ce1;
    end else begin
        output_buffer_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_12_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_12_we1;
    end else begin
        output_buffer_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_13_address0 = grp_write_back_output_re_fu_2003_output_buffer_13_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_13_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_address0;
        end else begin
            output_buffer_13_address0 = 'bx;
        end
    end else begin
        output_buffer_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_13_ce0 = grp_write_back_output_re_fu_2003_output_buffer_13_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_13_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce0;
        end else begin
            output_buffer_13_ce0 = 1'b0;
        end
    end else begin
        output_buffer_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_13_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_ce1;
    end else begin
        output_buffer_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_13_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_13_we1;
    end else begin
        output_buffer_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_14_address0 = grp_write_back_output_re_fu_2003_output_buffer_14_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_14_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_address0;
        end else begin
            output_buffer_14_address0 = 'bx;
        end
    end else begin
        output_buffer_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_14_ce0 = grp_write_back_output_re_fu_2003_output_buffer_14_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_14_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce0;
        end else begin
            output_buffer_14_ce0 = 1'b0;
        end
    end else begin
        output_buffer_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_14_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_ce1;
    end else begin
        output_buffer_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_14_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_14_we1;
    end else begin
        output_buffer_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_15_address0 = grp_write_back_output_re_fu_2003_output_buffer_15_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_15_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_address0;
        end else begin
            output_buffer_15_address0 = 'bx;
        end
    end else begin
        output_buffer_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_15_ce0 = grp_write_back_output_re_fu_2003_output_buffer_15_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_15_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce0;
        end else begin
            output_buffer_15_ce0 = 1'b0;
        end
    end else begin
        output_buffer_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_15_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_ce1;
    end else begin
        output_buffer_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_15_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_15_we1;
    end else begin
        output_buffer_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_16_address0 = grp_write_back_output_re_fu_2003_output_buffer_16_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_16_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_address0;
        end else begin
            output_buffer_16_address0 = 'bx;
        end
    end else begin
        output_buffer_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_16_ce0 = grp_write_back_output_re_fu_2003_output_buffer_16_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_16_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce0;
        end else begin
            output_buffer_16_ce0 = 1'b0;
        end
    end else begin
        output_buffer_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_16_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_ce1;
    end else begin
        output_buffer_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_16_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_16_we1;
    end else begin
        output_buffer_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_17_address0 = grp_write_back_output_re_fu_2003_output_buffer_17_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_17_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_address0;
        end else begin
            output_buffer_17_address0 = 'bx;
        end
    end else begin
        output_buffer_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_17_ce0 = grp_write_back_output_re_fu_2003_output_buffer_17_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_17_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce0;
        end else begin
            output_buffer_17_ce0 = 1'b0;
        end
    end else begin
        output_buffer_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_17_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_ce1;
    end else begin
        output_buffer_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_17_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_17_we1;
    end else begin
        output_buffer_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_18_address0 = grp_write_back_output_re_fu_2003_output_buffer_18_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_18_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_address0;
        end else begin
            output_buffer_18_address0 = 'bx;
        end
    end else begin
        output_buffer_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_18_ce0 = grp_write_back_output_re_fu_2003_output_buffer_18_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_18_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce0;
        end else begin
            output_buffer_18_ce0 = 1'b0;
        end
    end else begin
        output_buffer_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_18_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_ce1;
    end else begin
        output_buffer_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_18_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_18_we1;
    end else begin
        output_buffer_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_19_address0 = grp_write_back_output_re_fu_2003_output_buffer_19_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_19_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_address0;
        end else begin
            output_buffer_19_address0 = 'bx;
        end
    end else begin
        output_buffer_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_19_ce0 = grp_write_back_output_re_fu_2003_output_buffer_19_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_19_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce0;
        end else begin
            output_buffer_19_ce0 = 1'b0;
        end
    end else begin
        output_buffer_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_19_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_ce1;
    end else begin
        output_buffer_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_19_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_19_we1;
    end else begin
        output_buffer_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_1_address0 = grp_write_back_output_re_fu_2003_output_buffer_1_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_1_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_address0;
        end else begin
            output_buffer_1_address0 = 'bx;
        end
    end else begin
        output_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_1_ce0 = grp_write_back_output_re_fu_2003_output_buffer_1_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_1_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce0;
        end else begin
            output_buffer_1_ce0 = 1'b0;
        end
    end else begin
        output_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_1_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_ce1;
    end else begin
        output_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_1_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we0;
    end else begin
        output_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_1_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_1_we1;
    end else begin
        output_buffer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_20_address0 = grp_write_back_output_re_fu_2003_output_buffer_20_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_20_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_address0;
        end else begin
            output_buffer_20_address0 = 'bx;
        end
    end else begin
        output_buffer_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_20_ce0 = grp_write_back_output_re_fu_2003_output_buffer_20_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_20_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce0;
        end else begin
            output_buffer_20_ce0 = 1'b0;
        end
    end else begin
        output_buffer_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_20_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_ce1;
    end else begin
        output_buffer_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_20_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_20_we1;
    end else begin
        output_buffer_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_21_address0 = grp_write_back_output_re_fu_2003_output_buffer_21_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_21_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_address0;
        end else begin
            output_buffer_21_address0 = 'bx;
        end
    end else begin
        output_buffer_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_21_ce0 = grp_write_back_output_re_fu_2003_output_buffer_21_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_21_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce0;
        end else begin
            output_buffer_21_ce0 = 1'b0;
        end
    end else begin
        output_buffer_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_21_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_ce1;
    end else begin
        output_buffer_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_21_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_21_we1;
    end else begin
        output_buffer_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_22_address0 = grp_write_back_output_re_fu_2003_output_buffer_22_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_22_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_address0;
        end else begin
            output_buffer_22_address0 = 'bx;
        end
    end else begin
        output_buffer_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_22_ce0 = grp_write_back_output_re_fu_2003_output_buffer_22_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_22_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce0;
        end else begin
            output_buffer_22_ce0 = 1'b0;
        end
    end else begin
        output_buffer_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_22_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_ce1;
    end else begin
        output_buffer_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_22_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_22_we1;
    end else begin
        output_buffer_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_23_address0 = grp_write_back_output_re_fu_2003_output_buffer_23_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_23_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_address0;
        end else begin
            output_buffer_23_address0 = 'bx;
        end
    end else begin
        output_buffer_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_23_ce0 = grp_write_back_output_re_fu_2003_output_buffer_23_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_23_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce0;
        end else begin
            output_buffer_23_ce0 = 1'b0;
        end
    end else begin
        output_buffer_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_23_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_ce1;
    end else begin
        output_buffer_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_23_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_23_we1;
    end else begin
        output_buffer_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_24_address0 = grp_write_back_output_re_fu_2003_output_buffer_24_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_24_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_address0;
        end else begin
            output_buffer_24_address0 = 'bx;
        end
    end else begin
        output_buffer_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_24_ce0 = grp_write_back_output_re_fu_2003_output_buffer_24_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_24_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce0;
        end else begin
            output_buffer_24_ce0 = 1'b0;
        end
    end else begin
        output_buffer_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_24_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_ce1;
    end else begin
        output_buffer_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_24_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_24_we1;
    end else begin
        output_buffer_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_25_address0 = grp_write_back_output_re_fu_2003_output_buffer_25_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_25_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_address0;
        end else begin
            output_buffer_25_address0 = 'bx;
        end
    end else begin
        output_buffer_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_25_ce0 = grp_write_back_output_re_fu_2003_output_buffer_25_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_25_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce0;
        end else begin
            output_buffer_25_ce0 = 1'b0;
        end
    end else begin
        output_buffer_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_25_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_ce1;
    end else begin
        output_buffer_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_25_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_25_we1;
    end else begin
        output_buffer_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_26_address0 = grp_write_back_output_re_fu_2003_output_buffer_26_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_26_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_address0;
        end else begin
            output_buffer_26_address0 = 'bx;
        end
    end else begin
        output_buffer_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_26_ce0 = grp_write_back_output_re_fu_2003_output_buffer_26_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_26_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce0;
        end else begin
            output_buffer_26_ce0 = 1'b0;
        end
    end else begin
        output_buffer_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_26_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_ce1;
    end else begin
        output_buffer_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_26_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_26_we1;
    end else begin
        output_buffer_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_27_address0 = grp_write_back_output_re_fu_2003_output_buffer_27_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_27_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_address0;
        end else begin
            output_buffer_27_address0 = 'bx;
        end
    end else begin
        output_buffer_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_27_ce0 = grp_write_back_output_re_fu_2003_output_buffer_27_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_27_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce0;
        end else begin
            output_buffer_27_ce0 = 1'b0;
        end
    end else begin
        output_buffer_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_27_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_ce1;
    end else begin
        output_buffer_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_27_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_27_we1;
    end else begin
        output_buffer_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_28_address0 = grp_write_back_output_re_fu_2003_output_buffer_28_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_28_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_address0;
        end else begin
            output_buffer_28_address0 = 'bx;
        end
    end else begin
        output_buffer_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_28_ce0 = grp_write_back_output_re_fu_2003_output_buffer_28_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_28_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce0;
        end else begin
            output_buffer_28_ce0 = 1'b0;
        end
    end else begin
        output_buffer_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_28_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_ce1;
    end else begin
        output_buffer_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_28_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_28_we1;
    end else begin
        output_buffer_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_29_address0 = grp_write_back_output_re_fu_2003_output_buffer_29_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_29_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_address0;
        end else begin
            output_buffer_29_address0 = 'bx;
        end
    end else begin
        output_buffer_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_29_ce0 = grp_write_back_output_re_fu_2003_output_buffer_29_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_29_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce0;
        end else begin
            output_buffer_29_ce0 = 1'b0;
        end
    end else begin
        output_buffer_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_29_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_ce1;
    end else begin
        output_buffer_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_29_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_29_we1;
    end else begin
        output_buffer_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_2_address0 = grp_write_back_output_re_fu_2003_output_buffer_2_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_2_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_address0;
        end else begin
            output_buffer_2_address0 = 'bx;
        end
    end else begin
        output_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_2_ce0 = grp_write_back_output_re_fu_2003_output_buffer_2_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_2_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce0;
        end else begin
            output_buffer_2_ce0 = 1'b0;
        end
    end else begin
        output_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_2_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_ce1;
    end else begin
        output_buffer_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_2_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we0;
    end else begin
        output_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_2_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_2_we1;
    end else begin
        output_buffer_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_30_address0 = grp_write_back_output_re_fu_2003_output_buffer_30_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_30_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_address0;
        end else begin
            output_buffer_30_address0 = 'bx;
        end
    end else begin
        output_buffer_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_30_ce0 = grp_write_back_output_re_fu_2003_output_buffer_30_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_30_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce0;
        end else begin
            output_buffer_30_ce0 = 1'b0;
        end
    end else begin
        output_buffer_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_30_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_ce1;
    end else begin
        output_buffer_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_30_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_30_we1;
    end else begin
        output_buffer_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_31_address0 = grp_write_back_output_re_fu_2003_output_buffer_31_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_31_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_address0;
        end else begin
            output_buffer_31_address0 = 'bx;
        end
    end else begin
        output_buffer_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_31_ce0 = grp_write_back_output_re_fu_2003_output_buffer_31_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_31_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce0;
        end else begin
            output_buffer_31_ce0 = 1'b0;
        end
    end else begin
        output_buffer_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_31_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_ce1;
    end else begin
        output_buffer_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_31_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_31_we1;
    end else begin
        output_buffer_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_3_address0 = grp_write_back_output_re_fu_2003_output_buffer_3_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_3_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_address0;
        end else begin
            output_buffer_3_address0 = 'bx;
        end
    end else begin
        output_buffer_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_3_ce0 = grp_write_back_output_re_fu_2003_output_buffer_3_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_3_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce0;
        end else begin
            output_buffer_3_ce0 = 1'b0;
        end
    end else begin
        output_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_3_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_ce1;
    end else begin
        output_buffer_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_3_we0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we0;
    end else begin
        output_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_3_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_3_we1;
    end else begin
        output_buffer_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_4_address0 = grp_write_back_output_re_fu_2003_output_buffer_4_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_4_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_address0;
        end else begin
            output_buffer_4_address0 = 'bx;
        end
    end else begin
        output_buffer_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_4_ce0 = grp_write_back_output_re_fu_2003_output_buffer_4_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_4_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce0;
        end else begin
            output_buffer_4_ce0 = 1'b0;
        end
    end else begin
        output_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_4_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_ce1;
    end else begin
        output_buffer_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_4_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_4_we1;
    end else begin
        output_buffer_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_5_address0 = grp_write_back_output_re_fu_2003_output_buffer_5_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_5_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_address0;
        end else begin
            output_buffer_5_address0 = 'bx;
        end
    end else begin
        output_buffer_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_5_ce0 = grp_write_back_output_re_fu_2003_output_buffer_5_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_5_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce0;
        end else begin
            output_buffer_5_ce0 = 1'b0;
        end
    end else begin
        output_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_5_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_ce1;
    end else begin
        output_buffer_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_5_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_5_we1;
    end else begin
        output_buffer_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_6_address0 = grp_write_back_output_re_fu_2003_output_buffer_6_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_6_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_address0;
        end else begin
            output_buffer_6_address0 = 'bx;
        end
    end else begin
        output_buffer_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_6_ce0 = grp_write_back_output_re_fu_2003_output_buffer_6_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_6_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce0;
        end else begin
            output_buffer_6_ce0 = 1'b0;
        end
    end else begin
        output_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_6_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_ce1;
    end else begin
        output_buffer_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_6_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_6_we1;
    end else begin
        output_buffer_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_7_address0 = grp_write_back_output_re_fu_2003_output_buffer_7_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_7_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_address0;
        end else begin
            output_buffer_7_address0 = 'bx;
        end
    end else begin
        output_buffer_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_7_ce0 = grp_write_back_output_re_fu_2003_output_buffer_7_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_7_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce0;
        end else begin
            output_buffer_7_ce0 = 1'b0;
        end
    end else begin
        output_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_7_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_ce1;
    end else begin
        output_buffer_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_7_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_7_we1;
    end else begin
        output_buffer_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_8_address0 = grp_write_back_output_re_fu_2003_output_buffer_8_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_8_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_address0;
        end else begin
            output_buffer_8_address0 = 'bx;
        end
    end else begin
        output_buffer_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_8_ce0 = grp_write_back_output_re_fu_2003_output_buffer_8_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_8_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce0;
        end else begin
            output_buffer_8_ce0 = 1'b0;
        end
    end else begin
        output_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_8_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_ce1;
    end else begin
        output_buffer_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_8_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_8_we1;
    end else begin
        output_buffer_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_9_address0 = grp_write_back_output_re_fu_2003_output_buffer_9_address0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_9_address0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_address0;
        end else begin
            output_buffer_9_address0 = 'bx;
        end
    end else begin
        output_buffer_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((pingpongm_reg_1205 == 1'd0)) begin
            output_buffer_9_ce0 = grp_write_back_output_re_fu_2003_output_buffer_9_ce0;
        end else if ((pingpongm_reg_1205 == 1'd1)) begin
            output_buffer_9_ce0 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce0;
        end else begin
            output_buffer_9_ce0 = 1'b0;
        end
    end else begin
        output_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_9_ce1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_ce1;
    end else begin
        output_buffer_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1205 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        output_buffer_9_we1 = grp_intra_pingpong_wrapp_fu_1230_output_buffer_9_we1;
    end else begin
        output_buffer_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        output_h_0_ack_out = 1'b1;
    end else begin
        output_h_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        output_w_0_ack_out = 1'b1;
    end else begin
        output_w_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rLoops_0_ack_out = 1'b1;
    end else begin
        rLoops_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        trow_loops_0_ack_out = 1'b1;
    end else begin
        trow_loops_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_115_fu_2384_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_121_fu_2416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_124_fu_2453_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((ap_phi_mux_pingpongm_phi_fu_1209_p4 == 1'd1) & (tmp_124_fu_2453_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input_h_10b_V_fu_2258_p1 = Input_h_0_data_reg[9:0];

assign Input_w_9b_V_fu_2262_p1 = Input_w_0_data_reg[8:0];

assign InterSubBeta_fu_2338_p2 = (8'd20 - tmp_fu_2334_p1);

assign InterSubOutput_fu_2368_p2 = (8'd20 - tmp_119_fu_2364_p1);

assign Kernel_size_2b_V_fu_2254_p1 = Kernel_size_0_data_reg[1:0];

assign Kernel_stride_2b_V_fu_2250_p1 = Kernel_stride_0_data_reg[1:0];

assign MneMLoopsaddOne_0_1_fu_2514_p2 = (MneZero_fu_2481_p2 & MneMLoopsaddOne_fu_2498_p2);

assign MneMLoopsaddOne_0_s_fu_2503_p2 = (tmp_114_reg_2801 | MneMLoopsaddOne_fu_2498_p2);

assign MneMLoopsaddOne_fu_2498_p2 = ((m_cast_fu_2449_p1 != mLoops_add1_reg_2776) ? 1'b1 : 1'b0);

assign MneOne_0_s_fu_2527_p2 = (tmp_114_reg_2801 | MneOne_fu_2487_p2);

assign MneOne_fu_2487_p2 = ((m_reg_1182 != 31'd1) ? 1'b1 : 1'b0);

assign MneZero_fu_2481_p2 = ((m_reg_1182 != 31'd0) ? 1'b1 : 1'b0);

assign MnemLoops_fu_2493_p2 = ((m_cast_fu_2449_p1 != mLoops_read_reg_2647) ? 1'b1 : 1'b0);

assign TC_5b_V_fu_2246_p1 = TC_0_data_reg[4:0];

assign TC_MIN_fu_2437_p3 = ((tmp_123_fu_2432_p2[0:0] === 1'b1) ? TC_read_reg_2652 : tmp_122_fu_2427_p2);

assign TMP_C_1_fu_2550_p2 = (TMP_C_reg_1170 + TC_read_reg_2652);

assign TMP_M_1_fu_2575_p2 = (TMP_M_reg_1193 + TM_read_reg_2671);

assign TMP_R_1_fu_2444_p2 = (TMP_R_reg_1147 + TR_read_reg_2659);

assign TM_MIN_fu_2474_p3 = ((tmp_126_fu_2469_p2[0:0] === 1'b1) ? TM_read_reg_2671 : tmp_125_fu_2464_p2);

assign TR_5b_V_fu_2242_p1 = TR_0_data_reg[4:0];

assign TR_MIN_fu_2405_p3 = ((tmp_120_fu_2400_p2[0:0] === 1'b1) ? TR_read_reg_2659 : tmp_116_fu_2395_p2);

assign WeightAddInputSubInt_fu_2358_p2 = (tmp1_fu_2352_p2 + tmp_118_fu_2348_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_copy_beta_fu_2132_ap_done == 1'b0) & (tmp_114_reg_2801 == 1'd1));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = (((grp_write_back_output_re_fu_2003_ap_done == 1'b0) & (pingpongm_reg_1205 == 1'd1)) | ((grp_write_back_output_re_fu_2003_ap_done == 1'b0) & (pingpongm_reg_1205 == 1'd0)) | ((grp_intra_pingpong_wrapp_fu_1230_ap_done == 1'b0) & (pingpongm_reg_1205 == 1'd1)) | ((grp_intra_pingpong_wrapp_fu_1230_ap_done == 1'b0) & (pingpongm_reg_1205 == 1'd0)));
end

assign ap_phi_mux_pingpongm_phi_fu_1209_p4 = pingpongm_reg_1205;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_1_fu_2421_p2 = (c_reg_1159 + 31'd1);

assign c_cast_fu_2412_p1 = c_reg_1159;

assign grp_copy_beta_fu_2132_ap_start = grp_copy_beta_fu_2132_ap_start_reg;

assign grp_fu_2580_p0 = 6'd63;

assign grp_fu_2580_p1 = grp_fu_2580_p10;

assign grp_fu_2580_p10 = TR_5b_V_fu_2242_p1;

assign grp_fu_2580_p2 = tmp_108_fu_2288_p1;

assign grp_fu_2580_p3 = tmp_110_fu_2292_p1;

assign grp_fu_2590_p0 = 6'd63;

assign grp_fu_2590_p1 = grp_fu_2590_p10;

assign grp_fu_2590_p10 = TC_5b_V_fu_2246_p1;

assign grp_fu_2590_p2 = tmp_108_fu_2288_p1;

assign grp_fu_2590_p3 = tmp_110_fu_2292_p1;

assign grp_intra_pingpong_wrapp_fu_1230_ap_start = grp_intra_pingpong_wrapp_fu_1230_ap_start_reg;

assign grp_intra_pingpong_wrapp_fu_1230_input_flag = input_flag_reg_2877;

assign grp_intra_pingpong_wrapp_fu_1230_process_flag = process_flag_reg_2882;

assign grp_write_back_output_re_fu_2003_IsNL = IsNL_read_reg_2679;

assign grp_write_back_output_re_fu_2003_ap_start = grp_write_back_output_re_fu_2003_ap_start_reg;

assign grp_write_back_output_re_fu_2003_write_flag = write_flag_reg_2887;

assign input_flag_fu_2508_p2 = (MnemLoops_fu_2493_p2 & MneMLoopsaddOne_0_s_fu_2503_p2);

assign mLoops_add1_fu_2308_p2 = (32'd1 + mLoops_0_data_reg);

assign mLoops_add2_fu_2314_p2 = (32'd2 + mLoops_0_data_reg);

assign mLoops_bound_fu_2326_p3 = ((tmp_113_fu_2320_p2[0:0] === 1'b1) ? mLoops_add2_fu_2314_p2 : mLoops_add1_fu_2308_p2);

assign m_1_fu_2458_p2 = (m_reg_1182 + 31'd1);

assign m_cast_fu_2449_p1 = m_reg_1182;

assign output_h_9b_V_fu_2234_p1 = output_h_0_data_reg[8:0];

assign output_w_9b_V_fu_2238_p1 = output_w_0_data_reg[8:0];

assign process_flag_fu_2520_p3 = ((tmp_114_reg_2801[0:0] === 1'b1) ? MnemLoops_fu_2493_p2 : MneMLoopsaddOne_0_1_fu_2514_p2);

assign r_1_fu_2389_p2 = (r_reg_1136 + 31'd1);

assign r_V_24_fu_2600_p0 = r_V_24_fu_2600_p00;

assign r_V_24_fu_2600_p00 = Input_h_10b_V_fu_2258_p1;

assign r_V_24_fu_2600_p1 = r_V_24_fu_2600_p10;

assign r_V_24_fu_2600_p10 = Input_w_9b_V_fu_2262_p1;

assign r_V_fu_2278_p0 = r_V_fu_2278_p00;

assign r_V_fu_2278_p00 = output_w_9b_V_fu_2238_p1;

assign r_V_fu_2278_p1 = r_V_fu_2278_p10;

assign r_V_fu_2278_p10 = output_h_9b_V_fu_2234_p1;

assign r_V_fu_2278_p2 = (r_V_fu_2278_p0 * r_V_fu_2278_p1);

assign r_cast_fu_2380_p1 = r_reg_1136;

assign tmp1_fu_2352_p2 = ($signed(8'd236) + $signed(tmp_117_fu_2344_p1));

assign tmp_108_fu_2288_p1 = Kernel_stride_2b_V_fu_2250_p1;

assign tmp_110_fu_2292_p1 = Kernel_size_2b_V_fu_2254_p1;

assign tmp_113_fu_2320_p2 = ((LayerType_0_data_reg != 32'd0) ? 1'b1 : 1'b0);

assign tmp_114_fu_2374_p2 = ((LayerType_0_data_reg == 32'd0) ? 1'b1 : 1'b0);

assign tmp_115_fu_2384_p2 = (($signed(r_cast_fu_2380_p1) < $signed(rLoops_read_reg_2637)) ? 1'b1 : 1'b0);

assign tmp_116_fu_2395_p2 = (output_h_read_reg_2689 - TMP_R_reg_1147);

assign tmp_117_fu_2344_p1 = InputQ_0_data_reg[7:0];

assign tmp_118_fu_2348_p1 = WeightQ_0_data_reg[7:0];

assign tmp_119_fu_2364_p1 = OutputQ_0_data_reg[7:0];

assign tmp_120_fu_2400_p2 = (($signed(tmp_116_fu_2395_p2) > $signed(TR_read_reg_2659)) ? 1'b1 : 1'b0);

assign tmp_121_fu_2416_p2 = (($signed(c_cast_fu_2412_p1) < $signed(cLoops_read_reg_2632)) ? 1'b1 : 1'b0);

assign tmp_122_fu_2427_p2 = (output_w_read_reg_2694 - TMP_C_reg_1170);

assign tmp_123_fu_2432_p2 = (($signed(tmp_122_fu_2427_p2) > $signed(TC_read_reg_2652)) ? 1'b1 : 1'b0);

assign tmp_124_fu_2453_p2 = (($signed(m_cast_fu_2449_p1) < $signed(mLoops_bound_reg_2781)) ? 1'b1 : 1'b0);

assign tmp_125_fu_2464_p2 = (OutFM_num_read_reg_2720 - TMP_M_reg_1193);

assign tmp_126_fu_2469_p2 = (($signed(tmp_125_fu_2464_p2) > $signed(TM_read_reg_2671)) ? 1'b1 : 1'b0);

assign tmp_fu_2334_p1 = BetaQ_0_data_reg[7:0];

assign trow_loops_6b_V_fu_2266_p1 = trow_loops_0_data_reg[5:0];

assign write_flag_fu_2532_p2 = (MneZero_fu_2481_p2 & MneOne_0_s_fu_2527_p2);

endmodule //YOLO2_FPGA
