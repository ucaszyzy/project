// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module copy_input2buf_row (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_buffer_0_address0,
        input_buffer_0_ce0,
        input_buffer_0_we0,
        input_buffer_0_d0,
        input_buffer_1_address0,
        input_buffer_1_ce0,
        input_buffer_1_we0,
        input_buffer_1_d0,
        input_buffer_2_address0,
        input_buffer_2_ce0,
        input_buffer_2_we0,
        input_buffer_2_d0,
        input_buffer_3_address0,
        input_buffer_3_ce0,
        input_buffer_3_we0,
        input_buffer_3_d0,
        row_len_V,
        col_len_V,
        RowSub_V,
        ColSub_V,
        input_memcpy_buffer_address0,
        input_memcpy_buffer_ce0,
        input_memcpy_buffer_q0,
        input_memcpy_buffer1_address0,
        input_memcpy_buffer1_ce0,
        input_memcpy_buffer1_q0,
        input_memcpy_buffer2_address0,
        input_memcpy_buffer2_ce0,
        input_memcpy_buffer2_q0,
        input_memcpy_buffer3_address0,
        input_memcpy_buffer3_ce0,
        input_memcpy_buffer3_q0,
        RowBeginByte_0_V_re,
        RowBeginByte_1_V_re,
        RowBeginByte_2_V_re,
        RowBeginByte_3_V_re,
        TCol,
        LayerType,
        next_t2_0_V_read,
        p_read15,
        enable,
        T2Rate_V
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_buffer_0_address0;
output   input_buffer_0_ce0;
output   input_buffer_0_we0;
output  [15:0] input_buffer_0_d0;
output  [11:0] input_buffer_1_address0;
output   input_buffer_1_ce0;
output   input_buffer_1_we0;
output  [15:0] input_buffer_1_d0;
output  [11:0] input_buffer_2_address0;
output   input_buffer_2_ce0;
output   input_buffer_2_we0;
output  [15:0] input_buffer_2_d0;
output  [11:0] input_buffer_3_address0;
output   input_buffer_3_ce0;
output   input_buffer_3_we0;
output  [15:0] input_buffer_3_d0;
input  [5:0] row_len_V;
input  [5:0] col_len_V;
input  [0:0] RowSub_V;
input  [0:0] ColSub_V;
output  [4:0] input_memcpy_buffer_address0;
output   input_memcpy_buffer_ce0;
input  [31:0] input_memcpy_buffer_q0;
output  [4:0] input_memcpy_buffer1_address0;
output   input_memcpy_buffer1_ce0;
input  [31:0] input_memcpy_buffer1_q0;
output  [4:0] input_memcpy_buffer2_address0;
output   input_memcpy_buffer2_ce0;
input  [31:0] input_memcpy_buffer2_q0;
output  [4:0] input_memcpy_buffer3_address0;
output   input_memcpy_buffer3_ce0;
input  [31:0] input_memcpy_buffer3_q0;
input  [0:0] RowBeginByte_0_V_re;
input  [0:0] RowBeginByte_1_V_re;
input  [0:0] RowBeginByte_2_V_re;
input  [0:0] RowBeginByte_3_V_re;
input  [7:0] TCol;
input  [1:0] LayerType;
input  [5:0] next_t2_0_V_read;
input   p_read15;
input   enable;
input  [2:0] T2Rate_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] input_buffer_0_address0;
reg input_buffer_0_ce0;
reg input_buffer_0_we0;
reg[15:0] input_buffer_0_d0;
reg[11:0] input_buffer_1_address0;
reg input_buffer_1_ce0;
reg input_buffer_1_we0;
reg[15:0] input_buffer_1_d0;
reg[11:0] input_buffer_2_address0;
reg input_buffer_2_ce0;
reg input_buffer_2_we0;
reg[15:0] input_buffer_2_d0;
reg[11:0] input_buffer_3_address0;
reg input_buffer_3_ce0;
reg input_buffer_3_we0;
reg[15:0] input_buffer_3_d0;
reg input_memcpy_buffer_ce0;
reg input_memcpy_buffer1_ce0;
reg input_memcpy_buffer2_ce0;
reg input_memcpy_buffer3_ce0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] t2_local_V;
reg   [13:0] indvar_flatten_reg_412;
reg   [5:0] p_7_reg_423;
reg   [7:0] t3_reg_432;
wire   [0:0] enable_read_read_fu_198_p2;
wire   [5:0] t2r_V_fu_453_p3;
reg   [5:0] t2r_V_reg_1464;
wire   [0:0] tmp_fu_461_p2;
reg   [0:0] tmp_reg_1472;
wire   [0:0] tmp_s_fu_499_p2;
reg   [0:0] tmp_s_reg_1477;
wire   [5:0] phitmp_fu_505_p2;
reg   [5:0] phitmp_reg_1482;
wire   [15:0] p_s_fu_536_p3;
reg   [15:0] p_s_reg_1488;
wire    ap_CS_fsm_state2;
wire   [5:0] tmp_94_cast_fu_549_p1;
reg   [5:0] tmp_94_cast_reg_1496;
wire   [8:0] tmp_95_cast_fu_552_p1;
reg   [8:0] tmp_95_cast_reg_1502;
wire   [7:0] tmp_95_cast_cast_fu_555_p1;
reg   [7:0] tmp_95_cast_cast_reg_1507;
wire   [7:0] tmp_96_cast_cast_fu_570_p1;
reg   [7:0] tmp_96_cast_cast_reg_1512;
wire   [6:0] r_V_2_fu_580_p2;
reg   [6:0] r_V_2_reg_1517;
wire   [13:0] bound_fu_610_p2;
reg   [13:0] bound_reg_1523;
wire   [0:0] exitcond_flatten_fu_642_p2;
reg   [0:0] exitcond_flatten_reg_1528;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [13:0] indvar_flatten_next_fu_647_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] t3_mid2_fu_664_p3;
reg   [7:0] t3_mid2_reg_1537;
reg   [7:0] t3_mid2_reg_1537_pp0_iter1_reg;
wire   [5:0] tmp_77_mid2_v_fu_681_p3;
reg   [5:0] tmp_77_mid2_v_reg_1543;
reg   [5:0] tmp_77_mid2_v_reg_1543_pp0_iter1_reg;
wire   [0:0] tmp_65_fu_734_p2;
reg   [0:0] tmp_65_reg_1549;
wire   [0:0] brmerge_fu_745_p2;
reg   [0:0] brmerge_reg_1554;
reg   [0:0] brmerge_reg_1554_pp0_iter1_reg;
wire   [7:0] t3_1_fu_751_p2;
wire   [0:0] p_read3_cnt_V_3_1_fu_801_p3;
reg   [0:0] p_read3_cnt_V_3_1_reg_1563;
wire   [0:0] p_read2_cnt_V_2_1_fu_808_p3;
reg   [0:0] p_read2_cnt_V_2_1_reg_1568;
wire   [0:0] p_read1_cnt_V_1_1_fu_815_p3;
reg   [0:0] p_read1_cnt_V_1_1_reg_1573;
wire   [0:0] p_read_cnt_V_0_1_fu_822_p3;
reg   [0:0] p_read_cnt_V_0_1_reg_1578;
wire   [0:0] p_NextInputFlag_3_1_fu_829_p2;
reg   [0:0] p_NextInputFlag_3_1_reg_1583;
wire   [0:0] p_NextInputFlag_2_1_fu_835_p2;
reg   [0:0] p_NextInputFlag_2_1_reg_1589;
wire   [0:0] p_NextInputFlag_1_1_fu_841_p2;
reg   [0:0] p_NextInputFlag_1_1_reg_1595;
wire   [0:0] p_NextInputFlag_0_1_fu_847_p2;
reg   [0:0] p_NextInputFlag_0_1_reg_1601;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [5:0] ap_phi_mux_p_7_phi_fu_426_p4;
wire    ap_block_pp0_stage0;
wire  signed [63:0] tmp_67_fu_859_p1;
wire  signed [63:0] tmp_68_fu_878_p1;
wire  signed [63:0] tmp_69_fu_897_p1;
wire  signed [63:0] tmp_70_fu_916_p1;
wire   [63:0] tmp_76_cast_fu_1186_p1;
wire   [63:0] tmp_70_cast_fu_1267_p1;
wire    ap_CS_fsm_state6;
reg   [0:0] IsRowInit_flag_1_fu_108;
wire   [0:0] p_IsRowInit_flag_1_fu_853_p2;
reg   [31:0] input_mmcpy_offset_0_fu_112;
wire   [31:0] input_mmcpy_offset_0_3_fu_870_p3;
reg   [31:0] input_mmcpy_offset_1_fu_116;
wire   [31:0] input_mmcpy_offset_1_3_fu_889_p3;
reg   [31:0] input_mmcpy_offset_2_fu_120;
wire   [31:0] input_mmcpy_offset_2_3_fu_908_p3;
reg   [31:0] input_mmcpy_offset_3_fu_124;
wire   [31:0] input_mmcpy_offset_3_3_fu_927_p3;
reg   [0:0] NextInputFlag_0_1_fu_128;
reg   [0:0] NextInputFlag_1_1_fu_132;
reg   [0:0] NextInputFlag_2_1_fu_136;
reg   [0:0] NextInputFlag_3_1_fu_140;
reg   [0:0] cnt_0_V_1_fu_144;
wire   [0:0] cnt_0_V_fu_935_p2;
reg   [0:0] cnt_1_V_1_fu_148;
wire   [0:0] cnt_1_V_fu_941_p2;
reg   [0:0] cnt_2_V_1_fu_152;
wire   [0:0] cnt_2_V_fu_947_p2;
reg   [0:0] cnt_3_V_1_fu_156;
wire   [0:0] cnt_3_V_fu_953_p2;
reg   [15:0] input_array_0_0_fu_160;
wire   [15:0] input_array_0_0_1_fu_1078_p3;
reg   [15:0] input_array_0_1_2_fu_164;
wire   [15:0] input_array_0_1_1_fu_1071_p3;
reg   [15:0] input_array_1_0_fu_168;
wire   [15:0] input_array_1_0_1_fu_1106_p3;
reg   [15:0] input_array_1_1_2_fu_172;
wire   [15:0] input_array_1_1_1_fu_1099_p3;
reg   [15:0] input_array_2_0_fu_176;
wire   [15:0] input_array_2_0_1_fu_1134_p3;
reg   [15:0] input_array_2_1_2_fu_180;
wire   [15:0] input_array_2_1_1_fu_1127_p3;
reg   [15:0] input_array_3_0_fu_184;
wire   [15:0] input_array_3_0_1_fu_1162_p3;
reg   [15:0] input_array_3_1_2_fu_188;
wire   [15:0] input_array_3_1_1_fu_1155_p3;
wire   [15:0] input_array_load_phi_fu_1169_p3;
wire   [15:0] input_array_load_1_p_fu_1194_p3;
wire   [15:0] input_array_load_2_p_fu_1202_p3;
wire   [15:0] input_array_load_3_p_fu_1210_p3;
wire   [0:0] initial_fu_443_p2;
wire   [0:0] T2R_V_1_fu_473_p0;
wire   [2:0] T2R_V_fu_467_p2;
wire   [2:0] T2R_V_1_fu_473_p3;
wire   [6:0] rhs_V_fu_485_p1;
wire   [6:0] lhs_V_fu_481_p1;
wire   [6:0] r_V_fu_493_p2;
wire   [5:0] tmp_29_fu_489_p1;
wire   [6:0] rhs_V_7_fu_561_p1;
wire   [6:0] lhs_V_9_fu_558_p1;
wire   [6:0] r_V_22_fu_564_p2;
wire   [6:0] rhs_V_1_fu_577_p1;
wire   [6:0] lhs_V_2_fu_574_p1;
wire   [5:0] T2R_bound_V_fu_543_p3;
wire   [0:0] tmp_60_fu_586_p2;
wire   [5:0] umax1_fu_591_p3;
wire   [5:0] tmp_61_fu_598_p2;
wire   [5:0] bound_fu_610_p0;
wire   [7:0] bound_fu_610_p1;
wire   [6:0] tmp_99_cast4_fu_616_p1;
wire   [0:0] ult_fu_625_p2;
wire   [0:0] tmp_62_fu_620_p2;
wire   [0:0] rev_fu_630_p2;
wire   [0:0] exitcond_fu_659_p2;
wire   [5:0] t2r_V_1_fu_653_p2;
wire   [6:0] tmp_99_cast4_mid1_fu_672_p1;
wire   [0:0] ult1_fu_689_p2;
wire   [0:0] tmp_76_mid1_fu_676_p2;
wire   [0:0] rev1_fu_694_p2;
wire   [0:0] tmp1_mid1_fu_700_p2;
wire   [0:0] tmp1_fu_636_p2;
wire   [0:0] ult2_fu_723_p2;
wire   [8:0] t3_cast_fu_714_p1;
wire   [0:0] rev2_fu_728_p2;
wire   [0:0] tmp_64_fu_718_p2;
wire   [0:0] tmp2_fu_739_p2;
wire   [0:0] tmp1_mid2_fu_706_p3;
wire   [0:0] IsRowInit_fu_760_p2;
wire  signed [31:0] tmp_67_fu_859_p0;
wire  signed [31:0] input_mmcpy_offset_0_2_fu_864_p1;
wire   [31:0] input_mmcpy_offset_0_2_fu_864_p2;
wire  signed [31:0] input_mmcpy_offset_0_3_fu_870_p2;
wire  signed [31:0] tmp_68_fu_878_p0;
wire  signed [31:0] input_mmcpy_offset_1_2_fu_883_p1;
wire   [31:0] input_mmcpy_offset_1_2_fu_883_p2;
wire  signed [31:0] input_mmcpy_offset_1_3_fu_889_p2;
wire  signed [31:0] tmp_69_fu_897_p0;
wire  signed [31:0] input_mmcpy_offset_2_2_fu_902_p1;
wire   [31:0] input_mmcpy_offset_2_2_fu_902_p2;
wire  signed [31:0] input_mmcpy_offset_2_3_fu_908_p2;
wire  signed [31:0] tmp_70_fu_916_p0;
wire  signed [31:0] input_mmcpy_offset_3_2_fu_921_p1;
wire   [31:0] input_mmcpy_offset_3_2_fu_921_p2;
wire  signed [31:0] input_mmcpy_offset_3_3_fu_927_p2;
wire   [5:0] tmp_63_fu_1027_p0;
wire   [15:0] input_array_0_1_fu_1061_p4;
wire   [15:0] input_array_0_0_2_fu_1057_p1;
wire   [15:0] input_array_1_1_fu_1089_p4;
wire   [15:0] input_array_1_0_2_fu_1085_p1;
wire   [15:0] input_array_2_1_fu_1117_p4;
wire   [15:0] input_array_2_0_2_fu_1113_p1;
wire   [15:0] input_array_3_1_fu_1145_p4;
wire   [15:0] input_array_3_0_2_fu_1141_p1;
wire   [11:0] tmp_75_cast_fu_1177_p1;
wire   [11:0] tmp_63_fu_1027_p2;
wire   [11:0] tmp_71_fu_1180_p2;
wire   [11:0] tmp_69_cast_fu_1258_p1;
wire   [11:0] tmp_66_fu_1261_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] bound_fu_610_p00;
wire   [13:0] bound_fu_610_p10;
wire   [11:0] tmp_63_fu_1027_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 t2_local_V = 6'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge_reg_1554 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        IsRowInit_flag_1_fu_108 <= p_IsRowInit_flag_1_fu_853_p2;
    end else if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        IsRowInit_flag_1_fu_108 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_642_p2 == 1'd0))) begin
        indvar_flatten_reg_412 <= indvar_flatten_next_fu_647_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_412 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge_reg_1554 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_mmcpy_offset_0_fu_112 <= input_mmcpy_offset_0_3_fu_870_p3;
    end else if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_mmcpy_offset_0_fu_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge_reg_1554 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_mmcpy_offset_1_fu_116 <= input_mmcpy_offset_1_3_fu_889_p3;
    end else if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_mmcpy_offset_1_fu_116 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge_reg_1554 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_mmcpy_offset_2_fu_120 <= input_mmcpy_offset_2_3_fu_908_p3;
    end else if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_mmcpy_offset_2_fu_120 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge_reg_1554 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_mmcpy_offset_3_fu_124 <= input_mmcpy_offset_3_3_fu_927_p3;
    end else if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_mmcpy_offset_3_fu_124 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1528 == 1'd0))) begin
        p_7_reg_423 <= tmp_77_mid2_v_reg_1543;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_7_reg_423 <= t2r_V_reg_1464;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_642_p2 == 1'd0))) begin
        t3_reg_432 <= t3_1_fu_751_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t3_reg_432 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge_reg_1554 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        NextInputFlag_0_1_fu_128 <= p_read_cnt_V_0_1_fu_822_p3;
        NextInputFlag_1_1_fu_132 <= p_read1_cnt_V_1_1_fu_815_p3;
        NextInputFlag_2_1_fu_136 <= p_read2_cnt_V_2_1_fu_808_p3;
        NextInputFlag_3_1_fu_140 <= p_read3_cnt_V_3_1_fu_801_p3;
        cnt_0_V_1_fu_144 <= cnt_0_V_fu_935_p2;
        cnt_1_V_1_fu_148 <= cnt_1_V_fu_941_p2;
        cnt_2_V_1_fu_152 <= cnt_2_V_fu_947_p2;
        cnt_3_V_1_fu_156 <= cnt_3_V_fu_953_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_1523 <= bound_fu_610_p2;
        p_s_reg_1488[0] <= p_s_fu_536_p3[0];
p_s_reg_1488[15] <= p_s_fu_536_p3[15];
        r_V_2_reg_1517 <= r_V_2_fu_580_p2;
        tmp_94_cast_reg_1496[0] <= tmp_94_cast_fu_549_p1[0];
        tmp_95_cast_cast_reg_1507[0] <= tmp_95_cast_cast_fu_555_p1[0];
        tmp_95_cast_reg_1502[0] <= tmp_95_cast_fu_552_p1[0];
        tmp_96_cast_cast_reg_1512[6 : 0] <= tmp_96_cast_cast_fu_570_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_642_p2 == 1'd0))) begin
        brmerge_reg_1554 <= brmerge_fu_745_p2;
        t3_mid2_reg_1537 <= t3_mid2_fu_664_p3;
        tmp_65_reg_1549 <= tmp_65_fu_734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1554_pp0_iter1_reg <= brmerge_reg_1554;
        exitcond_flatten_reg_1528 <= exitcond_flatten_fu_642_p2;
        t3_mid2_reg_1537_pp0_iter1_reg <= t3_mid2_reg_1537;
        tmp_77_mid2_v_reg_1543_pp0_iter1_reg <= tmp_77_mid2_v_reg_1543;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_array_0_0_fu_160 <= input_array_0_0_1_fu_1078_p3;
        input_array_0_1_2_fu_164 <= input_array_0_1_1_fu_1071_p3;
        input_array_1_0_fu_168 <= input_array_1_0_1_fu_1106_p3;
        input_array_1_1_2_fu_172 <= input_array_1_1_1_fu_1099_p3;
        input_array_2_0_fu_176 <= input_array_2_0_1_fu_1134_p3;
        input_array_2_1_2_fu_180 <= input_array_2_1_1_fu_1127_p3;
        input_array_3_0_fu_184 <= input_array_3_0_1_fu_1162_p3;
        input_array_3_1_2_fu_188 <= input_array_3_1_1_fu_1155_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (brmerge_reg_1554 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_NextInputFlag_0_1_reg_1601 <= p_NextInputFlag_0_1_fu_847_p2;
        p_NextInputFlag_1_1_reg_1595 <= p_NextInputFlag_1_1_fu_841_p2;
        p_NextInputFlag_2_1_reg_1589 <= p_NextInputFlag_2_1_fu_835_p2;
        p_NextInputFlag_3_1_reg_1583 <= p_NextInputFlag_3_1_fu_829_p2;
        p_read1_cnt_V_1_1_reg_1573 <= p_read1_cnt_V_1_1_fu_815_p3;
        p_read2_cnt_V_2_1_reg_1568 <= p_read2_cnt_V_2_1_fu_808_p3;
        p_read3_cnt_V_3_1_reg_1563 <= p_read3_cnt_V_3_1_fu_801_p3;
        p_read_cnt_V_0_1_reg_1578 <= p_read_cnt_V_0_1_fu_822_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        phitmp_reg_1482 <= phitmp_fu_505_p2;
        t2r_V_reg_1464 <= t2r_V_fu_453_p3;
        tmp_reg_1472 <= tmp_fu_461_p2;
        tmp_s_reg_1477 <= tmp_s_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        t2_local_V <= phitmp_reg_1482;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_642_p2 == 1'd0))) begin
        tmp_77_mid2_v_reg_1543 <= tmp_77_mid2_v_fu_681_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_642_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1528 == 1'd0))) begin
        ap_phi_mux_p_7_phi_fu_426_p4 = tmp_77_mid2_v_reg_1543;
    end else begin
        ap_phi_mux_p_7_phi_fu_426_p4 = p_7_reg_423;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_0_address0 = tmp_70_cast_fu_1267_p1;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_0_address0 = tmp_76_cast_fu_1186_p1;
        end else begin
            input_buffer_0_address0 = 'bx;
        end
    end else begin
        input_buffer_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_0_ce0 = 1'b1;
    end else begin
        input_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_0_d0 = p_s_reg_1488;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_0_d0 = input_array_load_phi_fu_1169_p3;
        end else begin
            input_buffer_0_d0 = 'bx;
        end
    end else begin
        input_buffer_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_0_we0 = 1'b1;
    end else begin
        input_buffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_1_address0 = tmp_70_cast_fu_1267_p1;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_1_address0 = tmp_76_cast_fu_1186_p1;
        end else begin
            input_buffer_1_address0 = 'bx;
        end
    end else begin
        input_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_1_ce0 = 1'b1;
    end else begin
        input_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_1_d0 = p_s_reg_1488;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_1_d0 = input_array_load_1_p_fu_1194_p3;
        end else begin
            input_buffer_1_d0 = 'bx;
        end
    end else begin
        input_buffer_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_1_we0 = 1'b1;
    end else begin
        input_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_2_address0 = tmp_70_cast_fu_1267_p1;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_2_address0 = tmp_76_cast_fu_1186_p1;
        end else begin
            input_buffer_2_address0 = 'bx;
        end
    end else begin
        input_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_2_ce0 = 1'b1;
    end else begin
        input_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_2_d0 = p_s_reg_1488;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_2_d0 = input_array_load_2_p_fu_1202_p3;
        end else begin
            input_buffer_2_d0 = 'bx;
        end
    end else begin
        input_buffer_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_2_we0 = 1'b1;
    end else begin
        input_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_3_address0 = tmp_70_cast_fu_1267_p1;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_3_address0 = tmp_76_cast_fu_1186_p1;
        end else begin
            input_buffer_3_address0 = 'bx;
        end
    end else begin
        input_buffer_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_3_ce0 = 1'b1;
    end else begin
        input_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((brmerge_reg_1554_pp0_iter1_reg == 1'd1)) begin
            input_buffer_3_d0 = p_s_reg_1488;
        end else if ((brmerge_reg_1554_pp0_iter1_reg == 1'd0)) begin
            input_buffer_3_d0 = input_array_load_3_p_fu_1210_p3;
        end else begin
            input_buffer_3_d0 = 'bx;
        end
    end else begin
        input_buffer_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (brmerge_reg_1554_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (brmerge_reg_1554_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_buffer_3_we0 = 1'b1;
    end else begin
        input_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_memcpy_buffer1_ce0 = 1'b1;
    end else begin
        input_memcpy_buffer1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_memcpy_buffer2_ce0 = 1'b1;
    end else begin
        input_memcpy_buffer2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_memcpy_buffer3_ce0 = 1'b1;
    end else begin
        input_memcpy_buffer3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_memcpy_buffer_ce0 = 1'b1;
    end else begin
        input_memcpy_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((ap_start == 1'b1) & (enable_read_read_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_642_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_642_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IsRowInit_fu_760_p2 = (tmp_65_reg_1549 & IsRowInit_flag_1_fu_108);

assign T2R_V_1_fu_473_p0 = p_read15;

assign T2R_V_1_fu_473_p3 = ((T2R_V_1_fu_473_p0[0:0] === 1'b1) ? T2Rate_V : T2R_V_fu_467_p2);

assign T2R_V_fu_467_p2 = (T2Rate_V + 3'd1);

assign T2R_bound_V_fu_543_p3 = ((tmp_s_reg_1477[0:0] === 1'b1) ? phitmp_reg_1482 : 6'd53);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound_fu_610_p0 = bound_fu_610_p00;

assign bound_fu_610_p00 = tmp_61_fu_598_p2;

assign bound_fu_610_p1 = bound_fu_610_p10;

assign bound_fu_610_p10 = TCol;

assign bound_fu_610_p2 = (bound_fu_610_p0 * bound_fu_610_p1);

assign brmerge_fu_745_p2 = (tmp2_fu_739_p2 | tmp1_mid2_fu_706_p3);

assign cnt_0_V_fu_935_p2 = (p_read_cnt_V_0_1_fu_822_p3 ^ 1'd1);

assign cnt_1_V_fu_941_p2 = (p_read1_cnt_V_1_1_fu_815_p3 ^ 1'd1);

assign cnt_2_V_fu_947_p2 = (p_read2_cnt_V_2_1_fu_808_p3 ^ 1'd1);

assign cnt_3_V_fu_953_p2 = (p_read3_cnt_V_3_1_fu_801_p3 ^ 1'd1);

assign enable_read_read_fu_198_p2 = enable;

assign exitcond_flatten_fu_642_p2 = ((indvar_flatten_reg_412 == bound_reg_1523) ? 1'b1 : 1'b0);

assign exitcond_fu_659_p2 = ((t3_reg_432 == TCol) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_647_p2 = (indvar_flatten_reg_412 + 14'd1);

assign initial_fu_443_p2 = ((next_t2_0_V_read == 6'd0) ? 1'b1 : 1'b0);

assign input_array_0_0_1_fu_1078_p3 = ((p_NextInputFlag_0_1_reg_1601[0:0] === 1'b1) ? input_array_0_0_2_fu_1057_p1 : input_array_0_0_fu_160);

assign input_array_0_0_2_fu_1057_p1 = input_memcpy_buffer_q0[15:0];

assign input_array_0_1_1_fu_1071_p3 = ((p_NextInputFlag_0_1_reg_1601[0:0] === 1'b1) ? input_array_0_1_fu_1061_p4 : input_array_0_1_2_fu_164);

assign input_array_0_1_fu_1061_p4 = {{input_memcpy_buffer_q0[31:16]}};

assign input_array_1_0_1_fu_1106_p3 = ((p_NextInputFlag_1_1_reg_1595[0:0] === 1'b1) ? input_array_1_0_2_fu_1085_p1 : input_array_1_0_fu_168);

assign input_array_1_0_2_fu_1085_p1 = input_memcpy_buffer1_q0[15:0];

assign input_array_1_1_1_fu_1099_p3 = ((p_NextInputFlag_1_1_reg_1595[0:0] === 1'b1) ? input_array_1_1_fu_1089_p4 : input_array_1_1_2_fu_172);

assign input_array_1_1_fu_1089_p4 = {{input_memcpy_buffer1_q0[31:16]}};

assign input_array_2_0_1_fu_1134_p3 = ((p_NextInputFlag_2_1_reg_1589[0:0] === 1'b1) ? input_array_2_0_2_fu_1113_p1 : input_array_2_0_fu_176);

assign input_array_2_0_2_fu_1113_p1 = input_memcpy_buffer2_q0[15:0];

assign input_array_2_1_1_fu_1127_p3 = ((p_NextInputFlag_2_1_reg_1589[0:0] === 1'b1) ? input_array_2_1_fu_1117_p4 : input_array_2_1_2_fu_180);

assign input_array_2_1_fu_1117_p4 = {{input_memcpy_buffer2_q0[31:16]}};

assign input_array_3_0_1_fu_1162_p3 = ((p_NextInputFlag_3_1_reg_1583[0:0] === 1'b1) ? input_array_3_0_2_fu_1141_p1 : input_array_3_0_fu_184);

assign input_array_3_0_2_fu_1141_p1 = input_memcpy_buffer3_q0[15:0];

assign input_array_3_1_1_fu_1155_p3 = ((p_NextInputFlag_3_1_reg_1583[0:0] === 1'b1) ? input_array_3_1_fu_1145_p4 : input_array_3_1_2_fu_188);

assign input_array_3_1_fu_1145_p4 = {{input_memcpy_buffer3_q0[31:16]}};

assign input_array_load_1_p_fu_1194_p3 = ((p_read1_cnt_V_1_1_reg_1573[0:0] === 1'b1) ? input_array_1_1_1_fu_1099_p3 : input_array_1_0_1_fu_1106_p3);

assign input_array_load_2_p_fu_1202_p3 = ((p_read2_cnt_V_2_1_reg_1568[0:0] === 1'b1) ? input_array_2_1_1_fu_1127_p3 : input_array_2_0_1_fu_1134_p3);

assign input_array_load_3_p_fu_1210_p3 = ((p_read3_cnt_V_3_1_reg_1563[0:0] === 1'b1) ? input_array_3_1_1_fu_1155_p3 : input_array_3_0_1_fu_1162_p3);

assign input_array_load_phi_fu_1169_p3 = ((p_read_cnt_V_0_1_reg_1578[0:0] === 1'b1) ? input_array_0_1_1_fu_1071_p3 : input_array_0_0_1_fu_1078_p3);

assign input_memcpy_buffer1_address0 = tmp_68_fu_878_p1;

assign input_memcpy_buffer2_address0 = tmp_69_fu_897_p1;

assign input_memcpy_buffer3_address0 = tmp_70_fu_916_p1;

assign input_memcpy_buffer_address0 = tmp_67_fu_859_p1;

assign input_mmcpy_offset_0_2_fu_864_p1 = input_mmcpy_offset_0_fu_112;

assign input_mmcpy_offset_0_2_fu_864_p2 = ($signed(32'd1) + $signed(input_mmcpy_offset_0_2_fu_864_p1));

assign input_mmcpy_offset_0_3_fu_870_p2 = input_mmcpy_offset_0_fu_112;

assign input_mmcpy_offset_0_3_fu_870_p3 = ((p_NextInputFlag_0_1_fu_847_p2[0:0] === 1'b1) ? input_mmcpy_offset_0_2_fu_864_p2 : input_mmcpy_offset_0_3_fu_870_p2);

assign input_mmcpy_offset_1_2_fu_883_p1 = input_mmcpy_offset_1_fu_116;

assign input_mmcpy_offset_1_2_fu_883_p2 = ($signed(32'd1) + $signed(input_mmcpy_offset_1_2_fu_883_p1));

assign input_mmcpy_offset_1_3_fu_889_p2 = input_mmcpy_offset_1_fu_116;

assign input_mmcpy_offset_1_3_fu_889_p3 = ((p_NextInputFlag_1_1_fu_841_p2[0:0] === 1'b1) ? input_mmcpy_offset_1_2_fu_883_p2 : input_mmcpy_offset_1_3_fu_889_p2);

assign input_mmcpy_offset_2_2_fu_902_p1 = input_mmcpy_offset_2_fu_120;

assign input_mmcpy_offset_2_2_fu_902_p2 = ($signed(32'd1) + $signed(input_mmcpy_offset_2_2_fu_902_p1));

assign input_mmcpy_offset_2_3_fu_908_p2 = input_mmcpy_offset_2_fu_120;

assign input_mmcpy_offset_2_3_fu_908_p3 = ((p_NextInputFlag_2_1_fu_835_p2[0:0] === 1'b1) ? input_mmcpy_offset_2_2_fu_902_p2 : input_mmcpy_offset_2_3_fu_908_p2);

assign input_mmcpy_offset_3_2_fu_921_p1 = input_mmcpy_offset_3_fu_124;

assign input_mmcpy_offset_3_2_fu_921_p2 = ($signed(32'd1) + $signed(input_mmcpy_offset_3_2_fu_921_p1));

assign input_mmcpy_offset_3_3_fu_927_p2 = input_mmcpy_offset_3_fu_124;

assign input_mmcpy_offset_3_3_fu_927_p3 = ((p_NextInputFlag_3_1_fu_829_p2[0:0] === 1'b1) ? input_mmcpy_offset_3_2_fu_921_p2 : input_mmcpy_offset_3_3_fu_927_p2);

assign lhs_V_2_fu_574_p1 = row_len_V;

assign lhs_V_9_fu_558_p1 = col_len_V;

assign lhs_V_fu_481_p1 = t2r_V_fu_453_p3;

assign p_IsRowInit_flag_1_fu_853_p2 = (IsRowInit_fu_760_p2 ^ IsRowInit_flag_1_fu_108);

assign p_NextInputFlag_0_1_fu_847_p2 = (NextInputFlag_0_1_fu_128 | IsRowInit_fu_760_p2);

assign p_NextInputFlag_1_1_fu_841_p2 = (NextInputFlag_1_1_fu_132 | IsRowInit_fu_760_p2);

assign p_NextInputFlag_2_1_fu_835_p2 = (NextInputFlag_2_1_fu_136 | IsRowInit_fu_760_p2);

assign p_NextInputFlag_3_1_fu_829_p2 = (NextInputFlag_3_1_fu_140 | IsRowInit_fu_760_p2);

assign p_read1_cnt_V_1_1_fu_815_p3 = ((IsRowInit_fu_760_p2[0:0] === 1'b1) ? RowBeginByte_1_V_re : cnt_1_V_1_fu_148);

assign p_read2_cnt_V_2_1_fu_808_p3 = ((IsRowInit_fu_760_p2[0:0] === 1'b1) ? RowBeginByte_2_V_re : cnt_2_V_1_fu_152);

assign p_read3_cnt_V_3_1_fu_801_p3 = ((IsRowInit_fu_760_p2[0:0] === 1'b1) ? RowBeginByte_3_V_re : cnt_3_V_1_fu_156);

assign p_read_cnt_V_0_1_fu_822_p3 = ((IsRowInit_fu_760_p2[0:0] === 1'b1) ? RowBeginByte_0_V_re : cnt_0_V_1_fu_144);

assign p_s_fu_536_p3 = ((tmp_reg_1472[0:0] === 1'b1) ? 16'd32769 : 16'd0);

assign phitmp_fu_505_p2 = (tmp_29_fu_489_p1 + t2r_V_fu_453_p3);

assign r_V_22_fu_564_p2 = (rhs_V_7_fu_561_p1 + lhs_V_9_fu_558_p1);

assign r_V_2_fu_580_p2 = (rhs_V_1_fu_577_p1 + lhs_V_2_fu_574_p1);

assign r_V_fu_493_p2 = (rhs_V_fu_485_p1 + lhs_V_fu_481_p1);

assign rev1_fu_694_p2 = (ult1_fu_689_p2 ^ 1'd1);

assign rev2_fu_728_p2 = (ult2_fu_723_p2 ^ 1'd1);

assign rev_fu_630_p2 = (ult_fu_625_p2 ^ 1'd1);

assign rhs_V_1_fu_577_p1 = RowSub_V;

assign rhs_V_7_fu_561_p1 = ColSub_V;

assign rhs_V_fu_485_p1 = T2R_V_1_fu_473_p3;

assign t2r_V_1_fu_653_p2 = (ap_phi_mux_p_7_phi_fu_426_p4 + 6'd1);

assign t2r_V_fu_453_p3 = ((initial_fu_443_p2[0:0] === 1'b1) ? 6'd0 : t2_local_V);

assign t3_1_fu_751_p2 = (t3_mid2_fu_664_p3 + 8'd1);

assign t3_cast_fu_714_p1 = t3_mid2_fu_664_p3;

assign t3_mid2_fu_664_p3 = ((exitcond_fu_659_p2[0:0] === 1'b1) ? 8'd0 : t3_reg_432);

assign tmp1_fu_636_p2 = (tmp_62_fu_620_p2 | rev_fu_630_p2);

assign tmp1_mid1_fu_700_p2 = (tmp_76_mid1_fu_676_p2 | rev1_fu_694_p2);

assign tmp1_mid2_fu_706_p3 = ((exitcond_fu_659_p2[0:0] === 1'b1) ? tmp1_mid1_fu_700_p2 : tmp1_fu_636_p2);

assign tmp2_fu_739_p2 = (tmp_64_fu_718_p2 | rev2_fu_728_p2);

assign tmp_29_fu_489_p1 = T2R_V_1_fu_473_p3;

assign tmp_60_fu_586_p2 = ((t2r_V_reg_1464 > T2R_bound_V_fu_543_p3) ? 1'b1 : 1'b0);

assign tmp_61_fu_598_p2 = (umax1_fu_591_p3 - t2r_V_reg_1464);

assign tmp_62_fu_620_p2 = ((ap_phi_mux_p_7_phi_fu_426_p4 < tmp_94_cast_reg_1496) ? 1'b1 : 1'b0);

assign tmp_63_fu_1027_p0 = tmp_63_fu_1027_p00;

assign tmp_63_fu_1027_p00 = tmp_77_mid2_v_reg_1543_pp0_iter1_reg;

assign tmp_63_fu_1027_p2 = (tmp_63_fu_1027_p0 * $signed('h35));

assign tmp_64_fu_718_p2 = ((t3_mid2_fu_664_p3 < tmp_95_cast_cast_reg_1507) ? 1'b1 : 1'b0);

assign tmp_65_fu_734_p2 = ((t3_cast_fu_714_p1 == tmp_95_cast_reg_1502) ? 1'b1 : 1'b0);

assign tmp_66_fu_1261_p2 = (tmp_63_fu_1027_p2 + tmp_69_cast_fu_1258_p1);

assign tmp_67_fu_859_p0 = input_mmcpy_offset_0_fu_112;

assign tmp_67_fu_859_p1 = tmp_67_fu_859_p0;

assign tmp_68_fu_878_p0 = input_mmcpy_offset_1_fu_116;

assign tmp_68_fu_878_p1 = tmp_68_fu_878_p0;

assign tmp_69_cast_fu_1258_p1 = t3_mid2_reg_1537_pp0_iter1_reg;

assign tmp_69_fu_897_p0 = input_mmcpy_offset_2_fu_120;

assign tmp_69_fu_897_p1 = tmp_69_fu_897_p0;

assign tmp_70_cast_fu_1267_p1 = tmp_66_fu_1261_p2;

assign tmp_70_fu_916_p0 = input_mmcpy_offset_3_fu_124;

assign tmp_70_fu_916_p1 = tmp_70_fu_916_p0;

assign tmp_71_fu_1180_p2 = (tmp_75_cast_fu_1177_p1 + tmp_63_fu_1027_p2);

assign tmp_75_cast_fu_1177_p1 = t3_mid2_reg_1537_pp0_iter1_reg;

assign tmp_76_cast_fu_1186_p1 = tmp_71_fu_1180_p2;

assign tmp_76_mid1_fu_676_p2 = ((t2r_V_1_fu_653_p2 < tmp_94_cast_reg_1496) ? 1'b1 : 1'b0);

assign tmp_77_mid2_v_fu_681_p3 = ((exitcond_fu_659_p2[0:0] === 1'b1) ? t2r_V_1_fu_653_p2 : ap_phi_mux_p_7_phi_fu_426_p4);

assign tmp_94_cast_fu_549_p1 = RowSub_V;

assign tmp_95_cast_cast_fu_555_p1 = ColSub_V;

assign tmp_95_cast_fu_552_p1 = ColSub_V;

assign tmp_96_cast_cast_fu_570_p1 = r_V_22_fu_564_p2;

assign tmp_99_cast4_fu_616_p1 = ap_phi_mux_p_7_phi_fu_426_p4;

assign tmp_99_cast4_mid1_fu_672_p1 = t2r_V_1_fu_653_p2;

assign tmp_fu_461_p2 = ((LayerType == 2'd1) ? 1'b1 : 1'b0);

assign tmp_s_fu_499_p2 = ((r_V_fu_493_p2 < 7'd53) ? 1'b1 : 1'b0);

assign ult1_fu_689_p2 = ((tmp_99_cast4_mid1_fu_672_p1 < r_V_2_reg_1517) ? 1'b1 : 1'b0);

assign ult2_fu_723_p2 = ((t3_mid2_fu_664_p3 < tmp_96_cast_cast_reg_1512) ? 1'b1 : 1'b0);

assign ult_fu_625_p2 = ((tmp_99_cast4_fu_616_p1 < r_V_2_reg_1517) ? 1'b1 : 1'b0);

assign umax1_fu_591_p3 = ((tmp_60_fu_586_p2[0:0] === 1'b1) ? t2r_V_reg_1464 : T2R_bound_V_fu_543_p3);

always @ (posedge ap_clk) begin
    p_s_reg_1488[14:1] <= 14'b00000000000000;
    tmp_94_cast_reg_1496[5:1] <= 5'b00000;
    tmp_95_cast_reg_1502[8:1] <= 8'b00000000;
    tmp_95_cast_cast_reg_1507[7:1] <= 7'b0000000;
    tmp_96_cast_cast_reg_1512[7] <= 1'b0;
end

endmodule //copy_input2buf_row
