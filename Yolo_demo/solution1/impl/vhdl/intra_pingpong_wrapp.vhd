-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity intra_pingpong_wrapp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_Input_r_AWVALID : OUT STD_LOGIC;
    m_axi_Input_r_AWREADY : IN STD_LOGIC;
    m_axi_Input_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_WVALID : OUT STD_LOGIC;
    m_axi_Input_r_WREADY : IN STD_LOGIC;
    m_axi_Input_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input_r_WLAST : OUT STD_LOGIC;
    m_axi_Input_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_ARVALID : OUT STD_LOGIC;
    m_axi_Input_r_ARREADY : IN STD_LOGIC;
    m_axi_Input_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_RVALID : IN STD_LOGIC;
    m_axi_Input_r_RREADY : OUT STD_LOGIC;
    m_axi_Input_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input_r_RLAST : IN STD_LOGIC;
    m_axi_Input_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input_r_BVALID : IN STD_LOGIC;
    m_axi_Input_r_BREADY : OUT STD_LOGIC;
    m_axi_Input_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Input_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    m_axi_Input1_AWVALID : OUT STD_LOGIC;
    m_axi_Input1_AWREADY : IN STD_LOGIC;
    m_axi_Input1_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_WVALID : OUT STD_LOGIC;
    m_axi_Input1_WREADY : IN STD_LOGIC;
    m_axi_Input1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input1_WLAST : OUT STD_LOGIC;
    m_axi_Input1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_ARVALID : OUT STD_LOGIC;
    m_axi_Input1_ARREADY : IN STD_LOGIC;
    m_axi_Input1_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_RVALID : IN STD_LOGIC;
    m_axi_Input1_RREADY : OUT STD_LOGIC;
    m_axi_Input1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input1_RLAST : IN STD_LOGIC;
    m_axi_Input1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input1_BVALID : IN STD_LOGIC;
    m_axi_Input1_BREADY : OUT STD_LOGIC;
    m_axi_Input1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Input1_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    m_axi_Input2_AWVALID : OUT STD_LOGIC;
    m_axi_Input2_AWREADY : IN STD_LOGIC;
    m_axi_Input2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_WVALID : OUT STD_LOGIC;
    m_axi_Input2_WREADY : IN STD_LOGIC;
    m_axi_Input2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input2_WLAST : OUT STD_LOGIC;
    m_axi_Input2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_ARVALID : OUT STD_LOGIC;
    m_axi_Input2_ARREADY : IN STD_LOGIC;
    m_axi_Input2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_RVALID : IN STD_LOGIC;
    m_axi_Input2_RREADY : OUT STD_LOGIC;
    m_axi_Input2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input2_RLAST : IN STD_LOGIC;
    m_axi_Input2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input2_BVALID : IN STD_LOGIC;
    m_axi_Input2_BREADY : OUT STD_LOGIC;
    m_axi_Input2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Input2_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    m_axi_Input3_AWVALID : OUT STD_LOGIC;
    m_axi_Input3_AWREADY : IN STD_LOGIC;
    m_axi_Input3_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_WVALID : OUT STD_LOGIC;
    m_axi_Input3_WREADY : IN STD_LOGIC;
    m_axi_Input3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input3_WLAST : OUT STD_LOGIC;
    m_axi_Input3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_ARVALID : OUT STD_LOGIC;
    m_axi_Input3_ARREADY : IN STD_LOGIC;
    m_axi_Input3_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Input3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Input3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_RVALID : IN STD_LOGIC;
    m_axi_Input3_RREADY : OUT STD_LOGIC;
    m_axi_Input3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Input3_RLAST : IN STD_LOGIC;
    m_axi_Input3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input3_BVALID : IN STD_LOGIC;
    m_axi_Input3_BREADY : OUT STD_LOGIC;
    m_axi_Input3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Input3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Input3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Input3_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    m_axi_Weight_AWVALID : OUT STD_LOGIC;
    m_axi_Weight_AWREADY : IN STD_LOGIC;
    m_axi_Weight_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Weight_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Weight_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Weight_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Weight_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Weight_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Weight_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Weight_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Weight_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Weight_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_WVALID : OUT STD_LOGIC;
    m_axi_Weight_WREADY : IN STD_LOGIC;
    m_axi_Weight_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Weight_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Weight_WLAST : OUT STD_LOGIC;
    m_axi_Weight_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_ARVALID : OUT STD_LOGIC;
    m_axi_Weight_ARREADY : IN STD_LOGIC;
    m_axi_Weight_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Weight_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Weight_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Weight_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Weight_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Weight_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Weight_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Weight_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Weight_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Weight_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_RVALID : IN STD_LOGIC;
    m_axi_Weight_RREADY : OUT STD_LOGIC;
    m_axi_Weight_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Weight_RLAST : IN STD_LOGIC;
    m_axi_Weight_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Weight_BVALID : IN STD_LOGIC;
    m_axi_Weight_BREADY : OUT STD_LOGIC;
    m_axi_Weight_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Weight_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Weight_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Weight_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    output_buffer_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_0_ce0 : OUT STD_LOGIC;
    output_buffer_0_we0 : OUT STD_LOGIC;
    output_buffer_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_0_ce1 : OUT STD_LOGIC;
    output_buffer_0_we1 : OUT STD_LOGIC;
    output_buffer_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_1_ce0 : OUT STD_LOGIC;
    output_buffer_1_we0 : OUT STD_LOGIC;
    output_buffer_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_1_ce1 : OUT STD_LOGIC;
    output_buffer_1_we1 : OUT STD_LOGIC;
    output_buffer_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_2_ce0 : OUT STD_LOGIC;
    output_buffer_2_we0 : OUT STD_LOGIC;
    output_buffer_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_2_ce1 : OUT STD_LOGIC;
    output_buffer_2_we1 : OUT STD_LOGIC;
    output_buffer_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_3_ce0 : OUT STD_LOGIC;
    output_buffer_3_we0 : OUT STD_LOGIC;
    output_buffer_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_3_ce1 : OUT STD_LOGIC;
    output_buffer_3_we1 : OUT STD_LOGIC;
    output_buffer_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_4_ce0 : OUT STD_LOGIC;
    output_buffer_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_4_ce1 : OUT STD_LOGIC;
    output_buffer_4_we1 : OUT STD_LOGIC;
    output_buffer_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_5_ce0 : OUT STD_LOGIC;
    output_buffer_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_5_ce1 : OUT STD_LOGIC;
    output_buffer_5_we1 : OUT STD_LOGIC;
    output_buffer_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_6_ce0 : OUT STD_LOGIC;
    output_buffer_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_6_ce1 : OUT STD_LOGIC;
    output_buffer_6_we1 : OUT STD_LOGIC;
    output_buffer_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_7_ce0 : OUT STD_LOGIC;
    output_buffer_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_7_ce1 : OUT STD_LOGIC;
    output_buffer_7_we1 : OUT STD_LOGIC;
    output_buffer_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_8_ce0 : OUT STD_LOGIC;
    output_buffer_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_8_ce1 : OUT STD_LOGIC;
    output_buffer_8_we1 : OUT STD_LOGIC;
    output_buffer_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_9_ce0 : OUT STD_LOGIC;
    output_buffer_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_9_ce1 : OUT STD_LOGIC;
    output_buffer_9_we1 : OUT STD_LOGIC;
    output_buffer_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_10_ce0 : OUT STD_LOGIC;
    output_buffer_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_10_ce1 : OUT STD_LOGIC;
    output_buffer_10_we1 : OUT STD_LOGIC;
    output_buffer_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_11_ce0 : OUT STD_LOGIC;
    output_buffer_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_11_ce1 : OUT STD_LOGIC;
    output_buffer_11_we1 : OUT STD_LOGIC;
    output_buffer_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_12_ce0 : OUT STD_LOGIC;
    output_buffer_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_12_ce1 : OUT STD_LOGIC;
    output_buffer_12_we1 : OUT STD_LOGIC;
    output_buffer_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_13_ce0 : OUT STD_LOGIC;
    output_buffer_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_13_ce1 : OUT STD_LOGIC;
    output_buffer_13_we1 : OUT STD_LOGIC;
    output_buffer_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_14_ce0 : OUT STD_LOGIC;
    output_buffer_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_14_ce1 : OUT STD_LOGIC;
    output_buffer_14_we1 : OUT STD_LOGIC;
    output_buffer_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_15_ce0 : OUT STD_LOGIC;
    output_buffer_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_15_ce1 : OUT STD_LOGIC;
    output_buffer_15_we1 : OUT STD_LOGIC;
    output_buffer_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_16_ce0 : OUT STD_LOGIC;
    output_buffer_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_16_ce1 : OUT STD_LOGIC;
    output_buffer_16_we1 : OUT STD_LOGIC;
    output_buffer_16_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_17_ce0 : OUT STD_LOGIC;
    output_buffer_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_17_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_17_ce1 : OUT STD_LOGIC;
    output_buffer_17_we1 : OUT STD_LOGIC;
    output_buffer_17_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_18_ce0 : OUT STD_LOGIC;
    output_buffer_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_18_ce1 : OUT STD_LOGIC;
    output_buffer_18_we1 : OUT STD_LOGIC;
    output_buffer_18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_19_ce0 : OUT STD_LOGIC;
    output_buffer_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_19_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_19_ce1 : OUT STD_LOGIC;
    output_buffer_19_we1 : OUT STD_LOGIC;
    output_buffer_19_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_20_ce0 : OUT STD_LOGIC;
    output_buffer_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_20_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_20_ce1 : OUT STD_LOGIC;
    output_buffer_20_we1 : OUT STD_LOGIC;
    output_buffer_20_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_21_ce0 : OUT STD_LOGIC;
    output_buffer_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_21_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_21_ce1 : OUT STD_LOGIC;
    output_buffer_21_we1 : OUT STD_LOGIC;
    output_buffer_21_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_22_ce0 : OUT STD_LOGIC;
    output_buffer_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_22_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_22_ce1 : OUT STD_LOGIC;
    output_buffer_22_we1 : OUT STD_LOGIC;
    output_buffer_22_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_23_ce0 : OUT STD_LOGIC;
    output_buffer_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_23_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_23_ce1 : OUT STD_LOGIC;
    output_buffer_23_we1 : OUT STD_LOGIC;
    output_buffer_23_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_24_ce0 : OUT STD_LOGIC;
    output_buffer_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_24_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_24_ce1 : OUT STD_LOGIC;
    output_buffer_24_we1 : OUT STD_LOGIC;
    output_buffer_24_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_25_ce0 : OUT STD_LOGIC;
    output_buffer_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_25_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_25_ce1 : OUT STD_LOGIC;
    output_buffer_25_we1 : OUT STD_LOGIC;
    output_buffer_25_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_26_ce0 : OUT STD_LOGIC;
    output_buffer_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_26_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_26_ce1 : OUT STD_LOGIC;
    output_buffer_26_we1 : OUT STD_LOGIC;
    output_buffer_26_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_27_ce0 : OUT STD_LOGIC;
    output_buffer_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_27_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_27_ce1 : OUT STD_LOGIC;
    output_buffer_27_we1 : OUT STD_LOGIC;
    output_buffer_27_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_28_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_28_ce0 : OUT STD_LOGIC;
    output_buffer_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_28_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_28_ce1 : OUT STD_LOGIC;
    output_buffer_28_we1 : OUT STD_LOGIC;
    output_buffer_28_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_29_ce0 : OUT STD_LOGIC;
    output_buffer_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_29_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_29_ce1 : OUT STD_LOGIC;
    output_buffer_29_we1 : OUT STD_LOGIC;
    output_buffer_29_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_30_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_30_ce0 : OUT STD_LOGIC;
    output_buffer_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_30_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_30_ce1 : OUT STD_LOGIC;
    output_buffer_30_we1 : OUT STD_LOGIC;
    output_buffer_30_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_31_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_31_ce0 : OUT STD_LOGIC;
    output_buffer_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_31_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_31_ce1 : OUT STD_LOGIC;
    output_buffer_31_we1 : OUT STD_LOGIC;
    output_buffer_31_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    beta_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    beta_buffer_ce0 : OUT STD_LOGIC;
    beta_buffer_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    InFM_num : IN STD_LOGIC_VECTOR (31 downto 0);
    Input_w : IN STD_LOGIC_VECTOR (31 downto 0);
    Input_h : IN STD_LOGIC_VECTOR (31 downto 0);
    Kernel_size : IN STD_LOGIC_VECTOR (31 downto 0);
    Kernel_stride : IN STD_LOGIC_VECTOR (31 downto 0);
    TMP_R : IN STD_LOGIC_VECTOR (31 downto 0);
    TMP_C : IN STD_LOGIC_VECTOR (31 downto 0);
    TMP_M : IN STD_LOGIC_VECTOR (31 downto 0);
    TM_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
    TR_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
    TC_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
    TN : IN STD_LOGIC_VECTOR (31 downto 0);
    TRow : IN STD_LOGIC_VECTOR (7 downto 0);
    TCol : IN STD_LOGIC_VECTOR (7 downto 0);
    Padding : IN STD_LOGIC_VECTOR (31 downto 0);
    IHxIW : IN STD_LOGIC_VECTOR (18 downto 0);
    nLoops : IN STD_LOGIC_VECTOR (31 downto 0);
    LayerType : IN STD_LOGIC_VECTOR (31 downto 0);
    TM : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pingpongx_offset : IN STD_LOGIC;
    input_flag : IN STD_LOGIC;
    process_flag : IN STD_LOGIC;
    InterSubBeta : IN STD_LOGIC_VECTOR (7 downto 0);
    WeightAddInputSubInter : IN STD_LOGIC_VECTOR (7 downto 0);
    trow_loops_V : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of intra_pingpong_wrapp is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_buffer1_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer1_0_ce0 : STD_LOGIC;
    signal input_buffer1_0_we0 : STD_LOGIC;
    signal input_buffer1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buffer1_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer1_1_ce0 : STD_LOGIC;
    signal input_buffer1_1_we0 : STD_LOGIC;
    signal input_buffer1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buffer1_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer1_2_ce0 : STD_LOGIC;
    signal input_buffer1_2_we0 : STD_LOGIC;
    signal input_buffer1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buffer1_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer1_3_ce0 : STD_LOGIC;
    signal input_buffer1_3_we0 : STD_LOGIC;
    signal input_buffer1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_0_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_0_0_ce0 : STD_LOGIC;
    signal weight_buffer1_0_0_we0 : STD_LOGIC;
    signal weight_buffer1_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_0_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_0_1_ce0 : STD_LOGIC;
    signal weight_buffer1_0_1_we0 : STD_LOGIC;
    signal weight_buffer1_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_0_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_0_2_ce0 : STD_LOGIC;
    signal weight_buffer1_0_2_we0 : STD_LOGIC;
    signal weight_buffer1_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_0_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_0_3_ce0 : STD_LOGIC;
    signal weight_buffer1_0_3_we0 : STD_LOGIC;
    signal weight_buffer1_0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_1_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_1_0_ce0 : STD_LOGIC;
    signal weight_buffer1_1_0_we0 : STD_LOGIC;
    signal weight_buffer1_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_1_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_1_1_ce0 : STD_LOGIC;
    signal weight_buffer1_1_1_we0 : STD_LOGIC;
    signal weight_buffer1_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_1_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_1_2_ce0 : STD_LOGIC;
    signal weight_buffer1_1_2_we0 : STD_LOGIC;
    signal weight_buffer1_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_1_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_1_3_ce0 : STD_LOGIC;
    signal weight_buffer1_1_3_we0 : STD_LOGIC;
    signal weight_buffer1_1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_2_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_2_0_ce0 : STD_LOGIC;
    signal weight_buffer1_2_0_we0 : STD_LOGIC;
    signal weight_buffer1_2_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_2_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_2_1_ce0 : STD_LOGIC;
    signal weight_buffer1_2_1_we0 : STD_LOGIC;
    signal weight_buffer1_2_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_2_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_2_2_ce0 : STD_LOGIC;
    signal weight_buffer1_2_2_we0 : STD_LOGIC;
    signal weight_buffer1_2_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_2_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_2_3_ce0 : STD_LOGIC;
    signal weight_buffer1_2_3_we0 : STD_LOGIC;
    signal weight_buffer1_2_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_3_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_3_0_ce0 : STD_LOGIC;
    signal weight_buffer1_3_0_we0 : STD_LOGIC;
    signal weight_buffer1_3_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_3_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_3_1_ce0 : STD_LOGIC;
    signal weight_buffer1_3_1_we0 : STD_LOGIC;
    signal weight_buffer1_3_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_3_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_3_2_ce0 : STD_LOGIC;
    signal weight_buffer1_3_2_we0 : STD_LOGIC;
    signal weight_buffer1_3_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_3_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_3_3_ce0 : STD_LOGIC;
    signal weight_buffer1_3_3_we0 : STD_LOGIC;
    signal weight_buffer1_3_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_4_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_4_0_ce0 : STD_LOGIC;
    signal weight_buffer1_4_0_we0 : STD_LOGIC;
    signal weight_buffer1_4_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_4_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_4_1_ce0 : STD_LOGIC;
    signal weight_buffer1_4_1_we0 : STD_LOGIC;
    signal weight_buffer1_4_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_4_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_4_2_ce0 : STD_LOGIC;
    signal weight_buffer1_4_2_we0 : STD_LOGIC;
    signal weight_buffer1_4_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_4_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_4_3_ce0 : STD_LOGIC;
    signal weight_buffer1_4_3_we0 : STD_LOGIC;
    signal weight_buffer1_4_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_5_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_5_0_ce0 : STD_LOGIC;
    signal weight_buffer1_5_0_we0 : STD_LOGIC;
    signal weight_buffer1_5_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_5_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_5_1_ce0 : STD_LOGIC;
    signal weight_buffer1_5_1_we0 : STD_LOGIC;
    signal weight_buffer1_5_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_5_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_5_2_ce0 : STD_LOGIC;
    signal weight_buffer1_5_2_we0 : STD_LOGIC;
    signal weight_buffer1_5_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_5_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_5_3_ce0 : STD_LOGIC;
    signal weight_buffer1_5_3_we0 : STD_LOGIC;
    signal weight_buffer1_5_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_6_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_6_0_ce0 : STD_LOGIC;
    signal weight_buffer1_6_0_we0 : STD_LOGIC;
    signal weight_buffer1_6_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_6_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_6_1_ce0 : STD_LOGIC;
    signal weight_buffer1_6_1_we0 : STD_LOGIC;
    signal weight_buffer1_6_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_6_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_6_2_ce0 : STD_LOGIC;
    signal weight_buffer1_6_2_we0 : STD_LOGIC;
    signal weight_buffer1_6_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_6_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_6_3_ce0 : STD_LOGIC;
    signal weight_buffer1_6_3_we0 : STD_LOGIC;
    signal weight_buffer1_6_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_7_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_7_0_ce0 : STD_LOGIC;
    signal weight_buffer1_7_0_we0 : STD_LOGIC;
    signal weight_buffer1_7_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_7_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_7_1_ce0 : STD_LOGIC;
    signal weight_buffer1_7_1_we0 : STD_LOGIC;
    signal weight_buffer1_7_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_7_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_7_2_ce0 : STD_LOGIC;
    signal weight_buffer1_7_2_we0 : STD_LOGIC;
    signal weight_buffer1_7_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_7_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_7_3_ce0 : STD_LOGIC;
    signal weight_buffer1_7_3_we0 : STD_LOGIC;
    signal weight_buffer1_7_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_8_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_8_0_ce0 : STD_LOGIC;
    signal weight_buffer1_8_0_we0 : STD_LOGIC;
    signal weight_buffer1_8_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_8_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_8_1_ce0 : STD_LOGIC;
    signal weight_buffer1_8_1_we0 : STD_LOGIC;
    signal weight_buffer1_8_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_8_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_8_2_ce0 : STD_LOGIC;
    signal weight_buffer1_8_2_we0 : STD_LOGIC;
    signal weight_buffer1_8_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_8_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_8_3_ce0 : STD_LOGIC;
    signal weight_buffer1_8_3_we0 : STD_LOGIC;
    signal weight_buffer1_8_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_9_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_9_0_ce0 : STD_LOGIC;
    signal weight_buffer1_9_0_we0 : STD_LOGIC;
    signal weight_buffer1_9_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_9_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_9_1_ce0 : STD_LOGIC;
    signal weight_buffer1_9_1_we0 : STD_LOGIC;
    signal weight_buffer1_9_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_9_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_9_2_ce0 : STD_LOGIC;
    signal weight_buffer1_9_2_we0 : STD_LOGIC;
    signal weight_buffer1_9_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_9_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_9_3_ce0 : STD_LOGIC;
    signal weight_buffer1_9_3_we0 : STD_LOGIC;
    signal weight_buffer1_9_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_10_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_10_0_ce0 : STD_LOGIC;
    signal weight_buffer1_10_0_we0 : STD_LOGIC;
    signal weight_buffer1_10_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_10_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_10_1_ce0 : STD_LOGIC;
    signal weight_buffer1_10_1_we0 : STD_LOGIC;
    signal weight_buffer1_10_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_10_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_10_2_ce0 : STD_LOGIC;
    signal weight_buffer1_10_2_we0 : STD_LOGIC;
    signal weight_buffer1_10_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_10_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_10_3_ce0 : STD_LOGIC;
    signal weight_buffer1_10_3_we0 : STD_LOGIC;
    signal weight_buffer1_10_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_11_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_11_0_ce0 : STD_LOGIC;
    signal weight_buffer1_11_0_we0 : STD_LOGIC;
    signal weight_buffer1_11_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_11_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_11_1_ce0 : STD_LOGIC;
    signal weight_buffer1_11_1_we0 : STD_LOGIC;
    signal weight_buffer1_11_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_11_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_11_2_ce0 : STD_LOGIC;
    signal weight_buffer1_11_2_we0 : STD_LOGIC;
    signal weight_buffer1_11_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_11_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_11_3_ce0 : STD_LOGIC;
    signal weight_buffer1_11_3_we0 : STD_LOGIC;
    signal weight_buffer1_11_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_12_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_12_0_ce0 : STD_LOGIC;
    signal weight_buffer1_12_0_we0 : STD_LOGIC;
    signal weight_buffer1_12_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_12_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_12_1_ce0 : STD_LOGIC;
    signal weight_buffer1_12_1_we0 : STD_LOGIC;
    signal weight_buffer1_12_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_12_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_12_2_ce0 : STD_LOGIC;
    signal weight_buffer1_12_2_we0 : STD_LOGIC;
    signal weight_buffer1_12_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_12_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_12_3_ce0 : STD_LOGIC;
    signal weight_buffer1_12_3_we0 : STD_LOGIC;
    signal weight_buffer1_12_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_13_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_13_0_ce0 : STD_LOGIC;
    signal weight_buffer1_13_0_we0 : STD_LOGIC;
    signal weight_buffer1_13_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_13_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_13_1_ce0 : STD_LOGIC;
    signal weight_buffer1_13_1_we0 : STD_LOGIC;
    signal weight_buffer1_13_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_13_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_13_2_ce0 : STD_LOGIC;
    signal weight_buffer1_13_2_we0 : STD_LOGIC;
    signal weight_buffer1_13_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_13_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_13_3_ce0 : STD_LOGIC;
    signal weight_buffer1_13_3_we0 : STD_LOGIC;
    signal weight_buffer1_13_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_14_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_14_0_ce0 : STD_LOGIC;
    signal weight_buffer1_14_0_we0 : STD_LOGIC;
    signal weight_buffer1_14_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_14_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_14_1_ce0 : STD_LOGIC;
    signal weight_buffer1_14_1_we0 : STD_LOGIC;
    signal weight_buffer1_14_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_14_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_14_2_ce0 : STD_LOGIC;
    signal weight_buffer1_14_2_we0 : STD_LOGIC;
    signal weight_buffer1_14_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_14_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_14_3_ce0 : STD_LOGIC;
    signal weight_buffer1_14_3_we0 : STD_LOGIC;
    signal weight_buffer1_14_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_15_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_15_0_ce0 : STD_LOGIC;
    signal weight_buffer1_15_0_we0 : STD_LOGIC;
    signal weight_buffer1_15_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_15_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_15_1_ce0 : STD_LOGIC;
    signal weight_buffer1_15_1_we0 : STD_LOGIC;
    signal weight_buffer1_15_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_15_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_15_2_ce0 : STD_LOGIC;
    signal weight_buffer1_15_2_we0 : STD_LOGIC;
    signal weight_buffer1_15_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_15_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_15_3_ce0 : STD_LOGIC;
    signal weight_buffer1_15_3_we0 : STD_LOGIC;
    signal weight_buffer1_15_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_16_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_16_0_ce0 : STD_LOGIC;
    signal weight_buffer1_16_0_we0 : STD_LOGIC;
    signal weight_buffer1_16_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_16_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_16_1_ce0 : STD_LOGIC;
    signal weight_buffer1_16_1_we0 : STD_LOGIC;
    signal weight_buffer1_16_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_16_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_16_2_ce0 : STD_LOGIC;
    signal weight_buffer1_16_2_we0 : STD_LOGIC;
    signal weight_buffer1_16_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_16_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_16_3_ce0 : STD_LOGIC;
    signal weight_buffer1_16_3_we0 : STD_LOGIC;
    signal weight_buffer1_16_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_17_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_17_0_ce0 : STD_LOGIC;
    signal weight_buffer1_17_0_we0 : STD_LOGIC;
    signal weight_buffer1_17_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_17_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_17_1_ce0 : STD_LOGIC;
    signal weight_buffer1_17_1_we0 : STD_LOGIC;
    signal weight_buffer1_17_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_17_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_17_2_ce0 : STD_LOGIC;
    signal weight_buffer1_17_2_we0 : STD_LOGIC;
    signal weight_buffer1_17_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_17_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_17_3_ce0 : STD_LOGIC;
    signal weight_buffer1_17_3_we0 : STD_LOGIC;
    signal weight_buffer1_17_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_18_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_18_0_ce0 : STD_LOGIC;
    signal weight_buffer1_18_0_we0 : STD_LOGIC;
    signal weight_buffer1_18_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_18_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_18_1_ce0 : STD_LOGIC;
    signal weight_buffer1_18_1_we0 : STD_LOGIC;
    signal weight_buffer1_18_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_18_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_18_2_ce0 : STD_LOGIC;
    signal weight_buffer1_18_2_we0 : STD_LOGIC;
    signal weight_buffer1_18_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_18_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_18_3_ce0 : STD_LOGIC;
    signal weight_buffer1_18_3_we0 : STD_LOGIC;
    signal weight_buffer1_18_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_19_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_19_0_ce0 : STD_LOGIC;
    signal weight_buffer1_19_0_we0 : STD_LOGIC;
    signal weight_buffer1_19_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_19_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_19_1_ce0 : STD_LOGIC;
    signal weight_buffer1_19_1_we0 : STD_LOGIC;
    signal weight_buffer1_19_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_19_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_19_2_ce0 : STD_LOGIC;
    signal weight_buffer1_19_2_we0 : STD_LOGIC;
    signal weight_buffer1_19_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_19_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_19_3_ce0 : STD_LOGIC;
    signal weight_buffer1_19_3_we0 : STD_LOGIC;
    signal weight_buffer1_19_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_20_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_20_0_ce0 : STD_LOGIC;
    signal weight_buffer1_20_0_we0 : STD_LOGIC;
    signal weight_buffer1_20_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_20_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_20_1_ce0 : STD_LOGIC;
    signal weight_buffer1_20_1_we0 : STD_LOGIC;
    signal weight_buffer1_20_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_20_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_20_2_ce0 : STD_LOGIC;
    signal weight_buffer1_20_2_we0 : STD_LOGIC;
    signal weight_buffer1_20_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_20_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_20_3_ce0 : STD_LOGIC;
    signal weight_buffer1_20_3_we0 : STD_LOGIC;
    signal weight_buffer1_20_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_21_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_21_0_ce0 : STD_LOGIC;
    signal weight_buffer1_21_0_we0 : STD_LOGIC;
    signal weight_buffer1_21_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_21_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_21_1_ce0 : STD_LOGIC;
    signal weight_buffer1_21_1_we0 : STD_LOGIC;
    signal weight_buffer1_21_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_21_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_21_2_ce0 : STD_LOGIC;
    signal weight_buffer1_21_2_we0 : STD_LOGIC;
    signal weight_buffer1_21_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_21_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_21_3_ce0 : STD_LOGIC;
    signal weight_buffer1_21_3_we0 : STD_LOGIC;
    signal weight_buffer1_21_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_22_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_22_0_ce0 : STD_LOGIC;
    signal weight_buffer1_22_0_we0 : STD_LOGIC;
    signal weight_buffer1_22_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_22_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_22_1_ce0 : STD_LOGIC;
    signal weight_buffer1_22_1_we0 : STD_LOGIC;
    signal weight_buffer1_22_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_22_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_22_2_ce0 : STD_LOGIC;
    signal weight_buffer1_22_2_we0 : STD_LOGIC;
    signal weight_buffer1_22_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_22_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_22_3_ce0 : STD_LOGIC;
    signal weight_buffer1_22_3_we0 : STD_LOGIC;
    signal weight_buffer1_22_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_23_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_23_0_ce0 : STD_LOGIC;
    signal weight_buffer1_23_0_we0 : STD_LOGIC;
    signal weight_buffer1_23_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_23_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_23_1_ce0 : STD_LOGIC;
    signal weight_buffer1_23_1_we0 : STD_LOGIC;
    signal weight_buffer1_23_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_23_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_23_2_ce0 : STD_LOGIC;
    signal weight_buffer1_23_2_we0 : STD_LOGIC;
    signal weight_buffer1_23_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_23_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_23_3_ce0 : STD_LOGIC;
    signal weight_buffer1_23_3_we0 : STD_LOGIC;
    signal weight_buffer1_23_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_24_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_24_0_ce0 : STD_LOGIC;
    signal weight_buffer1_24_0_we0 : STD_LOGIC;
    signal weight_buffer1_24_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_24_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_24_1_ce0 : STD_LOGIC;
    signal weight_buffer1_24_1_we0 : STD_LOGIC;
    signal weight_buffer1_24_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_24_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_24_2_ce0 : STD_LOGIC;
    signal weight_buffer1_24_2_we0 : STD_LOGIC;
    signal weight_buffer1_24_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_24_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_24_3_ce0 : STD_LOGIC;
    signal weight_buffer1_24_3_we0 : STD_LOGIC;
    signal weight_buffer1_24_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_25_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_25_0_ce0 : STD_LOGIC;
    signal weight_buffer1_25_0_we0 : STD_LOGIC;
    signal weight_buffer1_25_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_25_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_25_1_ce0 : STD_LOGIC;
    signal weight_buffer1_25_1_we0 : STD_LOGIC;
    signal weight_buffer1_25_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_25_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_25_2_ce0 : STD_LOGIC;
    signal weight_buffer1_25_2_we0 : STD_LOGIC;
    signal weight_buffer1_25_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_25_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_25_3_ce0 : STD_LOGIC;
    signal weight_buffer1_25_3_we0 : STD_LOGIC;
    signal weight_buffer1_25_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_26_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_26_0_ce0 : STD_LOGIC;
    signal weight_buffer1_26_0_we0 : STD_LOGIC;
    signal weight_buffer1_26_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_26_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_26_1_ce0 : STD_LOGIC;
    signal weight_buffer1_26_1_we0 : STD_LOGIC;
    signal weight_buffer1_26_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_26_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_26_2_ce0 : STD_LOGIC;
    signal weight_buffer1_26_2_we0 : STD_LOGIC;
    signal weight_buffer1_26_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_26_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_26_3_ce0 : STD_LOGIC;
    signal weight_buffer1_26_3_we0 : STD_LOGIC;
    signal weight_buffer1_26_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_27_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_27_0_ce0 : STD_LOGIC;
    signal weight_buffer1_27_0_we0 : STD_LOGIC;
    signal weight_buffer1_27_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_27_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_27_1_ce0 : STD_LOGIC;
    signal weight_buffer1_27_1_we0 : STD_LOGIC;
    signal weight_buffer1_27_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_27_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_27_2_ce0 : STD_LOGIC;
    signal weight_buffer1_27_2_we0 : STD_LOGIC;
    signal weight_buffer1_27_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_27_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_27_3_ce0 : STD_LOGIC;
    signal weight_buffer1_27_3_we0 : STD_LOGIC;
    signal weight_buffer1_27_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_28_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_28_0_ce0 : STD_LOGIC;
    signal weight_buffer1_28_0_we0 : STD_LOGIC;
    signal weight_buffer1_28_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_28_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_28_1_ce0 : STD_LOGIC;
    signal weight_buffer1_28_1_we0 : STD_LOGIC;
    signal weight_buffer1_28_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_28_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_28_2_ce0 : STD_LOGIC;
    signal weight_buffer1_28_2_we0 : STD_LOGIC;
    signal weight_buffer1_28_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_28_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_28_3_ce0 : STD_LOGIC;
    signal weight_buffer1_28_3_we0 : STD_LOGIC;
    signal weight_buffer1_28_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_29_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_29_0_ce0 : STD_LOGIC;
    signal weight_buffer1_29_0_we0 : STD_LOGIC;
    signal weight_buffer1_29_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_29_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_29_1_ce0 : STD_LOGIC;
    signal weight_buffer1_29_1_we0 : STD_LOGIC;
    signal weight_buffer1_29_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_29_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_29_2_ce0 : STD_LOGIC;
    signal weight_buffer1_29_2_we0 : STD_LOGIC;
    signal weight_buffer1_29_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_29_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_29_3_ce0 : STD_LOGIC;
    signal weight_buffer1_29_3_we0 : STD_LOGIC;
    signal weight_buffer1_29_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_30_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_30_0_ce0 : STD_LOGIC;
    signal weight_buffer1_30_0_we0 : STD_LOGIC;
    signal weight_buffer1_30_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_30_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_30_1_ce0 : STD_LOGIC;
    signal weight_buffer1_30_1_we0 : STD_LOGIC;
    signal weight_buffer1_30_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_30_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_30_2_ce0 : STD_LOGIC;
    signal weight_buffer1_30_2_we0 : STD_LOGIC;
    signal weight_buffer1_30_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_30_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_30_3_ce0 : STD_LOGIC;
    signal weight_buffer1_30_3_we0 : STD_LOGIC;
    signal weight_buffer1_30_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_31_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_31_0_ce0 : STD_LOGIC;
    signal weight_buffer1_31_0_we0 : STD_LOGIC;
    signal weight_buffer1_31_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_31_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_31_1_ce0 : STD_LOGIC;
    signal weight_buffer1_31_1_we0 : STD_LOGIC;
    signal weight_buffer1_31_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_31_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_31_2_ce0 : STD_LOGIC;
    signal weight_buffer1_31_2_we0 : STD_LOGIC;
    signal weight_buffer1_31_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer1_31_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer1_31_3_ce0 : STD_LOGIC;
    signal weight_buffer1_31_3_we0 : STD_LOGIC;
    signal weight_buffer1_31_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buffer0_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer0_0_ce0 : STD_LOGIC;
    signal input_buffer0_0_we0 : STD_LOGIC;
    signal input_buffer0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buffer0_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer0_1_ce0 : STD_LOGIC;
    signal input_buffer0_1_we0 : STD_LOGIC;
    signal input_buffer0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buffer0_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer0_2_ce0 : STD_LOGIC;
    signal input_buffer0_2_we0 : STD_LOGIC;
    signal input_buffer0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buffer0_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_buffer0_3_ce0 : STD_LOGIC;
    signal input_buffer0_3_we0 : STD_LOGIC;
    signal input_buffer0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_0_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_0_0_ce0 : STD_LOGIC;
    signal weight_buffer0_0_0_we0 : STD_LOGIC;
    signal weight_buffer0_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_0_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_0_1_ce0 : STD_LOGIC;
    signal weight_buffer0_0_1_we0 : STD_LOGIC;
    signal weight_buffer0_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_0_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_0_2_ce0 : STD_LOGIC;
    signal weight_buffer0_0_2_we0 : STD_LOGIC;
    signal weight_buffer0_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_0_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_0_3_ce0 : STD_LOGIC;
    signal weight_buffer0_0_3_we0 : STD_LOGIC;
    signal weight_buffer0_0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_1_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_1_0_ce0 : STD_LOGIC;
    signal weight_buffer0_1_0_we0 : STD_LOGIC;
    signal weight_buffer0_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_1_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_1_1_ce0 : STD_LOGIC;
    signal weight_buffer0_1_1_we0 : STD_LOGIC;
    signal weight_buffer0_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_1_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_1_2_ce0 : STD_LOGIC;
    signal weight_buffer0_1_2_we0 : STD_LOGIC;
    signal weight_buffer0_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_1_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_1_3_ce0 : STD_LOGIC;
    signal weight_buffer0_1_3_we0 : STD_LOGIC;
    signal weight_buffer0_1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_2_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_2_0_ce0 : STD_LOGIC;
    signal weight_buffer0_2_0_we0 : STD_LOGIC;
    signal weight_buffer0_2_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_2_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_2_1_ce0 : STD_LOGIC;
    signal weight_buffer0_2_1_we0 : STD_LOGIC;
    signal weight_buffer0_2_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_2_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_2_2_ce0 : STD_LOGIC;
    signal weight_buffer0_2_2_we0 : STD_LOGIC;
    signal weight_buffer0_2_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_2_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_2_3_ce0 : STD_LOGIC;
    signal weight_buffer0_2_3_we0 : STD_LOGIC;
    signal weight_buffer0_2_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_3_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_3_0_ce0 : STD_LOGIC;
    signal weight_buffer0_3_0_we0 : STD_LOGIC;
    signal weight_buffer0_3_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_3_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_3_1_ce0 : STD_LOGIC;
    signal weight_buffer0_3_1_we0 : STD_LOGIC;
    signal weight_buffer0_3_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_3_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_3_2_ce0 : STD_LOGIC;
    signal weight_buffer0_3_2_we0 : STD_LOGIC;
    signal weight_buffer0_3_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_3_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_3_3_ce0 : STD_LOGIC;
    signal weight_buffer0_3_3_we0 : STD_LOGIC;
    signal weight_buffer0_3_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_4_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_4_0_ce0 : STD_LOGIC;
    signal weight_buffer0_4_0_we0 : STD_LOGIC;
    signal weight_buffer0_4_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_4_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_4_1_ce0 : STD_LOGIC;
    signal weight_buffer0_4_1_we0 : STD_LOGIC;
    signal weight_buffer0_4_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_4_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_4_2_ce0 : STD_LOGIC;
    signal weight_buffer0_4_2_we0 : STD_LOGIC;
    signal weight_buffer0_4_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_4_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_4_3_ce0 : STD_LOGIC;
    signal weight_buffer0_4_3_we0 : STD_LOGIC;
    signal weight_buffer0_4_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_5_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_5_0_ce0 : STD_LOGIC;
    signal weight_buffer0_5_0_we0 : STD_LOGIC;
    signal weight_buffer0_5_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_5_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_5_1_ce0 : STD_LOGIC;
    signal weight_buffer0_5_1_we0 : STD_LOGIC;
    signal weight_buffer0_5_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_5_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_5_2_ce0 : STD_LOGIC;
    signal weight_buffer0_5_2_we0 : STD_LOGIC;
    signal weight_buffer0_5_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_5_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_5_3_ce0 : STD_LOGIC;
    signal weight_buffer0_5_3_we0 : STD_LOGIC;
    signal weight_buffer0_5_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_6_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_6_0_ce0 : STD_LOGIC;
    signal weight_buffer0_6_0_we0 : STD_LOGIC;
    signal weight_buffer0_6_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_6_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_6_1_ce0 : STD_LOGIC;
    signal weight_buffer0_6_1_we0 : STD_LOGIC;
    signal weight_buffer0_6_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_6_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_6_2_ce0 : STD_LOGIC;
    signal weight_buffer0_6_2_we0 : STD_LOGIC;
    signal weight_buffer0_6_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_6_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_6_3_ce0 : STD_LOGIC;
    signal weight_buffer0_6_3_we0 : STD_LOGIC;
    signal weight_buffer0_6_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_7_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_7_0_ce0 : STD_LOGIC;
    signal weight_buffer0_7_0_we0 : STD_LOGIC;
    signal weight_buffer0_7_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_7_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_7_1_ce0 : STD_LOGIC;
    signal weight_buffer0_7_1_we0 : STD_LOGIC;
    signal weight_buffer0_7_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_7_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_7_2_ce0 : STD_LOGIC;
    signal weight_buffer0_7_2_we0 : STD_LOGIC;
    signal weight_buffer0_7_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_7_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_7_3_ce0 : STD_LOGIC;
    signal weight_buffer0_7_3_we0 : STD_LOGIC;
    signal weight_buffer0_7_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_8_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_8_0_ce0 : STD_LOGIC;
    signal weight_buffer0_8_0_we0 : STD_LOGIC;
    signal weight_buffer0_8_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_8_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_8_1_ce0 : STD_LOGIC;
    signal weight_buffer0_8_1_we0 : STD_LOGIC;
    signal weight_buffer0_8_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_8_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_8_2_ce0 : STD_LOGIC;
    signal weight_buffer0_8_2_we0 : STD_LOGIC;
    signal weight_buffer0_8_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_8_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_8_3_ce0 : STD_LOGIC;
    signal weight_buffer0_8_3_we0 : STD_LOGIC;
    signal weight_buffer0_8_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_9_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_9_0_ce0 : STD_LOGIC;
    signal weight_buffer0_9_0_we0 : STD_LOGIC;
    signal weight_buffer0_9_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_9_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_9_1_ce0 : STD_LOGIC;
    signal weight_buffer0_9_1_we0 : STD_LOGIC;
    signal weight_buffer0_9_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_9_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_9_2_ce0 : STD_LOGIC;
    signal weight_buffer0_9_2_we0 : STD_LOGIC;
    signal weight_buffer0_9_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_9_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_9_3_ce0 : STD_LOGIC;
    signal weight_buffer0_9_3_we0 : STD_LOGIC;
    signal weight_buffer0_9_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_10_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_10_0_ce0 : STD_LOGIC;
    signal weight_buffer0_10_0_we0 : STD_LOGIC;
    signal weight_buffer0_10_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_10_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_10_1_ce0 : STD_LOGIC;
    signal weight_buffer0_10_1_we0 : STD_LOGIC;
    signal weight_buffer0_10_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_10_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_10_2_ce0 : STD_LOGIC;
    signal weight_buffer0_10_2_we0 : STD_LOGIC;
    signal weight_buffer0_10_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_10_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_10_3_ce0 : STD_LOGIC;
    signal weight_buffer0_10_3_we0 : STD_LOGIC;
    signal weight_buffer0_10_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_11_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_11_0_ce0 : STD_LOGIC;
    signal weight_buffer0_11_0_we0 : STD_LOGIC;
    signal weight_buffer0_11_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_11_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_11_1_ce0 : STD_LOGIC;
    signal weight_buffer0_11_1_we0 : STD_LOGIC;
    signal weight_buffer0_11_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_11_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_11_2_ce0 : STD_LOGIC;
    signal weight_buffer0_11_2_we0 : STD_LOGIC;
    signal weight_buffer0_11_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_11_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_11_3_ce0 : STD_LOGIC;
    signal weight_buffer0_11_3_we0 : STD_LOGIC;
    signal weight_buffer0_11_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_12_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_12_0_ce0 : STD_LOGIC;
    signal weight_buffer0_12_0_we0 : STD_LOGIC;
    signal weight_buffer0_12_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_12_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_12_1_ce0 : STD_LOGIC;
    signal weight_buffer0_12_1_we0 : STD_LOGIC;
    signal weight_buffer0_12_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_12_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_12_2_ce0 : STD_LOGIC;
    signal weight_buffer0_12_2_we0 : STD_LOGIC;
    signal weight_buffer0_12_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_12_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_12_3_ce0 : STD_LOGIC;
    signal weight_buffer0_12_3_we0 : STD_LOGIC;
    signal weight_buffer0_12_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_13_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_13_0_ce0 : STD_LOGIC;
    signal weight_buffer0_13_0_we0 : STD_LOGIC;
    signal weight_buffer0_13_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_13_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_13_1_ce0 : STD_LOGIC;
    signal weight_buffer0_13_1_we0 : STD_LOGIC;
    signal weight_buffer0_13_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_13_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_13_2_ce0 : STD_LOGIC;
    signal weight_buffer0_13_2_we0 : STD_LOGIC;
    signal weight_buffer0_13_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_13_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_13_3_ce0 : STD_LOGIC;
    signal weight_buffer0_13_3_we0 : STD_LOGIC;
    signal weight_buffer0_13_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_14_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_14_0_ce0 : STD_LOGIC;
    signal weight_buffer0_14_0_we0 : STD_LOGIC;
    signal weight_buffer0_14_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_14_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_14_1_ce0 : STD_LOGIC;
    signal weight_buffer0_14_1_we0 : STD_LOGIC;
    signal weight_buffer0_14_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_14_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_14_2_ce0 : STD_LOGIC;
    signal weight_buffer0_14_2_we0 : STD_LOGIC;
    signal weight_buffer0_14_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_14_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_14_3_ce0 : STD_LOGIC;
    signal weight_buffer0_14_3_we0 : STD_LOGIC;
    signal weight_buffer0_14_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_15_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_15_0_ce0 : STD_LOGIC;
    signal weight_buffer0_15_0_we0 : STD_LOGIC;
    signal weight_buffer0_15_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_15_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_15_1_ce0 : STD_LOGIC;
    signal weight_buffer0_15_1_we0 : STD_LOGIC;
    signal weight_buffer0_15_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_15_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_15_2_ce0 : STD_LOGIC;
    signal weight_buffer0_15_2_we0 : STD_LOGIC;
    signal weight_buffer0_15_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_15_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_15_3_ce0 : STD_LOGIC;
    signal weight_buffer0_15_3_we0 : STD_LOGIC;
    signal weight_buffer0_15_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_16_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_16_0_ce0 : STD_LOGIC;
    signal weight_buffer0_16_0_we0 : STD_LOGIC;
    signal weight_buffer0_16_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_16_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_16_1_ce0 : STD_LOGIC;
    signal weight_buffer0_16_1_we0 : STD_LOGIC;
    signal weight_buffer0_16_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_16_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_16_2_ce0 : STD_LOGIC;
    signal weight_buffer0_16_2_we0 : STD_LOGIC;
    signal weight_buffer0_16_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_16_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_16_3_ce0 : STD_LOGIC;
    signal weight_buffer0_16_3_we0 : STD_LOGIC;
    signal weight_buffer0_16_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_17_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_17_0_ce0 : STD_LOGIC;
    signal weight_buffer0_17_0_we0 : STD_LOGIC;
    signal weight_buffer0_17_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_17_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_17_1_ce0 : STD_LOGIC;
    signal weight_buffer0_17_1_we0 : STD_LOGIC;
    signal weight_buffer0_17_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_17_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_17_2_ce0 : STD_LOGIC;
    signal weight_buffer0_17_2_we0 : STD_LOGIC;
    signal weight_buffer0_17_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_17_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_17_3_ce0 : STD_LOGIC;
    signal weight_buffer0_17_3_we0 : STD_LOGIC;
    signal weight_buffer0_17_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_18_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_18_0_ce0 : STD_LOGIC;
    signal weight_buffer0_18_0_we0 : STD_LOGIC;
    signal weight_buffer0_18_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_18_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_18_1_ce0 : STD_LOGIC;
    signal weight_buffer0_18_1_we0 : STD_LOGIC;
    signal weight_buffer0_18_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_18_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_18_2_ce0 : STD_LOGIC;
    signal weight_buffer0_18_2_we0 : STD_LOGIC;
    signal weight_buffer0_18_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_18_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_18_3_ce0 : STD_LOGIC;
    signal weight_buffer0_18_3_we0 : STD_LOGIC;
    signal weight_buffer0_18_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_19_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_19_0_ce0 : STD_LOGIC;
    signal weight_buffer0_19_0_we0 : STD_LOGIC;
    signal weight_buffer0_19_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_19_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_19_1_ce0 : STD_LOGIC;
    signal weight_buffer0_19_1_we0 : STD_LOGIC;
    signal weight_buffer0_19_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_19_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_19_2_ce0 : STD_LOGIC;
    signal weight_buffer0_19_2_we0 : STD_LOGIC;
    signal weight_buffer0_19_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_19_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_19_3_ce0 : STD_LOGIC;
    signal weight_buffer0_19_3_we0 : STD_LOGIC;
    signal weight_buffer0_19_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_20_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_20_0_ce0 : STD_LOGIC;
    signal weight_buffer0_20_0_we0 : STD_LOGIC;
    signal weight_buffer0_20_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_20_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_20_1_ce0 : STD_LOGIC;
    signal weight_buffer0_20_1_we0 : STD_LOGIC;
    signal weight_buffer0_20_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_20_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_20_2_ce0 : STD_LOGIC;
    signal weight_buffer0_20_2_we0 : STD_LOGIC;
    signal weight_buffer0_20_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_20_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_20_3_ce0 : STD_LOGIC;
    signal weight_buffer0_20_3_we0 : STD_LOGIC;
    signal weight_buffer0_20_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_21_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_21_0_ce0 : STD_LOGIC;
    signal weight_buffer0_21_0_we0 : STD_LOGIC;
    signal weight_buffer0_21_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_21_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_21_1_ce0 : STD_LOGIC;
    signal weight_buffer0_21_1_we0 : STD_LOGIC;
    signal weight_buffer0_21_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_21_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_21_2_ce0 : STD_LOGIC;
    signal weight_buffer0_21_2_we0 : STD_LOGIC;
    signal weight_buffer0_21_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_21_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_21_3_ce0 : STD_LOGIC;
    signal weight_buffer0_21_3_we0 : STD_LOGIC;
    signal weight_buffer0_21_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_22_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_22_0_ce0 : STD_LOGIC;
    signal weight_buffer0_22_0_we0 : STD_LOGIC;
    signal weight_buffer0_22_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_22_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_22_1_ce0 : STD_LOGIC;
    signal weight_buffer0_22_1_we0 : STD_LOGIC;
    signal weight_buffer0_22_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_22_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_22_2_ce0 : STD_LOGIC;
    signal weight_buffer0_22_2_we0 : STD_LOGIC;
    signal weight_buffer0_22_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_22_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_22_3_ce0 : STD_LOGIC;
    signal weight_buffer0_22_3_we0 : STD_LOGIC;
    signal weight_buffer0_22_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_23_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_23_0_ce0 : STD_LOGIC;
    signal weight_buffer0_23_0_we0 : STD_LOGIC;
    signal weight_buffer0_23_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_23_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_23_1_ce0 : STD_LOGIC;
    signal weight_buffer0_23_1_we0 : STD_LOGIC;
    signal weight_buffer0_23_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_23_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_23_2_ce0 : STD_LOGIC;
    signal weight_buffer0_23_2_we0 : STD_LOGIC;
    signal weight_buffer0_23_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_23_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_23_3_ce0 : STD_LOGIC;
    signal weight_buffer0_23_3_we0 : STD_LOGIC;
    signal weight_buffer0_23_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_24_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_24_0_ce0 : STD_LOGIC;
    signal weight_buffer0_24_0_we0 : STD_LOGIC;
    signal weight_buffer0_24_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_24_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_24_1_ce0 : STD_LOGIC;
    signal weight_buffer0_24_1_we0 : STD_LOGIC;
    signal weight_buffer0_24_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_24_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_24_2_ce0 : STD_LOGIC;
    signal weight_buffer0_24_2_we0 : STD_LOGIC;
    signal weight_buffer0_24_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_24_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_24_3_ce0 : STD_LOGIC;
    signal weight_buffer0_24_3_we0 : STD_LOGIC;
    signal weight_buffer0_24_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_25_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_25_0_ce0 : STD_LOGIC;
    signal weight_buffer0_25_0_we0 : STD_LOGIC;
    signal weight_buffer0_25_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_25_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_25_1_ce0 : STD_LOGIC;
    signal weight_buffer0_25_1_we0 : STD_LOGIC;
    signal weight_buffer0_25_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_25_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_25_2_ce0 : STD_LOGIC;
    signal weight_buffer0_25_2_we0 : STD_LOGIC;
    signal weight_buffer0_25_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_25_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_25_3_ce0 : STD_LOGIC;
    signal weight_buffer0_25_3_we0 : STD_LOGIC;
    signal weight_buffer0_25_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_26_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_26_0_ce0 : STD_LOGIC;
    signal weight_buffer0_26_0_we0 : STD_LOGIC;
    signal weight_buffer0_26_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_26_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_26_1_ce0 : STD_LOGIC;
    signal weight_buffer0_26_1_we0 : STD_LOGIC;
    signal weight_buffer0_26_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_26_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_26_2_ce0 : STD_LOGIC;
    signal weight_buffer0_26_2_we0 : STD_LOGIC;
    signal weight_buffer0_26_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_26_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_26_3_ce0 : STD_LOGIC;
    signal weight_buffer0_26_3_we0 : STD_LOGIC;
    signal weight_buffer0_26_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_27_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_27_0_ce0 : STD_LOGIC;
    signal weight_buffer0_27_0_we0 : STD_LOGIC;
    signal weight_buffer0_27_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_27_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_27_1_ce0 : STD_LOGIC;
    signal weight_buffer0_27_1_we0 : STD_LOGIC;
    signal weight_buffer0_27_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_27_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_27_2_ce0 : STD_LOGIC;
    signal weight_buffer0_27_2_we0 : STD_LOGIC;
    signal weight_buffer0_27_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_27_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_27_3_ce0 : STD_LOGIC;
    signal weight_buffer0_27_3_we0 : STD_LOGIC;
    signal weight_buffer0_27_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_28_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_28_0_ce0 : STD_LOGIC;
    signal weight_buffer0_28_0_we0 : STD_LOGIC;
    signal weight_buffer0_28_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_28_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_28_1_ce0 : STD_LOGIC;
    signal weight_buffer0_28_1_we0 : STD_LOGIC;
    signal weight_buffer0_28_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_28_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_28_2_ce0 : STD_LOGIC;
    signal weight_buffer0_28_2_we0 : STD_LOGIC;
    signal weight_buffer0_28_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_28_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_28_3_ce0 : STD_LOGIC;
    signal weight_buffer0_28_3_we0 : STD_LOGIC;
    signal weight_buffer0_28_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_29_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_29_0_ce0 : STD_LOGIC;
    signal weight_buffer0_29_0_we0 : STD_LOGIC;
    signal weight_buffer0_29_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_29_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_29_1_ce0 : STD_LOGIC;
    signal weight_buffer0_29_1_we0 : STD_LOGIC;
    signal weight_buffer0_29_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_29_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_29_2_ce0 : STD_LOGIC;
    signal weight_buffer0_29_2_we0 : STD_LOGIC;
    signal weight_buffer0_29_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_29_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_29_3_ce0 : STD_LOGIC;
    signal weight_buffer0_29_3_we0 : STD_LOGIC;
    signal weight_buffer0_29_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_30_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_30_0_ce0 : STD_LOGIC;
    signal weight_buffer0_30_0_we0 : STD_LOGIC;
    signal weight_buffer0_30_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_30_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_30_1_ce0 : STD_LOGIC;
    signal weight_buffer0_30_1_we0 : STD_LOGIC;
    signal weight_buffer0_30_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_30_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_30_2_ce0 : STD_LOGIC;
    signal weight_buffer0_30_2_we0 : STD_LOGIC;
    signal weight_buffer0_30_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_30_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_30_3_ce0 : STD_LOGIC;
    signal weight_buffer0_30_3_we0 : STD_LOGIC;
    signal weight_buffer0_30_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_31_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_31_0_ce0 : STD_LOGIC;
    signal weight_buffer0_31_0_we0 : STD_LOGIC;
    signal weight_buffer0_31_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_31_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_31_1_ce0 : STD_LOGIC;
    signal weight_buffer0_31_1_we0 : STD_LOGIC;
    signal weight_buffer0_31_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_31_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_31_2_ce0 : STD_LOGIC;
    signal weight_buffer0_31_2_we0 : STD_LOGIC;
    signal weight_buffer0_31_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weight_buffer0_31_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_buffer0_31_3_ce0 : STD_LOGIC;
    signal weight_buffer0_31_3_we0 : STD_LOGIC;
    signal weight_buffer0_31_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_x : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tmp_tx_min : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal NOP_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal input_flag_read_read_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pingpongx_offset_rea_read_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_x_load_reg_2480 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_2215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_tx_min_load_reg_2486 : STD_LOGIC_VECTOR (31 downto 0);
    signal NOP_0_load_reg_2492 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_2246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_2512 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_fu_2261_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal n_1_reg_2520 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_43_fu_2267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_2525 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_2256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TMP_N_next1_0_1_loa_reg_2530 : STD_LOGIC_VECTOR (31 downto 0);
    signal TMP_N_next0_0_1_loa_reg_2536 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_2542 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_pingpong_phi_fu_1036_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_2547 : STD_LOGIC_VECTOR (0 downto 0);
    signal TMP_N_1_fu_2288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_copy_input_weight_fu_1649_ap_idle : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_ap_ready : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_ap_done : STD_LOGIC;
    signal pingpong_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_compute4_fu_1110_ap_idle : STD_LOGIC;
    signal grp_compute4_fu_1110_ap_ready : STD_LOGIC;
    signal grp_compute4_fu_1110_ap_done : STD_LOGIC;
    signal ap_block_state6_on_subcall_done : BOOLEAN;
    signal grp_compute4_fu_1110_ap_start : STD_LOGIC;
    signal grp_compute4_fu_1110_input_buffer_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_compute4_fu_1110_input_buffer_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_input_buffer_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_input_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_compute4_fu_1110_input_buffer_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_input_buffer_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_input_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_compute4_fu_1110_input_buffer_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_input_buffer_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_input_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_compute4_fu_1110_input_buffer_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_input_buffer_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_output_buffer_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_0_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_0_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_1_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_1_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_2_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_2_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_3_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_3_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_4_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_4_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_4_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_5_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_5_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_5_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_6_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_6_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_6_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_7_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_7_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_7_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_8_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_8_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_8_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_8_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_8_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_9_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_9_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_9_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_9_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_9_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_10_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_10_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_10_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_10_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_10_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_11_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_11_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_11_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_11_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_11_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_12_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_12_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_12_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_12_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_12_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_12_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_13_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_13_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_13_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_13_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_13_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_14_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_14_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_14_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_14_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_14_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_14_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_15_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_15_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_15_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_15_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_15_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_15_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_16_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_16_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_16_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_16_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_16_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_16_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_17_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_17_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_17_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_17_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_17_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_17_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_18_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_18_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_18_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_18_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_19_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_19_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_19_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_19_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_19_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_19_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_20_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_20_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_20_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_20_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_20_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_20_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_21_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_21_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_21_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_21_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_21_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_21_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_22_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_22_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_22_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_22_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_22_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_22_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_23_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_23_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_23_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_23_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_23_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_23_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_24_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_24_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_24_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_24_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_24_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_24_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_25_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_25_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_25_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_25_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_25_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_25_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_26_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_26_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_26_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_26_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_26_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_26_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_27_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_27_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_27_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_27_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_27_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_27_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_28_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_28_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_28_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_28_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_28_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_28_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_29_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_29_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_29_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_29_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_29_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_29_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_30_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_30_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_30_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_30_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_30_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_30_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_output_buffer_31_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_31_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_31_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_output_buffer_31_ce1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_31_we1 : STD_LOGIC;
    signal grp_compute4_fu_1110_output_buffer_31_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_0_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_1_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_2_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_2_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_2_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_2_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_2_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_3_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_3_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_3_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_3_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_3_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_4_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_4_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_4_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_4_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_4_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_5_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_5_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_5_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_5_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_5_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_6_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_6_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_6_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_6_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_6_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_7_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_7_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_7_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_7_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_7_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_8_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_8_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_8_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_8_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_8_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_9_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_9_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_9_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_9_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_9_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_10_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_10_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_10_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_10_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_10_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_11_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_11_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_11_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_11_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_11_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_12_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_12_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_12_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_12_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_12_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_13_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_13_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_13_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_13_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_13_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_14_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_14_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_14_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_14_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_14_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_15_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_15_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_15_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_15_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_15_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_16_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_16_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_16_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_16_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_16_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_17_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_17_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_17_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_17_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_17_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_18_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_18_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_18_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_18_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_18_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_19_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_19_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_19_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_19_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_19_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_20_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_20_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_20_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_20_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_20_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_21_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_21_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_21_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_21_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_21_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_22_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_22_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_22_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_22_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_22_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_23_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_23_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_23_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_23_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_23_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_24_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_24_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_24_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_24_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_24_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_25_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_25_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_25_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_25_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_25_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_26_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_26_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_26_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_26_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_26_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_27_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_27_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_27_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_27_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_27_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_28_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_28_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_28_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_28_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_28_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_29_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_29_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_29_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_29_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_29_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_30_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_30_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_30_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_30_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_30_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_0_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_31_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_1_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_31_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_2_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_31_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute4_fu_1110_weight_buffer_31_3_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_weight_buffer_31_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute4_fu_1110_beta_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute4_fu_1110_beta_buffer_ce0 : STD_LOGIC;
    signal grp_compute4_fu_1110_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_enable : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_ap_start : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_WVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_WLAST : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_RREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input_r_BREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_WVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_WLAST : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input1_RREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input1_BREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_WVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_WLAST : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input2_RREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input2_BREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_WVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_WLAST : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_input3_RREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_input3_BREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_WVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_WLAST : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARVALID : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_RREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_m_axi_Weight_BREADY : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_n : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_TN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_Padding : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_copy_input_weight_fu_1649_input_buffer_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_input_buffer_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_0_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_1_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_2_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_3_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_4_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_5_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_6_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_7_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_8_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_9_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_10_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_11_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_12_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_13_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_14_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_15_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_16_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_17_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_18_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_19_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_20_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_21_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_22_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_23_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_24_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_25_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_26_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_27_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_28_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_29_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_30_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_0_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_0_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_1_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_1_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_2_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_2_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_3_ce0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_3_we0 : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_buffer_31_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_copy_input_weight_fu_1649_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_copy_input_weight_fu_1649_enable : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_weight_load_enable : STD_LOGIC;
    signal grp_copy_input_weight_fu_1649_LayerType : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_copy_input_weight_fu_1649_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reorg_yolo25_fu_2138_ap_start : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_ap_done : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_ap_idle : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_ap_ready : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_reorg_yolo25_fu_2138_Input_0_ce0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Input_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_0_ce0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_0_we0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_1_ce0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_1_we0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_2_ce0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_2_we0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reorg_yolo25_fu_2138_Output_3_ce0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_3_we0 : STD_LOGIC;
    signal grp_reorg_yolo25_fu_2138_Output_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_yolo26_fu_2159_ap_start : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_ap_done : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_ap_idle : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_ap_ready : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_pool_yolo26_fu_2159_Input_0_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Input_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_pool_yolo26_fu_2159_Input_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_pool_yolo26_fu_2159_Input_1_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Input_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_pool_yolo26_fu_2159_Input_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_pool_yolo26_fu_2159_Input_2_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Input_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_pool_yolo26_fu_2159_Input_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_pool_yolo26_fu_2159_Input_3_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Input_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_0_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_0_we0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_1_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_1_we0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_2_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_2_we0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_pool_yolo26_fu_2159_Output_3_ce0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_3_we0 : STD_LOGIC;
    signal grp_pool_yolo26_fu_2159_Output_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_pingpong_1_phi_fu_1071_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_reg_1044 : STD_LOGIC_VECTOR (30 downto 0);
    signal TMP_N_reg_1055 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag_2_reg_1080 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal tmp_40_fu_2240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_2221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TX_MIN_next_0_2_reg_1095 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute4_fu_1110_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_copy_input_weight_fu_1649_ap_start_reg : STD_LOGIC := '0';
    signal grp_reorg_yolo25_fu_2138_ap_start_reg : STD_LOGIC := '0';
    signal grp_pool_yolo26_fu_2159_ap_start_reg : STD_LOGIC := '0';
    signal TMP_N_next1_0_1_fu_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal TMP_N_next0_0_1_fu_836 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_cast_fu_2252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component compute4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_buffer_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_0_ce0 : OUT STD_LOGIC;
        input_buffer_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_1_ce0 : OUT STD_LOGIC;
        input_buffer_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_2_ce0 : OUT STD_LOGIC;
        input_buffer_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_3_ce0 : OUT STD_LOGIC;
        input_buffer_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_buffer_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_0_ce0 : OUT STD_LOGIC;
        output_buffer_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_0_ce1 : OUT STD_LOGIC;
        output_buffer_0_we1 : OUT STD_LOGIC;
        output_buffer_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_1_ce0 : OUT STD_LOGIC;
        output_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_1_ce1 : OUT STD_LOGIC;
        output_buffer_1_we1 : OUT STD_LOGIC;
        output_buffer_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_2_ce0 : OUT STD_LOGIC;
        output_buffer_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_2_ce1 : OUT STD_LOGIC;
        output_buffer_2_we1 : OUT STD_LOGIC;
        output_buffer_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_3_ce0 : OUT STD_LOGIC;
        output_buffer_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_3_ce1 : OUT STD_LOGIC;
        output_buffer_3_we1 : OUT STD_LOGIC;
        output_buffer_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_4_ce0 : OUT STD_LOGIC;
        output_buffer_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_4_ce1 : OUT STD_LOGIC;
        output_buffer_4_we1 : OUT STD_LOGIC;
        output_buffer_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_5_ce0 : OUT STD_LOGIC;
        output_buffer_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_5_ce1 : OUT STD_LOGIC;
        output_buffer_5_we1 : OUT STD_LOGIC;
        output_buffer_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_6_ce0 : OUT STD_LOGIC;
        output_buffer_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_6_ce1 : OUT STD_LOGIC;
        output_buffer_6_we1 : OUT STD_LOGIC;
        output_buffer_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_7_ce0 : OUT STD_LOGIC;
        output_buffer_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_7_ce1 : OUT STD_LOGIC;
        output_buffer_7_we1 : OUT STD_LOGIC;
        output_buffer_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_8_ce0 : OUT STD_LOGIC;
        output_buffer_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_8_ce1 : OUT STD_LOGIC;
        output_buffer_8_we1 : OUT STD_LOGIC;
        output_buffer_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_9_ce0 : OUT STD_LOGIC;
        output_buffer_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_9_ce1 : OUT STD_LOGIC;
        output_buffer_9_we1 : OUT STD_LOGIC;
        output_buffer_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_10_ce0 : OUT STD_LOGIC;
        output_buffer_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_10_ce1 : OUT STD_LOGIC;
        output_buffer_10_we1 : OUT STD_LOGIC;
        output_buffer_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_11_ce0 : OUT STD_LOGIC;
        output_buffer_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_11_ce1 : OUT STD_LOGIC;
        output_buffer_11_we1 : OUT STD_LOGIC;
        output_buffer_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_12_ce0 : OUT STD_LOGIC;
        output_buffer_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_12_ce1 : OUT STD_LOGIC;
        output_buffer_12_we1 : OUT STD_LOGIC;
        output_buffer_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_13_ce0 : OUT STD_LOGIC;
        output_buffer_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_13_ce1 : OUT STD_LOGIC;
        output_buffer_13_we1 : OUT STD_LOGIC;
        output_buffer_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_14_ce0 : OUT STD_LOGIC;
        output_buffer_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_14_ce1 : OUT STD_LOGIC;
        output_buffer_14_we1 : OUT STD_LOGIC;
        output_buffer_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_15_ce0 : OUT STD_LOGIC;
        output_buffer_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_15_ce1 : OUT STD_LOGIC;
        output_buffer_15_we1 : OUT STD_LOGIC;
        output_buffer_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_16_ce0 : OUT STD_LOGIC;
        output_buffer_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_16_ce1 : OUT STD_LOGIC;
        output_buffer_16_we1 : OUT STD_LOGIC;
        output_buffer_16_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_17_ce0 : OUT STD_LOGIC;
        output_buffer_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_17_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_17_ce1 : OUT STD_LOGIC;
        output_buffer_17_we1 : OUT STD_LOGIC;
        output_buffer_17_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_18_ce0 : OUT STD_LOGIC;
        output_buffer_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_18_ce1 : OUT STD_LOGIC;
        output_buffer_18_we1 : OUT STD_LOGIC;
        output_buffer_18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_19_ce0 : OUT STD_LOGIC;
        output_buffer_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_19_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_19_ce1 : OUT STD_LOGIC;
        output_buffer_19_we1 : OUT STD_LOGIC;
        output_buffer_19_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_20_ce0 : OUT STD_LOGIC;
        output_buffer_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_20_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_20_ce1 : OUT STD_LOGIC;
        output_buffer_20_we1 : OUT STD_LOGIC;
        output_buffer_20_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_21_ce0 : OUT STD_LOGIC;
        output_buffer_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_21_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_21_ce1 : OUT STD_LOGIC;
        output_buffer_21_we1 : OUT STD_LOGIC;
        output_buffer_21_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_22_ce0 : OUT STD_LOGIC;
        output_buffer_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_22_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_22_ce1 : OUT STD_LOGIC;
        output_buffer_22_we1 : OUT STD_LOGIC;
        output_buffer_22_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_23_ce0 : OUT STD_LOGIC;
        output_buffer_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_23_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_23_ce1 : OUT STD_LOGIC;
        output_buffer_23_we1 : OUT STD_LOGIC;
        output_buffer_23_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_24_ce0 : OUT STD_LOGIC;
        output_buffer_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_24_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_24_ce1 : OUT STD_LOGIC;
        output_buffer_24_we1 : OUT STD_LOGIC;
        output_buffer_24_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_25_ce0 : OUT STD_LOGIC;
        output_buffer_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_25_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_25_ce1 : OUT STD_LOGIC;
        output_buffer_25_we1 : OUT STD_LOGIC;
        output_buffer_25_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_26_ce0 : OUT STD_LOGIC;
        output_buffer_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_26_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_26_ce1 : OUT STD_LOGIC;
        output_buffer_26_we1 : OUT STD_LOGIC;
        output_buffer_26_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_27_ce0 : OUT STD_LOGIC;
        output_buffer_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_27_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_27_ce1 : OUT STD_LOGIC;
        output_buffer_27_we1 : OUT STD_LOGIC;
        output_buffer_27_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_28_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_28_ce0 : OUT STD_LOGIC;
        output_buffer_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_28_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_28_ce1 : OUT STD_LOGIC;
        output_buffer_28_we1 : OUT STD_LOGIC;
        output_buffer_28_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_29_ce0 : OUT STD_LOGIC;
        output_buffer_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_29_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_29_ce1 : OUT STD_LOGIC;
        output_buffer_29_we1 : OUT STD_LOGIC;
        output_buffer_29_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_30_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_30_ce0 : OUT STD_LOGIC;
        output_buffer_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_30_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_30_ce1 : OUT STD_LOGIC;
        output_buffer_30_we1 : OUT STD_LOGIC;
        output_buffer_30_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_31_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_31_ce0 : OUT STD_LOGIC;
        output_buffer_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_31_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_31_ce1 : OUT STD_LOGIC;
        output_buffer_31_we1 : OUT STD_LOGIC;
        output_buffer_31_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_buffer_0_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_0_ce0 : OUT STD_LOGIC;
        weight_buffer_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_0_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_1_ce0 : OUT STD_LOGIC;
        weight_buffer_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_0_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_2_ce0 : OUT STD_LOGIC;
        weight_buffer_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_0_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_3_ce0 : OUT STD_LOGIC;
        weight_buffer_0_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_0_ce0 : OUT STD_LOGIC;
        weight_buffer_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_1_ce0 : OUT STD_LOGIC;
        weight_buffer_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_2_ce0 : OUT STD_LOGIC;
        weight_buffer_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_3_ce0 : OUT STD_LOGIC;
        weight_buffer_1_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_0_ce0 : OUT STD_LOGIC;
        weight_buffer_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_1_ce0 : OUT STD_LOGIC;
        weight_buffer_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_2_ce0 : OUT STD_LOGIC;
        weight_buffer_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_3_ce0 : OUT STD_LOGIC;
        weight_buffer_2_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_0_ce0 : OUT STD_LOGIC;
        weight_buffer_3_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_1_ce0 : OUT STD_LOGIC;
        weight_buffer_3_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_2_ce0 : OUT STD_LOGIC;
        weight_buffer_3_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_3_ce0 : OUT STD_LOGIC;
        weight_buffer_3_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_0_ce0 : OUT STD_LOGIC;
        weight_buffer_4_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_1_ce0 : OUT STD_LOGIC;
        weight_buffer_4_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_2_ce0 : OUT STD_LOGIC;
        weight_buffer_4_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_3_ce0 : OUT STD_LOGIC;
        weight_buffer_4_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_0_ce0 : OUT STD_LOGIC;
        weight_buffer_5_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_1_ce0 : OUT STD_LOGIC;
        weight_buffer_5_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_2_ce0 : OUT STD_LOGIC;
        weight_buffer_5_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_3_ce0 : OUT STD_LOGIC;
        weight_buffer_5_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_0_ce0 : OUT STD_LOGIC;
        weight_buffer_6_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_1_ce0 : OUT STD_LOGIC;
        weight_buffer_6_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_2_ce0 : OUT STD_LOGIC;
        weight_buffer_6_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_3_ce0 : OUT STD_LOGIC;
        weight_buffer_6_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_0_ce0 : OUT STD_LOGIC;
        weight_buffer_7_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_1_ce0 : OUT STD_LOGIC;
        weight_buffer_7_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_2_ce0 : OUT STD_LOGIC;
        weight_buffer_7_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_3_ce0 : OUT STD_LOGIC;
        weight_buffer_7_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_0_ce0 : OUT STD_LOGIC;
        weight_buffer_8_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_1_ce0 : OUT STD_LOGIC;
        weight_buffer_8_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_2_ce0 : OUT STD_LOGIC;
        weight_buffer_8_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_3_ce0 : OUT STD_LOGIC;
        weight_buffer_8_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_0_ce0 : OUT STD_LOGIC;
        weight_buffer_9_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_1_ce0 : OUT STD_LOGIC;
        weight_buffer_9_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_2_ce0 : OUT STD_LOGIC;
        weight_buffer_9_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_3_ce0 : OUT STD_LOGIC;
        weight_buffer_9_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_0_ce0 : OUT STD_LOGIC;
        weight_buffer_10_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_1_ce0 : OUT STD_LOGIC;
        weight_buffer_10_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_2_ce0 : OUT STD_LOGIC;
        weight_buffer_10_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_3_ce0 : OUT STD_LOGIC;
        weight_buffer_10_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_0_ce0 : OUT STD_LOGIC;
        weight_buffer_11_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_1_ce0 : OUT STD_LOGIC;
        weight_buffer_11_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_2_ce0 : OUT STD_LOGIC;
        weight_buffer_11_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_3_ce0 : OUT STD_LOGIC;
        weight_buffer_11_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_0_ce0 : OUT STD_LOGIC;
        weight_buffer_12_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_1_ce0 : OUT STD_LOGIC;
        weight_buffer_12_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_2_ce0 : OUT STD_LOGIC;
        weight_buffer_12_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_3_ce0 : OUT STD_LOGIC;
        weight_buffer_12_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_0_ce0 : OUT STD_LOGIC;
        weight_buffer_13_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_1_ce0 : OUT STD_LOGIC;
        weight_buffer_13_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_2_ce0 : OUT STD_LOGIC;
        weight_buffer_13_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_3_ce0 : OUT STD_LOGIC;
        weight_buffer_13_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_0_ce0 : OUT STD_LOGIC;
        weight_buffer_14_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_1_ce0 : OUT STD_LOGIC;
        weight_buffer_14_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_2_ce0 : OUT STD_LOGIC;
        weight_buffer_14_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_3_ce0 : OUT STD_LOGIC;
        weight_buffer_14_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_0_ce0 : OUT STD_LOGIC;
        weight_buffer_15_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_1_ce0 : OUT STD_LOGIC;
        weight_buffer_15_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_2_ce0 : OUT STD_LOGIC;
        weight_buffer_15_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_3_ce0 : OUT STD_LOGIC;
        weight_buffer_15_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_0_ce0 : OUT STD_LOGIC;
        weight_buffer_16_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_1_ce0 : OUT STD_LOGIC;
        weight_buffer_16_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_2_ce0 : OUT STD_LOGIC;
        weight_buffer_16_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_3_ce0 : OUT STD_LOGIC;
        weight_buffer_16_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_0_ce0 : OUT STD_LOGIC;
        weight_buffer_17_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_1_ce0 : OUT STD_LOGIC;
        weight_buffer_17_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_2_ce0 : OUT STD_LOGIC;
        weight_buffer_17_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_3_ce0 : OUT STD_LOGIC;
        weight_buffer_17_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_0_ce0 : OUT STD_LOGIC;
        weight_buffer_18_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_1_ce0 : OUT STD_LOGIC;
        weight_buffer_18_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_2_ce0 : OUT STD_LOGIC;
        weight_buffer_18_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_3_ce0 : OUT STD_LOGIC;
        weight_buffer_18_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_0_ce0 : OUT STD_LOGIC;
        weight_buffer_19_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_1_ce0 : OUT STD_LOGIC;
        weight_buffer_19_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_2_ce0 : OUT STD_LOGIC;
        weight_buffer_19_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_3_ce0 : OUT STD_LOGIC;
        weight_buffer_19_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_0_ce0 : OUT STD_LOGIC;
        weight_buffer_20_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_1_ce0 : OUT STD_LOGIC;
        weight_buffer_20_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_2_ce0 : OUT STD_LOGIC;
        weight_buffer_20_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_3_ce0 : OUT STD_LOGIC;
        weight_buffer_20_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_0_ce0 : OUT STD_LOGIC;
        weight_buffer_21_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_1_ce0 : OUT STD_LOGIC;
        weight_buffer_21_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_2_ce0 : OUT STD_LOGIC;
        weight_buffer_21_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_3_ce0 : OUT STD_LOGIC;
        weight_buffer_21_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_0_ce0 : OUT STD_LOGIC;
        weight_buffer_22_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_1_ce0 : OUT STD_LOGIC;
        weight_buffer_22_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_2_ce0 : OUT STD_LOGIC;
        weight_buffer_22_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_3_ce0 : OUT STD_LOGIC;
        weight_buffer_22_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_0_ce0 : OUT STD_LOGIC;
        weight_buffer_23_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_1_ce0 : OUT STD_LOGIC;
        weight_buffer_23_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_2_ce0 : OUT STD_LOGIC;
        weight_buffer_23_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_3_ce0 : OUT STD_LOGIC;
        weight_buffer_23_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_0_ce0 : OUT STD_LOGIC;
        weight_buffer_24_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_1_ce0 : OUT STD_LOGIC;
        weight_buffer_24_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_2_ce0 : OUT STD_LOGIC;
        weight_buffer_24_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_3_ce0 : OUT STD_LOGIC;
        weight_buffer_24_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_0_ce0 : OUT STD_LOGIC;
        weight_buffer_25_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_1_ce0 : OUT STD_LOGIC;
        weight_buffer_25_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_2_ce0 : OUT STD_LOGIC;
        weight_buffer_25_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_3_ce0 : OUT STD_LOGIC;
        weight_buffer_25_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_0_ce0 : OUT STD_LOGIC;
        weight_buffer_26_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_1_ce0 : OUT STD_LOGIC;
        weight_buffer_26_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_2_ce0 : OUT STD_LOGIC;
        weight_buffer_26_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_3_ce0 : OUT STD_LOGIC;
        weight_buffer_26_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_0_ce0 : OUT STD_LOGIC;
        weight_buffer_27_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_1_ce0 : OUT STD_LOGIC;
        weight_buffer_27_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_2_ce0 : OUT STD_LOGIC;
        weight_buffer_27_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_3_ce0 : OUT STD_LOGIC;
        weight_buffer_27_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_0_ce0 : OUT STD_LOGIC;
        weight_buffer_28_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_1_ce0 : OUT STD_LOGIC;
        weight_buffer_28_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_2_ce0 : OUT STD_LOGIC;
        weight_buffer_28_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_3_ce0 : OUT STD_LOGIC;
        weight_buffer_28_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_0_ce0 : OUT STD_LOGIC;
        weight_buffer_29_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_1_ce0 : OUT STD_LOGIC;
        weight_buffer_29_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_2_ce0 : OUT STD_LOGIC;
        weight_buffer_29_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_3_ce0 : OUT STD_LOGIC;
        weight_buffer_29_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_0_ce0 : OUT STD_LOGIC;
        weight_buffer_30_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_1_ce0 : OUT STD_LOGIC;
        weight_buffer_30_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_2_ce0 : OUT STD_LOGIC;
        weight_buffer_30_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_3_ce0 : OUT STD_LOGIC;
        weight_buffer_30_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_0_ce0 : OUT STD_LOGIC;
        weight_buffer_31_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_1_ce0 : OUT STD_LOGIC;
        weight_buffer_31_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_2_ce0 : OUT STD_LOGIC;
        weight_buffer_31_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_3_ce0 : OUT STD_LOGIC;
        weight_buffer_31_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        beta_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        beta_buffer_ce0 : OUT STD_LOGIC;
        beta_buffer_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        Kernel_size : IN STD_LOGIC_VECTOR (31 downto 0);
        TMP_M : IN STD_LOGIC_VECTOR (31 downto 0);
        TM_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        TR_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        TC_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        enable : IN STD_LOGIC;
        InterSubBeta : IN STD_LOGIC_VECTOR (7 downto 0);
        WeightAddInputSubInter : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component copy_input_weight IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_input_r_AWVALID : OUT STD_LOGIC;
        m_axi_input_r_AWREADY : IN STD_LOGIC;
        m_axi_input_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_WVALID : OUT STD_LOGIC;
        m_axi_input_r_WREADY : IN STD_LOGIC;
        m_axi_input_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_WLAST : OUT STD_LOGIC;
        m_axi_input_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_ARVALID : OUT STD_LOGIC;
        m_axi_input_r_ARREADY : IN STD_LOGIC;
        m_axi_input_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_RVALID : IN STD_LOGIC;
        m_axi_input_r_RREADY : OUT STD_LOGIC;
        m_axi_input_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_RLAST : IN STD_LOGIC;
        m_axi_input_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_BVALID : IN STD_LOGIC;
        m_axi_input_r_BREADY : OUT STD_LOGIC;
        m_axi_input_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        m_axi_input1_AWVALID : OUT STD_LOGIC;
        m_axi_input1_AWREADY : IN STD_LOGIC;
        m_axi_input1_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_WVALID : OUT STD_LOGIC;
        m_axi_input1_WREADY : IN STD_LOGIC;
        m_axi_input1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input1_WLAST : OUT STD_LOGIC;
        m_axi_input1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_ARVALID : OUT STD_LOGIC;
        m_axi_input1_ARREADY : IN STD_LOGIC;
        m_axi_input1_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_RVALID : IN STD_LOGIC;
        m_axi_input1_RREADY : OUT STD_LOGIC;
        m_axi_input1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input1_RLAST : IN STD_LOGIC;
        m_axi_input1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input1_BVALID : IN STD_LOGIC;
        m_axi_input1_BREADY : OUT STD_LOGIC;
        m_axi_input1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input1_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        m_axi_input2_AWVALID : OUT STD_LOGIC;
        m_axi_input2_AWREADY : IN STD_LOGIC;
        m_axi_input2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_WVALID : OUT STD_LOGIC;
        m_axi_input2_WREADY : IN STD_LOGIC;
        m_axi_input2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input2_WLAST : OUT STD_LOGIC;
        m_axi_input2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_ARVALID : OUT STD_LOGIC;
        m_axi_input2_ARREADY : IN STD_LOGIC;
        m_axi_input2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_RVALID : IN STD_LOGIC;
        m_axi_input2_RREADY : OUT STD_LOGIC;
        m_axi_input2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input2_RLAST : IN STD_LOGIC;
        m_axi_input2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input2_BVALID : IN STD_LOGIC;
        m_axi_input2_BREADY : OUT STD_LOGIC;
        m_axi_input2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input2_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        m_axi_input3_AWVALID : OUT STD_LOGIC;
        m_axi_input3_AWREADY : IN STD_LOGIC;
        m_axi_input3_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_WVALID : OUT STD_LOGIC;
        m_axi_input3_WREADY : IN STD_LOGIC;
        m_axi_input3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input3_WLAST : OUT STD_LOGIC;
        m_axi_input3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_ARVALID : OUT STD_LOGIC;
        m_axi_input3_ARREADY : IN STD_LOGIC;
        m_axi_input3_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_RVALID : IN STD_LOGIC;
        m_axi_input3_RREADY : OUT STD_LOGIC;
        m_axi_input3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input3_RLAST : IN STD_LOGIC;
        m_axi_input3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input3_BVALID : IN STD_LOGIC;
        m_axi_input3_BREADY : OUT STD_LOGIC;
        m_axi_input3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input3_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        m_axi_Weight_AWVALID : OUT STD_LOGIC;
        m_axi_Weight_AWREADY : IN STD_LOGIC;
        m_axi_Weight_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Weight_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Weight_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Weight_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Weight_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Weight_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Weight_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Weight_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Weight_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Weight_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_WVALID : OUT STD_LOGIC;
        m_axi_Weight_WREADY : IN STD_LOGIC;
        m_axi_Weight_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Weight_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Weight_WLAST : OUT STD_LOGIC;
        m_axi_Weight_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_ARVALID : OUT STD_LOGIC;
        m_axi_Weight_ARREADY : IN STD_LOGIC;
        m_axi_Weight_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Weight_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Weight_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Weight_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Weight_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Weight_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Weight_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Weight_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Weight_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Weight_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_RVALID : IN STD_LOGIC;
        m_axi_Weight_RREADY : OUT STD_LOGIC;
        m_axi_Weight_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Weight_RLAST : IN STD_LOGIC;
        m_axi_Weight_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Weight_BVALID : IN STD_LOGIC;
        m_axi_Weight_BREADY : OUT STD_LOGIC;
        m_axi_Weight_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Weight_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Weight_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Weight_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        InFM_num : IN STD_LOGIC_VECTOR (31 downto 0);
        Input_w : IN STD_LOGIC_VECTOR (31 downto 0);
        Input_h : IN STD_LOGIC_VECTOR (31 downto 0);
        Kernel_size : IN STD_LOGIC_VECTOR (31 downto 0);
        Kernel_stride : IN STD_LOGIC_VECTOR (31 downto 0);
        r : IN STD_LOGIC_VECTOR (31 downto 0);
        c : IN STD_LOGIC_VECTOR (31 downto 0);
        m : IN STD_LOGIC_VECTOR (31 downto 0);
        n : IN STD_LOGIC_VECTOR (31 downto 0);
        TM_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        TN : IN STD_LOGIC_VECTOR (31 downto 0);
        TRow : IN STD_LOGIC_VECTOR (7 downto 0);
        TCol : IN STD_LOGIC_VECTOR (7 downto 0);
        Padding : IN STD_LOGIC_VECTOR (31 downto 0);
        input_buffer_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_0_ce0 : OUT STD_LOGIC;
        input_buffer_0_we0 : OUT STD_LOGIC;
        input_buffer_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_1_ce0 : OUT STD_LOGIC;
        input_buffer_1_we0 : OUT STD_LOGIC;
        input_buffer_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_2_ce0 : OUT STD_LOGIC;
        input_buffer_2_we0 : OUT STD_LOGIC;
        input_buffer_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_buffer_3_ce0 : OUT STD_LOGIC;
        input_buffer_3_we0 : OUT STD_LOGIC;
        input_buffer_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_0_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_0_ce0 : OUT STD_LOGIC;
        weight_buffer_0_0_we0 : OUT STD_LOGIC;
        weight_buffer_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_0_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_1_ce0 : OUT STD_LOGIC;
        weight_buffer_0_1_we0 : OUT STD_LOGIC;
        weight_buffer_0_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_0_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_2_ce0 : OUT STD_LOGIC;
        weight_buffer_0_2_we0 : OUT STD_LOGIC;
        weight_buffer_0_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_0_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_0_3_ce0 : OUT STD_LOGIC;
        weight_buffer_0_3_we0 : OUT STD_LOGIC;
        weight_buffer_0_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_0_ce0 : OUT STD_LOGIC;
        weight_buffer_1_0_we0 : OUT STD_LOGIC;
        weight_buffer_1_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_1_ce0 : OUT STD_LOGIC;
        weight_buffer_1_1_we0 : OUT STD_LOGIC;
        weight_buffer_1_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_2_ce0 : OUT STD_LOGIC;
        weight_buffer_1_2_we0 : OUT STD_LOGIC;
        weight_buffer_1_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_1_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_1_3_ce0 : OUT STD_LOGIC;
        weight_buffer_1_3_we0 : OUT STD_LOGIC;
        weight_buffer_1_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_0_ce0 : OUT STD_LOGIC;
        weight_buffer_2_0_we0 : OUT STD_LOGIC;
        weight_buffer_2_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_1_ce0 : OUT STD_LOGIC;
        weight_buffer_2_1_we0 : OUT STD_LOGIC;
        weight_buffer_2_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_2_ce0 : OUT STD_LOGIC;
        weight_buffer_2_2_we0 : OUT STD_LOGIC;
        weight_buffer_2_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_2_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_2_3_ce0 : OUT STD_LOGIC;
        weight_buffer_2_3_we0 : OUT STD_LOGIC;
        weight_buffer_2_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_0_ce0 : OUT STD_LOGIC;
        weight_buffer_3_0_we0 : OUT STD_LOGIC;
        weight_buffer_3_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_1_ce0 : OUT STD_LOGIC;
        weight_buffer_3_1_we0 : OUT STD_LOGIC;
        weight_buffer_3_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_2_ce0 : OUT STD_LOGIC;
        weight_buffer_3_2_we0 : OUT STD_LOGIC;
        weight_buffer_3_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_3_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_3_3_ce0 : OUT STD_LOGIC;
        weight_buffer_3_3_we0 : OUT STD_LOGIC;
        weight_buffer_3_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_0_ce0 : OUT STD_LOGIC;
        weight_buffer_4_0_we0 : OUT STD_LOGIC;
        weight_buffer_4_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_1_ce0 : OUT STD_LOGIC;
        weight_buffer_4_1_we0 : OUT STD_LOGIC;
        weight_buffer_4_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_2_ce0 : OUT STD_LOGIC;
        weight_buffer_4_2_we0 : OUT STD_LOGIC;
        weight_buffer_4_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_4_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_4_3_ce0 : OUT STD_LOGIC;
        weight_buffer_4_3_we0 : OUT STD_LOGIC;
        weight_buffer_4_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_0_ce0 : OUT STD_LOGIC;
        weight_buffer_5_0_we0 : OUT STD_LOGIC;
        weight_buffer_5_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_1_ce0 : OUT STD_LOGIC;
        weight_buffer_5_1_we0 : OUT STD_LOGIC;
        weight_buffer_5_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_2_ce0 : OUT STD_LOGIC;
        weight_buffer_5_2_we0 : OUT STD_LOGIC;
        weight_buffer_5_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_5_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_5_3_ce0 : OUT STD_LOGIC;
        weight_buffer_5_3_we0 : OUT STD_LOGIC;
        weight_buffer_5_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_0_ce0 : OUT STD_LOGIC;
        weight_buffer_6_0_we0 : OUT STD_LOGIC;
        weight_buffer_6_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_1_ce0 : OUT STD_LOGIC;
        weight_buffer_6_1_we0 : OUT STD_LOGIC;
        weight_buffer_6_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_2_ce0 : OUT STD_LOGIC;
        weight_buffer_6_2_we0 : OUT STD_LOGIC;
        weight_buffer_6_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_6_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_6_3_ce0 : OUT STD_LOGIC;
        weight_buffer_6_3_we0 : OUT STD_LOGIC;
        weight_buffer_6_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_0_ce0 : OUT STD_LOGIC;
        weight_buffer_7_0_we0 : OUT STD_LOGIC;
        weight_buffer_7_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_1_ce0 : OUT STD_LOGIC;
        weight_buffer_7_1_we0 : OUT STD_LOGIC;
        weight_buffer_7_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_2_ce0 : OUT STD_LOGIC;
        weight_buffer_7_2_we0 : OUT STD_LOGIC;
        weight_buffer_7_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_7_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_7_3_ce0 : OUT STD_LOGIC;
        weight_buffer_7_3_we0 : OUT STD_LOGIC;
        weight_buffer_7_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_0_ce0 : OUT STD_LOGIC;
        weight_buffer_8_0_we0 : OUT STD_LOGIC;
        weight_buffer_8_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_1_ce0 : OUT STD_LOGIC;
        weight_buffer_8_1_we0 : OUT STD_LOGIC;
        weight_buffer_8_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_2_ce0 : OUT STD_LOGIC;
        weight_buffer_8_2_we0 : OUT STD_LOGIC;
        weight_buffer_8_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_8_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_8_3_ce0 : OUT STD_LOGIC;
        weight_buffer_8_3_we0 : OUT STD_LOGIC;
        weight_buffer_8_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_0_ce0 : OUT STD_LOGIC;
        weight_buffer_9_0_we0 : OUT STD_LOGIC;
        weight_buffer_9_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_1_ce0 : OUT STD_LOGIC;
        weight_buffer_9_1_we0 : OUT STD_LOGIC;
        weight_buffer_9_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_2_ce0 : OUT STD_LOGIC;
        weight_buffer_9_2_we0 : OUT STD_LOGIC;
        weight_buffer_9_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_9_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_9_3_ce0 : OUT STD_LOGIC;
        weight_buffer_9_3_we0 : OUT STD_LOGIC;
        weight_buffer_9_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_0_ce0 : OUT STD_LOGIC;
        weight_buffer_10_0_we0 : OUT STD_LOGIC;
        weight_buffer_10_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_1_ce0 : OUT STD_LOGIC;
        weight_buffer_10_1_we0 : OUT STD_LOGIC;
        weight_buffer_10_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_2_ce0 : OUT STD_LOGIC;
        weight_buffer_10_2_we0 : OUT STD_LOGIC;
        weight_buffer_10_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_10_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_10_3_ce0 : OUT STD_LOGIC;
        weight_buffer_10_3_we0 : OUT STD_LOGIC;
        weight_buffer_10_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_0_ce0 : OUT STD_LOGIC;
        weight_buffer_11_0_we0 : OUT STD_LOGIC;
        weight_buffer_11_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_1_ce0 : OUT STD_LOGIC;
        weight_buffer_11_1_we0 : OUT STD_LOGIC;
        weight_buffer_11_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_2_ce0 : OUT STD_LOGIC;
        weight_buffer_11_2_we0 : OUT STD_LOGIC;
        weight_buffer_11_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_11_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_11_3_ce0 : OUT STD_LOGIC;
        weight_buffer_11_3_we0 : OUT STD_LOGIC;
        weight_buffer_11_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_0_ce0 : OUT STD_LOGIC;
        weight_buffer_12_0_we0 : OUT STD_LOGIC;
        weight_buffer_12_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_1_ce0 : OUT STD_LOGIC;
        weight_buffer_12_1_we0 : OUT STD_LOGIC;
        weight_buffer_12_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_2_ce0 : OUT STD_LOGIC;
        weight_buffer_12_2_we0 : OUT STD_LOGIC;
        weight_buffer_12_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_12_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_12_3_ce0 : OUT STD_LOGIC;
        weight_buffer_12_3_we0 : OUT STD_LOGIC;
        weight_buffer_12_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_0_ce0 : OUT STD_LOGIC;
        weight_buffer_13_0_we0 : OUT STD_LOGIC;
        weight_buffer_13_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_1_ce0 : OUT STD_LOGIC;
        weight_buffer_13_1_we0 : OUT STD_LOGIC;
        weight_buffer_13_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_2_ce0 : OUT STD_LOGIC;
        weight_buffer_13_2_we0 : OUT STD_LOGIC;
        weight_buffer_13_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_13_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_13_3_ce0 : OUT STD_LOGIC;
        weight_buffer_13_3_we0 : OUT STD_LOGIC;
        weight_buffer_13_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_0_ce0 : OUT STD_LOGIC;
        weight_buffer_14_0_we0 : OUT STD_LOGIC;
        weight_buffer_14_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_1_ce0 : OUT STD_LOGIC;
        weight_buffer_14_1_we0 : OUT STD_LOGIC;
        weight_buffer_14_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_2_ce0 : OUT STD_LOGIC;
        weight_buffer_14_2_we0 : OUT STD_LOGIC;
        weight_buffer_14_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_14_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_14_3_ce0 : OUT STD_LOGIC;
        weight_buffer_14_3_we0 : OUT STD_LOGIC;
        weight_buffer_14_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_0_ce0 : OUT STD_LOGIC;
        weight_buffer_15_0_we0 : OUT STD_LOGIC;
        weight_buffer_15_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_1_ce0 : OUT STD_LOGIC;
        weight_buffer_15_1_we0 : OUT STD_LOGIC;
        weight_buffer_15_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_2_ce0 : OUT STD_LOGIC;
        weight_buffer_15_2_we0 : OUT STD_LOGIC;
        weight_buffer_15_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_15_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_15_3_ce0 : OUT STD_LOGIC;
        weight_buffer_15_3_we0 : OUT STD_LOGIC;
        weight_buffer_15_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_0_ce0 : OUT STD_LOGIC;
        weight_buffer_16_0_we0 : OUT STD_LOGIC;
        weight_buffer_16_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_1_ce0 : OUT STD_LOGIC;
        weight_buffer_16_1_we0 : OUT STD_LOGIC;
        weight_buffer_16_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_2_ce0 : OUT STD_LOGIC;
        weight_buffer_16_2_we0 : OUT STD_LOGIC;
        weight_buffer_16_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_16_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_16_3_ce0 : OUT STD_LOGIC;
        weight_buffer_16_3_we0 : OUT STD_LOGIC;
        weight_buffer_16_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_0_ce0 : OUT STD_LOGIC;
        weight_buffer_17_0_we0 : OUT STD_LOGIC;
        weight_buffer_17_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_1_ce0 : OUT STD_LOGIC;
        weight_buffer_17_1_we0 : OUT STD_LOGIC;
        weight_buffer_17_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_2_ce0 : OUT STD_LOGIC;
        weight_buffer_17_2_we0 : OUT STD_LOGIC;
        weight_buffer_17_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_17_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_17_3_ce0 : OUT STD_LOGIC;
        weight_buffer_17_3_we0 : OUT STD_LOGIC;
        weight_buffer_17_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_0_ce0 : OUT STD_LOGIC;
        weight_buffer_18_0_we0 : OUT STD_LOGIC;
        weight_buffer_18_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_1_ce0 : OUT STD_LOGIC;
        weight_buffer_18_1_we0 : OUT STD_LOGIC;
        weight_buffer_18_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_2_ce0 : OUT STD_LOGIC;
        weight_buffer_18_2_we0 : OUT STD_LOGIC;
        weight_buffer_18_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_18_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_18_3_ce0 : OUT STD_LOGIC;
        weight_buffer_18_3_we0 : OUT STD_LOGIC;
        weight_buffer_18_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_0_ce0 : OUT STD_LOGIC;
        weight_buffer_19_0_we0 : OUT STD_LOGIC;
        weight_buffer_19_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_1_ce0 : OUT STD_LOGIC;
        weight_buffer_19_1_we0 : OUT STD_LOGIC;
        weight_buffer_19_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_2_ce0 : OUT STD_LOGIC;
        weight_buffer_19_2_we0 : OUT STD_LOGIC;
        weight_buffer_19_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_19_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_19_3_ce0 : OUT STD_LOGIC;
        weight_buffer_19_3_we0 : OUT STD_LOGIC;
        weight_buffer_19_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_0_ce0 : OUT STD_LOGIC;
        weight_buffer_20_0_we0 : OUT STD_LOGIC;
        weight_buffer_20_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_1_ce0 : OUT STD_LOGIC;
        weight_buffer_20_1_we0 : OUT STD_LOGIC;
        weight_buffer_20_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_2_ce0 : OUT STD_LOGIC;
        weight_buffer_20_2_we0 : OUT STD_LOGIC;
        weight_buffer_20_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_20_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_20_3_ce0 : OUT STD_LOGIC;
        weight_buffer_20_3_we0 : OUT STD_LOGIC;
        weight_buffer_20_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_0_ce0 : OUT STD_LOGIC;
        weight_buffer_21_0_we0 : OUT STD_LOGIC;
        weight_buffer_21_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_1_ce0 : OUT STD_LOGIC;
        weight_buffer_21_1_we0 : OUT STD_LOGIC;
        weight_buffer_21_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_2_ce0 : OUT STD_LOGIC;
        weight_buffer_21_2_we0 : OUT STD_LOGIC;
        weight_buffer_21_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_21_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_21_3_ce0 : OUT STD_LOGIC;
        weight_buffer_21_3_we0 : OUT STD_LOGIC;
        weight_buffer_21_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_0_ce0 : OUT STD_LOGIC;
        weight_buffer_22_0_we0 : OUT STD_LOGIC;
        weight_buffer_22_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_1_ce0 : OUT STD_LOGIC;
        weight_buffer_22_1_we0 : OUT STD_LOGIC;
        weight_buffer_22_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_2_ce0 : OUT STD_LOGIC;
        weight_buffer_22_2_we0 : OUT STD_LOGIC;
        weight_buffer_22_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_22_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_22_3_ce0 : OUT STD_LOGIC;
        weight_buffer_22_3_we0 : OUT STD_LOGIC;
        weight_buffer_22_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_0_ce0 : OUT STD_LOGIC;
        weight_buffer_23_0_we0 : OUT STD_LOGIC;
        weight_buffer_23_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_1_ce0 : OUT STD_LOGIC;
        weight_buffer_23_1_we0 : OUT STD_LOGIC;
        weight_buffer_23_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_2_ce0 : OUT STD_LOGIC;
        weight_buffer_23_2_we0 : OUT STD_LOGIC;
        weight_buffer_23_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_23_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_23_3_ce0 : OUT STD_LOGIC;
        weight_buffer_23_3_we0 : OUT STD_LOGIC;
        weight_buffer_23_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_0_ce0 : OUT STD_LOGIC;
        weight_buffer_24_0_we0 : OUT STD_LOGIC;
        weight_buffer_24_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_1_ce0 : OUT STD_LOGIC;
        weight_buffer_24_1_we0 : OUT STD_LOGIC;
        weight_buffer_24_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_2_ce0 : OUT STD_LOGIC;
        weight_buffer_24_2_we0 : OUT STD_LOGIC;
        weight_buffer_24_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_24_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_24_3_ce0 : OUT STD_LOGIC;
        weight_buffer_24_3_we0 : OUT STD_LOGIC;
        weight_buffer_24_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_0_ce0 : OUT STD_LOGIC;
        weight_buffer_25_0_we0 : OUT STD_LOGIC;
        weight_buffer_25_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_1_ce0 : OUT STD_LOGIC;
        weight_buffer_25_1_we0 : OUT STD_LOGIC;
        weight_buffer_25_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_2_ce0 : OUT STD_LOGIC;
        weight_buffer_25_2_we0 : OUT STD_LOGIC;
        weight_buffer_25_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_25_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_25_3_ce0 : OUT STD_LOGIC;
        weight_buffer_25_3_we0 : OUT STD_LOGIC;
        weight_buffer_25_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_0_ce0 : OUT STD_LOGIC;
        weight_buffer_26_0_we0 : OUT STD_LOGIC;
        weight_buffer_26_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_1_ce0 : OUT STD_LOGIC;
        weight_buffer_26_1_we0 : OUT STD_LOGIC;
        weight_buffer_26_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_2_ce0 : OUT STD_LOGIC;
        weight_buffer_26_2_we0 : OUT STD_LOGIC;
        weight_buffer_26_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_26_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_26_3_ce0 : OUT STD_LOGIC;
        weight_buffer_26_3_we0 : OUT STD_LOGIC;
        weight_buffer_26_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_0_ce0 : OUT STD_LOGIC;
        weight_buffer_27_0_we0 : OUT STD_LOGIC;
        weight_buffer_27_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_1_ce0 : OUT STD_LOGIC;
        weight_buffer_27_1_we0 : OUT STD_LOGIC;
        weight_buffer_27_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_2_ce0 : OUT STD_LOGIC;
        weight_buffer_27_2_we0 : OUT STD_LOGIC;
        weight_buffer_27_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_27_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_27_3_ce0 : OUT STD_LOGIC;
        weight_buffer_27_3_we0 : OUT STD_LOGIC;
        weight_buffer_27_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_0_ce0 : OUT STD_LOGIC;
        weight_buffer_28_0_we0 : OUT STD_LOGIC;
        weight_buffer_28_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_1_ce0 : OUT STD_LOGIC;
        weight_buffer_28_1_we0 : OUT STD_LOGIC;
        weight_buffer_28_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_2_ce0 : OUT STD_LOGIC;
        weight_buffer_28_2_we0 : OUT STD_LOGIC;
        weight_buffer_28_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_28_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_28_3_ce0 : OUT STD_LOGIC;
        weight_buffer_28_3_we0 : OUT STD_LOGIC;
        weight_buffer_28_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_0_ce0 : OUT STD_LOGIC;
        weight_buffer_29_0_we0 : OUT STD_LOGIC;
        weight_buffer_29_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_1_ce0 : OUT STD_LOGIC;
        weight_buffer_29_1_we0 : OUT STD_LOGIC;
        weight_buffer_29_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_2_ce0 : OUT STD_LOGIC;
        weight_buffer_29_2_we0 : OUT STD_LOGIC;
        weight_buffer_29_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_29_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_29_3_ce0 : OUT STD_LOGIC;
        weight_buffer_29_3_we0 : OUT STD_LOGIC;
        weight_buffer_29_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_0_ce0 : OUT STD_LOGIC;
        weight_buffer_30_0_we0 : OUT STD_LOGIC;
        weight_buffer_30_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_1_ce0 : OUT STD_LOGIC;
        weight_buffer_30_1_we0 : OUT STD_LOGIC;
        weight_buffer_30_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_2_ce0 : OUT STD_LOGIC;
        weight_buffer_30_2_we0 : OUT STD_LOGIC;
        weight_buffer_30_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_30_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_30_3_ce0 : OUT STD_LOGIC;
        weight_buffer_30_3_we0 : OUT STD_LOGIC;
        weight_buffer_30_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_0_ce0 : OUT STD_LOGIC;
        weight_buffer_31_0_we0 : OUT STD_LOGIC;
        weight_buffer_31_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_1_ce0 : OUT STD_LOGIC;
        weight_buffer_31_1_we0 : OUT STD_LOGIC;
        weight_buffer_31_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_2_ce0 : OUT STD_LOGIC;
        weight_buffer_31_2_we0 : OUT STD_LOGIC;
        weight_buffer_31_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buffer_31_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_buffer_31_3_ce0 : OUT STD_LOGIC;
        weight_buffer_31_3_we0 : OUT STD_LOGIC;
        weight_buffer_31_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        enable : IN STD_LOGIC;
        weight_load_enable : IN STD_LOGIC;
        IHxIW : IN STD_LOGIC_VECTOR (18 downto 0);
        LayerType : IN STD_LOGIC_VECTOR (3 downto 0);
        trow_loops_V : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reorg_yolo25 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Input_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        Input_0_ce0 : OUT STD_LOGIC;
        Input_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        Output_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_0_ce0 : OUT STD_LOGIC;
        Output_0_we0 : OUT STD_LOGIC;
        Output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Output_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_1_ce0 : OUT STD_LOGIC;
        Output_1_we0 : OUT STD_LOGIC;
        Output_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Output_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_2_ce0 : OUT STD_LOGIC;
        Output_2_we0 : OUT STD_LOGIC;
        Output_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Output_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_3_ce0 : OUT STD_LOGIC;
        Output_3_we0 : OUT STD_LOGIC;
        Output_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        TR_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        TC_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        enable : IN STD_LOGIC );
    end component;


    component pool_yolo26 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Input_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        Input_0_ce0 : OUT STD_LOGIC;
        Input_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        Input_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        Input_1_ce0 : OUT STD_LOGIC;
        Input_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        Input_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        Input_2_ce0 : OUT STD_LOGIC;
        Input_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        Input_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        Input_3_ce0 : OUT STD_LOGIC;
        Input_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        Output_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_0_ce0 : OUT STD_LOGIC;
        Output_0_we0 : OUT STD_LOGIC;
        Output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Output_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_1_ce0 : OUT STD_LOGIC;
        Output_1_we0 : OUT STD_LOGIC;
        Output_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Output_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_2_ce0 : OUT STD_LOGIC;
        Output_2_we0 : OUT STD_LOGIC;
        Output_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Output_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Output_3_ce0 : OUT STD_LOGIC;
        Output_3_we0 : OUT STD_LOGIC;
        Output_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Kernel_stride : IN STD_LOGIC_VECTOR (31 downto 0);
        TR_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        TC_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        enable : IN STD_LOGIC );
    end component;


    component intra_pingpong_wrvdy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component intra_pingpong_wrzec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    input_buffer1_0_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer1_0_address0,
        ce0 => input_buffer1_0_ce0,
        we0 => input_buffer1_0_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_0_d0,
        q0 => input_buffer1_0_q0);

    input_buffer1_1_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer1_1_address0,
        ce0 => input_buffer1_1_ce0,
        we0 => input_buffer1_1_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_1_d0,
        q0 => input_buffer1_1_q0);

    input_buffer1_2_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer1_2_address0,
        ce0 => input_buffer1_2_ce0,
        we0 => input_buffer1_2_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_2_d0,
        q0 => input_buffer1_2_q0);

    input_buffer1_3_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer1_3_address0,
        ce0 => input_buffer1_3_ce0,
        we0 => input_buffer1_3_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_3_d0,
        q0 => input_buffer1_3_q0);

    weight_buffer1_0_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_0_0_address0,
        ce0 => weight_buffer1_0_0_ce0,
        we0 => weight_buffer1_0_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_0_d0,
        q0 => weight_buffer1_0_0_q0);

    weight_buffer1_0_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_0_1_address0,
        ce0 => weight_buffer1_0_1_ce0,
        we0 => weight_buffer1_0_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_1_d0,
        q0 => weight_buffer1_0_1_q0);

    weight_buffer1_0_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_0_2_address0,
        ce0 => weight_buffer1_0_2_ce0,
        we0 => weight_buffer1_0_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_2_d0,
        q0 => weight_buffer1_0_2_q0);

    weight_buffer1_0_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_0_3_address0,
        ce0 => weight_buffer1_0_3_ce0,
        we0 => weight_buffer1_0_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_3_d0,
        q0 => weight_buffer1_0_3_q0);

    weight_buffer1_1_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_1_0_address0,
        ce0 => weight_buffer1_1_0_ce0,
        we0 => weight_buffer1_1_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_0_d0,
        q0 => weight_buffer1_1_0_q0);

    weight_buffer1_1_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_1_1_address0,
        ce0 => weight_buffer1_1_1_ce0,
        we0 => weight_buffer1_1_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_1_d0,
        q0 => weight_buffer1_1_1_q0);

    weight_buffer1_1_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_1_2_address0,
        ce0 => weight_buffer1_1_2_ce0,
        we0 => weight_buffer1_1_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_2_d0,
        q0 => weight_buffer1_1_2_q0);

    weight_buffer1_1_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_1_3_address0,
        ce0 => weight_buffer1_1_3_ce0,
        we0 => weight_buffer1_1_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_3_d0,
        q0 => weight_buffer1_1_3_q0);

    weight_buffer1_2_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_2_0_address0,
        ce0 => weight_buffer1_2_0_ce0,
        we0 => weight_buffer1_2_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_0_d0,
        q0 => weight_buffer1_2_0_q0);

    weight_buffer1_2_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_2_1_address0,
        ce0 => weight_buffer1_2_1_ce0,
        we0 => weight_buffer1_2_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_1_d0,
        q0 => weight_buffer1_2_1_q0);

    weight_buffer1_2_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_2_2_address0,
        ce0 => weight_buffer1_2_2_ce0,
        we0 => weight_buffer1_2_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_2_d0,
        q0 => weight_buffer1_2_2_q0);

    weight_buffer1_2_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_2_3_address0,
        ce0 => weight_buffer1_2_3_ce0,
        we0 => weight_buffer1_2_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_3_d0,
        q0 => weight_buffer1_2_3_q0);

    weight_buffer1_3_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_3_0_address0,
        ce0 => weight_buffer1_3_0_ce0,
        we0 => weight_buffer1_3_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_0_d0,
        q0 => weight_buffer1_3_0_q0);

    weight_buffer1_3_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_3_1_address0,
        ce0 => weight_buffer1_3_1_ce0,
        we0 => weight_buffer1_3_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_1_d0,
        q0 => weight_buffer1_3_1_q0);

    weight_buffer1_3_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_3_2_address0,
        ce0 => weight_buffer1_3_2_ce0,
        we0 => weight_buffer1_3_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_2_d0,
        q0 => weight_buffer1_3_2_q0);

    weight_buffer1_3_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_3_3_address0,
        ce0 => weight_buffer1_3_3_ce0,
        we0 => weight_buffer1_3_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_3_d0,
        q0 => weight_buffer1_3_3_q0);

    weight_buffer1_4_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_4_0_address0,
        ce0 => weight_buffer1_4_0_ce0,
        we0 => weight_buffer1_4_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_0_d0,
        q0 => weight_buffer1_4_0_q0);

    weight_buffer1_4_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_4_1_address0,
        ce0 => weight_buffer1_4_1_ce0,
        we0 => weight_buffer1_4_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_1_d0,
        q0 => weight_buffer1_4_1_q0);

    weight_buffer1_4_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_4_2_address0,
        ce0 => weight_buffer1_4_2_ce0,
        we0 => weight_buffer1_4_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_2_d0,
        q0 => weight_buffer1_4_2_q0);

    weight_buffer1_4_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_4_3_address0,
        ce0 => weight_buffer1_4_3_ce0,
        we0 => weight_buffer1_4_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_3_d0,
        q0 => weight_buffer1_4_3_q0);

    weight_buffer1_5_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_5_0_address0,
        ce0 => weight_buffer1_5_0_ce0,
        we0 => weight_buffer1_5_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_0_d0,
        q0 => weight_buffer1_5_0_q0);

    weight_buffer1_5_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_5_1_address0,
        ce0 => weight_buffer1_5_1_ce0,
        we0 => weight_buffer1_5_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_1_d0,
        q0 => weight_buffer1_5_1_q0);

    weight_buffer1_5_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_5_2_address0,
        ce0 => weight_buffer1_5_2_ce0,
        we0 => weight_buffer1_5_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_2_d0,
        q0 => weight_buffer1_5_2_q0);

    weight_buffer1_5_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_5_3_address0,
        ce0 => weight_buffer1_5_3_ce0,
        we0 => weight_buffer1_5_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_3_d0,
        q0 => weight_buffer1_5_3_q0);

    weight_buffer1_6_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_6_0_address0,
        ce0 => weight_buffer1_6_0_ce0,
        we0 => weight_buffer1_6_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_0_d0,
        q0 => weight_buffer1_6_0_q0);

    weight_buffer1_6_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_6_1_address0,
        ce0 => weight_buffer1_6_1_ce0,
        we0 => weight_buffer1_6_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_1_d0,
        q0 => weight_buffer1_6_1_q0);

    weight_buffer1_6_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_6_2_address0,
        ce0 => weight_buffer1_6_2_ce0,
        we0 => weight_buffer1_6_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_2_d0,
        q0 => weight_buffer1_6_2_q0);

    weight_buffer1_6_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_6_3_address0,
        ce0 => weight_buffer1_6_3_ce0,
        we0 => weight_buffer1_6_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_3_d0,
        q0 => weight_buffer1_6_3_q0);

    weight_buffer1_7_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_7_0_address0,
        ce0 => weight_buffer1_7_0_ce0,
        we0 => weight_buffer1_7_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_0_d0,
        q0 => weight_buffer1_7_0_q0);

    weight_buffer1_7_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_7_1_address0,
        ce0 => weight_buffer1_7_1_ce0,
        we0 => weight_buffer1_7_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_1_d0,
        q0 => weight_buffer1_7_1_q0);

    weight_buffer1_7_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_7_2_address0,
        ce0 => weight_buffer1_7_2_ce0,
        we0 => weight_buffer1_7_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_2_d0,
        q0 => weight_buffer1_7_2_q0);

    weight_buffer1_7_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_7_3_address0,
        ce0 => weight_buffer1_7_3_ce0,
        we0 => weight_buffer1_7_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_3_d0,
        q0 => weight_buffer1_7_3_q0);

    weight_buffer1_8_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_8_0_address0,
        ce0 => weight_buffer1_8_0_ce0,
        we0 => weight_buffer1_8_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_0_d0,
        q0 => weight_buffer1_8_0_q0);

    weight_buffer1_8_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_8_1_address0,
        ce0 => weight_buffer1_8_1_ce0,
        we0 => weight_buffer1_8_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_1_d0,
        q0 => weight_buffer1_8_1_q0);

    weight_buffer1_8_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_8_2_address0,
        ce0 => weight_buffer1_8_2_ce0,
        we0 => weight_buffer1_8_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_2_d0,
        q0 => weight_buffer1_8_2_q0);

    weight_buffer1_8_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_8_3_address0,
        ce0 => weight_buffer1_8_3_ce0,
        we0 => weight_buffer1_8_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_3_d0,
        q0 => weight_buffer1_8_3_q0);

    weight_buffer1_9_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_9_0_address0,
        ce0 => weight_buffer1_9_0_ce0,
        we0 => weight_buffer1_9_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_0_d0,
        q0 => weight_buffer1_9_0_q0);

    weight_buffer1_9_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_9_1_address0,
        ce0 => weight_buffer1_9_1_ce0,
        we0 => weight_buffer1_9_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_1_d0,
        q0 => weight_buffer1_9_1_q0);

    weight_buffer1_9_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_9_2_address0,
        ce0 => weight_buffer1_9_2_ce0,
        we0 => weight_buffer1_9_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_2_d0,
        q0 => weight_buffer1_9_2_q0);

    weight_buffer1_9_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_9_3_address0,
        ce0 => weight_buffer1_9_3_ce0,
        we0 => weight_buffer1_9_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_3_d0,
        q0 => weight_buffer1_9_3_q0);

    weight_buffer1_10_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_10_0_address0,
        ce0 => weight_buffer1_10_0_ce0,
        we0 => weight_buffer1_10_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_0_d0,
        q0 => weight_buffer1_10_0_q0);

    weight_buffer1_10_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_10_1_address0,
        ce0 => weight_buffer1_10_1_ce0,
        we0 => weight_buffer1_10_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_1_d0,
        q0 => weight_buffer1_10_1_q0);

    weight_buffer1_10_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_10_2_address0,
        ce0 => weight_buffer1_10_2_ce0,
        we0 => weight_buffer1_10_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_2_d0,
        q0 => weight_buffer1_10_2_q0);

    weight_buffer1_10_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_10_3_address0,
        ce0 => weight_buffer1_10_3_ce0,
        we0 => weight_buffer1_10_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_3_d0,
        q0 => weight_buffer1_10_3_q0);

    weight_buffer1_11_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_11_0_address0,
        ce0 => weight_buffer1_11_0_ce0,
        we0 => weight_buffer1_11_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_0_d0,
        q0 => weight_buffer1_11_0_q0);

    weight_buffer1_11_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_11_1_address0,
        ce0 => weight_buffer1_11_1_ce0,
        we0 => weight_buffer1_11_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_1_d0,
        q0 => weight_buffer1_11_1_q0);

    weight_buffer1_11_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_11_2_address0,
        ce0 => weight_buffer1_11_2_ce0,
        we0 => weight_buffer1_11_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_2_d0,
        q0 => weight_buffer1_11_2_q0);

    weight_buffer1_11_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_11_3_address0,
        ce0 => weight_buffer1_11_3_ce0,
        we0 => weight_buffer1_11_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_3_d0,
        q0 => weight_buffer1_11_3_q0);

    weight_buffer1_12_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_12_0_address0,
        ce0 => weight_buffer1_12_0_ce0,
        we0 => weight_buffer1_12_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_0_d0,
        q0 => weight_buffer1_12_0_q0);

    weight_buffer1_12_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_12_1_address0,
        ce0 => weight_buffer1_12_1_ce0,
        we0 => weight_buffer1_12_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_1_d0,
        q0 => weight_buffer1_12_1_q0);

    weight_buffer1_12_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_12_2_address0,
        ce0 => weight_buffer1_12_2_ce0,
        we0 => weight_buffer1_12_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_2_d0,
        q0 => weight_buffer1_12_2_q0);

    weight_buffer1_12_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_12_3_address0,
        ce0 => weight_buffer1_12_3_ce0,
        we0 => weight_buffer1_12_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_3_d0,
        q0 => weight_buffer1_12_3_q0);

    weight_buffer1_13_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_13_0_address0,
        ce0 => weight_buffer1_13_0_ce0,
        we0 => weight_buffer1_13_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_0_d0,
        q0 => weight_buffer1_13_0_q0);

    weight_buffer1_13_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_13_1_address0,
        ce0 => weight_buffer1_13_1_ce0,
        we0 => weight_buffer1_13_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_1_d0,
        q0 => weight_buffer1_13_1_q0);

    weight_buffer1_13_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_13_2_address0,
        ce0 => weight_buffer1_13_2_ce0,
        we0 => weight_buffer1_13_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_2_d0,
        q0 => weight_buffer1_13_2_q0);

    weight_buffer1_13_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_13_3_address0,
        ce0 => weight_buffer1_13_3_ce0,
        we0 => weight_buffer1_13_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_3_d0,
        q0 => weight_buffer1_13_3_q0);

    weight_buffer1_14_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_14_0_address0,
        ce0 => weight_buffer1_14_0_ce0,
        we0 => weight_buffer1_14_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_0_d0,
        q0 => weight_buffer1_14_0_q0);

    weight_buffer1_14_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_14_1_address0,
        ce0 => weight_buffer1_14_1_ce0,
        we0 => weight_buffer1_14_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_1_d0,
        q0 => weight_buffer1_14_1_q0);

    weight_buffer1_14_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_14_2_address0,
        ce0 => weight_buffer1_14_2_ce0,
        we0 => weight_buffer1_14_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_2_d0,
        q0 => weight_buffer1_14_2_q0);

    weight_buffer1_14_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_14_3_address0,
        ce0 => weight_buffer1_14_3_ce0,
        we0 => weight_buffer1_14_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_3_d0,
        q0 => weight_buffer1_14_3_q0);

    weight_buffer1_15_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_15_0_address0,
        ce0 => weight_buffer1_15_0_ce0,
        we0 => weight_buffer1_15_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_0_d0,
        q0 => weight_buffer1_15_0_q0);

    weight_buffer1_15_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_15_1_address0,
        ce0 => weight_buffer1_15_1_ce0,
        we0 => weight_buffer1_15_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_1_d0,
        q0 => weight_buffer1_15_1_q0);

    weight_buffer1_15_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_15_2_address0,
        ce0 => weight_buffer1_15_2_ce0,
        we0 => weight_buffer1_15_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_2_d0,
        q0 => weight_buffer1_15_2_q0);

    weight_buffer1_15_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_15_3_address0,
        ce0 => weight_buffer1_15_3_ce0,
        we0 => weight_buffer1_15_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_3_d0,
        q0 => weight_buffer1_15_3_q0);

    weight_buffer1_16_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_16_0_address0,
        ce0 => weight_buffer1_16_0_ce0,
        we0 => weight_buffer1_16_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_0_d0,
        q0 => weight_buffer1_16_0_q0);

    weight_buffer1_16_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_16_1_address0,
        ce0 => weight_buffer1_16_1_ce0,
        we0 => weight_buffer1_16_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_1_d0,
        q0 => weight_buffer1_16_1_q0);

    weight_buffer1_16_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_16_2_address0,
        ce0 => weight_buffer1_16_2_ce0,
        we0 => weight_buffer1_16_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_2_d0,
        q0 => weight_buffer1_16_2_q0);

    weight_buffer1_16_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_16_3_address0,
        ce0 => weight_buffer1_16_3_ce0,
        we0 => weight_buffer1_16_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_3_d0,
        q0 => weight_buffer1_16_3_q0);

    weight_buffer1_17_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_17_0_address0,
        ce0 => weight_buffer1_17_0_ce0,
        we0 => weight_buffer1_17_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_0_d0,
        q0 => weight_buffer1_17_0_q0);

    weight_buffer1_17_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_17_1_address0,
        ce0 => weight_buffer1_17_1_ce0,
        we0 => weight_buffer1_17_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_1_d0,
        q0 => weight_buffer1_17_1_q0);

    weight_buffer1_17_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_17_2_address0,
        ce0 => weight_buffer1_17_2_ce0,
        we0 => weight_buffer1_17_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_2_d0,
        q0 => weight_buffer1_17_2_q0);

    weight_buffer1_17_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_17_3_address0,
        ce0 => weight_buffer1_17_3_ce0,
        we0 => weight_buffer1_17_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_3_d0,
        q0 => weight_buffer1_17_3_q0);

    weight_buffer1_18_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_18_0_address0,
        ce0 => weight_buffer1_18_0_ce0,
        we0 => weight_buffer1_18_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_0_d0,
        q0 => weight_buffer1_18_0_q0);

    weight_buffer1_18_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_18_1_address0,
        ce0 => weight_buffer1_18_1_ce0,
        we0 => weight_buffer1_18_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_1_d0,
        q0 => weight_buffer1_18_1_q0);

    weight_buffer1_18_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_18_2_address0,
        ce0 => weight_buffer1_18_2_ce0,
        we0 => weight_buffer1_18_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_2_d0,
        q0 => weight_buffer1_18_2_q0);

    weight_buffer1_18_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_18_3_address0,
        ce0 => weight_buffer1_18_3_ce0,
        we0 => weight_buffer1_18_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_3_d0,
        q0 => weight_buffer1_18_3_q0);

    weight_buffer1_19_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_19_0_address0,
        ce0 => weight_buffer1_19_0_ce0,
        we0 => weight_buffer1_19_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_0_d0,
        q0 => weight_buffer1_19_0_q0);

    weight_buffer1_19_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_19_1_address0,
        ce0 => weight_buffer1_19_1_ce0,
        we0 => weight_buffer1_19_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_1_d0,
        q0 => weight_buffer1_19_1_q0);

    weight_buffer1_19_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_19_2_address0,
        ce0 => weight_buffer1_19_2_ce0,
        we0 => weight_buffer1_19_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_2_d0,
        q0 => weight_buffer1_19_2_q0);

    weight_buffer1_19_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_19_3_address0,
        ce0 => weight_buffer1_19_3_ce0,
        we0 => weight_buffer1_19_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_3_d0,
        q0 => weight_buffer1_19_3_q0);

    weight_buffer1_20_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_20_0_address0,
        ce0 => weight_buffer1_20_0_ce0,
        we0 => weight_buffer1_20_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_0_d0,
        q0 => weight_buffer1_20_0_q0);

    weight_buffer1_20_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_20_1_address0,
        ce0 => weight_buffer1_20_1_ce0,
        we0 => weight_buffer1_20_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_1_d0,
        q0 => weight_buffer1_20_1_q0);

    weight_buffer1_20_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_20_2_address0,
        ce0 => weight_buffer1_20_2_ce0,
        we0 => weight_buffer1_20_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_2_d0,
        q0 => weight_buffer1_20_2_q0);

    weight_buffer1_20_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_20_3_address0,
        ce0 => weight_buffer1_20_3_ce0,
        we0 => weight_buffer1_20_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_3_d0,
        q0 => weight_buffer1_20_3_q0);

    weight_buffer1_21_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_21_0_address0,
        ce0 => weight_buffer1_21_0_ce0,
        we0 => weight_buffer1_21_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_0_d0,
        q0 => weight_buffer1_21_0_q0);

    weight_buffer1_21_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_21_1_address0,
        ce0 => weight_buffer1_21_1_ce0,
        we0 => weight_buffer1_21_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_1_d0,
        q0 => weight_buffer1_21_1_q0);

    weight_buffer1_21_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_21_2_address0,
        ce0 => weight_buffer1_21_2_ce0,
        we0 => weight_buffer1_21_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_2_d0,
        q0 => weight_buffer1_21_2_q0);

    weight_buffer1_21_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_21_3_address0,
        ce0 => weight_buffer1_21_3_ce0,
        we0 => weight_buffer1_21_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_3_d0,
        q0 => weight_buffer1_21_3_q0);

    weight_buffer1_22_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_22_0_address0,
        ce0 => weight_buffer1_22_0_ce0,
        we0 => weight_buffer1_22_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_0_d0,
        q0 => weight_buffer1_22_0_q0);

    weight_buffer1_22_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_22_1_address0,
        ce0 => weight_buffer1_22_1_ce0,
        we0 => weight_buffer1_22_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_1_d0,
        q0 => weight_buffer1_22_1_q0);

    weight_buffer1_22_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_22_2_address0,
        ce0 => weight_buffer1_22_2_ce0,
        we0 => weight_buffer1_22_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_2_d0,
        q0 => weight_buffer1_22_2_q0);

    weight_buffer1_22_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_22_3_address0,
        ce0 => weight_buffer1_22_3_ce0,
        we0 => weight_buffer1_22_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_3_d0,
        q0 => weight_buffer1_22_3_q0);

    weight_buffer1_23_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_23_0_address0,
        ce0 => weight_buffer1_23_0_ce0,
        we0 => weight_buffer1_23_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_0_d0,
        q0 => weight_buffer1_23_0_q0);

    weight_buffer1_23_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_23_1_address0,
        ce0 => weight_buffer1_23_1_ce0,
        we0 => weight_buffer1_23_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_1_d0,
        q0 => weight_buffer1_23_1_q0);

    weight_buffer1_23_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_23_2_address0,
        ce0 => weight_buffer1_23_2_ce0,
        we0 => weight_buffer1_23_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_2_d0,
        q0 => weight_buffer1_23_2_q0);

    weight_buffer1_23_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_23_3_address0,
        ce0 => weight_buffer1_23_3_ce0,
        we0 => weight_buffer1_23_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_3_d0,
        q0 => weight_buffer1_23_3_q0);

    weight_buffer1_24_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_24_0_address0,
        ce0 => weight_buffer1_24_0_ce0,
        we0 => weight_buffer1_24_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_0_d0,
        q0 => weight_buffer1_24_0_q0);

    weight_buffer1_24_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_24_1_address0,
        ce0 => weight_buffer1_24_1_ce0,
        we0 => weight_buffer1_24_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_1_d0,
        q0 => weight_buffer1_24_1_q0);

    weight_buffer1_24_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_24_2_address0,
        ce0 => weight_buffer1_24_2_ce0,
        we0 => weight_buffer1_24_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_2_d0,
        q0 => weight_buffer1_24_2_q0);

    weight_buffer1_24_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_24_3_address0,
        ce0 => weight_buffer1_24_3_ce0,
        we0 => weight_buffer1_24_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_3_d0,
        q0 => weight_buffer1_24_3_q0);

    weight_buffer1_25_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_25_0_address0,
        ce0 => weight_buffer1_25_0_ce0,
        we0 => weight_buffer1_25_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_0_d0,
        q0 => weight_buffer1_25_0_q0);

    weight_buffer1_25_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_25_1_address0,
        ce0 => weight_buffer1_25_1_ce0,
        we0 => weight_buffer1_25_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_1_d0,
        q0 => weight_buffer1_25_1_q0);

    weight_buffer1_25_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_25_2_address0,
        ce0 => weight_buffer1_25_2_ce0,
        we0 => weight_buffer1_25_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_2_d0,
        q0 => weight_buffer1_25_2_q0);

    weight_buffer1_25_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_25_3_address0,
        ce0 => weight_buffer1_25_3_ce0,
        we0 => weight_buffer1_25_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_3_d0,
        q0 => weight_buffer1_25_3_q0);

    weight_buffer1_26_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_26_0_address0,
        ce0 => weight_buffer1_26_0_ce0,
        we0 => weight_buffer1_26_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_0_d0,
        q0 => weight_buffer1_26_0_q0);

    weight_buffer1_26_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_26_1_address0,
        ce0 => weight_buffer1_26_1_ce0,
        we0 => weight_buffer1_26_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_1_d0,
        q0 => weight_buffer1_26_1_q0);

    weight_buffer1_26_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_26_2_address0,
        ce0 => weight_buffer1_26_2_ce0,
        we0 => weight_buffer1_26_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_2_d0,
        q0 => weight_buffer1_26_2_q0);

    weight_buffer1_26_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_26_3_address0,
        ce0 => weight_buffer1_26_3_ce0,
        we0 => weight_buffer1_26_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_3_d0,
        q0 => weight_buffer1_26_3_q0);

    weight_buffer1_27_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_27_0_address0,
        ce0 => weight_buffer1_27_0_ce0,
        we0 => weight_buffer1_27_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_0_d0,
        q0 => weight_buffer1_27_0_q0);

    weight_buffer1_27_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_27_1_address0,
        ce0 => weight_buffer1_27_1_ce0,
        we0 => weight_buffer1_27_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_1_d0,
        q0 => weight_buffer1_27_1_q0);

    weight_buffer1_27_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_27_2_address0,
        ce0 => weight_buffer1_27_2_ce0,
        we0 => weight_buffer1_27_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_2_d0,
        q0 => weight_buffer1_27_2_q0);

    weight_buffer1_27_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_27_3_address0,
        ce0 => weight_buffer1_27_3_ce0,
        we0 => weight_buffer1_27_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_3_d0,
        q0 => weight_buffer1_27_3_q0);

    weight_buffer1_28_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_28_0_address0,
        ce0 => weight_buffer1_28_0_ce0,
        we0 => weight_buffer1_28_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_0_d0,
        q0 => weight_buffer1_28_0_q0);

    weight_buffer1_28_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_28_1_address0,
        ce0 => weight_buffer1_28_1_ce0,
        we0 => weight_buffer1_28_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_1_d0,
        q0 => weight_buffer1_28_1_q0);

    weight_buffer1_28_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_28_2_address0,
        ce0 => weight_buffer1_28_2_ce0,
        we0 => weight_buffer1_28_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_2_d0,
        q0 => weight_buffer1_28_2_q0);

    weight_buffer1_28_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_28_3_address0,
        ce0 => weight_buffer1_28_3_ce0,
        we0 => weight_buffer1_28_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_3_d0,
        q0 => weight_buffer1_28_3_q0);

    weight_buffer1_29_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_29_0_address0,
        ce0 => weight_buffer1_29_0_ce0,
        we0 => weight_buffer1_29_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_0_d0,
        q0 => weight_buffer1_29_0_q0);

    weight_buffer1_29_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_29_1_address0,
        ce0 => weight_buffer1_29_1_ce0,
        we0 => weight_buffer1_29_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_1_d0,
        q0 => weight_buffer1_29_1_q0);

    weight_buffer1_29_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_29_2_address0,
        ce0 => weight_buffer1_29_2_ce0,
        we0 => weight_buffer1_29_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_2_d0,
        q0 => weight_buffer1_29_2_q0);

    weight_buffer1_29_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_29_3_address0,
        ce0 => weight_buffer1_29_3_ce0,
        we0 => weight_buffer1_29_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_3_d0,
        q0 => weight_buffer1_29_3_q0);

    weight_buffer1_30_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_30_0_address0,
        ce0 => weight_buffer1_30_0_ce0,
        we0 => weight_buffer1_30_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_0_d0,
        q0 => weight_buffer1_30_0_q0);

    weight_buffer1_30_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_30_1_address0,
        ce0 => weight_buffer1_30_1_ce0,
        we0 => weight_buffer1_30_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_1_d0,
        q0 => weight_buffer1_30_1_q0);

    weight_buffer1_30_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_30_2_address0,
        ce0 => weight_buffer1_30_2_ce0,
        we0 => weight_buffer1_30_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_2_d0,
        q0 => weight_buffer1_30_2_q0);

    weight_buffer1_30_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_30_3_address0,
        ce0 => weight_buffer1_30_3_ce0,
        we0 => weight_buffer1_30_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_3_d0,
        q0 => weight_buffer1_30_3_q0);

    weight_buffer1_31_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_31_0_address0,
        ce0 => weight_buffer1_31_0_ce0,
        we0 => weight_buffer1_31_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_0_d0,
        q0 => weight_buffer1_31_0_q0);

    weight_buffer1_31_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_31_1_address0,
        ce0 => weight_buffer1_31_1_ce0,
        we0 => weight_buffer1_31_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_1_d0,
        q0 => weight_buffer1_31_1_q0);

    weight_buffer1_31_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_31_2_address0,
        ce0 => weight_buffer1_31_2_ce0,
        we0 => weight_buffer1_31_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_2_d0,
        q0 => weight_buffer1_31_2_q0);

    weight_buffer1_31_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer1_31_3_address0,
        ce0 => weight_buffer1_31_3_ce0,
        we0 => weight_buffer1_31_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_3_d0,
        q0 => weight_buffer1_31_3_q0);

    input_buffer0_0_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer0_0_address0,
        ce0 => input_buffer0_0_ce0,
        we0 => input_buffer0_0_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_0_d0,
        q0 => input_buffer0_0_q0);

    input_buffer0_1_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer0_1_address0,
        ce0 => input_buffer0_1_ce0,
        we0 => input_buffer0_1_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_1_d0,
        q0 => input_buffer0_1_q0);

    input_buffer0_2_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer0_2_address0,
        ce0 => input_buffer0_2_ce0,
        we0 => input_buffer0_2_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_2_d0,
        q0 => input_buffer0_2_q0);

    input_buffer0_3_U : component intra_pingpong_wrvdy
    generic map (
        DataWidth => 16,
        AddressRange => 2809,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buffer0_3_address0,
        ce0 => input_buffer0_3_ce0,
        we0 => input_buffer0_3_we0,
        d0 => grp_copy_input_weight_fu_1649_input_buffer_3_d0,
        q0 => input_buffer0_3_q0);

    weight_buffer0_0_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_0_0_address0,
        ce0 => weight_buffer0_0_0_ce0,
        we0 => weight_buffer0_0_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_0_d0,
        q0 => weight_buffer0_0_0_q0);

    weight_buffer0_0_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_0_1_address0,
        ce0 => weight_buffer0_0_1_ce0,
        we0 => weight_buffer0_0_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_1_d0,
        q0 => weight_buffer0_0_1_q0);

    weight_buffer0_0_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_0_2_address0,
        ce0 => weight_buffer0_0_2_ce0,
        we0 => weight_buffer0_0_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_2_d0,
        q0 => weight_buffer0_0_2_q0);

    weight_buffer0_0_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_0_3_address0,
        ce0 => weight_buffer0_0_3_ce0,
        we0 => weight_buffer0_0_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_3_d0,
        q0 => weight_buffer0_0_3_q0);

    weight_buffer0_1_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_1_0_address0,
        ce0 => weight_buffer0_1_0_ce0,
        we0 => weight_buffer0_1_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_0_d0,
        q0 => weight_buffer0_1_0_q0);

    weight_buffer0_1_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_1_1_address0,
        ce0 => weight_buffer0_1_1_ce0,
        we0 => weight_buffer0_1_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_1_d0,
        q0 => weight_buffer0_1_1_q0);

    weight_buffer0_1_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_1_2_address0,
        ce0 => weight_buffer0_1_2_ce0,
        we0 => weight_buffer0_1_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_2_d0,
        q0 => weight_buffer0_1_2_q0);

    weight_buffer0_1_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_1_3_address0,
        ce0 => weight_buffer0_1_3_ce0,
        we0 => weight_buffer0_1_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_3_d0,
        q0 => weight_buffer0_1_3_q0);

    weight_buffer0_2_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_2_0_address0,
        ce0 => weight_buffer0_2_0_ce0,
        we0 => weight_buffer0_2_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_0_d0,
        q0 => weight_buffer0_2_0_q0);

    weight_buffer0_2_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_2_1_address0,
        ce0 => weight_buffer0_2_1_ce0,
        we0 => weight_buffer0_2_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_1_d0,
        q0 => weight_buffer0_2_1_q0);

    weight_buffer0_2_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_2_2_address0,
        ce0 => weight_buffer0_2_2_ce0,
        we0 => weight_buffer0_2_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_2_d0,
        q0 => weight_buffer0_2_2_q0);

    weight_buffer0_2_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_2_3_address0,
        ce0 => weight_buffer0_2_3_ce0,
        we0 => weight_buffer0_2_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_3_d0,
        q0 => weight_buffer0_2_3_q0);

    weight_buffer0_3_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_3_0_address0,
        ce0 => weight_buffer0_3_0_ce0,
        we0 => weight_buffer0_3_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_0_d0,
        q0 => weight_buffer0_3_0_q0);

    weight_buffer0_3_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_3_1_address0,
        ce0 => weight_buffer0_3_1_ce0,
        we0 => weight_buffer0_3_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_1_d0,
        q0 => weight_buffer0_3_1_q0);

    weight_buffer0_3_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_3_2_address0,
        ce0 => weight_buffer0_3_2_ce0,
        we0 => weight_buffer0_3_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_2_d0,
        q0 => weight_buffer0_3_2_q0);

    weight_buffer0_3_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_3_3_address0,
        ce0 => weight_buffer0_3_3_ce0,
        we0 => weight_buffer0_3_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_3_d0,
        q0 => weight_buffer0_3_3_q0);

    weight_buffer0_4_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_4_0_address0,
        ce0 => weight_buffer0_4_0_ce0,
        we0 => weight_buffer0_4_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_0_d0,
        q0 => weight_buffer0_4_0_q0);

    weight_buffer0_4_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_4_1_address0,
        ce0 => weight_buffer0_4_1_ce0,
        we0 => weight_buffer0_4_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_1_d0,
        q0 => weight_buffer0_4_1_q0);

    weight_buffer0_4_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_4_2_address0,
        ce0 => weight_buffer0_4_2_ce0,
        we0 => weight_buffer0_4_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_2_d0,
        q0 => weight_buffer0_4_2_q0);

    weight_buffer0_4_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_4_3_address0,
        ce0 => weight_buffer0_4_3_ce0,
        we0 => weight_buffer0_4_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_3_d0,
        q0 => weight_buffer0_4_3_q0);

    weight_buffer0_5_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_5_0_address0,
        ce0 => weight_buffer0_5_0_ce0,
        we0 => weight_buffer0_5_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_0_d0,
        q0 => weight_buffer0_5_0_q0);

    weight_buffer0_5_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_5_1_address0,
        ce0 => weight_buffer0_5_1_ce0,
        we0 => weight_buffer0_5_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_1_d0,
        q0 => weight_buffer0_5_1_q0);

    weight_buffer0_5_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_5_2_address0,
        ce0 => weight_buffer0_5_2_ce0,
        we0 => weight_buffer0_5_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_2_d0,
        q0 => weight_buffer0_5_2_q0);

    weight_buffer0_5_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_5_3_address0,
        ce0 => weight_buffer0_5_3_ce0,
        we0 => weight_buffer0_5_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_3_d0,
        q0 => weight_buffer0_5_3_q0);

    weight_buffer0_6_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_6_0_address0,
        ce0 => weight_buffer0_6_0_ce0,
        we0 => weight_buffer0_6_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_0_d0,
        q0 => weight_buffer0_6_0_q0);

    weight_buffer0_6_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_6_1_address0,
        ce0 => weight_buffer0_6_1_ce0,
        we0 => weight_buffer0_6_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_1_d0,
        q0 => weight_buffer0_6_1_q0);

    weight_buffer0_6_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_6_2_address0,
        ce0 => weight_buffer0_6_2_ce0,
        we0 => weight_buffer0_6_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_2_d0,
        q0 => weight_buffer0_6_2_q0);

    weight_buffer0_6_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_6_3_address0,
        ce0 => weight_buffer0_6_3_ce0,
        we0 => weight_buffer0_6_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_3_d0,
        q0 => weight_buffer0_6_3_q0);

    weight_buffer0_7_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_7_0_address0,
        ce0 => weight_buffer0_7_0_ce0,
        we0 => weight_buffer0_7_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_0_d0,
        q0 => weight_buffer0_7_0_q0);

    weight_buffer0_7_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_7_1_address0,
        ce0 => weight_buffer0_7_1_ce0,
        we0 => weight_buffer0_7_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_1_d0,
        q0 => weight_buffer0_7_1_q0);

    weight_buffer0_7_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_7_2_address0,
        ce0 => weight_buffer0_7_2_ce0,
        we0 => weight_buffer0_7_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_2_d0,
        q0 => weight_buffer0_7_2_q0);

    weight_buffer0_7_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_7_3_address0,
        ce0 => weight_buffer0_7_3_ce0,
        we0 => weight_buffer0_7_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_3_d0,
        q0 => weight_buffer0_7_3_q0);

    weight_buffer0_8_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_8_0_address0,
        ce0 => weight_buffer0_8_0_ce0,
        we0 => weight_buffer0_8_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_0_d0,
        q0 => weight_buffer0_8_0_q0);

    weight_buffer0_8_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_8_1_address0,
        ce0 => weight_buffer0_8_1_ce0,
        we0 => weight_buffer0_8_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_1_d0,
        q0 => weight_buffer0_8_1_q0);

    weight_buffer0_8_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_8_2_address0,
        ce0 => weight_buffer0_8_2_ce0,
        we0 => weight_buffer0_8_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_2_d0,
        q0 => weight_buffer0_8_2_q0);

    weight_buffer0_8_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_8_3_address0,
        ce0 => weight_buffer0_8_3_ce0,
        we0 => weight_buffer0_8_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_3_d0,
        q0 => weight_buffer0_8_3_q0);

    weight_buffer0_9_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_9_0_address0,
        ce0 => weight_buffer0_9_0_ce0,
        we0 => weight_buffer0_9_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_0_d0,
        q0 => weight_buffer0_9_0_q0);

    weight_buffer0_9_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_9_1_address0,
        ce0 => weight_buffer0_9_1_ce0,
        we0 => weight_buffer0_9_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_1_d0,
        q0 => weight_buffer0_9_1_q0);

    weight_buffer0_9_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_9_2_address0,
        ce0 => weight_buffer0_9_2_ce0,
        we0 => weight_buffer0_9_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_2_d0,
        q0 => weight_buffer0_9_2_q0);

    weight_buffer0_9_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_9_3_address0,
        ce0 => weight_buffer0_9_3_ce0,
        we0 => weight_buffer0_9_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_3_d0,
        q0 => weight_buffer0_9_3_q0);

    weight_buffer0_10_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_10_0_address0,
        ce0 => weight_buffer0_10_0_ce0,
        we0 => weight_buffer0_10_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_0_d0,
        q0 => weight_buffer0_10_0_q0);

    weight_buffer0_10_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_10_1_address0,
        ce0 => weight_buffer0_10_1_ce0,
        we0 => weight_buffer0_10_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_1_d0,
        q0 => weight_buffer0_10_1_q0);

    weight_buffer0_10_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_10_2_address0,
        ce0 => weight_buffer0_10_2_ce0,
        we0 => weight_buffer0_10_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_2_d0,
        q0 => weight_buffer0_10_2_q0);

    weight_buffer0_10_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_10_3_address0,
        ce0 => weight_buffer0_10_3_ce0,
        we0 => weight_buffer0_10_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_3_d0,
        q0 => weight_buffer0_10_3_q0);

    weight_buffer0_11_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_11_0_address0,
        ce0 => weight_buffer0_11_0_ce0,
        we0 => weight_buffer0_11_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_0_d0,
        q0 => weight_buffer0_11_0_q0);

    weight_buffer0_11_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_11_1_address0,
        ce0 => weight_buffer0_11_1_ce0,
        we0 => weight_buffer0_11_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_1_d0,
        q0 => weight_buffer0_11_1_q0);

    weight_buffer0_11_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_11_2_address0,
        ce0 => weight_buffer0_11_2_ce0,
        we0 => weight_buffer0_11_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_2_d0,
        q0 => weight_buffer0_11_2_q0);

    weight_buffer0_11_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_11_3_address0,
        ce0 => weight_buffer0_11_3_ce0,
        we0 => weight_buffer0_11_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_3_d0,
        q0 => weight_buffer0_11_3_q0);

    weight_buffer0_12_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_12_0_address0,
        ce0 => weight_buffer0_12_0_ce0,
        we0 => weight_buffer0_12_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_0_d0,
        q0 => weight_buffer0_12_0_q0);

    weight_buffer0_12_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_12_1_address0,
        ce0 => weight_buffer0_12_1_ce0,
        we0 => weight_buffer0_12_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_1_d0,
        q0 => weight_buffer0_12_1_q0);

    weight_buffer0_12_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_12_2_address0,
        ce0 => weight_buffer0_12_2_ce0,
        we0 => weight_buffer0_12_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_2_d0,
        q0 => weight_buffer0_12_2_q0);

    weight_buffer0_12_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_12_3_address0,
        ce0 => weight_buffer0_12_3_ce0,
        we0 => weight_buffer0_12_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_3_d0,
        q0 => weight_buffer0_12_3_q0);

    weight_buffer0_13_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_13_0_address0,
        ce0 => weight_buffer0_13_0_ce0,
        we0 => weight_buffer0_13_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_0_d0,
        q0 => weight_buffer0_13_0_q0);

    weight_buffer0_13_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_13_1_address0,
        ce0 => weight_buffer0_13_1_ce0,
        we0 => weight_buffer0_13_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_1_d0,
        q0 => weight_buffer0_13_1_q0);

    weight_buffer0_13_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_13_2_address0,
        ce0 => weight_buffer0_13_2_ce0,
        we0 => weight_buffer0_13_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_2_d0,
        q0 => weight_buffer0_13_2_q0);

    weight_buffer0_13_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_13_3_address0,
        ce0 => weight_buffer0_13_3_ce0,
        we0 => weight_buffer0_13_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_3_d0,
        q0 => weight_buffer0_13_3_q0);

    weight_buffer0_14_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_14_0_address0,
        ce0 => weight_buffer0_14_0_ce0,
        we0 => weight_buffer0_14_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_0_d0,
        q0 => weight_buffer0_14_0_q0);

    weight_buffer0_14_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_14_1_address0,
        ce0 => weight_buffer0_14_1_ce0,
        we0 => weight_buffer0_14_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_1_d0,
        q0 => weight_buffer0_14_1_q0);

    weight_buffer0_14_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_14_2_address0,
        ce0 => weight_buffer0_14_2_ce0,
        we0 => weight_buffer0_14_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_2_d0,
        q0 => weight_buffer0_14_2_q0);

    weight_buffer0_14_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_14_3_address0,
        ce0 => weight_buffer0_14_3_ce0,
        we0 => weight_buffer0_14_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_3_d0,
        q0 => weight_buffer0_14_3_q0);

    weight_buffer0_15_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_15_0_address0,
        ce0 => weight_buffer0_15_0_ce0,
        we0 => weight_buffer0_15_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_0_d0,
        q0 => weight_buffer0_15_0_q0);

    weight_buffer0_15_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_15_1_address0,
        ce0 => weight_buffer0_15_1_ce0,
        we0 => weight_buffer0_15_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_1_d0,
        q0 => weight_buffer0_15_1_q0);

    weight_buffer0_15_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_15_2_address0,
        ce0 => weight_buffer0_15_2_ce0,
        we0 => weight_buffer0_15_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_2_d0,
        q0 => weight_buffer0_15_2_q0);

    weight_buffer0_15_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_15_3_address0,
        ce0 => weight_buffer0_15_3_ce0,
        we0 => weight_buffer0_15_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_3_d0,
        q0 => weight_buffer0_15_3_q0);

    weight_buffer0_16_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_16_0_address0,
        ce0 => weight_buffer0_16_0_ce0,
        we0 => weight_buffer0_16_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_0_d0,
        q0 => weight_buffer0_16_0_q0);

    weight_buffer0_16_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_16_1_address0,
        ce0 => weight_buffer0_16_1_ce0,
        we0 => weight_buffer0_16_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_1_d0,
        q0 => weight_buffer0_16_1_q0);

    weight_buffer0_16_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_16_2_address0,
        ce0 => weight_buffer0_16_2_ce0,
        we0 => weight_buffer0_16_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_2_d0,
        q0 => weight_buffer0_16_2_q0);

    weight_buffer0_16_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_16_3_address0,
        ce0 => weight_buffer0_16_3_ce0,
        we0 => weight_buffer0_16_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_3_d0,
        q0 => weight_buffer0_16_3_q0);

    weight_buffer0_17_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_17_0_address0,
        ce0 => weight_buffer0_17_0_ce0,
        we0 => weight_buffer0_17_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_0_d0,
        q0 => weight_buffer0_17_0_q0);

    weight_buffer0_17_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_17_1_address0,
        ce0 => weight_buffer0_17_1_ce0,
        we0 => weight_buffer0_17_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_1_d0,
        q0 => weight_buffer0_17_1_q0);

    weight_buffer0_17_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_17_2_address0,
        ce0 => weight_buffer0_17_2_ce0,
        we0 => weight_buffer0_17_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_2_d0,
        q0 => weight_buffer0_17_2_q0);

    weight_buffer0_17_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_17_3_address0,
        ce0 => weight_buffer0_17_3_ce0,
        we0 => weight_buffer0_17_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_3_d0,
        q0 => weight_buffer0_17_3_q0);

    weight_buffer0_18_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_18_0_address0,
        ce0 => weight_buffer0_18_0_ce0,
        we0 => weight_buffer0_18_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_0_d0,
        q0 => weight_buffer0_18_0_q0);

    weight_buffer0_18_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_18_1_address0,
        ce0 => weight_buffer0_18_1_ce0,
        we0 => weight_buffer0_18_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_1_d0,
        q0 => weight_buffer0_18_1_q0);

    weight_buffer0_18_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_18_2_address0,
        ce0 => weight_buffer0_18_2_ce0,
        we0 => weight_buffer0_18_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_2_d0,
        q0 => weight_buffer0_18_2_q0);

    weight_buffer0_18_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_18_3_address0,
        ce0 => weight_buffer0_18_3_ce0,
        we0 => weight_buffer0_18_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_3_d0,
        q0 => weight_buffer0_18_3_q0);

    weight_buffer0_19_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_19_0_address0,
        ce0 => weight_buffer0_19_0_ce0,
        we0 => weight_buffer0_19_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_0_d0,
        q0 => weight_buffer0_19_0_q0);

    weight_buffer0_19_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_19_1_address0,
        ce0 => weight_buffer0_19_1_ce0,
        we0 => weight_buffer0_19_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_1_d0,
        q0 => weight_buffer0_19_1_q0);

    weight_buffer0_19_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_19_2_address0,
        ce0 => weight_buffer0_19_2_ce0,
        we0 => weight_buffer0_19_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_2_d0,
        q0 => weight_buffer0_19_2_q0);

    weight_buffer0_19_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_19_3_address0,
        ce0 => weight_buffer0_19_3_ce0,
        we0 => weight_buffer0_19_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_3_d0,
        q0 => weight_buffer0_19_3_q0);

    weight_buffer0_20_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_20_0_address0,
        ce0 => weight_buffer0_20_0_ce0,
        we0 => weight_buffer0_20_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_0_d0,
        q0 => weight_buffer0_20_0_q0);

    weight_buffer0_20_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_20_1_address0,
        ce0 => weight_buffer0_20_1_ce0,
        we0 => weight_buffer0_20_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_1_d0,
        q0 => weight_buffer0_20_1_q0);

    weight_buffer0_20_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_20_2_address0,
        ce0 => weight_buffer0_20_2_ce0,
        we0 => weight_buffer0_20_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_2_d0,
        q0 => weight_buffer0_20_2_q0);

    weight_buffer0_20_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_20_3_address0,
        ce0 => weight_buffer0_20_3_ce0,
        we0 => weight_buffer0_20_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_3_d0,
        q0 => weight_buffer0_20_3_q0);

    weight_buffer0_21_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_21_0_address0,
        ce0 => weight_buffer0_21_0_ce0,
        we0 => weight_buffer0_21_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_0_d0,
        q0 => weight_buffer0_21_0_q0);

    weight_buffer0_21_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_21_1_address0,
        ce0 => weight_buffer0_21_1_ce0,
        we0 => weight_buffer0_21_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_1_d0,
        q0 => weight_buffer0_21_1_q0);

    weight_buffer0_21_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_21_2_address0,
        ce0 => weight_buffer0_21_2_ce0,
        we0 => weight_buffer0_21_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_2_d0,
        q0 => weight_buffer0_21_2_q0);

    weight_buffer0_21_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_21_3_address0,
        ce0 => weight_buffer0_21_3_ce0,
        we0 => weight_buffer0_21_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_3_d0,
        q0 => weight_buffer0_21_3_q0);

    weight_buffer0_22_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_22_0_address0,
        ce0 => weight_buffer0_22_0_ce0,
        we0 => weight_buffer0_22_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_0_d0,
        q0 => weight_buffer0_22_0_q0);

    weight_buffer0_22_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_22_1_address0,
        ce0 => weight_buffer0_22_1_ce0,
        we0 => weight_buffer0_22_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_1_d0,
        q0 => weight_buffer0_22_1_q0);

    weight_buffer0_22_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_22_2_address0,
        ce0 => weight_buffer0_22_2_ce0,
        we0 => weight_buffer0_22_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_2_d0,
        q0 => weight_buffer0_22_2_q0);

    weight_buffer0_22_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_22_3_address0,
        ce0 => weight_buffer0_22_3_ce0,
        we0 => weight_buffer0_22_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_3_d0,
        q0 => weight_buffer0_22_3_q0);

    weight_buffer0_23_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_23_0_address0,
        ce0 => weight_buffer0_23_0_ce0,
        we0 => weight_buffer0_23_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_0_d0,
        q0 => weight_buffer0_23_0_q0);

    weight_buffer0_23_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_23_1_address0,
        ce0 => weight_buffer0_23_1_ce0,
        we0 => weight_buffer0_23_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_1_d0,
        q0 => weight_buffer0_23_1_q0);

    weight_buffer0_23_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_23_2_address0,
        ce0 => weight_buffer0_23_2_ce0,
        we0 => weight_buffer0_23_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_2_d0,
        q0 => weight_buffer0_23_2_q0);

    weight_buffer0_23_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_23_3_address0,
        ce0 => weight_buffer0_23_3_ce0,
        we0 => weight_buffer0_23_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_3_d0,
        q0 => weight_buffer0_23_3_q0);

    weight_buffer0_24_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_24_0_address0,
        ce0 => weight_buffer0_24_0_ce0,
        we0 => weight_buffer0_24_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_0_d0,
        q0 => weight_buffer0_24_0_q0);

    weight_buffer0_24_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_24_1_address0,
        ce0 => weight_buffer0_24_1_ce0,
        we0 => weight_buffer0_24_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_1_d0,
        q0 => weight_buffer0_24_1_q0);

    weight_buffer0_24_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_24_2_address0,
        ce0 => weight_buffer0_24_2_ce0,
        we0 => weight_buffer0_24_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_2_d0,
        q0 => weight_buffer0_24_2_q0);

    weight_buffer0_24_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_24_3_address0,
        ce0 => weight_buffer0_24_3_ce0,
        we0 => weight_buffer0_24_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_3_d0,
        q0 => weight_buffer0_24_3_q0);

    weight_buffer0_25_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_25_0_address0,
        ce0 => weight_buffer0_25_0_ce0,
        we0 => weight_buffer0_25_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_0_d0,
        q0 => weight_buffer0_25_0_q0);

    weight_buffer0_25_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_25_1_address0,
        ce0 => weight_buffer0_25_1_ce0,
        we0 => weight_buffer0_25_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_1_d0,
        q0 => weight_buffer0_25_1_q0);

    weight_buffer0_25_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_25_2_address0,
        ce0 => weight_buffer0_25_2_ce0,
        we0 => weight_buffer0_25_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_2_d0,
        q0 => weight_buffer0_25_2_q0);

    weight_buffer0_25_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_25_3_address0,
        ce0 => weight_buffer0_25_3_ce0,
        we0 => weight_buffer0_25_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_3_d0,
        q0 => weight_buffer0_25_3_q0);

    weight_buffer0_26_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_26_0_address0,
        ce0 => weight_buffer0_26_0_ce0,
        we0 => weight_buffer0_26_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_0_d0,
        q0 => weight_buffer0_26_0_q0);

    weight_buffer0_26_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_26_1_address0,
        ce0 => weight_buffer0_26_1_ce0,
        we0 => weight_buffer0_26_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_1_d0,
        q0 => weight_buffer0_26_1_q0);

    weight_buffer0_26_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_26_2_address0,
        ce0 => weight_buffer0_26_2_ce0,
        we0 => weight_buffer0_26_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_2_d0,
        q0 => weight_buffer0_26_2_q0);

    weight_buffer0_26_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_26_3_address0,
        ce0 => weight_buffer0_26_3_ce0,
        we0 => weight_buffer0_26_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_3_d0,
        q0 => weight_buffer0_26_3_q0);

    weight_buffer0_27_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_27_0_address0,
        ce0 => weight_buffer0_27_0_ce0,
        we0 => weight_buffer0_27_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_0_d0,
        q0 => weight_buffer0_27_0_q0);

    weight_buffer0_27_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_27_1_address0,
        ce0 => weight_buffer0_27_1_ce0,
        we0 => weight_buffer0_27_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_1_d0,
        q0 => weight_buffer0_27_1_q0);

    weight_buffer0_27_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_27_2_address0,
        ce0 => weight_buffer0_27_2_ce0,
        we0 => weight_buffer0_27_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_2_d0,
        q0 => weight_buffer0_27_2_q0);

    weight_buffer0_27_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_27_3_address0,
        ce0 => weight_buffer0_27_3_ce0,
        we0 => weight_buffer0_27_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_3_d0,
        q0 => weight_buffer0_27_3_q0);

    weight_buffer0_28_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_28_0_address0,
        ce0 => weight_buffer0_28_0_ce0,
        we0 => weight_buffer0_28_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_0_d0,
        q0 => weight_buffer0_28_0_q0);

    weight_buffer0_28_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_28_1_address0,
        ce0 => weight_buffer0_28_1_ce0,
        we0 => weight_buffer0_28_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_1_d0,
        q0 => weight_buffer0_28_1_q0);

    weight_buffer0_28_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_28_2_address0,
        ce0 => weight_buffer0_28_2_ce0,
        we0 => weight_buffer0_28_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_2_d0,
        q0 => weight_buffer0_28_2_q0);

    weight_buffer0_28_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_28_3_address0,
        ce0 => weight_buffer0_28_3_ce0,
        we0 => weight_buffer0_28_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_3_d0,
        q0 => weight_buffer0_28_3_q0);

    weight_buffer0_29_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_29_0_address0,
        ce0 => weight_buffer0_29_0_ce0,
        we0 => weight_buffer0_29_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_0_d0,
        q0 => weight_buffer0_29_0_q0);

    weight_buffer0_29_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_29_1_address0,
        ce0 => weight_buffer0_29_1_ce0,
        we0 => weight_buffer0_29_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_1_d0,
        q0 => weight_buffer0_29_1_q0);

    weight_buffer0_29_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_29_2_address0,
        ce0 => weight_buffer0_29_2_ce0,
        we0 => weight_buffer0_29_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_2_d0,
        q0 => weight_buffer0_29_2_q0);

    weight_buffer0_29_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_29_3_address0,
        ce0 => weight_buffer0_29_3_ce0,
        we0 => weight_buffer0_29_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_3_d0,
        q0 => weight_buffer0_29_3_q0);

    weight_buffer0_30_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_30_0_address0,
        ce0 => weight_buffer0_30_0_ce0,
        we0 => weight_buffer0_30_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_0_d0,
        q0 => weight_buffer0_30_0_q0);

    weight_buffer0_30_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_30_1_address0,
        ce0 => weight_buffer0_30_1_ce0,
        we0 => weight_buffer0_30_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_1_d0,
        q0 => weight_buffer0_30_1_q0);

    weight_buffer0_30_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_30_2_address0,
        ce0 => weight_buffer0_30_2_ce0,
        we0 => weight_buffer0_30_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_2_d0,
        q0 => weight_buffer0_30_2_q0);

    weight_buffer0_30_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_30_3_address0,
        ce0 => weight_buffer0_30_3_ce0,
        we0 => weight_buffer0_30_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_3_d0,
        q0 => weight_buffer0_30_3_q0);

    weight_buffer0_31_0_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_31_0_address0,
        ce0 => weight_buffer0_31_0_ce0,
        we0 => weight_buffer0_31_0_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_0_d0,
        q0 => weight_buffer0_31_0_q0);

    weight_buffer0_31_1_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_31_1_address0,
        ce0 => weight_buffer0_31_1_ce0,
        we0 => weight_buffer0_31_1_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_1_d0,
        q0 => weight_buffer0_31_1_q0);

    weight_buffer0_31_2_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_31_2_address0,
        ce0 => weight_buffer0_31_2_ce0,
        we0 => weight_buffer0_31_2_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_2_d0,
        q0 => weight_buffer0_31_2_q0);

    weight_buffer0_31_3_U : component intra_pingpong_wrzec
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer0_31_3_address0,
        ce0 => weight_buffer0_31_3_ce0,
        we0 => weight_buffer0_31_3_we0,
        d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_3_d0,
        q0 => weight_buffer0_31_3_q0);

    grp_compute4_fu_1110 : component compute4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute4_fu_1110_ap_start,
        ap_done => grp_compute4_fu_1110_ap_done,
        ap_idle => grp_compute4_fu_1110_ap_idle,
        ap_ready => grp_compute4_fu_1110_ap_ready,
        input_buffer_0_address0 => grp_compute4_fu_1110_input_buffer_0_address0,
        input_buffer_0_ce0 => grp_compute4_fu_1110_input_buffer_0_ce0,
        input_buffer_0_q0 => grp_compute4_fu_1110_input_buffer_0_q0,
        input_buffer_1_address0 => grp_compute4_fu_1110_input_buffer_1_address0,
        input_buffer_1_ce0 => grp_compute4_fu_1110_input_buffer_1_ce0,
        input_buffer_1_q0 => grp_compute4_fu_1110_input_buffer_1_q0,
        input_buffer_2_address0 => grp_compute4_fu_1110_input_buffer_2_address0,
        input_buffer_2_ce0 => grp_compute4_fu_1110_input_buffer_2_ce0,
        input_buffer_2_q0 => grp_compute4_fu_1110_input_buffer_2_q0,
        input_buffer_3_address0 => grp_compute4_fu_1110_input_buffer_3_address0,
        input_buffer_3_ce0 => grp_compute4_fu_1110_input_buffer_3_ce0,
        input_buffer_3_q0 => grp_compute4_fu_1110_input_buffer_3_q0,
        output_buffer_0_address0 => grp_compute4_fu_1110_output_buffer_0_address0,
        output_buffer_0_ce0 => grp_compute4_fu_1110_output_buffer_0_ce0,
        output_buffer_0_q0 => output_buffer_0_q0,
        output_buffer_0_address1 => grp_compute4_fu_1110_output_buffer_0_address1,
        output_buffer_0_ce1 => grp_compute4_fu_1110_output_buffer_0_ce1,
        output_buffer_0_we1 => grp_compute4_fu_1110_output_buffer_0_we1,
        output_buffer_0_d1 => grp_compute4_fu_1110_output_buffer_0_d1,
        output_buffer_1_address0 => grp_compute4_fu_1110_output_buffer_1_address0,
        output_buffer_1_ce0 => grp_compute4_fu_1110_output_buffer_1_ce0,
        output_buffer_1_q0 => output_buffer_1_q0,
        output_buffer_1_address1 => grp_compute4_fu_1110_output_buffer_1_address1,
        output_buffer_1_ce1 => grp_compute4_fu_1110_output_buffer_1_ce1,
        output_buffer_1_we1 => grp_compute4_fu_1110_output_buffer_1_we1,
        output_buffer_1_d1 => grp_compute4_fu_1110_output_buffer_1_d1,
        output_buffer_2_address0 => grp_compute4_fu_1110_output_buffer_2_address0,
        output_buffer_2_ce0 => grp_compute4_fu_1110_output_buffer_2_ce0,
        output_buffer_2_q0 => output_buffer_2_q0,
        output_buffer_2_address1 => grp_compute4_fu_1110_output_buffer_2_address1,
        output_buffer_2_ce1 => grp_compute4_fu_1110_output_buffer_2_ce1,
        output_buffer_2_we1 => grp_compute4_fu_1110_output_buffer_2_we1,
        output_buffer_2_d1 => grp_compute4_fu_1110_output_buffer_2_d1,
        output_buffer_3_address0 => grp_compute4_fu_1110_output_buffer_3_address0,
        output_buffer_3_ce0 => grp_compute4_fu_1110_output_buffer_3_ce0,
        output_buffer_3_q0 => output_buffer_3_q0,
        output_buffer_3_address1 => grp_compute4_fu_1110_output_buffer_3_address1,
        output_buffer_3_ce1 => grp_compute4_fu_1110_output_buffer_3_ce1,
        output_buffer_3_we1 => grp_compute4_fu_1110_output_buffer_3_we1,
        output_buffer_3_d1 => grp_compute4_fu_1110_output_buffer_3_d1,
        output_buffer_4_address0 => grp_compute4_fu_1110_output_buffer_4_address0,
        output_buffer_4_ce0 => grp_compute4_fu_1110_output_buffer_4_ce0,
        output_buffer_4_q0 => output_buffer_4_q0,
        output_buffer_4_address1 => grp_compute4_fu_1110_output_buffer_4_address1,
        output_buffer_4_ce1 => grp_compute4_fu_1110_output_buffer_4_ce1,
        output_buffer_4_we1 => grp_compute4_fu_1110_output_buffer_4_we1,
        output_buffer_4_d1 => grp_compute4_fu_1110_output_buffer_4_d1,
        output_buffer_5_address0 => grp_compute4_fu_1110_output_buffer_5_address0,
        output_buffer_5_ce0 => grp_compute4_fu_1110_output_buffer_5_ce0,
        output_buffer_5_q0 => output_buffer_5_q0,
        output_buffer_5_address1 => grp_compute4_fu_1110_output_buffer_5_address1,
        output_buffer_5_ce1 => grp_compute4_fu_1110_output_buffer_5_ce1,
        output_buffer_5_we1 => grp_compute4_fu_1110_output_buffer_5_we1,
        output_buffer_5_d1 => grp_compute4_fu_1110_output_buffer_5_d1,
        output_buffer_6_address0 => grp_compute4_fu_1110_output_buffer_6_address0,
        output_buffer_6_ce0 => grp_compute4_fu_1110_output_buffer_6_ce0,
        output_buffer_6_q0 => output_buffer_6_q0,
        output_buffer_6_address1 => grp_compute4_fu_1110_output_buffer_6_address1,
        output_buffer_6_ce1 => grp_compute4_fu_1110_output_buffer_6_ce1,
        output_buffer_6_we1 => grp_compute4_fu_1110_output_buffer_6_we1,
        output_buffer_6_d1 => grp_compute4_fu_1110_output_buffer_6_d1,
        output_buffer_7_address0 => grp_compute4_fu_1110_output_buffer_7_address0,
        output_buffer_7_ce0 => grp_compute4_fu_1110_output_buffer_7_ce0,
        output_buffer_7_q0 => output_buffer_7_q0,
        output_buffer_7_address1 => grp_compute4_fu_1110_output_buffer_7_address1,
        output_buffer_7_ce1 => grp_compute4_fu_1110_output_buffer_7_ce1,
        output_buffer_7_we1 => grp_compute4_fu_1110_output_buffer_7_we1,
        output_buffer_7_d1 => grp_compute4_fu_1110_output_buffer_7_d1,
        output_buffer_8_address0 => grp_compute4_fu_1110_output_buffer_8_address0,
        output_buffer_8_ce0 => grp_compute4_fu_1110_output_buffer_8_ce0,
        output_buffer_8_q0 => output_buffer_8_q0,
        output_buffer_8_address1 => grp_compute4_fu_1110_output_buffer_8_address1,
        output_buffer_8_ce1 => grp_compute4_fu_1110_output_buffer_8_ce1,
        output_buffer_8_we1 => grp_compute4_fu_1110_output_buffer_8_we1,
        output_buffer_8_d1 => grp_compute4_fu_1110_output_buffer_8_d1,
        output_buffer_9_address0 => grp_compute4_fu_1110_output_buffer_9_address0,
        output_buffer_9_ce0 => grp_compute4_fu_1110_output_buffer_9_ce0,
        output_buffer_9_q0 => output_buffer_9_q0,
        output_buffer_9_address1 => grp_compute4_fu_1110_output_buffer_9_address1,
        output_buffer_9_ce1 => grp_compute4_fu_1110_output_buffer_9_ce1,
        output_buffer_9_we1 => grp_compute4_fu_1110_output_buffer_9_we1,
        output_buffer_9_d1 => grp_compute4_fu_1110_output_buffer_9_d1,
        output_buffer_10_address0 => grp_compute4_fu_1110_output_buffer_10_address0,
        output_buffer_10_ce0 => grp_compute4_fu_1110_output_buffer_10_ce0,
        output_buffer_10_q0 => output_buffer_10_q0,
        output_buffer_10_address1 => grp_compute4_fu_1110_output_buffer_10_address1,
        output_buffer_10_ce1 => grp_compute4_fu_1110_output_buffer_10_ce1,
        output_buffer_10_we1 => grp_compute4_fu_1110_output_buffer_10_we1,
        output_buffer_10_d1 => grp_compute4_fu_1110_output_buffer_10_d1,
        output_buffer_11_address0 => grp_compute4_fu_1110_output_buffer_11_address0,
        output_buffer_11_ce0 => grp_compute4_fu_1110_output_buffer_11_ce0,
        output_buffer_11_q0 => output_buffer_11_q0,
        output_buffer_11_address1 => grp_compute4_fu_1110_output_buffer_11_address1,
        output_buffer_11_ce1 => grp_compute4_fu_1110_output_buffer_11_ce1,
        output_buffer_11_we1 => grp_compute4_fu_1110_output_buffer_11_we1,
        output_buffer_11_d1 => grp_compute4_fu_1110_output_buffer_11_d1,
        output_buffer_12_address0 => grp_compute4_fu_1110_output_buffer_12_address0,
        output_buffer_12_ce0 => grp_compute4_fu_1110_output_buffer_12_ce0,
        output_buffer_12_q0 => output_buffer_12_q0,
        output_buffer_12_address1 => grp_compute4_fu_1110_output_buffer_12_address1,
        output_buffer_12_ce1 => grp_compute4_fu_1110_output_buffer_12_ce1,
        output_buffer_12_we1 => grp_compute4_fu_1110_output_buffer_12_we1,
        output_buffer_12_d1 => grp_compute4_fu_1110_output_buffer_12_d1,
        output_buffer_13_address0 => grp_compute4_fu_1110_output_buffer_13_address0,
        output_buffer_13_ce0 => grp_compute4_fu_1110_output_buffer_13_ce0,
        output_buffer_13_q0 => output_buffer_13_q0,
        output_buffer_13_address1 => grp_compute4_fu_1110_output_buffer_13_address1,
        output_buffer_13_ce1 => grp_compute4_fu_1110_output_buffer_13_ce1,
        output_buffer_13_we1 => grp_compute4_fu_1110_output_buffer_13_we1,
        output_buffer_13_d1 => grp_compute4_fu_1110_output_buffer_13_d1,
        output_buffer_14_address0 => grp_compute4_fu_1110_output_buffer_14_address0,
        output_buffer_14_ce0 => grp_compute4_fu_1110_output_buffer_14_ce0,
        output_buffer_14_q0 => output_buffer_14_q0,
        output_buffer_14_address1 => grp_compute4_fu_1110_output_buffer_14_address1,
        output_buffer_14_ce1 => grp_compute4_fu_1110_output_buffer_14_ce1,
        output_buffer_14_we1 => grp_compute4_fu_1110_output_buffer_14_we1,
        output_buffer_14_d1 => grp_compute4_fu_1110_output_buffer_14_d1,
        output_buffer_15_address0 => grp_compute4_fu_1110_output_buffer_15_address0,
        output_buffer_15_ce0 => grp_compute4_fu_1110_output_buffer_15_ce0,
        output_buffer_15_q0 => output_buffer_15_q0,
        output_buffer_15_address1 => grp_compute4_fu_1110_output_buffer_15_address1,
        output_buffer_15_ce1 => grp_compute4_fu_1110_output_buffer_15_ce1,
        output_buffer_15_we1 => grp_compute4_fu_1110_output_buffer_15_we1,
        output_buffer_15_d1 => grp_compute4_fu_1110_output_buffer_15_d1,
        output_buffer_16_address0 => grp_compute4_fu_1110_output_buffer_16_address0,
        output_buffer_16_ce0 => grp_compute4_fu_1110_output_buffer_16_ce0,
        output_buffer_16_q0 => output_buffer_16_q0,
        output_buffer_16_address1 => grp_compute4_fu_1110_output_buffer_16_address1,
        output_buffer_16_ce1 => grp_compute4_fu_1110_output_buffer_16_ce1,
        output_buffer_16_we1 => grp_compute4_fu_1110_output_buffer_16_we1,
        output_buffer_16_d1 => grp_compute4_fu_1110_output_buffer_16_d1,
        output_buffer_17_address0 => grp_compute4_fu_1110_output_buffer_17_address0,
        output_buffer_17_ce0 => grp_compute4_fu_1110_output_buffer_17_ce0,
        output_buffer_17_q0 => output_buffer_17_q0,
        output_buffer_17_address1 => grp_compute4_fu_1110_output_buffer_17_address1,
        output_buffer_17_ce1 => grp_compute4_fu_1110_output_buffer_17_ce1,
        output_buffer_17_we1 => grp_compute4_fu_1110_output_buffer_17_we1,
        output_buffer_17_d1 => grp_compute4_fu_1110_output_buffer_17_d1,
        output_buffer_18_address0 => grp_compute4_fu_1110_output_buffer_18_address0,
        output_buffer_18_ce0 => grp_compute4_fu_1110_output_buffer_18_ce0,
        output_buffer_18_q0 => output_buffer_18_q0,
        output_buffer_18_address1 => grp_compute4_fu_1110_output_buffer_18_address1,
        output_buffer_18_ce1 => grp_compute4_fu_1110_output_buffer_18_ce1,
        output_buffer_18_we1 => grp_compute4_fu_1110_output_buffer_18_we1,
        output_buffer_18_d1 => grp_compute4_fu_1110_output_buffer_18_d1,
        output_buffer_19_address0 => grp_compute4_fu_1110_output_buffer_19_address0,
        output_buffer_19_ce0 => grp_compute4_fu_1110_output_buffer_19_ce0,
        output_buffer_19_q0 => output_buffer_19_q0,
        output_buffer_19_address1 => grp_compute4_fu_1110_output_buffer_19_address1,
        output_buffer_19_ce1 => grp_compute4_fu_1110_output_buffer_19_ce1,
        output_buffer_19_we1 => grp_compute4_fu_1110_output_buffer_19_we1,
        output_buffer_19_d1 => grp_compute4_fu_1110_output_buffer_19_d1,
        output_buffer_20_address0 => grp_compute4_fu_1110_output_buffer_20_address0,
        output_buffer_20_ce0 => grp_compute4_fu_1110_output_buffer_20_ce0,
        output_buffer_20_q0 => output_buffer_20_q0,
        output_buffer_20_address1 => grp_compute4_fu_1110_output_buffer_20_address1,
        output_buffer_20_ce1 => grp_compute4_fu_1110_output_buffer_20_ce1,
        output_buffer_20_we1 => grp_compute4_fu_1110_output_buffer_20_we1,
        output_buffer_20_d1 => grp_compute4_fu_1110_output_buffer_20_d1,
        output_buffer_21_address0 => grp_compute4_fu_1110_output_buffer_21_address0,
        output_buffer_21_ce0 => grp_compute4_fu_1110_output_buffer_21_ce0,
        output_buffer_21_q0 => output_buffer_21_q0,
        output_buffer_21_address1 => grp_compute4_fu_1110_output_buffer_21_address1,
        output_buffer_21_ce1 => grp_compute4_fu_1110_output_buffer_21_ce1,
        output_buffer_21_we1 => grp_compute4_fu_1110_output_buffer_21_we1,
        output_buffer_21_d1 => grp_compute4_fu_1110_output_buffer_21_d1,
        output_buffer_22_address0 => grp_compute4_fu_1110_output_buffer_22_address0,
        output_buffer_22_ce0 => grp_compute4_fu_1110_output_buffer_22_ce0,
        output_buffer_22_q0 => output_buffer_22_q0,
        output_buffer_22_address1 => grp_compute4_fu_1110_output_buffer_22_address1,
        output_buffer_22_ce1 => grp_compute4_fu_1110_output_buffer_22_ce1,
        output_buffer_22_we1 => grp_compute4_fu_1110_output_buffer_22_we1,
        output_buffer_22_d1 => grp_compute4_fu_1110_output_buffer_22_d1,
        output_buffer_23_address0 => grp_compute4_fu_1110_output_buffer_23_address0,
        output_buffer_23_ce0 => grp_compute4_fu_1110_output_buffer_23_ce0,
        output_buffer_23_q0 => output_buffer_23_q0,
        output_buffer_23_address1 => grp_compute4_fu_1110_output_buffer_23_address1,
        output_buffer_23_ce1 => grp_compute4_fu_1110_output_buffer_23_ce1,
        output_buffer_23_we1 => grp_compute4_fu_1110_output_buffer_23_we1,
        output_buffer_23_d1 => grp_compute4_fu_1110_output_buffer_23_d1,
        output_buffer_24_address0 => grp_compute4_fu_1110_output_buffer_24_address0,
        output_buffer_24_ce0 => grp_compute4_fu_1110_output_buffer_24_ce0,
        output_buffer_24_q0 => output_buffer_24_q0,
        output_buffer_24_address1 => grp_compute4_fu_1110_output_buffer_24_address1,
        output_buffer_24_ce1 => grp_compute4_fu_1110_output_buffer_24_ce1,
        output_buffer_24_we1 => grp_compute4_fu_1110_output_buffer_24_we1,
        output_buffer_24_d1 => grp_compute4_fu_1110_output_buffer_24_d1,
        output_buffer_25_address0 => grp_compute4_fu_1110_output_buffer_25_address0,
        output_buffer_25_ce0 => grp_compute4_fu_1110_output_buffer_25_ce0,
        output_buffer_25_q0 => output_buffer_25_q0,
        output_buffer_25_address1 => grp_compute4_fu_1110_output_buffer_25_address1,
        output_buffer_25_ce1 => grp_compute4_fu_1110_output_buffer_25_ce1,
        output_buffer_25_we1 => grp_compute4_fu_1110_output_buffer_25_we1,
        output_buffer_25_d1 => grp_compute4_fu_1110_output_buffer_25_d1,
        output_buffer_26_address0 => grp_compute4_fu_1110_output_buffer_26_address0,
        output_buffer_26_ce0 => grp_compute4_fu_1110_output_buffer_26_ce0,
        output_buffer_26_q0 => output_buffer_26_q0,
        output_buffer_26_address1 => grp_compute4_fu_1110_output_buffer_26_address1,
        output_buffer_26_ce1 => grp_compute4_fu_1110_output_buffer_26_ce1,
        output_buffer_26_we1 => grp_compute4_fu_1110_output_buffer_26_we1,
        output_buffer_26_d1 => grp_compute4_fu_1110_output_buffer_26_d1,
        output_buffer_27_address0 => grp_compute4_fu_1110_output_buffer_27_address0,
        output_buffer_27_ce0 => grp_compute4_fu_1110_output_buffer_27_ce0,
        output_buffer_27_q0 => output_buffer_27_q0,
        output_buffer_27_address1 => grp_compute4_fu_1110_output_buffer_27_address1,
        output_buffer_27_ce1 => grp_compute4_fu_1110_output_buffer_27_ce1,
        output_buffer_27_we1 => grp_compute4_fu_1110_output_buffer_27_we1,
        output_buffer_27_d1 => grp_compute4_fu_1110_output_buffer_27_d1,
        output_buffer_28_address0 => grp_compute4_fu_1110_output_buffer_28_address0,
        output_buffer_28_ce0 => grp_compute4_fu_1110_output_buffer_28_ce0,
        output_buffer_28_q0 => output_buffer_28_q0,
        output_buffer_28_address1 => grp_compute4_fu_1110_output_buffer_28_address1,
        output_buffer_28_ce1 => grp_compute4_fu_1110_output_buffer_28_ce1,
        output_buffer_28_we1 => grp_compute4_fu_1110_output_buffer_28_we1,
        output_buffer_28_d1 => grp_compute4_fu_1110_output_buffer_28_d1,
        output_buffer_29_address0 => grp_compute4_fu_1110_output_buffer_29_address0,
        output_buffer_29_ce0 => grp_compute4_fu_1110_output_buffer_29_ce0,
        output_buffer_29_q0 => output_buffer_29_q0,
        output_buffer_29_address1 => grp_compute4_fu_1110_output_buffer_29_address1,
        output_buffer_29_ce1 => grp_compute4_fu_1110_output_buffer_29_ce1,
        output_buffer_29_we1 => grp_compute4_fu_1110_output_buffer_29_we1,
        output_buffer_29_d1 => grp_compute4_fu_1110_output_buffer_29_d1,
        output_buffer_30_address0 => grp_compute4_fu_1110_output_buffer_30_address0,
        output_buffer_30_ce0 => grp_compute4_fu_1110_output_buffer_30_ce0,
        output_buffer_30_q0 => output_buffer_30_q0,
        output_buffer_30_address1 => grp_compute4_fu_1110_output_buffer_30_address1,
        output_buffer_30_ce1 => grp_compute4_fu_1110_output_buffer_30_ce1,
        output_buffer_30_we1 => grp_compute4_fu_1110_output_buffer_30_we1,
        output_buffer_30_d1 => grp_compute4_fu_1110_output_buffer_30_d1,
        output_buffer_31_address0 => grp_compute4_fu_1110_output_buffer_31_address0,
        output_buffer_31_ce0 => grp_compute4_fu_1110_output_buffer_31_ce0,
        output_buffer_31_q0 => output_buffer_31_q0,
        output_buffer_31_address1 => grp_compute4_fu_1110_output_buffer_31_address1,
        output_buffer_31_ce1 => grp_compute4_fu_1110_output_buffer_31_ce1,
        output_buffer_31_we1 => grp_compute4_fu_1110_output_buffer_31_we1,
        output_buffer_31_d1 => grp_compute4_fu_1110_output_buffer_31_d1,
        weight_buffer_0_0_address0 => grp_compute4_fu_1110_weight_buffer_0_0_address0,
        weight_buffer_0_0_ce0 => grp_compute4_fu_1110_weight_buffer_0_0_ce0,
        weight_buffer_0_0_q0 => grp_compute4_fu_1110_weight_buffer_0_0_q0,
        weight_buffer_0_1_address0 => grp_compute4_fu_1110_weight_buffer_0_1_address0,
        weight_buffer_0_1_ce0 => grp_compute4_fu_1110_weight_buffer_0_1_ce0,
        weight_buffer_0_1_q0 => grp_compute4_fu_1110_weight_buffer_0_1_q0,
        weight_buffer_0_2_address0 => grp_compute4_fu_1110_weight_buffer_0_2_address0,
        weight_buffer_0_2_ce0 => grp_compute4_fu_1110_weight_buffer_0_2_ce0,
        weight_buffer_0_2_q0 => grp_compute4_fu_1110_weight_buffer_0_2_q0,
        weight_buffer_0_3_address0 => grp_compute4_fu_1110_weight_buffer_0_3_address0,
        weight_buffer_0_3_ce0 => grp_compute4_fu_1110_weight_buffer_0_3_ce0,
        weight_buffer_0_3_q0 => grp_compute4_fu_1110_weight_buffer_0_3_q0,
        weight_buffer_1_0_address0 => grp_compute4_fu_1110_weight_buffer_1_0_address0,
        weight_buffer_1_0_ce0 => grp_compute4_fu_1110_weight_buffer_1_0_ce0,
        weight_buffer_1_0_q0 => grp_compute4_fu_1110_weight_buffer_1_0_q0,
        weight_buffer_1_1_address0 => grp_compute4_fu_1110_weight_buffer_1_1_address0,
        weight_buffer_1_1_ce0 => grp_compute4_fu_1110_weight_buffer_1_1_ce0,
        weight_buffer_1_1_q0 => grp_compute4_fu_1110_weight_buffer_1_1_q0,
        weight_buffer_1_2_address0 => grp_compute4_fu_1110_weight_buffer_1_2_address0,
        weight_buffer_1_2_ce0 => grp_compute4_fu_1110_weight_buffer_1_2_ce0,
        weight_buffer_1_2_q0 => grp_compute4_fu_1110_weight_buffer_1_2_q0,
        weight_buffer_1_3_address0 => grp_compute4_fu_1110_weight_buffer_1_3_address0,
        weight_buffer_1_3_ce0 => grp_compute4_fu_1110_weight_buffer_1_3_ce0,
        weight_buffer_1_3_q0 => grp_compute4_fu_1110_weight_buffer_1_3_q0,
        weight_buffer_2_0_address0 => grp_compute4_fu_1110_weight_buffer_2_0_address0,
        weight_buffer_2_0_ce0 => grp_compute4_fu_1110_weight_buffer_2_0_ce0,
        weight_buffer_2_0_q0 => grp_compute4_fu_1110_weight_buffer_2_0_q0,
        weight_buffer_2_1_address0 => grp_compute4_fu_1110_weight_buffer_2_1_address0,
        weight_buffer_2_1_ce0 => grp_compute4_fu_1110_weight_buffer_2_1_ce0,
        weight_buffer_2_1_q0 => grp_compute4_fu_1110_weight_buffer_2_1_q0,
        weight_buffer_2_2_address0 => grp_compute4_fu_1110_weight_buffer_2_2_address0,
        weight_buffer_2_2_ce0 => grp_compute4_fu_1110_weight_buffer_2_2_ce0,
        weight_buffer_2_2_q0 => grp_compute4_fu_1110_weight_buffer_2_2_q0,
        weight_buffer_2_3_address0 => grp_compute4_fu_1110_weight_buffer_2_3_address0,
        weight_buffer_2_3_ce0 => grp_compute4_fu_1110_weight_buffer_2_3_ce0,
        weight_buffer_2_3_q0 => grp_compute4_fu_1110_weight_buffer_2_3_q0,
        weight_buffer_3_0_address0 => grp_compute4_fu_1110_weight_buffer_3_0_address0,
        weight_buffer_3_0_ce0 => grp_compute4_fu_1110_weight_buffer_3_0_ce0,
        weight_buffer_3_0_q0 => grp_compute4_fu_1110_weight_buffer_3_0_q0,
        weight_buffer_3_1_address0 => grp_compute4_fu_1110_weight_buffer_3_1_address0,
        weight_buffer_3_1_ce0 => grp_compute4_fu_1110_weight_buffer_3_1_ce0,
        weight_buffer_3_1_q0 => grp_compute4_fu_1110_weight_buffer_3_1_q0,
        weight_buffer_3_2_address0 => grp_compute4_fu_1110_weight_buffer_3_2_address0,
        weight_buffer_3_2_ce0 => grp_compute4_fu_1110_weight_buffer_3_2_ce0,
        weight_buffer_3_2_q0 => grp_compute4_fu_1110_weight_buffer_3_2_q0,
        weight_buffer_3_3_address0 => grp_compute4_fu_1110_weight_buffer_3_3_address0,
        weight_buffer_3_3_ce0 => grp_compute4_fu_1110_weight_buffer_3_3_ce0,
        weight_buffer_3_3_q0 => grp_compute4_fu_1110_weight_buffer_3_3_q0,
        weight_buffer_4_0_address0 => grp_compute4_fu_1110_weight_buffer_4_0_address0,
        weight_buffer_4_0_ce0 => grp_compute4_fu_1110_weight_buffer_4_0_ce0,
        weight_buffer_4_0_q0 => grp_compute4_fu_1110_weight_buffer_4_0_q0,
        weight_buffer_4_1_address0 => grp_compute4_fu_1110_weight_buffer_4_1_address0,
        weight_buffer_4_1_ce0 => grp_compute4_fu_1110_weight_buffer_4_1_ce0,
        weight_buffer_4_1_q0 => grp_compute4_fu_1110_weight_buffer_4_1_q0,
        weight_buffer_4_2_address0 => grp_compute4_fu_1110_weight_buffer_4_2_address0,
        weight_buffer_4_2_ce0 => grp_compute4_fu_1110_weight_buffer_4_2_ce0,
        weight_buffer_4_2_q0 => grp_compute4_fu_1110_weight_buffer_4_2_q0,
        weight_buffer_4_3_address0 => grp_compute4_fu_1110_weight_buffer_4_3_address0,
        weight_buffer_4_3_ce0 => grp_compute4_fu_1110_weight_buffer_4_3_ce0,
        weight_buffer_4_3_q0 => grp_compute4_fu_1110_weight_buffer_4_3_q0,
        weight_buffer_5_0_address0 => grp_compute4_fu_1110_weight_buffer_5_0_address0,
        weight_buffer_5_0_ce0 => grp_compute4_fu_1110_weight_buffer_5_0_ce0,
        weight_buffer_5_0_q0 => grp_compute4_fu_1110_weight_buffer_5_0_q0,
        weight_buffer_5_1_address0 => grp_compute4_fu_1110_weight_buffer_5_1_address0,
        weight_buffer_5_1_ce0 => grp_compute4_fu_1110_weight_buffer_5_1_ce0,
        weight_buffer_5_1_q0 => grp_compute4_fu_1110_weight_buffer_5_1_q0,
        weight_buffer_5_2_address0 => grp_compute4_fu_1110_weight_buffer_5_2_address0,
        weight_buffer_5_2_ce0 => grp_compute4_fu_1110_weight_buffer_5_2_ce0,
        weight_buffer_5_2_q0 => grp_compute4_fu_1110_weight_buffer_5_2_q0,
        weight_buffer_5_3_address0 => grp_compute4_fu_1110_weight_buffer_5_3_address0,
        weight_buffer_5_3_ce0 => grp_compute4_fu_1110_weight_buffer_5_3_ce0,
        weight_buffer_5_3_q0 => grp_compute4_fu_1110_weight_buffer_5_3_q0,
        weight_buffer_6_0_address0 => grp_compute4_fu_1110_weight_buffer_6_0_address0,
        weight_buffer_6_0_ce0 => grp_compute4_fu_1110_weight_buffer_6_0_ce0,
        weight_buffer_6_0_q0 => grp_compute4_fu_1110_weight_buffer_6_0_q0,
        weight_buffer_6_1_address0 => grp_compute4_fu_1110_weight_buffer_6_1_address0,
        weight_buffer_6_1_ce0 => grp_compute4_fu_1110_weight_buffer_6_1_ce0,
        weight_buffer_6_1_q0 => grp_compute4_fu_1110_weight_buffer_6_1_q0,
        weight_buffer_6_2_address0 => grp_compute4_fu_1110_weight_buffer_6_2_address0,
        weight_buffer_6_2_ce0 => grp_compute4_fu_1110_weight_buffer_6_2_ce0,
        weight_buffer_6_2_q0 => grp_compute4_fu_1110_weight_buffer_6_2_q0,
        weight_buffer_6_3_address0 => grp_compute4_fu_1110_weight_buffer_6_3_address0,
        weight_buffer_6_3_ce0 => grp_compute4_fu_1110_weight_buffer_6_3_ce0,
        weight_buffer_6_3_q0 => grp_compute4_fu_1110_weight_buffer_6_3_q0,
        weight_buffer_7_0_address0 => grp_compute4_fu_1110_weight_buffer_7_0_address0,
        weight_buffer_7_0_ce0 => grp_compute4_fu_1110_weight_buffer_7_0_ce0,
        weight_buffer_7_0_q0 => grp_compute4_fu_1110_weight_buffer_7_0_q0,
        weight_buffer_7_1_address0 => grp_compute4_fu_1110_weight_buffer_7_1_address0,
        weight_buffer_7_1_ce0 => grp_compute4_fu_1110_weight_buffer_7_1_ce0,
        weight_buffer_7_1_q0 => grp_compute4_fu_1110_weight_buffer_7_1_q0,
        weight_buffer_7_2_address0 => grp_compute4_fu_1110_weight_buffer_7_2_address0,
        weight_buffer_7_2_ce0 => grp_compute4_fu_1110_weight_buffer_7_2_ce0,
        weight_buffer_7_2_q0 => grp_compute4_fu_1110_weight_buffer_7_2_q0,
        weight_buffer_7_3_address0 => grp_compute4_fu_1110_weight_buffer_7_3_address0,
        weight_buffer_7_3_ce0 => grp_compute4_fu_1110_weight_buffer_7_3_ce0,
        weight_buffer_7_3_q0 => grp_compute4_fu_1110_weight_buffer_7_3_q0,
        weight_buffer_8_0_address0 => grp_compute4_fu_1110_weight_buffer_8_0_address0,
        weight_buffer_8_0_ce0 => grp_compute4_fu_1110_weight_buffer_8_0_ce0,
        weight_buffer_8_0_q0 => grp_compute4_fu_1110_weight_buffer_8_0_q0,
        weight_buffer_8_1_address0 => grp_compute4_fu_1110_weight_buffer_8_1_address0,
        weight_buffer_8_1_ce0 => grp_compute4_fu_1110_weight_buffer_8_1_ce0,
        weight_buffer_8_1_q0 => grp_compute4_fu_1110_weight_buffer_8_1_q0,
        weight_buffer_8_2_address0 => grp_compute4_fu_1110_weight_buffer_8_2_address0,
        weight_buffer_8_2_ce0 => grp_compute4_fu_1110_weight_buffer_8_2_ce0,
        weight_buffer_8_2_q0 => grp_compute4_fu_1110_weight_buffer_8_2_q0,
        weight_buffer_8_3_address0 => grp_compute4_fu_1110_weight_buffer_8_3_address0,
        weight_buffer_8_3_ce0 => grp_compute4_fu_1110_weight_buffer_8_3_ce0,
        weight_buffer_8_3_q0 => grp_compute4_fu_1110_weight_buffer_8_3_q0,
        weight_buffer_9_0_address0 => grp_compute4_fu_1110_weight_buffer_9_0_address0,
        weight_buffer_9_0_ce0 => grp_compute4_fu_1110_weight_buffer_9_0_ce0,
        weight_buffer_9_0_q0 => grp_compute4_fu_1110_weight_buffer_9_0_q0,
        weight_buffer_9_1_address0 => grp_compute4_fu_1110_weight_buffer_9_1_address0,
        weight_buffer_9_1_ce0 => grp_compute4_fu_1110_weight_buffer_9_1_ce0,
        weight_buffer_9_1_q0 => grp_compute4_fu_1110_weight_buffer_9_1_q0,
        weight_buffer_9_2_address0 => grp_compute4_fu_1110_weight_buffer_9_2_address0,
        weight_buffer_9_2_ce0 => grp_compute4_fu_1110_weight_buffer_9_2_ce0,
        weight_buffer_9_2_q0 => grp_compute4_fu_1110_weight_buffer_9_2_q0,
        weight_buffer_9_3_address0 => grp_compute4_fu_1110_weight_buffer_9_3_address0,
        weight_buffer_9_3_ce0 => grp_compute4_fu_1110_weight_buffer_9_3_ce0,
        weight_buffer_9_3_q0 => grp_compute4_fu_1110_weight_buffer_9_3_q0,
        weight_buffer_10_0_address0 => grp_compute4_fu_1110_weight_buffer_10_0_address0,
        weight_buffer_10_0_ce0 => grp_compute4_fu_1110_weight_buffer_10_0_ce0,
        weight_buffer_10_0_q0 => grp_compute4_fu_1110_weight_buffer_10_0_q0,
        weight_buffer_10_1_address0 => grp_compute4_fu_1110_weight_buffer_10_1_address0,
        weight_buffer_10_1_ce0 => grp_compute4_fu_1110_weight_buffer_10_1_ce0,
        weight_buffer_10_1_q0 => grp_compute4_fu_1110_weight_buffer_10_1_q0,
        weight_buffer_10_2_address0 => grp_compute4_fu_1110_weight_buffer_10_2_address0,
        weight_buffer_10_2_ce0 => grp_compute4_fu_1110_weight_buffer_10_2_ce0,
        weight_buffer_10_2_q0 => grp_compute4_fu_1110_weight_buffer_10_2_q0,
        weight_buffer_10_3_address0 => grp_compute4_fu_1110_weight_buffer_10_3_address0,
        weight_buffer_10_3_ce0 => grp_compute4_fu_1110_weight_buffer_10_3_ce0,
        weight_buffer_10_3_q0 => grp_compute4_fu_1110_weight_buffer_10_3_q0,
        weight_buffer_11_0_address0 => grp_compute4_fu_1110_weight_buffer_11_0_address0,
        weight_buffer_11_0_ce0 => grp_compute4_fu_1110_weight_buffer_11_0_ce0,
        weight_buffer_11_0_q0 => grp_compute4_fu_1110_weight_buffer_11_0_q0,
        weight_buffer_11_1_address0 => grp_compute4_fu_1110_weight_buffer_11_1_address0,
        weight_buffer_11_1_ce0 => grp_compute4_fu_1110_weight_buffer_11_1_ce0,
        weight_buffer_11_1_q0 => grp_compute4_fu_1110_weight_buffer_11_1_q0,
        weight_buffer_11_2_address0 => grp_compute4_fu_1110_weight_buffer_11_2_address0,
        weight_buffer_11_2_ce0 => grp_compute4_fu_1110_weight_buffer_11_2_ce0,
        weight_buffer_11_2_q0 => grp_compute4_fu_1110_weight_buffer_11_2_q0,
        weight_buffer_11_3_address0 => grp_compute4_fu_1110_weight_buffer_11_3_address0,
        weight_buffer_11_3_ce0 => grp_compute4_fu_1110_weight_buffer_11_3_ce0,
        weight_buffer_11_3_q0 => grp_compute4_fu_1110_weight_buffer_11_3_q0,
        weight_buffer_12_0_address0 => grp_compute4_fu_1110_weight_buffer_12_0_address0,
        weight_buffer_12_0_ce0 => grp_compute4_fu_1110_weight_buffer_12_0_ce0,
        weight_buffer_12_0_q0 => grp_compute4_fu_1110_weight_buffer_12_0_q0,
        weight_buffer_12_1_address0 => grp_compute4_fu_1110_weight_buffer_12_1_address0,
        weight_buffer_12_1_ce0 => grp_compute4_fu_1110_weight_buffer_12_1_ce0,
        weight_buffer_12_1_q0 => grp_compute4_fu_1110_weight_buffer_12_1_q0,
        weight_buffer_12_2_address0 => grp_compute4_fu_1110_weight_buffer_12_2_address0,
        weight_buffer_12_2_ce0 => grp_compute4_fu_1110_weight_buffer_12_2_ce0,
        weight_buffer_12_2_q0 => grp_compute4_fu_1110_weight_buffer_12_2_q0,
        weight_buffer_12_3_address0 => grp_compute4_fu_1110_weight_buffer_12_3_address0,
        weight_buffer_12_3_ce0 => grp_compute4_fu_1110_weight_buffer_12_3_ce0,
        weight_buffer_12_3_q0 => grp_compute4_fu_1110_weight_buffer_12_3_q0,
        weight_buffer_13_0_address0 => grp_compute4_fu_1110_weight_buffer_13_0_address0,
        weight_buffer_13_0_ce0 => grp_compute4_fu_1110_weight_buffer_13_0_ce0,
        weight_buffer_13_0_q0 => grp_compute4_fu_1110_weight_buffer_13_0_q0,
        weight_buffer_13_1_address0 => grp_compute4_fu_1110_weight_buffer_13_1_address0,
        weight_buffer_13_1_ce0 => grp_compute4_fu_1110_weight_buffer_13_1_ce0,
        weight_buffer_13_1_q0 => grp_compute4_fu_1110_weight_buffer_13_1_q0,
        weight_buffer_13_2_address0 => grp_compute4_fu_1110_weight_buffer_13_2_address0,
        weight_buffer_13_2_ce0 => grp_compute4_fu_1110_weight_buffer_13_2_ce0,
        weight_buffer_13_2_q0 => grp_compute4_fu_1110_weight_buffer_13_2_q0,
        weight_buffer_13_3_address0 => grp_compute4_fu_1110_weight_buffer_13_3_address0,
        weight_buffer_13_3_ce0 => grp_compute4_fu_1110_weight_buffer_13_3_ce0,
        weight_buffer_13_3_q0 => grp_compute4_fu_1110_weight_buffer_13_3_q0,
        weight_buffer_14_0_address0 => grp_compute4_fu_1110_weight_buffer_14_0_address0,
        weight_buffer_14_0_ce0 => grp_compute4_fu_1110_weight_buffer_14_0_ce0,
        weight_buffer_14_0_q0 => grp_compute4_fu_1110_weight_buffer_14_0_q0,
        weight_buffer_14_1_address0 => grp_compute4_fu_1110_weight_buffer_14_1_address0,
        weight_buffer_14_1_ce0 => grp_compute4_fu_1110_weight_buffer_14_1_ce0,
        weight_buffer_14_1_q0 => grp_compute4_fu_1110_weight_buffer_14_1_q0,
        weight_buffer_14_2_address0 => grp_compute4_fu_1110_weight_buffer_14_2_address0,
        weight_buffer_14_2_ce0 => grp_compute4_fu_1110_weight_buffer_14_2_ce0,
        weight_buffer_14_2_q0 => grp_compute4_fu_1110_weight_buffer_14_2_q0,
        weight_buffer_14_3_address0 => grp_compute4_fu_1110_weight_buffer_14_3_address0,
        weight_buffer_14_3_ce0 => grp_compute4_fu_1110_weight_buffer_14_3_ce0,
        weight_buffer_14_3_q0 => grp_compute4_fu_1110_weight_buffer_14_3_q0,
        weight_buffer_15_0_address0 => grp_compute4_fu_1110_weight_buffer_15_0_address0,
        weight_buffer_15_0_ce0 => grp_compute4_fu_1110_weight_buffer_15_0_ce0,
        weight_buffer_15_0_q0 => grp_compute4_fu_1110_weight_buffer_15_0_q0,
        weight_buffer_15_1_address0 => grp_compute4_fu_1110_weight_buffer_15_1_address0,
        weight_buffer_15_1_ce0 => grp_compute4_fu_1110_weight_buffer_15_1_ce0,
        weight_buffer_15_1_q0 => grp_compute4_fu_1110_weight_buffer_15_1_q0,
        weight_buffer_15_2_address0 => grp_compute4_fu_1110_weight_buffer_15_2_address0,
        weight_buffer_15_2_ce0 => grp_compute4_fu_1110_weight_buffer_15_2_ce0,
        weight_buffer_15_2_q0 => grp_compute4_fu_1110_weight_buffer_15_2_q0,
        weight_buffer_15_3_address0 => grp_compute4_fu_1110_weight_buffer_15_3_address0,
        weight_buffer_15_3_ce0 => grp_compute4_fu_1110_weight_buffer_15_3_ce0,
        weight_buffer_15_3_q0 => grp_compute4_fu_1110_weight_buffer_15_3_q0,
        weight_buffer_16_0_address0 => grp_compute4_fu_1110_weight_buffer_16_0_address0,
        weight_buffer_16_0_ce0 => grp_compute4_fu_1110_weight_buffer_16_0_ce0,
        weight_buffer_16_0_q0 => grp_compute4_fu_1110_weight_buffer_16_0_q0,
        weight_buffer_16_1_address0 => grp_compute4_fu_1110_weight_buffer_16_1_address0,
        weight_buffer_16_1_ce0 => grp_compute4_fu_1110_weight_buffer_16_1_ce0,
        weight_buffer_16_1_q0 => grp_compute4_fu_1110_weight_buffer_16_1_q0,
        weight_buffer_16_2_address0 => grp_compute4_fu_1110_weight_buffer_16_2_address0,
        weight_buffer_16_2_ce0 => grp_compute4_fu_1110_weight_buffer_16_2_ce0,
        weight_buffer_16_2_q0 => grp_compute4_fu_1110_weight_buffer_16_2_q0,
        weight_buffer_16_3_address0 => grp_compute4_fu_1110_weight_buffer_16_3_address0,
        weight_buffer_16_3_ce0 => grp_compute4_fu_1110_weight_buffer_16_3_ce0,
        weight_buffer_16_3_q0 => grp_compute4_fu_1110_weight_buffer_16_3_q0,
        weight_buffer_17_0_address0 => grp_compute4_fu_1110_weight_buffer_17_0_address0,
        weight_buffer_17_0_ce0 => grp_compute4_fu_1110_weight_buffer_17_0_ce0,
        weight_buffer_17_0_q0 => grp_compute4_fu_1110_weight_buffer_17_0_q0,
        weight_buffer_17_1_address0 => grp_compute4_fu_1110_weight_buffer_17_1_address0,
        weight_buffer_17_1_ce0 => grp_compute4_fu_1110_weight_buffer_17_1_ce0,
        weight_buffer_17_1_q0 => grp_compute4_fu_1110_weight_buffer_17_1_q0,
        weight_buffer_17_2_address0 => grp_compute4_fu_1110_weight_buffer_17_2_address0,
        weight_buffer_17_2_ce0 => grp_compute4_fu_1110_weight_buffer_17_2_ce0,
        weight_buffer_17_2_q0 => grp_compute4_fu_1110_weight_buffer_17_2_q0,
        weight_buffer_17_3_address0 => grp_compute4_fu_1110_weight_buffer_17_3_address0,
        weight_buffer_17_3_ce0 => grp_compute4_fu_1110_weight_buffer_17_3_ce0,
        weight_buffer_17_3_q0 => grp_compute4_fu_1110_weight_buffer_17_3_q0,
        weight_buffer_18_0_address0 => grp_compute4_fu_1110_weight_buffer_18_0_address0,
        weight_buffer_18_0_ce0 => grp_compute4_fu_1110_weight_buffer_18_0_ce0,
        weight_buffer_18_0_q0 => grp_compute4_fu_1110_weight_buffer_18_0_q0,
        weight_buffer_18_1_address0 => grp_compute4_fu_1110_weight_buffer_18_1_address0,
        weight_buffer_18_1_ce0 => grp_compute4_fu_1110_weight_buffer_18_1_ce0,
        weight_buffer_18_1_q0 => grp_compute4_fu_1110_weight_buffer_18_1_q0,
        weight_buffer_18_2_address0 => grp_compute4_fu_1110_weight_buffer_18_2_address0,
        weight_buffer_18_2_ce0 => grp_compute4_fu_1110_weight_buffer_18_2_ce0,
        weight_buffer_18_2_q0 => grp_compute4_fu_1110_weight_buffer_18_2_q0,
        weight_buffer_18_3_address0 => grp_compute4_fu_1110_weight_buffer_18_3_address0,
        weight_buffer_18_3_ce0 => grp_compute4_fu_1110_weight_buffer_18_3_ce0,
        weight_buffer_18_3_q0 => grp_compute4_fu_1110_weight_buffer_18_3_q0,
        weight_buffer_19_0_address0 => grp_compute4_fu_1110_weight_buffer_19_0_address0,
        weight_buffer_19_0_ce0 => grp_compute4_fu_1110_weight_buffer_19_0_ce0,
        weight_buffer_19_0_q0 => grp_compute4_fu_1110_weight_buffer_19_0_q0,
        weight_buffer_19_1_address0 => grp_compute4_fu_1110_weight_buffer_19_1_address0,
        weight_buffer_19_1_ce0 => grp_compute4_fu_1110_weight_buffer_19_1_ce0,
        weight_buffer_19_1_q0 => grp_compute4_fu_1110_weight_buffer_19_1_q0,
        weight_buffer_19_2_address0 => grp_compute4_fu_1110_weight_buffer_19_2_address0,
        weight_buffer_19_2_ce0 => grp_compute4_fu_1110_weight_buffer_19_2_ce0,
        weight_buffer_19_2_q0 => grp_compute4_fu_1110_weight_buffer_19_2_q0,
        weight_buffer_19_3_address0 => grp_compute4_fu_1110_weight_buffer_19_3_address0,
        weight_buffer_19_3_ce0 => grp_compute4_fu_1110_weight_buffer_19_3_ce0,
        weight_buffer_19_3_q0 => grp_compute4_fu_1110_weight_buffer_19_3_q0,
        weight_buffer_20_0_address0 => grp_compute4_fu_1110_weight_buffer_20_0_address0,
        weight_buffer_20_0_ce0 => grp_compute4_fu_1110_weight_buffer_20_0_ce0,
        weight_buffer_20_0_q0 => grp_compute4_fu_1110_weight_buffer_20_0_q0,
        weight_buffer_20_1_address0 => grp_compute4_fu_1110_weight_buffer_20_1_address0,
        weight_buffer_20_1_ce0 => grp_compute4_fu_1110_weight_buffer_20_1_ce0,
        weight_buffer_20_1_q0 => grp_compute4_fu_1110_weight_buffer_20_1_q0,
        weight_buffer_20_2_address0 => grp_compute4_fu_1110_weight_buffer_20_2_address0,
        weight_buffer_20_2_ce0 => grp_compute4_fu_1110_weight_buffer_20_2_ce0,
        weight_buffer_20_2_q0 => grp_compute4_fu_1110_weight_buffer_20_2_q0,
        weight_buffer_20_3_address0 => grp_compute4_fu_1110_weight_buffer_20_3_address0,
        weight_buffer_20_3_ce0 => grp_compute4_fu_1110_weight_buffer_20_3_ce0,
        weight_buffer_20_3_q0 => grp_compute4_fu_1110_weight_buffer_20_3_q0,
        weight_buffer_21_0_address0 => grp_compute4_fu_1110_weight_buffer_21_0_address0,
        weight_buffer_21_0_ce0 => grp_compute4_fu_1110_weight_buffer_21_0_ce0,
        weight_buffer_21_0_q0 => grp_compute4_fu_1110_weight_buffer_21_0_q0,
        weight_buffer_21_1_address0 => grp_compute4_fu_1110_weight_buffer_21_1_address0,
        weight_buffer_21_1_ce0 => grp_compute4_fu_1110_weight_buffer_21_1_ce0,
        weight_buffer_21_1_q0 => grp_compute4_fu_1110_weight_buffer_21_1_q0,
        weight_buffer_21_2_address0 => grp_compute4_fu_1110_weight_buffer_21_2_address0,
        weight_buffer_21_2_ce0 => grp_compute4_fu_1110_weight_buffer_21_2_ce0,
        weight_buffer_21_2_q0 => grp_compute4_fu_1110_weight_buffer_21_2_q0,
        weight_buffer_21_3_address0 => grp_compute4_fu_1110_weight_buffer_21_3_address0,
        weight_buffer_21_3_ce0 => grp_compute4_fu_1110_weight_buffer_21_3_ce0,
        weight_buffer_21_3_q0 => grp_compute4_fu_1110_weight_buffer_21_3_q0,
        weight_buffer_22_0_address0 => grp_compute4_fu_1110_weight_buffer_22_0_address0,
        weight_buffer_22_0_ce0 => grp_compute4_fu_1110_weight_buffer_22_0_ce0,
        weight_buffer_22_0_q0 => grp_compute4_fu_1110_weight_buffer_22_0_q0,
        weight_buffer_22_1_address0 => grp_compute4_fu_1110_weight_buffer_22_1_address0,
        weight_buffer_22_1_ce0 => grp_compute4_fu_1110_weight_buffer_22_1_ce0,
        weight_buffer_22_1_q0 => grp_compute4_fu_1110_weight_buffer_22_1_q0,
        weight_buffer_22_2_address0 => grp_compute4_fu_1110_weight_buffer_22_2_address0,
        weight_buffer_22_2_ce0 => grp_compute4_fu_1110_weight_buffer_22_2_ce0,
        weight_buffer_22_2_q0 => grp_compute4_fu_1110_weight_buffer_22_2_q0,
        weight_buffer_22_3_address0 => grp_compute4_fu_1110_weight_buffer_22_3_address0,
        weight_buffer_22_3_ce0 => grp_compute4_fu_1110_weight_buffer_22_3_ce0,
        weight_buffer_22_3_q0 => grp_compute4_fu_1110_weight_buffer_22_3_q0,
        weight_buffer_23_0_address0 => grp_compute4_fu_1110_weight_buffer_23_0_address0,
        weight_buffer_23_0_ce0 => grp_compute4_fu_1110_weight_buffer_23_0_ce0,
        weight_buffer_23_0_q0 => grp_compute4_fu_1110_weight_buffer_23_0_q0,
        weight_buffer_23_1_address0 => grp_compute4_fu_1110_weight_buffer_23_1_address0,
        weight_buffer_23_1_ce0 => grp_compute4_fu_1110_weight_buffer_23_1_ce0,
        weight_buffer_23_1_q0 => grp_compute4_fu_1110_weight_buffer_23_1_q0,
        weight_buffer_23_2_address0 => grp_compute4_fu_1110_weight_buffer_23_2_address0,
        weight_buffer_23_2_ce0 => grp_compute4_fu_1110_weight_buffer_23_2_ce0,
        weight_buffer_23_2_q0 => grp_compute4_fu_1110_weight_buffer_23_2_q0,
        weight_buffer_23_3_address0 => grp_compute4_fu_1110_weight_buffer_23_3_address0,
        weight_buffer_23_3_ce0 => grp_compute4_fu_1110_weight_buffer_23_3_ce0,
        weight_buffer_23_3_q0 => grp_compute4_fu_1110_weight_buffer_23_3_q0,
        weight_buffer_24_0_address0 => grp_compute4_fu_1110_weight_buffer_24_0_address0,
        weight_buffer_24_0_ce0 => grp_compute4_fu_1110_weight_buffer_24_0_ce0,
        weight_buffer_24_0_q0 => grp_compute4_fu_1110_weight_buffer_24_0_q0,
        weight_buffer_24_1_address0 => grp_compute4_fu_1110_weight_buffer_24_1_address0,
        weight_buffer_24_1_ce0 => grp_compute4_fu_1110_weight_buffer_24_1_ce0,
        weight_buffer_24_1_q0 => grp_compute4_fu_1110_weight_buffer_24_1_q0,
        weight_buffer_24_2_address0 => grp_compute4_fu_1110_weight_buffer_24_2_address0,
        weight_buffer_24_2_ce0 => grp_compute4_fu_1110_weight_buffer_24_2_ce0,
        weight_buffer_24_2_q0 => grp_compute4_fu_1110_weight_buffer_24_2_q0,
        weight_buffer_24_3_address0 => grp_compute4_fu_1110_weight_buffer_24_3_address0,
        weight_buffer_24_3_ce0 => grp_compute4_fu_1110_weight_buffer_24_3_ce0,
        weight_buffer_24_3_q0 => grp_compute4_fu_1110_weight_buffer_24_3_q0,
        weight_buffer_25_0_address0 => grp_compute4_fu_1110_weight_buffer_25_0_address0,
        weight_buffer_25_0_ce0 => grp_compute4_fu_1110_weight_buffer_25_0_ce0,
        weight_buffer_25_0_q0 => grp_compute4_fu_1110_weight_buffer_25_0_q0,
        weight_buffer_25_1_address0 => grp_compute4_fu_1110_weight_buffer_25_1_address0,
        weight_buffer_25_1_ce0 => grp_compute4_fu_1110_weight_buffer_25_1_ce0,
        weight_buffer_25_1_q0 => grp_compute4_fu_1110_weight_buffer_25_1_q0,
        weight_buffer_25_2_address0 => grp_compute4_fu_1110_weight_buffer_25_2_address0,
        weight_buffer_25_2_ce0 => grp_compute4_fu_1110_weight_buffer_25_2_ce0,
        weight_buffer_25_2_q0 => grp_compute4_fu_1110_weight_buffer_25_2_q0,
        weight_buffer_25_3_address0 => grp_compute4_fu_1110_weight_buffer_25_3_address0,
        weight_buffer_25_3_ce0 => grp_compute4_fu_1110_weight_buffer_25_3_ce0,
        weight_buffer_25_3_q0 => grp_compute4_fu_1110_weight_buffer_25_3_q0,
        weight_buffer_26_0_address0 => grp_compute4_fu_1110_weight_buffer_26_0_address0,
        weight_buffer_26_0_ce0 => grp_compute4_fu_1110_weight_buffer_26_0_ce0,
        weight_buffer_26_0_q0 => grp_compute4_fu_1110_weight_buffer_26_0_q0,
        weight_buffer_26_1_address0 => grp_compute4_fu_1110_weight_buffer_26_1_address0,
        weight_buffer_26_1_ce0 => grp_compute4_fu_1110_weight_buffer_26_1_ce0,
        weight_buffer_26_1_q0 => grp_compute4_fu_1110_weight_buffer_26_1_q0,
        weight_buffer_26_2_address0 => grp_compute4_fu_1110_weight_buffer_26_2_address0,
        weight_buffer_26_2_ce0 => grp_compute4_fu_1110_weight_buffer_26_2_ce0,
        weight_buffer_26_2_q0 => grp_compute4_fu_1110_weight_buffer_26_2_q0,
        weight_buffer_26_3_address0 => grp_compute4_fu_1110_weight_buffer_26_3_address0,
        weight_buffer_26_3_ce0 => grp_compute4_fu_1110_weight_buffer_26_3_ce0,
        weight_buffer_26_3_q0 => grp_compute4_fu_1110_weight_buffer_26_3_q0,
        weight_buffer_27_0_address0 => grp_compute4_fu_1110_weight_buffer_27_0_address0,
        weight_buffer_27_0_ce0 => grp_compute4_fu_1110_weight_buffer_27_0_ce0,
        weight_buffer_27_0_q0 => grp_compute4_fu_1110_weight_buffer_27_0_q0,
        weight_buffer_27_1_address0 => grp_compute4_fu_1110_weight_buffer_27_1_address0,
        weight_buffer_27_1_ce0 => grp_compute4_fu_1110_weight_buffer_27_1_ce0,
        weight_buffer_27_1_q0 => grp_compute4_fu_1110_weight_buffer_27_1_q0,
        weight_buffer_27_2_address0 => grp_compute4_fu_1110_weight_buffer_27_2_address0,
        weight_buffer_27_2_ce0 => grp_compute4_fu_1110_weight_buffer_27_2_ce0,
        weight_buffer_27_2_q0 => grp_compute4_fu_1110_weight_buffer_27_2_q0,
        weight_buffer_27_3_address0 => grp_compute4_fu_1110_weight_buffer_27_3_address0,
        weight_buffer_27_3_ce0 => grp_compute4_fu_1110_weight_buffer_27_3_ce0,
        weight_buffer_27_3_q0 => grp_compute4_fu_1110_weight_buffer_27_3_q0,
        weight_buffer_28_0_address0 => grp_compute4_fu_1110_weight_buffer_28_0_address0,
        weight_buffer_28_0_ce0 => grp_compute4_fu_1110_weight_buffer_28_0_ce0,
        weight_buffer_28_0_q0 => grp_compute4_fu_1110_weight_buffer_28_0_q0,
        weight_buffer_28_1_address0 => grp_compute4_fu_1110_weight_buffer_28_1_address0,
        weight_buffer_28_1_ce0 => grp_compute4_fu_1110_weight_buffer_28_1_ce0,
        weight_buffer_28_1_q0 => grp_compute4_fu_1110_weight_buffer_28_1_q0,
        weight_buffer_28_2_address0 => grp_compute4_fu_1110_weight_buffer_28_2_address0,
        weight_buffer_28_2_ce0 => grp_compute4_fu_1110_weight_buffer_28_2_ce0,
        weight_buffer_28_2_q0 => grp_compute4_fu_1110_weight_buffer_28_2_q0,
        weight_buffer_28_3_address0 => grp_compute4_fu_1110_weight_buffer_28_3_address0,
        weight_buffer_28_3_ce0 => grp_compute4_fu_1110_weight_buffer_28_3_ce0,
        weight_buffer_28_3_q0 => grp_compute4_fu_1110_weight_buffer_28_3_q0,
        weight_buffer_29_0_address0 => grp_compute4_fu_1110_weight_buffer_29_0_address0,
        weight_buffer_29_0_ce0 => grp_compute4_fu_1110_weight_buffer_29_0_ce0,
        weight_buffer_29_0_q0 => grp_compute4_fu_1110_weight_buffer_29_0_q0,
        weight_buffer_29_1_address0 => grp_compute4_fu_1110_weight_buffer_29_1_address0,
        weight_buffer_29_1_ce0 => grp_compute4_fu_1110_weight_buffer_29_1_ce0,
        weight_buffer_29_1_q0 => grp_compute4_fu_1110_weight_buffer_29_1_q0,
        weight_buffer_29_2_address0 => grp_compute4_fu_1110_weight_buffer_29_2_address0,
        weight_buffer_29_2_ce0 => grp_compute4_fu_1110_weight_buffer_29_2_ce0,
        weight_buffer_29_2_q0 => grp_compute4_fu_1110_weight_buffer_29_2_q0,
        weight_buffer_29_3_address0 => grp_compute4_fu_1110_weight_buffer_29_3_address0,
        weight_buffer_29_3_ce0 => grp_compute4_fu_1110_weight_buffer_29_3_ce0,
        weight_buffer_29_3_q0 => grp_compute4_fu_1110_weight_buffer_29_3_q0,
        weight_buffer_30_0_address0 => grp_compute4_fu_1110_weight_buffer_30_0_address0,
        weight_buffer_30_0_ce0 => grp_compute4_fu_1110_weight_buffer_30_0_ce0,
        weight_buffer_30_0_q0 => grp_compute4_fu_1110_weight_buffer_30_0_q0,
        weight_buffer_30_1_address0 => grp_compute4_fu_1110_weight_buffer_30_1_address0,
        weight_buffer_30_1_ce0 => grp_compute4_fu_1110_weight_buffer_30_1_ce0,
        weight_buffer_30_1_q0 => grp_compute4_fu_1110_weight_buffer_30_1_q0,
        weight_buffer_30_2_address0 => grp_compute4_fu_1110_weight_buffer_30_2_address0,
        weight_buffer_30_2_ce0 => grp_compute4_fu_1110_weight_buffer_30_2_ce0,
        weight_buffer_30_2_q0 => grp_compute4_fu_1110_weight_buffer_30_2_q0,
        weight_buffer_30_3_address0 => grp_compute4_fu_1110_weight_buffer_30_3_address0,
        weight_buffer_30_3_ce0 => grp_compute4_fu_1110_weight_buffer_30_3_ce0,
        weight_buffer_30_3_q0 => grp_compute4_fu_1110_weight_buffer_30_3_q0,
        weight_buffer_31_0_address0 => grp_compute4_fu_1110_weight_buffer_31_0_address0,
        weight_buffer_31_0_ce0 => grp_compute4_fu_1110_weight_buffer_31_0_ce0,
        weight_buffer_31_0_q0 => grp_compute4_fu_1110_weight_buffer_31_0_q0,
        weight_buffer_31_1_address0 => grp_compute4_fu_1110_weight_buffer_31_1_address0,
        weight_buffer_31_1_ce0 => grp_compute4_fu_1110_weight_buffer_31_1_ce0,
        weight_buffer_31_1_q0 => grp_compute4_fu_1110_weight_buffer_31_1_q0,
        weight_buffer_31_2_address0 => grp_compute4_fu_1110_weight_buffer_31_2_address0,
        weight_buffer_31_2_ce0 => grp_compute4_fu_1110_weight_buffer_31_2_ce0,
        weight_buffer_31_2_q0 => grp_compute4_fu_1110_weight_buffer_31_2_q0,
        weight_buffer_31_3_address0 => grp_compute4_fu_1110_weight_buffer_31_3_address0,
        weight_buffer_31_3_ce0 => grp_compute4_fu_1110_weight_buffer_31_3_ce0,
        weight_buffer_31_3_q0 => grp_compute4_fu_1110_weight_buffer_31_3_q0,
        beta_buffer_address0 => grp_compute4_fu_1110_beta_buffer_address0,
        beta_buffer_ce0 => grp_compute4_fu_1110_beta_buffer_ce0,
        beta_buffer_q0 => beta_buffer_q0,
        p_read => grp_compute4_fu_1110_p_read,
        Kernel_size => Kernel_size,
        TMP_M => TMP_M,
        TM_MIN => TM_MIN,
        TR_MIN => TR_MIN,
        TC_MIN => TC_MIN,
        enable => grp_compute4_fu_1110_enable,
        InterSubBeta => InterSubBeta,
        WeightAddInputSubInter => WeightAddInputSubInter);

    grp_copy_input_weight_fu_1649 : component copy_input_weight
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_copy_input_weight_fu_1649_ap_start,
        ap_done => grp_copy_input_weight_fu_1649_ap_done,
        ap_idle => grp_copy_input_weight_fu_1649_ap_idle,
        ap_ready => grp_copy_input_weight_fu_1649_ap_ready,
        m_axi_input_r_AWVALID => grp_copy_input_weight_fu_1649_m_axi_input_r_AWVALID,
        m_axi_input_r_AWREADY => ap_const_logic_0,
        m_axi_input_r_AWADDR => grp_copy_input_weight_fu_1649_m_axi_input_r_AWADDR,
        m_axi_input_r_AWID => grp_copy_input_weight_fu_1649_m_axi_input_r_AWID,
        m_axi_input_r_AWLEN => grp_copy_input_weight_fu_1649_m_axi_input_r_AWLEN,
        m_axi_input_r_AWSIZE => grp_copy_input_weight_fu_1649_m_axi_input_r_AWSIZE,
        m_axi_input_r_AWBURST => grp_copy_input_weight_fu_1649_m_axi_input_r_AWBURST,
        m_axi_input_r_AWLOCK => grp_copy_input_weight_fu_1649_m_axi_input_r_AWLOCK,
        m_axi_input_r_AWCACHE => grp_copy_input_weight_fu_1649_m_axi_input_r_AWCACHE,
        m_axi_input_r_AWPROT => grp_copy_input_weight_fu_1649_m_axi_input_r_AWPROT,
        m_axi_input_r_AWQOS => grp_copy_input_weight_fu_1649_m_axi_input_r_AWQOS,
        m_axi_input_r_AWREGION => grp_copy_input_weight_fu_1649_m_axi_input_r_AWREGION,
        m_axi_input_r_AWUSER => grp_copy_input_weight_fu_1649_m_axi_input_r_AWUSER,
        m_axi_input_r_WVALID => grp_copy_input_weight_fu_1649_m_axi_input_r_WVALID,
        m_axi_input_r_WREADY => ap_const_logic_0,
        m_axi_input_r_WDATA => grp_copy_input_weight_fu_1649_m_axi_input_r_WDATA,
        m_axi_input_r_WSTRB => grp_copy_input_weight_fu_1649_m_axi_input_r_WSTRB,
        m_axi_input_r_WLAST => grp_copy_input_weight_fu_1649_m_axi_input_r_WLAST,
        m_axi_input_r_WID => grp_copy_input_weight_fu_1649_m_axi_input_r_WID,
        m_axi_input_r_WUSER => grp_copy_input_weight_fu_1649_m_axi_input_r_WUSER,
        m_axi_input_r_ARVALID => grp_copy_input_weight_fu_1649_m_axi_input_r_ARVALID,
        m_axi_input_r_ARREADY => m_axi_Input_r_ARREADY,
        m_axi_input_r_ARADDR => grp_copy_input_weight_fu_1649_m_axi_input_r_ARADDR,
        m_axi_input_r_ARID => grp_copy_input_weight_fu_1649_m_axi_input_r_ARID,
        m_axi_input_r_ARLEN => grp_copy_input_weight_fu_1649_m_axi_input_r_ARLEN,
        m_axi_input_r_ARSIZE => grp_copy_input_weight_fu_1649_m_axi_input_r_ARSIZE,
        m_axi_input_r_ARBURST => grp_copy_input_weight_fu_1649_m_axi_input_r_ARBURST,
        m_axi_input_r_ARLOCK => grp_copy_input_weight_fu_1649_m_axi_input_r_ARLOCK,
        m_axi_input_r_ARCACHE => grp_copy_input_weight_fu_1649_m_axi_input_r_ARCACHE,
        m_axi_input_r_ARPROT => grp_copy_input_weight_fu_1649_m_axi_input_r_ARPROT,
        m_axi_input_r_ARQOS => grp_copy_input_weight_fu_1649_m_axi_input_r_ARQOS,
        m_axi_input_r_ARREGION => grp_copy_input_weight_fu_1649_m_axi_input_r_ARREGION,
        m_axi_input_r_ARUSER => grp_copy_input_weight_fu_1649_m_axi_input_r_ARUSER,
        m_axi_input_r_RVALID => m_axi_Input_r_RVALID,
        m_axi_input_r_RREADY => grp_copy_input_weight_fu_1649_m_axi_input_r_RREADY,
        m_axi_input_r_RDATA => m_axi_Input_r_RDATA,
        m_axi_input_r_RLAST => m_axi_Input_r_RLAST,
        m_axi_input_r_RID => m_axi_Input_r_RID,
        m_axi_input_r_RUSER => m_axi_Input_r_RUSER,
        m_axi_input_r_RRESP => m_axi_Input_r_RRESP,
        m_axi_input_r_BVALID => ap_const_logic_0,
        m_axi_input_r_BREADY => grp_copy_input_weight_fu_1649_m_axi_input_r_BREADY,
        m_axi_input_r_BRESP => ap_const_lv2_0,
        m_axi_input_r_BID => ap_const_lv1_0,
        m_axi_input_r_BUSER => ap_const_lv1_0,
        input_offset => Input_offset,
        m_axi_input1_AWVALID => grp_copy_input_weight_fu_1649_m_axi_input1_AWVALID,
        m_axi_input1_AWREADY => ap_const_logic_0,
        m_axi_input1_AWADDR => grp_copy_input_weight_fu_1649_m_axi_input1_AWADDR,
        m_axi_input1_AWID => grp_copy_input_weight_fu_1649_m_axi_input1_AWID,
        m_axi_input1_AWLEN => grp_copy_input_weight_fu_1649_m_axi_input1_AWLEN,
        m_axi_input1_AWSIZE => grp_copy_input_weight_fu_1649_m_axi_input1_AWSIZE,
        m_axi_input1_AWBURST => grp_copy_input_weight_fu_1649_m_axi_input1_AWBURST,
        m_axi_input1_AWLOCK => grp_copy_input_weight_fu_1649_m_axi_input1_AWLOCK,
        m_axi_input1_AWCACHE => grp_copy_input_weight_fu_1649_m_axi_input1_AWCACHE,
        m_axi_input1_AWPROT => grp_copy_input_weight_fu_1649_m_axi_input1_AWPROT,
        m_axi_input1_AWQOS => grp_copy_input_weight_fu_1649_m_axi_input1_AWQOS,
        m_axi_input1_AWREGION => grp_copy_input_weight_fu_1649_m_axi_input1_AWREGION,
        m_axi_input1_AWUSER => grp_copy_input_weight_fu_1649_m_axi_input1_AWUSER,
        m_axi_input1_WVALID => grp_copy_input_weight_fu_1649_m_axi_input1_WVALID,
        m_axi_input1_WREADY => ap_const_logic_0,
        m_axi_input1_WDATA => grp_copy_input_weight_fu_1649_m_axi_input1_WDATA,
        m_axi_input1_WSTRB => grp_copy_input_weight_fu_1649_m_axi_input1_WSTRB,
        m_axi_input1_WLAST => grp_copy_input_weight_fu_1649_m_axi_input1_WLAST,
        m_axi_input1_WID => grp_copy_input_weight_fu_1649_m_axi_input1_WID,
        m_axi_input1_WUSER => grp_copy_input_weight_fu_1649_m_axi_input1_WUSER,
        m_axi_input1_ARVALID => grp_copy_input_weight_fu_1649_m_axi_input1_ARVALID,
        m_axi_input1_ARREADY => m_axi_Input1_ARREADY,
        m_axi_input1_ARADDR => grp_copy_input_weight_fu_1649_m_axi_input1_ARADDR,
        m_axi_input1_ARID => grp_copy_input_weight_fu_1649_m_axi_input1_ARID,
        m_axi_input1_ARLEN => grp_copy_input_weight_fu_1649_m_axi_input1_ARLEN,
        m_axi_input1_ARSIZE => grp_copy_input_weight_fu_1649_m_axi_input1_ARSIZE,
        m_axi_input1_ARBURST => grp_copy_input_weight_fu_1649_m_axi_input1_ARBURST,
        m_axi_input1_ARLOCK => grp_copy_input_weight_fu_1649_m_axi_input1_ARLOCK,
        m_axi_input1_ARCACHE => grp_copy_input_weight_fu_1649_m_axi_input1_ARCACHE,
        m_axi_input1_ARPROT => grp_copy_input_weight_fu_1649_m_axi_input1_ARPROT,
        m_axi_input1_ARQOS => grp_copy_input_weight_fu_1649_m_axi_input1_ARQOS,
        m_axi_input1_ARREGION => grp_copy_input_weight_fu_1649_m_axi_input1_ARREGION,
        m_axi_input1_ARUSER => grp_copy_input_weight_fu_1649_m_axi_input1_ARUSER,
        m_axi_input1_RVALID => m_axi_Input1_RVALID,
        m_axi_input1_RREADY => grp_copy_input_weight_fu_1649_m_axi_input1_RREADY,
        m_axi_input1_RDATA => m_axi_Input1_RDATA,
        m_axi_input1_RLAST => m_axi_Input1_RLAST,
        m_axi_input1_RID => m_axi_Input1_RID,
        m_axi_input1_RUSER => m_axi_Input1_RUSER,
        m_axi_input1_RRESP => m_axi_Input1_RRESP,
        m_axi_input1_BVALID => ap_const_logic_0,
        m_axi_input1_BREADY => grp_copy_input_weight_fu_1649_m_axi_input1_BREADY,
        m_axi_input1_BRESP => ap_const_lv2_0,
        m_axi_input1_BID => ap_const_lv1_0,
        m_axi_input1_BUSER => ap_const_lv1_0,
        input1_offset => Input1_offset,
        m_axi_input2_AWVALID => grp_copy_input_weight_fu_1649_m_axi_input2_AWVALID,
        m_axi_input2_AWREADY => ap_const_logic_0,
        m_axi_input2_AWADDR => grp_copy_input_weight_fu_1649_m_axi_input2_AWADDR,
        m_axi_input2_AWID => grp_copy_input_weight_fu_1649_m_axi_input2_AWID,
        m_axi_input2_AWLEN => grp_copy_input_weight_fu_1649_m_axi_input2_AWLEN,
        m_axi_input2_AWSIZE => grp_copy_input_weight_fu_1649_m_axi_input2_AWSIZE,
        m_axi_input2_AWBURST => grp_copy_input_weight_fu_1649_m_axi_input2_AWBURST,
        m_axi_input2_AWLOCK => grp_copy_input_weight_fu_1649_m_axi_input2_AWLOCK,
        m_axi_input2_AWCACHE => grp_copy_input_weight_fu_1649_m_axi_input2_AWCACHE,
        m_axi_input2_AWPROT => grp_copy_input_weight_fu_1649_m_axi_input2_AWPROT,
        m_axi_input2_AWQOS => grp_copy_input_weight_fu_1649_m_axi_input2_AWQOS,
        m_axi_input2_AWREGION => grp_copy_input_weight_fu_1649_m_axi_input2_AWREGION,
        m_axi_input2_AWUSER => grp_copy_input_weight_fu_1649_m_axi_input2_AWUSER,
        m_axi_input2_WVALID => grp_copy_input_weight_fu_1649_m_axi_input2_WVALID,
        m_axi_input2_WREADY => ap_const_logic_0,
        m_axi_input2_WDATA => grp_copy_input_weight_fu_1649_m_axi_input2_WDATA,
        m_axi_input2_WSTRB => grp_copy_input_weight_fu_1649_m_axi_input2_WSTRB,
        m_axi_input2_WLAST => grp_copy_input_weight_fu_1649_m_axi_input2_WLAST,
        m_axi_input2_WID => grp_copy_input_weight_fu_1649_m_axi_input2_WID,
        m_axi_input2_WUSER => grp_copy_input_weight_fu_1649_m_axi_input2_WUSER,
        m_axi_input2_ARVALID => grp_copy_input_weight_fu_1649_m_axi_input2_ARVALID,
        m_axi_input2_ARREADY => m_axi_Input2_ARREADY,
        m_axi_input2_ARADDR => grp_copy_input_weight_fu_1649_m_axi_input2_ARADDR,
        m_axi_input2_ARID => grp_copy_input_weight_fu_1649_m_axi_input2_ARID,
        m_axi_input2_ARLEN => grp_copy_input_weight_fu_1649_m_axi_input2_ARLEN,
        m_axi_input2_ARSIZE => grp_copy_input_weight_fu_1649_m_axi_input2_ARSIZE,
        m_axi_input2_ARBURST => grp_copy_input_weight_fu_1649_m_axi_input2_ARBURST,
        m_axi_input2_ARLOCK => grp_copy_input_weight_fu_1649_m_axi_input2_ARLOCK,
        m_axi_input2_ARCACHE => grp_copy_input_weight_fu_1649_m_axi_input2_ARCACHE,
        m_axi_input2_ARPROT => grp_copy_input_weight_fu_1649_m_axi_input2_ARPROT,
        m_axi_input2_ARQOS => grp_copy_input_weight_fu_1649_m_axi_input2_ARQOS,
        m_axi_input2_ARREGION => grp_copy_input_weight_fu_1649_m_axi_input2_ARREGION,
        m_axi_input2_ARUSER => grp_copy_input_weight_fu_1649_m_axi_input2_ARUSER,
        m_axi_input2_RVALID => m_axi_Input2_RVALID,
        m_axi_input2_RREADY => grp_copy_input_weight_fu_1649_m_axi_input2_RREADY,
        m_axi_input2_RDATA => m_axi_Input2_RDATA,
        m_axi_input2_RLAST => m_axi_Input2_RLAST,
        m_axi_input2_RID => m_axi_Input2_RID,
        m_axi_input2_RUSER => m_axi_Input2_RUSER,
        m_axi_input2_RRESP => m_axi_Input2_RRESP,
        m_axi_input2_BVALID => ap_const_logic_0,
        m_axi_input2_BREADY => grp_copy_input_weight_fu_1649_m_axi_input2_BREADY,
        m_axi_input2_BRESP => ap_const_lv2_0,
        m_axi_input2_BID => ap_const_lv1_0,
        m_axi_input2_BUSER => ap_const_lv1_0,
        input2_offset => Input2_offset,
        m_axi_input3_AWVALID => grp_copy_input_weight_fu_1649_m_axi_input3_AWVALID,
        m_axi_input3_AWREADY => ap_const_logic_0,
        m_axi_input3_AWADDR => grp_copy_input_weight_fu_1649_m_axi_input3_AWADDR,
        m_axi_input3_AWID => grp_copy_input_weight_fu_1649_m_axi_input3_AWID,
        m_axi_input3_AWLEN => grp_copy_input_weight_fu_1649_m_axi_input3_AWLEN,
        m_axi_input3_AWSIZE => grp_copy_input_weight_fu_1649_m_axi_input3_AWSIZE,
        m_axi_input3_AWBURST => grp_copy_input_weight_fu_1649_m_axi_input3_AWBURST,
        m_axi_input3_AWLOCK => grp_copy_input_weight_fu_1649_m_axi_input3_AWLOCK,
        m_axi_input3_AWCACHE => grp_copy_input_weight_fu_1649_m_axi_input3_AWCACHE,
        m_axi_input3_AWPROT => grp_copy_input_weight_fu_1649_m_axi_input3_AWPROT,
        m_axi_input3_AWQOS => grp_copy_input_weight_fu_1649_m_axi_input3_AWQOS,
        m_axi_input3_AWREGION => grp_copy_input_weight_fu_1649_m_axi_input3_AWREGION,
        m_axi_input3_AWUSER => grp_copy_input_weight_fu_1649_m_axi_input3_AWUSER,
        m_axi_input3_WVALID => grp_copy_input_weight_fu_1649_m_axi_input3_WVALID,
        m_axi_input3_WREADY => ap_const_logic_0,
        m_axi_input3_WDATA => grp_copy_input_weight_fu_1649_m_axi_input3_WDATA,
        m_axi_input3_WSTRB => grp_copy_input_weight_fu_1649_m_axi_input3_WSTRB,
        m_axi_input3_WLAST => grp_copy_input_weight_fu_1649_m_axi_input3_WLAST,
        m_axi_input3_WID => grp_copy_input_weight_fu_1649_m_axi_input3_WID,
        m_axi_input3_WUSER => grp_copy_input_weight_fu_1649_m_axi_input3_WUSER,
        m_axi_input3_ARVALID => grp_copy_input_weight_fu_1649_m_axi_input3_ARVALID,
        m_axi_input3_ARREADY => m_axi_Input3_ARREADY,
        m_axi_input3_ARADDR => grp_copy_input_weight_fu_1649_m_axi_input3_ARADDR,
        m_axi_input3_ARID => grp_copy_input_weight_fu_1649_m_axi_input3_ARID,
        m_axi_input3_ARLEN => grp_copy_input_weight_fu_1649_m_axi_input3_ARLEN,
        m_axi_input3_ARSIZE => grp_copy_input_weight_fu_1649_m_axi_input3_ARSIZE,
        m_axi_input3_ARBURST => grp_copy_input_weight_fu_1649_m_axi_input3_ARBURST,
        m_axi_input3_ARLOCK => grp_copy_input_weight_fu_1649_m_axi_input3_ARLOCK,
        m_axi_input3_ARCACHE => grp_copy_input_weight_fu_1649_m_axi_input3_ARCACHE,
        m_axi_input3_ARPROT => grp_copy_input_weight_fu_1649_m_axi_input3_ARPROT,
        m_axi_input3_ARQOS => grp_copy_input_weight_fu_1649_m_axi_input3_ARQOS,
        m_axi_input3_ARREGION => grp_copy_input_weight_fu_1649_m_axi_input3_ARREGION,
        m_axi_input3_ARUSER => grp_copy_input_weight_fu_1649_m_axi_input3_ARUSER,
        m_axi_input3_RVALID => m_axi_Input3_RVALID,
        m_axi_input3_RREADY => grp_copy_input_weight_fu_1649_m_axi_input3_RREADY,
        m_axi_input3_RDATA => m_axi_Input3_RDATA,
        m_axi_input3_RLAST => m_axi_Input3_RLAST,
        m_axi_input3_RID => m_axi_Input3_RID,
        m_axi_input3_RUSER => m_axi_Input3_RUSER,
        m_axi_input3_RRESP => m_axi_Input3_RRESP,
        m_axi_input3_BVALID => ap_const_logic_0,
        m_axi_input3_BREADY => grp_copy_input_weight_fu_1649_m_axi_input3_BREADY,
        m_axi_input3_BRESP => ap_const_lv2_0,
        m_axi_input3_BID => ap_const_lv1_0,
        m_axi_input3_BUSER => ap_const_lv1_0,
        input3_offset => Input3_offset,
        m_axi_Weight_AWVALID => grp_copy_input_weight_fu_1649_m_axi_Weight_AWVALID,
        m_axi_Weight_AWREADY => ap_const_logic_0,
        m_axi_Weight_AWADDR => grp_copy_input_weight_fu_1649_m_axi_Weight_AWADDR,
        m_axi_Weight_AWID => grp_copy_input_weight_fu_1649_m_axi_Weight_AWID,
        m_axi_Weight_AWLEN => grp_copy_input_weight_fu_1649_m_axi_Weight_AWLEN,
        m_axi_Weight_AWSIZE => grp_copy_input_weight_fu_1649_m_axi_Weight_AWSIZE,
        m_axi_Weight_AWBURST => grp_copy_input_weight_fu_1649_m_axi_Weight_AWBURST,
        m_axi_Weight_AWLOCK => grp_copy_input_weight_fu_1649_m_axi_Weight_AWLOCK,
        m_axi_Weight_AWCACHE => grp_copy_input_weight_fu_1649_m_axi_Weight_AWCACHE,
        m_axi_Weight_AWPROT => grp_copy_input_weight_fu_1649_m_axi_Weight_AWPROT,
        m_axi_Weight_AWQOS => grp_copy_input_weight_fu_1649_m_axi_Weight_AWQOS,
        m_axi_Weight_AWREGION => grp_copy_input_weight_fu_1649_m_axi_Weight_AWREGION,
        m_axi_Weight_AWUSER => grp_copy_input_weight_fu_1649_m_axi_Weight_AWUSER,
        m_axi_Weight_WVALID => grp_copy_input_weight_fu_1649_m_axi_Weight_WVALID,
        m_axi_Weight_WREADY => ap_const_logic_0,
        m_axi_Weight_WDATA => grp_copy_input_weight_fu_1649_m_axi_Weight_WDATA,
        m_axi_Weight_WSTRB => grp_copy_input_weight_fu_1649_m_axi_Weight_WSTRB,
        m_axi_Weight_WLAST => grp_copy_input_weight_fu_1649_m_axi_Weight_WLAST,
        m_axi_Weight_WID => grp_copy_input_weight_fu_1649_m_axi_Weight_WID,
        m_axi_Weight_WUSER => grp_copy_input_weight_fu_1649_m_axi_Weight_WUSER,
        m_axi_Weight_ARVALID => grp_copy_input_weight_fu_1649_m_axi_Weight_ARVALID,
        m_axi_Weight_ARREADY => m_axi_Weight_ARREADY,
        m_axi_Weight_ARADDR => grp_copy_input_weight_fu_1649_m_axi_Weight_ARADDR,
        m_axi_Weight_ARID => grp_copy_input_weight_fu_1649_m_axi_Weight_ARID,
        m_axi_Weight_ARLEN => grp_copy_input_weight_fu_1649_m_axi_Weight_ARLEN,
        m_axi_Weight_ARSIZE => grp_copy_input_weight_fu_1649_m_axi_Weight_ARSIZE,
        m_axi_Weight_ARBURST => grp_copy_input_weight_fu_1649_m_axi_Weight_ARBURST,
        m_axi_Weight_ARLOCK => grp_copy_input_weight_fu_1649_m_axi_Weight_ARLOCK,
        m_axi_Weight_ARCACHE => grp_copy_input_weight_fu_1649_m_axi_Weight_ARCACHE,
        m_axi_Weight_ARPROT => grp_copy_input_weight_fu_1649_m_axi_Weight_ARPROT,
        m_axi_Weight_ARQOS => grp_copy_input_weight_fu_1649_m_axi_Weight_ARQOS,
        m_axi_Weight_ARREGION => grp_copy_input_weight_fu_1649_m_axi_Weight_ARREGION,
        m_axi_Weight_ARUSER => grp_copy_input_weight_fu_1649_m_axi_Weight_ARUSER,
        m_axi_Weight_RVALID => m_axi_Weight_RVALID,
        m_axi_Weight_RREADY => grp_copy_input_weight_fu_1649_m_axi_Weight_RREADY,
        m_axi_Weight_RDATA => m_axi_Weight_RDATA,
        m_axi_Weight_RLAST => m_axi_Weight_RLAST,
        m_axi_Weight_RID => m_axi_Weight_RID,
        m_axi_Weight_RUSER => m_axi_Weight_RUSER,
        m_axi_Weight_RRESP => m_axi_Weight_RRESP,
        m_axi_Weight_BVALID => ap_const_logic_0,
        m_axi_Weight_BREADY => grp_copy_input_weight_fu_1649_m_axi_Weight_BREADY,
        m_axi_Weight_BRESP => ap_const_lv2_0,
        m_axi_Weight_BID => ap_const_lv1_0,
        m_axi_Weight_BUSER => ap_const_lv1_0,
        Weight_offset => Weight_offset,
        InFM_num => InFM_num,
        Input_w => Input_w,
        Input_h => Input_h,
        Kernel_size => Kernel_size,
        Kernel_stride => Kernel_stride,
        r => TMP_R,
        c => TMP_C,
        m => TMP_M,
        n => grp_copy_input_weight_fu_1649_n,
        TM_MIN => TM_MIN,
        TN => grp_copy_input_weight_fu_1649_TN,
        TRow => TRow,
        TCol => TCol,
        Padding => grp_copy_input_weight_fu_1649_Padding,
        input_buffer_0_address0 => grp_copy_input_weight_fu_1649_input_buffer_0_address0,
        input_buffer_0_ce0 => grp_copy_input_weight_fu_1649_input_buffer_0_ce0,
        input_buffer_0_we0 => grp_copy_input_weight_fu_1649_input_buffer_0_we0,
        input_buffer_0_d0 => grp_copy_input_weight_fu_1649_input_buffer_0_d0,
        input_buffer_1_address0 => grp_copy_input_weight_fu_1649_input_buffer_1_address0,
        input_buffer_1_ce0 => grp_copy_input_weight_fu_1649_input_buffer_1_ce0,
        input_buffer_1_we0 => grp_copy_input_weight_fu_1649_input_buffer_1_we0,
        input_buffer_1_d0 => grp_copy_input_weight_fu_1649_input_buffer_1_d0,
        input_buffer_2_address0 => grp_copy_input_weight_fu_1649_input_buffer_2_address0,
        input_buffer_2_ce0 => grp_copy_input_weight_fu_1649_input_buffer_2_ce0,
        input_buffer_2_we0 => grp_copy_input_weight_fu_1649_input_buffer_2_we0,
        input_buffer_2_d0 => grp_copy_input_weight_fu_1649_input_buffer_2_d0,
        input_buffer_3_address0 => grp_copy_input_weight_fu_1649_input_buffer_3_address0,
        input_buffer_3_ce0 => grp_copy_input_weight_fu_1649_input_buffer_3_ce0,
        input_buffer_3_we0 => grp_copy_input_weight_fu_1649_input_buffer_3_we0,
        input_buffer_3_d0 => grp_copy_input_weight_fu_1649_input_buffer_3_d0,
        weight_buffer_0_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_0_0_address0,
        weight_buffer_0_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_0_0_ce0,
        weight_buffer_0_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_0_0_we0,
        weight_buffer_0_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_0_d0,
        weight_buffer_0_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_0_1_address0,
        weight_buffer_0_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_0_1_ce0,
        weight_buffer_0_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_0_1_we0,
        weight_buffer_0_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_1_d0,
        weight_buffer_0_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_0_2_address0,
        weight_buffer_0_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_0_2_ce0,
        weight_buffer_0_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_0_2_we0,
        weight_buffer_0_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_2_d0,
        weight_buffer_0_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_0_3_address0,
        weight_buffer_0_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_0_3_ce0,
        weight_buffer_0_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_0_3_we0,
        weight_buffer_0_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_0_3_d0,
        weight_buffer_1_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_1_0_address0,
        weight_buffer_1_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_1_0_ce0,
        weight_buffer_1_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_1_0_we0,
        weight_buffer_1_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_0_d0,
        weight_buffer_1_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_1_1_address0,
        weight_buffer_1_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_1_1_ce0,
        weight_buffer_1_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_1_1_we0,
        weight_buffer_1_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_1_d0,
        weight_buffer_1_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_1_2_address0,
        weight_buffer_1_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_1_2_ce0,
        weight_buffer_1_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_1_2_we0,
        weight_buffer_1_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_2_d0,
        weight_buffer_1_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_1_3_address0,
        weight_buffer_1_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_1_3_ce0,
        weight_buffer_1_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_1_3_we0,
        weight_buffer_1_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_1_3_d0,
        weight_buffer_2_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_2_0_address0,
        weight_buffer_2_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_2_0_ce0,
        weight_buffer_2_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_2_0_we0,
        weight_buffer_2_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_0_d0,
        weight_buffer_2_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_2_1_address0,
        weight_buffer_2_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_2_1_ce0,
        weight_buffer_2_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_2_1_we0,
        weight_buffer_2_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_1_d0,
        weight_buffer_2_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_2_2_address0,
        weight_buffer_2_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_2_2_ce0,
        weight_buffer_2_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_2_2_we0,
        weight_buffer_2_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_2_d0,
        weight_buffer_2_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_2_3_address0,
        weight_buffer_2_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_2_3_ce0,
        weight_buffer_2_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_2_3_we0,
        weight_buffer_2_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_2_3_d0,
        weight_buffer_3_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_3_0_address0,
        weight_buffer_3_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_3_0_ce0,
        weight_buffer_3_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_3_0_we0,
        weight_buffer_3_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_0_d0,
        weight_buffer_3_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_3_1_address0,
        weight_buffer_3_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_3_1_ce0,
        weight_buffer_3_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_3_1_we0,
        weight_buffer_3_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_1_d0,
        weight_buffer_3_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_3_2_address0,
        weight_buffer_3_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_3_2_ce0,
        weight_buffer_3_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_3_2_we0,
        weight_buffer_3_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_2_d0,
        weight_buffer_3_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_3_3_address0,
        weight_buffer_3_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_3_3_ce0,
        weight_buffer_3_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_3_3_we0,
        weight_buffer_3_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_3_3_d0,
        weight_buffer_4_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_4_0_address0,
        weight_buffer_4_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_4_0_ce0,
        weight_buffer_4_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_4_0_we0,
        weight_buffer_4_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_0_d0,
        weight_buffer_4_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_4_1_address0,
        weight_buffer_4_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_4_1_ce0,
        weight_buffer_4_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_4_1_we0,
        weight_buffer_4_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_1_d0,
        weight_buffer_4_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_4_2_address0,
        weight_buffer_4_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_4_2_ce0,
        weight_buffer_4_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_4_2_we0,
        weight_buffer_4_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_2_d0,
        weight_buffer_4_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_4_3_address0,
        weight_buffer_4_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_4_3_ce0,
        weight_buffer_4_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_4_3_we0,
        weight_buffer_4_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_4_3_d0,
        weight_buffer_5_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_5_0_address0,
        weight_buffer_5_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_5_0_ce0,
        weight_buffer_5_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_5_0_we0,
        weight_buffer_5_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_0_d0,
        weight_buffer_5_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_5_1_address0,
        weight_buffer_5_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_5_1_ce0,
        weight_buffer_5_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_5_1_we0,
        weight_buffer_5_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_1_d0,
        weight_buffer_5_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_5_2_address0,
        weight_buffer_5_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_5_2_ce0,
        weight_buffer_5_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_5_2_we0,
        weight_buffer_5_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_2_d0,
        weight_buffer_5_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_5_3_address0,
        weight_buffer_5_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_5_3_ce0,
        weight_buffer_5_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_5_3_we0,
        weight_buffer_5_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_5_3_d0,
        weight_buffer_6_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_6_0_address0,
        weight_buffer_6_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_6_0_ce0,
        weight_buffer_6_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_6_0_we0,
        weight_buffer_6_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_0_d0,
        weight_buffer_6_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_6_1_address0,
        weight_buffer_6_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_6_1_ce0,
        weight_buffer_6_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_6_1_we0,
        weight_buffer_6_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_1_d0,
        weight_buffer_6_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_6_2_address0,
        weight_buffer_6_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_6_2_ce0,
        weight_buffer_6_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_6_2_we0,
        weight_buffer_6_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_2_d0,
        weight_buffer_6_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_6_3_address0,
        weight_buffer_6_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_6_3_ce0,
        weight_buffer_6_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_6_3_we0,
        weight_buffer_6_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_6_3_d0,
        weight_buffer_7_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_7_0_address0,
        weight_buffer_7_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_7_0_ce0,
        weight_buffer_7_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_7_0_we0,
        weight_buffer_7_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_0_d0,
        weight_buffer_7_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_7_1_address0,
        weight_buffer_7_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_7_1_ce0,
        weight_buffer_7_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_7_1_we0,
        weight_buffer_7_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_1_d0,
        weight_buffer_7_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_7_2_address0,
        weight_buffer_7_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_7_2_ce0,
        weight_buffer_7_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_7_2_we0,
        weight_buffer_7_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_2_d0,
        weight_buffer_7_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_7_3_address0,
        weight_buffer_7_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_7_3_ce0,
        weight_buffer_7_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_7_3_we0,
        weight_buffer_7_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_7_3_d0,
        weight_buffer_8_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_8_0_address0,
        weight_buffer_8_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_8_0_ce0,
        weight_buffer_8_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_8_0_we0,
        weight_buffer_8_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_0_d0,
        weight_buffer_8_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_8_1_address0,
        weight_buffer_8_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_8_1_ce0,
        weight_buffer_8_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_8_1_we0,
        weight_buffer_8_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_1_d0,
        weight_buffer_8_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_8_2_address0,
        weight_buffer_8_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_8_2_ce0,
        weight_buffer_8_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_8_2_we0,
        weight_buffer_8_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_2_d0,
        weight_buffer_8_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_8_3_address0,
        weight_buffer_8_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_8_3_ce0,
        weight_buffer_8_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_8_3_we0,
        weight_buffer_8_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_8_3_d0,
        weight_buffer_9_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_9_0_address0,
        weight_buffer_9_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_9_0_ce0,
        weight_buffer_9_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_9_0_we0,
        weight_buffer_9_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_0_d0,
        weight_buffer_9_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_9_1_address0,
        weight_buffer_9_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_9_1_ce0,
        weight_buffer_9_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_9_1_we0,
        weight_buffer_9_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_1_d0,
        weight_buffer_9_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_9_2_address0,
        weight_buffer_9_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_9_2_ce0,
        weight_buffer_9_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_9_2_we0,
        weight_buffer_9_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_2_d0,
        weight_buffer_9_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_9_3_address0,
        weight_buffer_9_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_9_3_ce0,
        weight_buffer_9_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_9_3_we0,
        weight_buffer_9_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_9_3_d0,
        weight_buffer_10_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_10_0_address0,
        weight_buffer_10_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_10_0_ce0,
        weight_buffer_10_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_10_0_we0,
        weight_buffer_10_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_0_d0,
        weight_buffer_10_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_10_1_address0,
        weight_buffer_10_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_10_1_ce0,
        weight_buffer_10_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_10_1_we0,
        weight_buffer_10_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_1_d0,
        weight_buffer_10_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_10_2_address0,
        weight_buffer_10_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_10_2_ce0,
        weight_buffer_10_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_10_2_we0,
        weight_buffer_10_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_2_d0,
        weight_buffer_10_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_10_3_address0,
        weight_buffer_10_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_10_3_ce0,
        weight_buffer_10_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_10_3_we0,
        weight_buffer_10_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_10_3_d0,
        weight_buffer_11_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_11_0_address0,
        weight_buffer_11_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_11_0_ce0,
        weight_buffer_11_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_11_0_we0,
        weight_buffer_11_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_0_d0,
        weight_buffer_11_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_11_1_address0,
        weight_buffer_11_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_11_1_ce0,
        weight_buffer_11_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_11_1_we0,
        weight_buffer_11_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_1_d0,
        weight_buffer_11_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_11_2_address0,
        weight_buffer_11_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_11_2_ce0,
        weight_buffer_11_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_11_2_we0,
        weight_buffer_11_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_2_d0,
        weight_buffer_11_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_11_3_address0,
        weight_buffer_11_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_11_3_ce0,
        weight_buffer_11_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_11_3_we0,
        weight_buffer_11_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_11_3_d0,
        weight_buffer_12_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_12_0_address0,
        weight_buffer_12_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_12_0_ce0,
        weight_buffer_12_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_12_0_we0,
        weight_buffer_12_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_0_d0,
        weight_buffer_12_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_12_1_address0,
        weight_buffer_12_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_12_1_ce0,
        weight_buffer_12_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_12_1_we0,
        weight_buffer_12_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_1_d0,
        weight_buffer_12_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_12_2_address0,
        weight_buffer_12_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_12_2_ce0,
        weight_buffer_12_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_12_2_we0,
        weight_buffer_12_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_2_d0,
        weight_buffer_12_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_12_3_address0,
        weight_buffer_12_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_12_3_ce0,
        weight_buffer_12_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_12_3_we0,
        weight_buffer_12_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_12_3_d0,
        weight_buffer_13_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_13_0_address0,
        weight_buffer_13_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_13_0_ce0,
        weight_buffer_13_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_13_0_we0,
        weight_buffer_13_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_0_d0,
        weight_buffer_13_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_13_1_address0,
        weight_buffer_13_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_13_1_ce0,
        weight_buffer_13_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_13_1_we0,
        weight_buffer_13_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_1_d0,
        weight_buffer_13_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_13_2_address0,
        weight_buffer_13_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_13_2_ce0,
        weight_buffer_13_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_13_2_we0,
        weight_buffer_13_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_2_d0,
        weight_buffer_13_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_13_3_address0,
        weight_buffer_13_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_13_3_ce0,
        weight_buffer_13_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_13_3_we0,
        weight_buffer_13_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_13_3_d0,
        weight_buffer_14_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_14_0_address0,
        weight_buffer_14_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_14_0_ce0,
        weight_buffer_14_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_14_0_we0,
        weight_buffer_14_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_0_d0,
        weight_buffer_14_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_14_1_address0,
        weight_buffer_14_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_14_1_ce0,
        weight_buffer_14_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_14_1_we0,
        weight_buffer_14_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_1_d0,
        weight_buffer_14_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_14_2_address0,
        weight_buffer_14_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_14_2_ce0,
        weight_buffer_14_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_14_2_we0,
        weight_buffer_14_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_2_d0,
        weight_buffer_14_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_14_3_address0,
        weight_buffer_14_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_14_3_ce0,
        weight_buffer_14_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_14_3_we0,
        weight_buffer_14_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_14_3_d0,
        weight_buffer_15_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_15_0_address0,
        weight_buffer_15_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_15_0_ce0,
        weight_buffer_15_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_15_0_we0,
        weight_buffer_15_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_0_d0,
        weight_buffer_15_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_15_1_address0,
        weight_buffer_15_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_15_1_ce0,
        weight_buffer_15_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_15_1_we0,
        weight_buffer_15_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_1_d0,
        weight_buffer_15_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_15_2_address0,
        weight_buffer_15_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_15_2_ce0,
        weight_buffer_15_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_15_2_we0,
        weight_buffer_15_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_2_d0,
        weight_buffer_15_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_15_3_address0,
        weight_buffer_15_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_15_3_ce0,
        weight_buffer_15_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_15_3_we0,
        weight_buffer_15_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_15_3_d0,
        weight_buffer_16_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_16_0_address0,
        weight_buffer_16_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_16_0_ce0,
        weight_buffer_16_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_16_0_we0,
        weight_buffer_16_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_0_d0,
        weight_buffer_16_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_16_1_address0,
        weight_buffer_16_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_16_1_ce0,
        weight_buffer_16_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_16_1_we0,
        weight_buffer_16_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_1_d0,
        weight_buffer_16_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_16_2_address0,
        weight_buffer_16_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_16_2_ce0,
        weight_buffer_16_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_16_2_we0,
        weight_buffer_16_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_2_d0,
        weight_buffer_16_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_16_3_address0,
        weight_buffer_16_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_16_3_ce0,
        weight_buffer_16_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_16_3_we0,
        weight_buffer_16_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_16_3_d0,
        weight_buffer_17_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_17_0_address0,
        weight_buffer_17_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_17_0_ce0,
        weight_buffer_17_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_17_0_we0,
        weight_buffer_17_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_0_d0,
        weight_buffer_17_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_17_1_address0,
        weight_buffer_17_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_17_1_ce0,
        weight_buffer_17_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_17_1_we0,
        weight_buffer_17_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_1_d0,
        weight_buffer_17_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_17_2_address0,
        weight_buffer_17_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_17_2_ce0,
        weight_buffer_17_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_17_2_we0,
        weight_buffer_17_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_2_d0,
        weight_buffer_17_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_17_3_address0,
        weight_buffer_17_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_17_3_ce0,
        weight_buffer_17_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_17_3_we0,
        weight_buffer_17_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_17_3_d0,
        weight_buffer_18_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_18_0_address0,
        weight_buffer_18_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_18_0_ce0,
        weight_buffer_18_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_18_0_we0,
        weight_buffer_18_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_0_d0,
        weight_buffer_18_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_18_1_address0,
        weight_buffer_18_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_18_1_ce0,
        weight_buffer_18_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_18_1_we0,
        weight_buffer_18_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_1_d0,
        weight_buffer_18_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_18_2_address0,
        weight_buffer_18_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_18_2_ce0,
        weight_buffer_18_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_18_2_we0,
        weight_buffer_18_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_2_d0,
        weight_buffer_18_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_18_3_address0,
        weight_buffer_18_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_18_3_ce0,
        weight_buffer_18_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_18_3_we0,
        weight_buffer_18_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_18_3_d0,
        weight_buffer_19_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_19_0_address0,
        weight_buffer_19_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_19_0_ce0,
        weight_buffer_19_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_19_0_we0,
        weight_buffer_19_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_0_d0,
        weight_buffer_19_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_19_1_address0,
        weight_buffer_19_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_19_1_ce0,
        weight_buffer_19_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_19_1_we0,
        weight_buffer_19_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_1_d0,
        weight_buffer_19_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_19_2_address0,
        weight_buffer_19_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_19_2_ce0,
        weight_buffer_19_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_19_2_we0,
        weight_buffer_19_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_2_d0,
        weight_buffer_19_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_19_3_address0,
        weight_buffer_19_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_19_3_ce0,
        weight_buffer_19_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_19_3_we0,
        weight_buffer_19_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_19_3_d0,
        weight_buffer_20_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_20_0_address0,
        weight_buffer_20_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_20_0_ce0,
        weight_buffer_20_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_20_0_we0,
        weight_buffer_20_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_0_d0,
        weight_buffer_20_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_20_1_address0,
        weight_buffer_20_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_20_1_ce0,
        weight_buffer_20_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_20_1_we0,
        weight_buffer_20_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_1_d0,
        weight_buffer_20_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_20_2_address0,
        weight_buffer_20_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_20_2_ce0,
        weight_buffer_20_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_20_2_we0,
        weight_buffer_20_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_2_d0,
        weight_buffer_20_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_20_3_address0,
        weight_buffer_20_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_20_3_ce0,
        weight_buffer_20_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_20_3_we0,
        weight_buffer_20_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_20_3_d0,
        weight_buffer_21_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_21_0_address0,
        weight_buffer_21_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_21_0_ce0,
        weight_buffer_21_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_21_0_we0,
        weight_buffer_21_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_0_d0,
        weight_buffer_21_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_21_1_address0,
        weight_buffer_21_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_21_1_ce0,
        weight_buffer_21_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_21_1_we0,
        weight_buffer_21_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_1_d0,
        weight_buffer_21_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_21_2_address0,
        weight_buffer_21_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_21_2_ce0,
        weight_buffer_21_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_21_2_we0,
        weight_buffer_21_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_2_d0,
        weight_buffer_21_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_21_3_address0,
        weight_buffer_21_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_21_3_ce0,
        weight_buffer_21_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_21_3_we0,
        weight_buffer_21_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_21_3_d0,
        weight_buffer_22_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_22_0_address0,
        weight_buffer_22_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_22_0_ce0,
        weight_buffer_22_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_22_0_we0,
        weight_buffer_22_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_0_d0,
        weight_buffer_22_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_22_1_address0,
        weight_buffer_22_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_22_1_ce0,
        weight_buffer_22_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_22_1_we0,
        weight_buffer_22_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_1_d0,
        weight_buffer_22_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_22_2_address0,
        weight_buffer_22_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_22_2_ce0,
        weight_buffer_22_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_22_2_we0,
        weight_buffer_22_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_2_d0,
        weight_buffer_22_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_22_3_address0,
        weight_buffer_22_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_22_3_ce0,
        weight_buffer_22_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_22_3_we0,
        weight_buffer_22_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_22_3_d0,
        weight_buffer_23_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_23_0_address0,
        weight_buffer_23_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_23_0_ce0,
        weight_buffer_23_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_23_0_we0,
        weight_buffer_23_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_0_d0,
        weight_buffer_23_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_23_1_address0,
        weight_buffer_23_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_23_1_ce0,
        weight_buffer_23_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_23_1_we0,
        weight_buffer_23_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_1_d0,
        weight_buffer_23_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_23_2_address0,
        weight_buffer_23_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_23_2_ce0,
        weight_buffer_23_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_23_2_we0,
        weight_buffer_23_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_2_d0,
        weight_buffer_23_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_23_3_address0,
        weight_buffer_23_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_23_3_ce0,
        weight_buffer_23_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_23_3_we0,
        weight_buffer_23_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_23_3_d0,
        weight_buffer_24_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_24_0_address0,
        weight_buffer_24_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_24_0_ce0,
        weight_buffer_24_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_24_0_we0,
        weight_buffer_24_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_0_d0,
        weight_buffer_24_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_24_1_address0,
        weight_buffer_24_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_24_1_ce0,
        weight_buffer_24_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_24_1_we0,
        weight_buffer_24_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_1_d0,
        weight_buffer_24_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_24_2_address0,
        weight_buffer_24_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_24_2_ce0,
        weight_buffer_24_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_24_2_we0,
        weight_buffer_24_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_2_d0,
        weight_buffer_24_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_24_3_address0,
        weight_buffer_24_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_24_3_ce0,
        weight_buffer_24_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_24_3_we0,
        weight_buffer_24_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_24_3_d0,
        weight_buffer_25_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_25_0_address0,
        weight_buffer_25_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_25_0_ce0,
        weight_buffer_25_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_25_0_we0,
        weight_buffer_25_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_0_d0,
        weight_buffer_25_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_25_1_address0,
        weight_buffer_25_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_25_1_ce0,
        weight_buffer_25_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_25_1_we0,
        weight_buffer_25_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_1_d0,
        weight_buffer_25_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_25_2_address0,
        weight_buffer_25_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_25_2_ce0,
        weight_buffer_25_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_25_2_we0,
        weight_buffer_25_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_2_d0,
        weight_buffer_25_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_25_3_address0,
        weight_buffer_25_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_25_3_ce0,
        weight_buffer_25_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_25_3_we0,
        weight_buffer_25_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_25_3_d0,
        weight_buffer_26_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_26_0_address0,
        weight_buffer_26_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_26_0_ce0,
        weight_buffer_26_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_26_0_we0,
        weight_buffer_26_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_0_d0,
        weight_buffer_26_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_26_1_address0,
        weight_buffer_26_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_26_1_ce0,
        weight_buffer_26_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_26_1_we0,
        weight_buffer_26_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_1_d0,
        weight_buffer_26_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_26_2_address0,
        weight_buffer_26_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_26_2_ce0,
        weight_buffer_26_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_26_2_we0,
        weight_buffer_26_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_2_d0,
        weight_buffer_26_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_26_3_address0,
        weight_buffer_26_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_26_3_ce0,
        weight_buffer_26_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_26_3_we0,
        weight_buffer_26_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_26_3_d0,
        weight_buffer_27_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_27_0_address0,
        weight_buffer_27_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_27_0_ce0,
        weight_buffer_27_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_27_0_we0,
        weight_buffer_27_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_0_d0,
        weight_buffer_27_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_27_1_address0,
        weight_buffer_27_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_27_1_ce0,
        weight_buffer_27_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_27_1_we0,
        weight_buffer_27_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_1_d0,
        weight_buffer_27_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_27_2_address0,
        weight_buffer_27_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_27_2_ce0,
        weight_buffer_27_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_27_2_we0,
        weight_buffer_27_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_2_d0,
        weight_buffer_27_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_27_3_address0,
        weight_buffer_27_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_27_3_ce0,
        weight_buffer_27_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_27_3_we0,
        weight_buffer_27_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_27_3_d0,
        weight_buffer_28_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_28_0_address0,
        weight_buffer_28_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_28_0_ce0,
        weight_buffer_28_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_28_0_we0,
        weight_buffer_28_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_0_d0,
        weight_buffer_28_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_28_1_address0,
        weight_buffer_28_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_28_1_ce0,
        weight_buffer_28_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_28_1_we0,
        weight_buffer_28_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_1_d0,
        weight_buffer_28_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_28_2_address0,
        weight_buffer_28_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_28_2_ce0,
        weight_buffer_28_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_28_2_we0,
        weight_buffer_28_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_2_d0,
        weight_buffer_28_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_28_3_address0,
        weight_buffer_28_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_28_3_ce0,
        weight_buffer_28_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_28_3_we0,
        weight_buffer_28_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_28_3_d0,
        weight_buffer_29_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_29_0_address0,
        weight_buffer_29_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_29_0_ce0,
        weight_buffer_29_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_29_0_we0,
        weight_buffer_29_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_0_d0,
        weight_buffer_29_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_29_1_address0,
        weight_buffer_29_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_29_1_ce0,
        weight_buffer_29_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_29_1_we0,
        weight_buffer_29_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_1_d0,
        weight_buffer_29_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_29_2_address0,
        weight_buffer_29_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_29_2_ce0,
        weight_buffer_29_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_29_2_we0,
        weight_buffer_29_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_2_d0,
        weight_buffer_29_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_29_3_address0,
        weight_buffer_29_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_29_3_ce0,
        weight_buffer_29_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_29_3_we0,
        weight_buffer_29_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_29_3_d0,
        weight_buffer_30_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_30_0_address0,
        weight_buffer_30_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_30_0_ce0,
        weight_buffer_30_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_30_0_we0,
        weight_buffer_30_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_0_d0,
        weight_buffer_30_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_30_1_address0,
        weight_buffer_30_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_30_1_ce0,
        weight_buffer_30_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_30_1_we0,
        weight_buffer_30_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_1_d0,
        weight_buffer_30_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_30_2_address0,
        weight_buffer_30_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_30_2_ce0,
        weight_buffer_30_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_30_2_we0,
        weight_buffer_30_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_2_d0,
        weight_buffer_30_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_30_3_address0,
        weight_buffer_30_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_30_3_ce0,
        weight_buffer_30_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_30_3_we0,
        weight_buffer_30_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_30_3_d0,
        weight_buffer_31_0_address0 => grp_copy_input_weight_fu_1649_weight_buffer_31_0_address0,
        weight_buffer_31_0_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_31_0_ce0,
        weight_buffer_31_0_we0 => grp_copy_input_weight_fu_1649_weight_buffer_31_0_we0,
        weight_buffer_31_0_d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_0_d0,
        weight_buffer_31_1_address0 => grp_copy_input_weight_fu_1649_weight_buffer_31_1_address0,
        weight_buffer_31_1_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_31_1_ce0,
        weight_buffer_31_1_we0 => grp_copy_input_weight_fu_1649_weight_buffer_31_1_we0,
        weight_buffer_31_1_d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_1_d0,
        weight_buffer_31_2_address0 => grp_copy_input_weight_fu_1649_weight_buffer_31_2_address0,
        weight_buffer_31_2_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_31_2_ce0,
        weight_buffer_31_2_we0 => grp_copy_input_weight_fu_1649_weight_buffer_31_2_we0,
        weight_buffer_31_2_d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_2_d0,
        weight_buffer_31_3_address0 => grp_copy_input_weight_fu_1649_weight_buffer_31_3_address0,
        weight_buffer_31_3_ce0 => grp_copy_input_weight_fu_1649_weight_buffer_31_3_ce0,
        weight_buffer_31_3_we0 => grp_copy_input_weight_fu_1649_weight_buffer_31_3_we0,
        weight_buffer_31_3_d0 => grp_copy_input_weight_fu_1649_weight_buffer_31_3_d0,
        p_read => grp_copy_input_weight_fu_1649_p_read,
        enable => grp_copy_input_weight_fu_1649_enable,
        weight_load_enable => grp_copy_input_weight_fu_1649_weight_load_enable,
        IHxIW => IHxIW,
        LayerType => grp_copy_input_weight_fu_1649_LayerType,
        trow_loops_V => trow_loops_V,
        ap_return => grp_copy_input_weight_fu_1649_ap_return);

    grp_reorg_yolo25_fu_2138 : component reorg_yolo25
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reorg_yolo25_fu_2138_ap_start,
        ap_done => grp_reorg_yolo25_fu_2138_ap_done,
        ap_idle => grp_reorg_yolo25_fu_2138_ap_idle,
        ap_ready => grp_reorg_yolo25_fu_2138_ap_ready,
        Input_0_address0 => grp_reorg_yolo25_fu_2138_Input_0_address0,
        Input_0_ce0 => grp_reorg_yolo25_fu_2138_Input_0_ce0,
        Input_0_q0 => grp_reorg_yolo25_fu_2138_Input_0_q0,
        Output_0_address0 => grp_reorg_yolo25_fu_2138_Output_0_address0,
        Output_0_ce0 => grp_reorg_yolo25_fu_2138_Output_0_ce0,
        Output_0_we0 => grp_reorg_yolo25_fu_2138_Output_0_we0,
        Output_0_d0 => grp_reorg_yolo25_fu_2138_Output_0_d0,
        Output_1_address0 => grp_reorg_yolo25_fu_2138_Output_1_address0,
        Output_1_ce0 => grp_reorg_yolo25_fu_2138_Output_1_ce0,
        Output_1_we0 => grp_reorg_yolo25_fu_2138_Output_1_we0,
        Output_1_d0 => grp_reorg_yolo25_fu_2138_Output_1_d0,
        Output_2_address0 => grp_reorg_yolo25_fu_2138_Output_2_address0,
        Output_2_ce0 => grp_reorg_yolo25_fu_2138_Output_2_ce0,
        Output_2_we0 => grp_reorg_yolo25_fu_2138_Output_2_we0,
        Output_2_d0 => grp_reorg_yolo25_fu_2138_Output_2_d0,
        Output_3_address0 => grp_reorg_yolo25_fu_2138_Output_3_address0,
        Output_3_ce0 => grp_reorg_yolo25_fu_2138_Output_3_ce0,
        Output_3_we0 => grp_reorg_yolo25_fu_2138_Output_3_we0,
        Output_3_d0 => grp_reorg_yolo25_fu_2138_Output_3_d0,
        TR_MIN => TR_MIN,
        TC_MIN => TC_MIN,
        enable => process_flag);

    grp_pool_yolo26_fu_2159 : component pool_yolo26
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pool_yolo26_fu_2159_ap_start,
        ap_done => grp_pool_yolo26_fu_2159_ap_done,
        ap_idle => grp_pool_yolo26_fu_2159_ap_idle,
        ap_ready => grp_pool_yolo26_fu_2159_ap_ready,
        Input_0_address0 => grp_pool_yolo26_fu_2159_Input_0_address0,
        Input_0_ce0 => grp_pool_yolo26_fu_2159_Input_0_ce0,
        Input_0_q0 => grp_pool_yolo26_fu_2159_Input_0_q0,
        Input_1_address0 => grp_pool_yolo26_fu_2159_Input_1_address0,
        Input_1_ce0 => grp_pool_yolo26_fu_2159_Input_1_ce0,
        Input_1_q0 => grp_pool_yolo26_fu_2159_Input_1_q0,
        Input_2_address0 => grp_pool_yolo26_fu_2159_Input_2_address0,
        Input_2_ce0 => grp_pool_yolo26_fu_2159_Input_2_ce0,
        Input_2_q0 => grp_pool_yolo26_fu_2159_Input_2_q0,
        Input_3_address0 => grp_pool_yolo26_fu_2159_Input_3_address0,
        Input_3_ce0 => grp_pool_yolo26_fu_2159_Input_3_ce0,
        Input_3_q0 => grp_pool_yolo26_fu_2159_Input_3_q0,
        Output_0_address0 => grp_pool_yolo26_fu_2159_Output_0_address0,
        Output_0_ce0 => grp_pool_yolo26_fu_2159_Output_0_ce0,
        Output_0_we0 => grp_pool_yolo26_fu_2159_Output_0_we0,
        Output_0_d0 => grp_pool_yolo26_fu_2159_Output_0_d0,
        Output_1_address0 => grp_pool_yolo26_fu_2159_Output_1_address0,
        Output_1_ce0 => grp_pool_yolo26_fu_2159_Output_1_ce0,
        Output_1_we0 => grp_pool_yolo26_fu_2159_Output_1_we0,
        Output_1_d0 => grp_pool_yolo26_fu_2159_Output_1_d0,
        Output_2_address0 => grp_pool_yolo26_fu_2159_Output_2_address0,
        Output_2_ce0 => grp_pool_yolo26_fu_2159_Output_2_ce0,
        Output_2_we0 => grp_pool_yolo26_fu_2159_Output_2_we0,
        Output_2_d0 => grp_pool_yolo26_fu_2159_Output_2_d0,
        Output_3_address0 => grp_pool_yolo26_fu_2159_Output_3_address0,
        Output_3_ce0 => grp_pool_yolo26_fu_2159_Output_3_ce0,
        Output_3_we0 => grp_pool_yolo26_fu_2159_Output_3_we0,
        Output_3_d0 => grp_pool_yolo26_fu_2159_Output_3_d0,
        Kernel_stride => Kernel_stride,
        TR_MIN => TR_MIN,
        TC_MIN => TC_MIN,
        enable => process_flag);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_0_preg <= write_flag_2_reg_1080;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_1_preg <= TX_MIN_next_0_2_reg_1095;
                end if; 
            end if;
        end if;
    end process;


    grp_compute4_fu_1110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute4_fu_1110_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    grp_compute4_fu_1110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute4_fu_1110_ap_ready = ap_const_logic_1)) then 
                    grp_compute4_fu_1110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_copy_input_weight_fu_1649_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_copy_input_weight_fu_1649_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_copy_input_weight_fu_1649_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_copy_input_weight_fu_1649_ap_ready = ap_const_logic_1)) then 
                    grp_copy_input_weight_fu_1649_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pool_yolo26_fu_2159_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pool_yolo26_fu_2159_ap_start_reg <= ap_const_logic_0;
            else
                if ((((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_pool_yolo26_fu_2159_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pool_yolo26_fu_2159_ap_ready = ap_const_logic_1)) then 
                    grp_pool_yolo26_fu_2159_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reorg_yolo25_fu_2138_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reorg_yolo25_fu_2138_ap_start_reg <= ap_const_logic_0;
            else
                if ((((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_reorg_yolo25_fu_2138_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reorg_yolo25_fu_2138_ap_ready = ap_const_logic_1)) then 
                    grp_reorg_yolo25_fu_2138_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    TMP_N_reg_1055_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                TMP_N_reg_1055 <= TMP_N_1_fu_2288_p2;
            elsif (((tmp_fu_2215_p2 = ap_const_lv1_1) and (input_flag_read_read_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                TMP_N_reg_1055 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    TX_MIN_next_0_2_reg_1095_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_41_fu_2256_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                TX_MIN_next_0_2_reg_1095 <= TM_MIN;
            elsif ((((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                TX_MIN_next_0_2_reg_1095 <= tmp_tx_min_load_reg_2486;
            elsif ((((input_flag_read_read_fu_864_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                TX_MIN_next_0_2_reg_1095 <= p_read1;
            end if; 
        end if;
    end process;

    n_reg_1044_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                n_reg_1044 <= n_1_reg_2520;
            elsif (((tmp_fu_2215_p2 = ap_const_lv1_1) and (input_flag_read_read_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                n_reg_1044 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    pingpong_reg_1032_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                pingpong_reg_1032 <= ap_phi_mux_pingpong_1_phi_fu_1071_p4;
            elsif (((tmp_fu_2215_p2 = ap_const_lv1_1) and (input_flag_read_read_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                pingpong_reg_1032 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag_2_reg_1080_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_41_fu_2256_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                write_flag_2_reg_1080 <= TMP_M;
            elsif ((((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                write_flag_2_reg_1080 <= tmp_x_load_reg_2480;
            elsif ((((input_flag_read_read_fu_864_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                write_flag_2_reg_1080 <= p_read;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then
                NOP_0 <= grp_copy_input_weight_fu_1649_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_2215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                NOP_0_load_reg_2492 <= NOP_0;
                tmp_tx_min_load_reg_2486 <= tmp_tx_min;
                tmp_x_load_reg_2480 <= tmp_x;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                TMP_N_next0_0_1_fu_836 <= grp_copy_input_weight_fu_1649_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_41_fu_2256_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                TMP_N_next0_0_1_loa_reg_2536 <= TMP_N_next0_0_1_fu_836;
                TMP_N_next1_0_1_loa_reg_2530 <= TMP_N_next1_0_1_fu_832;
                tmp_43_reg_2525 <= tmp_43_fu_2267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                TMP_N_next1_0_1_fu_832 <= grp_copy_input_weight_fu_1649_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                n_1_reg_2520 <= n_1_fu_2261_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_2215_p2 = ap_const_lv1_1) and (input_flag_read_read_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_39_reg_2512 <= tmp_39_fu_2246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_pingpong_phi_fu_1036_p4 = ap_const_lv1_1) and (tmp_41_fu_2256_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_44_reg_2547 <= grp_fu_2209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_pingpong_phi_fu_1036_p4 = ap_const_lv1_0) and (tmp_41_fu_2256_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_45_reg_2542 <= grp_fu_2209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then
                tmp_tx_min <= TM_MIN;
                tmp_x <= TMP_M;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, input_flag_read_read_fu_864_p2, tmp_fu_2215_p2, ap_CS_fsm_state4, tmp_41_fu_2256_p2, ap_phi_mux_pingpong_phi_fu_1036_p4, ap_CS_fsm_state6, ap_block_state6_on_subcall_done, ap_CS_fsm_state3, ap_block_state3_on_subcall_done, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_fu_2215_p2 = ap_const_lv1_1) and (input_flag_read_read_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (((input_flag_read_read_fu_864_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((tmp_41_fu_2256_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_phi_mux_pingpong_phi_fu_1036_p4 = ap_const_lv1_1) and (tmp_41_fu_2256_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    TMP_N_1_fu_2288_p2 <= std_logic_vector(unsigned(TMP_N_reg_1055) + unsigned(TN));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state2_on_subcall_done_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_copy_input_weight_fu_1649_ap_done, grp_reorg_yolo25_fu_2138_ap_done)
    begin
                ap_block_state2_on_subcall_done <= (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (grp_reorg_yolo25_fu_2138_ap_done = ap_const_logic_0)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (grp_reorg_yolo25_fu_2138_ap_done = ap_const_logic_0)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (grp_copy_input_weight_fu_1649_ap_done = ap_const_logic_0)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (grp_copy_input_weight_fu_1649_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_copy_input_weight_fu_1649_ap_done, grp_pool_yolo26_fu_2159_ap_done)
    begin
                ap_block_state3_on_subcall_done <= (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (grp_pool_yolo26_fu_2159_ap_done = ap_const_logic_0)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (grp_pool_yolo26_fu_2159_ap_done = ap_const_logic_0)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (grp_copy_input_weight_fu_1649_ap_done = ap_const_logic_0)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (grp_copy_input_weight_fu_1649_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state6_on_subcall_done_assign_proc : process(grp_copy_input_weight_fu_1649_ap_done, pingpong_reg_1032, grp_compute4_fu_1110_ap_done)
    begin
                ap_block_state6_on_subcall_done <= (((pingpong_reg_1032 = ap_const_lv1_1) and (grp_compute4_fu_1110_ap_done = ap_const_logic_0)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (grp_compute4_fu_1110_ap_done = ap_const_logic_0)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (grp_copy_input_weight_fu_1649_ap_done = ap_const_logic_0)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (grp_copy_input_weight_fu_1649_ap_done = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_pingpong_1_phi_fu_1071_p4_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                ap_phi_mux_pingpong_1_phi_fu_1071_p4 <= ap_const_lv1_1;
            elsif ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                ap_phi_mux_pingpong_1_phi_fu_1071_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_pingpong_1_phi_fu_1071_p4 <= "X";
            end if;
        else 
            ap_phi_mux_pingpong_1_phi_fu_1071_p4 <= "X";
        end if; 
    end process;

    ap_phi_mux_pingpong_phi_fu_1036_p4 <= pingpong_reg_1032;

    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(write_flag_2_reg_1080, ap_CS_fsm_state8, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_return_0 <= write_flag_2_reg_1080;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(TX_MIN_next_0_2_reg_1095, ap_CS_fsm_state8, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_return_1 <= TX_MIN_next_0_2_reg_1095;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    beta_buffer_address0 <= grp_compute4_fu_1110_beta_buffer_address0;

    beta_buffer_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_beta_buffer_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            beta_buffer_ce0 <= grp_compute4_fu_1110_beta_buffer_ce0;
        else 
            beta_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_compute4_fu_1110_ap_start <= grp_compute4_fu_1110_ap_start_reg;

    grp_compute4_fu_1110_enable_assign_proc : process(tmp_45_reg_2542, tmp_44_reg_2547, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_enable <= tmp_44_reg_2547(0);
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_enable <= tmp_45_reg_2542(0);
            else 
                grp_compute4_fu_1110_enable <= 'X';
            end if;
        else 
            grp_compute4_fu_1110_enable <= 'X';
        end if; 
    end process;


    grp_compute4_fu_1110_input_buffer_0_q0_assign_proc : process(input_buffer1_0_q0, input_buffer0_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_input_buffer_0_q0 <= input_buffer0_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_input_buffer_0_q0 <= input_buffer1_0_q0;
            else 
                grp_compute4_fu_1110_input_buffer_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_input_buffer_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_input_buffer_1_q0_assign_proc : process(input_buffer1_1_q0, input_buffer0_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_input_buffer_1_q0 <= input_buffer0_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_input_buffer_1_q0 <= input_buffer1_1_q0;
            else 
                grp_compute4_fu_1110_input_buffer_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_input_buffer_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_input_buffer_2_q0_assign_proc : process(input_buffer1_2_q0, input_buffer0_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_input_buffer_2_q0 <= input_buffer0_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_input_buffer_2_q0 <= input_buffer1_2_q0;
            else 
                grp_compute4_fu_1110_input_buffer_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_input_buffer_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_input_buffer_3_q0_assign_proc : process(input_buffer1_3_q0, input_buffer0_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_input_buffer_3_q0 <= input_buffer0_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_input_buffer_3_q0 <= input_buffer1_3_q0;
            else 
                grp_compute4_fu_1110_input_buffer_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_input_buffer_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_p_read_assign_proc : process(TMP_N_next1_0_1_loa_reg_2530, TMP_N_next0_0_1_loa_reg_2536, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_p_read <= TMP_N_next0_0_1_loa_reg_2536;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_p_read <= TMP_N_next1_0_1_loa_reg_2530;
            else 
                grp_compute4_fu_1110_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_0_0_q0_assign_proc : process(weight_buffer1_0_0_q0, weight_buffer0_0_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_0_0_q0 <= weight_buffer0_0_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_0_0_q0 <= weight_buffer1_0_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_0_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_0_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_0_1_q0_assign_proc : process(weight_buffer1_0_1_q0, weight_buffer0_0_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_0_1_q0 <= weight_buffer0_0_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_0_1_q0 <= weight_buffer1_0_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_0_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_0_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_0_2_q0_assign_proc : process(weight_buffer1_0_2_q0, weight_buffer0_0_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_0_2_q0 <= weight_buffer0_0_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_0_2_q0 <= weight_buffer1_0_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_0_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_0_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_0_3_q0_assign_proc : process(weight_buffer1_0_3_q0, weight_buffer0_0_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_0_3_q0 <= weight_buffer0_0_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_0_3_q0 <= weight_buffer1_0_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_0_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_0_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_10_0_q0_assign_proc : process(weight_buffer1_10_0_q0, weight_buffer0_10_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_10_0_q0 <= weight_buffer0_10_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_10_0_q0 <= weight_buffer1_10_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_10_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_10_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_10_1_q0_assign_proc : process(weight_buffer1_10_1_q0, weight_buffer0_10_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_10_1_q0 <= weight_buffer0_10_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_10_1_q0 <= weight_buffer1_10_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_10_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_10_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_10_2_q0_assign_proc : process(weight_buffer1_10_2_q0, weight_buffer0_10_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_10_2_q0 <= weight_buffer0_10_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_10_2_q0 <= weight_buffer1_10_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_10_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_10_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_10_3_q0_assign_proc : process(weight_buffer1_10_3_q0, weight_buffer0_10_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_10_3_q0 <= weight_buffer0_10_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_10_3_q0 <= weight_buffer1_10_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_10_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_10_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_11_0_q0_assign_proc : process(weight_buffer1_11_0_q0, weight_buffer0_11_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_11_0_q0 <= weight_buffer0_11_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_11_0_q0 <= weight_buffer1_11_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_11_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_11_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_11_1_q0_assign_proc : process(weight_buffer1_11_1_q0, weight_buffer0_11_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_11_1_q0 <= weight_buffer0_11_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_11_1_q0 <= weight_buffer1_11_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_11_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_11_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_11_2_q0_assign_proc : process(weight_buffer1_11_2_q0, weight_buffer0_11_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_11_2_q0 <= weight_buffer0_11_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_11_2_q0 <= weight_buffer1_11_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_11_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_11_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_11_3_q0_assign_proc : process(weight_buffer1_11_3_q0, weight_buffer0_11_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_11_3_q0 <= weight_buffer0_11_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_11_3_q0 <= weight_buffer1_11_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_11_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_11_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_12_0_q0_assign_proc : process(weight_buffer1_12_0_q0, weight_buffer0_12_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_12_0_q0 <= weight_buffer0_12_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_12_0_q0 <= weight_buffer1_12_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_12_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_12_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_12_1_q0_assign_proc : process(weight_buffer1_12_1_q0, weight_buffer0_12_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_12_1_q0 <= weight_buffer0_12_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_12_1_q0 <= weight_buffer1_12_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_12_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_12_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_12_2_q0_assign_proc : process(weight_buffer1_12_2_q0, weight_buffer0_12_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_12_2_q0 <= weight_buffer0_12_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_12_2_q0 <= weight_buffer1_12_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_12_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_12_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_12_3_q0_assign_proc : process(weight_buffer1_12_3_q0, weight_buffer0_12_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_12_3_q0 <= weight_buffer0_12_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_12_3_q0 <= weight_buffer1_12_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_12_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_12_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_13_0_q0_assign_proc : process(weight_buffer1_13_0_q0, weight_buffer0_13_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_13_0_q0 <= weight_buffer0_13_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_13_0_q0 <= weight_buffer1_13_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_13_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_13_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_13_1_q0_assign_proc : process(weight_buffer1_13_1_q0, weight_buffer0_13_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_13_1_q0 <= weight_buffer0_13_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_13_1_q0 <= weight_buffer1_13_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_13_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_13_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_13_2_q0_assign_proc : process(weight_buffer1_13_2_q0, weight_buffer0_13_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_13_2_q0 <= weight_buffer0_13_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_13_2_q0 <= weight_buffer1_13_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_13_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_13_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_13_3_q0_assign_proc : process(weight_buffer1_13_3_q0, weight_buffer0_13_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_13_3_q0 <= weight_buffer0_13_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_13_3_q0 <= weight_buffer1_13_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_13_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_13_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_14_0_q0_assign_proc : process(weight_buffer1_14_0_q0, weight_buffer0_14_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_14_0_q0 <= weight_buffer0_14_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_14_0_q0 <= weight_buffer1_14_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_14_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_14_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_14_1_q0_assign_proc : process(weight_buffer1_14_1_q0, weight_buffer0_14_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_14_1_q0 <= weight_buffer0_14_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_14_1_q0 <= weight_buffer1_14_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_14_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_14_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_14_2_q0_assign_proc : process(weight_buffer1_14_2_q0, weight_buffer0_14_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_14_2_q0 <= weight_buffer0_14_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_14_2_q0 <= weight_buffer1_14_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_14_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_14_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_14_3_q0_assign_proc : process(weight_buffer1_14_3_q0, weight_buffer0_14_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_14_3_q0 <= weight_buffer0_14_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_14_3_q0 <= weight_buffer1_14_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_14_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_14_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_15_0_q0_assign_proc : process(weight_buffer1_15_0_q0, weight_buffer0_15_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_15_0_q0 <= weight_buffer0_15_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_15_0_q0 <= weight_buffer1_15_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_15_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_15_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_15_1_q0_assign_proc : process(weight_buffer1_15_1_q0, weight_buffer0_15_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_15_1_q0 <= weight_buffer0_15_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_15_1_q0 <= weight_buffer1_15_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_15_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_15_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_15_2_q0_assign_proc : process(weight_buffer1_15_2_q0, weight_buffer0_15_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_15_2_q0 <= weight_buffer0_15_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_15_2_q0 <= weight_buffer1_15_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_15_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_15_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_15_3_q0_assign_proc : process(weight_buffer1_15_3_q0, weight_buffer0_15_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_15_3_q0 <= weight_buffer0_15_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_15_3_q0 <= weight_buffer1_15_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_15_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_15_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_16_0_q0_assign_proc : process(weight_buffer1_16_0_q0, weight_buffer0_16_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_16_0_q0 <= weight_buffer0_16_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_16_0_q0 <= weight_buffer1_16_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_16_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_16_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_16_1_q0_assign_proc : process(weight_buffer1_16_1_q0, weight_buffer0_16_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_16_1_q0 <= weight_buffer0_16_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_16_1_q0 <= weight_buffer1_16_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_16_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_16_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_16_2_q0_assign_proc : process(weight_buffer1_16_2_q0, weight_buffer0_16_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_16_2_q0 <= weight_buffer0_16_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_16_2_q0 <= weight_buffer1_16_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_16_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_16_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_16_3_q0_assign_proc : process(weight_buffer1_16_3_q0, weight_buffer0_16_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_16_3_q0 <= weight_buffer0_16_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_16_3_q0 <= weight_buffer1_16_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_16_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_16_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_17_0_q0_assign_proc : process(weight_buffer1_17_0_q0, weight_buffer0_17_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_17_0_q0 <= weight_buffer0_17_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_17_0_q0 <= weight_buffer1_17_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_17_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_17_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_17_1_q0_assign_proc : process(weight_buffer1_17_1_q0, weight_buffer0_17_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_17_1_q0 <= weight_buffer0_17_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_17_1_q0 <= weight_buffer1_17_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_17_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_17_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_17_2_q0_assign_proc : process(weight_buffer1_17_2_q0, weight_buffer0_17_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_17_2_q0 <= weight_buffer0_17_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_17_2_q0 <= weight_buffer1_17_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_17_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_17_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_17_3_q0_assign_proc : process(weight_buffer1_17_3_q0, weight_buffer0_17_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_17_3_q0 <= weight_buffer0_17_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_17_3_q0 <= weight_buffer1_17_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_17_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_17_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_18_0_q0_assign_proc : process(weight_buffer1_18_0_q0, weight_buffer0_18_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_18_0_q0 <= weight_buffer0_18_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_18_0_q0 <= weight_buffer1_18_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_18_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_18_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_18_1_q0_assign_proc : process(weight_buffer1_18_1_q0, weight_buffer0_18_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_18_1_q0 <= weight_buffer0_18_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_18_1_q0 <= weight_buffer1_18_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_18_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_18_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_18_2_q0_assign_proc : process(weight_buffer1_18_2_q0, weight_buffer0_18_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_18_2_q0 <= weight_buffer0_18_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_18_2_q0 <= weight_buffer1_18_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_18_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_18_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_18_3_q0_assign_proc : process(weight_buffer1_18_3_q0, weight_buffer0_18_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_18_3_q0 <= weight_buffer0_18_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_18_3_q0 <= weight_buffer1_18_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_18_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_18_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_19_0_q0_assign_proc : process(weight_buffer1_19_0_q0, weight_buffer0_19_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_19_0_q0 <= weight_buffer0_19_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_19_0_q0 <= weight_buffer1_19_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_19_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_19_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_19_1_q0_assign_proc : process(weight_buffer1_19_1_q0, weight_buffer0_19_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_19_1_q0 <= weight_buffer0_19_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_19_1_q0 <= weight_buffer1_19_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_19_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_19_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_19_2_q0_assign_proc : process(weight_buffer1_19_2_q0, weight_buffer0_19_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_19_2_q0 <= weight_buffer0_19_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_19_2_q0 <= weight_buffer1_19_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_19_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_19_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_19_3_q0_assign_proc : process(weight_buffer1_19_3_q0, weight_buffer0_19_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_19_3_q0 <= weight_buffer0_19_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_19_3_q0 <= weight_buffer1_19_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_19_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_19_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_1_0_q0_assign_proc : process(weight_buffer1_1_0_q0, weight_buffer0_1_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_1_0_q0 <= weight_buffer0_1_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_1_0_q0 <= weight_buffer1_1_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_1_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_1_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_1_1_q0_assign_proc : process(weight_buffer1_1_1_q0, weight_buffer0_1_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_1_1_q0 <= weight_buffer0_1_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_1_1_q0 <= weight_buffer1_1_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_1_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_1_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_1_2_q0_assign_proc : process(weight_buffer1_1_2_q0, weight_buffer0_1_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_1_2_q0 <= weight_buffer0_1_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_1_2_q0 <= weight_buffer1_1_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_1_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_1_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_1_3_q0_assign_proc : process(weight_buffer1_1_3_q0, weight_buffer0_1_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_1_3_q0 <= weight_buffer0_1_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_1_3_q0 <= weight_buffer1_1_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_1_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_1_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_20_0_q0_assign_proc : process(weight_buffer1_20_0_q0, weight_buffer0_20_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_20_0_q0 <= weight_buffer0_20_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_20_0_q0 <= weight_buffer1_20_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_20_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_20_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_20_1_q0_assign_proc : process(weight_buffer1_20_1_q0, weight_buffer0_20_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_20_1_q0 <= weight_buffer0_20_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_20_1_q0 <= weight_buffer1_20_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_20_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_20_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_20_2_q0_assign_proc : process(weight_buffer1_20_2_q0, weight_buffer0_20_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_20_2_q0 <= weight_buffer0_20_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_20_2_q0 <= weight_buffer1_20_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_20_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_20_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_20_3_q0_assign_proc : process(weight_buffer1_20_3_q0, weight_buffer0_20_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_20_3_q0 <= weight_buffer0_20_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_20_3_q0 <= weight_buffer1_20_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_20_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_20_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_21_0_q0_assign_proc : process(weight_buffer1_21_0_q0, weight_buffer0_21_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_21_0_q0 <= weight_buffer0_21_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_21_0_q0 <= weight_buffer1_21_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_21_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_21_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_21_1_q0_assign_proc : process(weight_buffer1_21_1_q0, weight_buffer0_21_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_21_1_q0 <= weight_buffer0_21_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_21_1_q0 <= weight_buffer1_21_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_21_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_21_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_21_2_q0_assign_proc : process(weight_buffer1_21_2_q0, weight_buffer0_21_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_21_2_q0 <= weight_buffer0_21_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_21_2_q0 <= weight_buffer1_21_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_21_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_21_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_21_3_q0_assign_proc : process(weight_buffer1_21_3_q0, weight_buffer0_21_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_21_3_q0 <= weight_buffer0_21_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_21_3_q0 <= weight_buffer1_21_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_21_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_21_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_22_0_q0_assign_proc : process(weight_buffer1_22_0_q0, weight_buffer0_22_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_22_0_q0 <= weight_buffer0_22_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_22_0_q0 <= weight_buffer1_22_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_22_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_22_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_22_1_q0_assign_proc : process(weight_buffer1_22_1_q0, weight_buffer0_22_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_22_1_q0 <= weight_buffer0_22_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_22_1_q0 <= weight_buffer1_22_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_22_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_22_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_22_2_q0_assign_proc : process(weight_buffer1_22_2_q0, weight_buffer0_22_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_22_2_q0 <= weight_buffer0_22_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_22_2_q0 <= weight_buffer1_22_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_22_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_22_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_22_3_q0_assign_proc : process(weight_buffer1_22_3_q0, weight_buffer0_22_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_22_3_q0 <= weight_buffer0_22_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_22_3_q0 <= weight_buffer1_22_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_22_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_22_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_23_0_q0_assign_proc : process(weight_buffer1_23_0_q0, weight_buffer0_23_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_23_0_q0 <= weight_buffer0_23_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_23_0_q0 <= weight_buffer1_23_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_23_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_23_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_23_1_q0_assign_proc : process(weight_buffer1_23_1_q0, weight_buffer0_23_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_23_1_q0 <= weight_buffer0_23_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_23_1_q0 <= weight_buffer1_23_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_23_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_23_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_23_2_q0_assign_proc : process(weight_buffer1_23_2_q0, weight_buffer0_23_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_23_2_q0 <= weight_buffer0_23_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_23_2_q0 <= weight_buffer1_23_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_23_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_23_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_23_3_q0_assign_proc : process(weight_buffer1_23_3_q0, weight_buffer0_23_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_23_3_q0 <= weight_buffer0_23_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_23_3_q0 <= weight_buffer1_23_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_23_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_23_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_24_0_q0_assign_proc : process(weight_buffer1_24_0_q0, weight_buffer0_24_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_24_0_q0 <= weight_buffer0_24_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_24_0_q0 <= weight_buffer1_24_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_24_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_24_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_24_1_q0_assign_proc : process(weight_buffer1_24_1_q0, weight_buffer0_24_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_24_1_q0 <= weight_buffer0_24_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_24_1_q0 <= weight_buffer1_24_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_24_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_24_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_24_2_q0_assign_proc : process(weight_buffer1_24_2_q0, weight_buffer0_24_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_24_2_q0 <= weight_buffer0_24_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_24_2_q0 <= weight_buffer1_24_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_24_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_24_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_24_3_q0_assign_proc : process(weight_buffer1_24_3_q0, weight_buffer0_24_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_24_3_q0 <= weight_buffer0_24_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_24_3_q0 <= weight_buffer1_24_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_24_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_24_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_25_0_q0_assign_proc : process(weight_buffer1_25_0_q0, weight_buffer0_25_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_25_0_q0 <= weight_buffer0_25_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_25_0_q0 <= weight_buffer1_25_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_25_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_25_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_25_1_q0_assign_proc : process(weight_buffer1_25_1_q0, weight_buffer0_25_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_25_1_q0 <= weight_buffer0_25_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_25_1_q0 <= weight_buffer1_25_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_25_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_25_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_25_2_q0_assign_proc : process(weight_buffer1_25_2_q0, weight_buffer0_25_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_25_2_q0 <= weight_buffer0_25_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_25_2_q0 <= weight_buffer1_25_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_25_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_25_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_25_3_q0_assign_proc : process(weight_buffer1_25_3_q0, weight_buffer0_25_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_25_3_q0 <= weight_buffer0_25_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_25_3_q0 <= weight_buffer1_25_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_25_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_25_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_26_0_q0_assign_proc : process(weight_buffer1_26_0_q0, weight_buffer0_26_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_26_0_q0 <= weight_buffer0_26_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_26_0_q0 <= weight_buffer1_26_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_26_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_26_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_26_1_q0_assign_proc : process(weight_buffer1_26_1_q0, weight_buffer0_26_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_26_1_q0 <= weight_buffer0_26_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_26_1_q0 <= weight_buffer1_26_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_26_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_26_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_26_2_q0_assign_proc : process(weight_buffer1_26_2_q0, weight_buffer0_26_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_26_2_q0 <= weight_buffer0_26_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_26_2_q0 <= weight_buffer1_26_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_26_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_26_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_26_3_q0_assign_proc : process(weight_buffer1_26_3_q0, weight_buffer0_26_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_26_3_q0 <= weight_buffer0_26_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_26_3_q0 <= weight_buffer1_26_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_26_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_26_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_27_0_q0_assign_proc : process(weight_buffer1_27_0_q0, weight_buffer0_27_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_27_0_q0 <= weight_buffer0_27_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_27_0_q0 <= weight_buffer1_27_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_27_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_27_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_27_1_q0_assign_proc : process(weight_buffer1_27_1_q0, weight_buffer0_27_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_27_1_q0 <= weight_buffer0_27_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_27_1_q0 <= weight_buffer1_27_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_27_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_27_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_27_2_q0_assign_proc : process(weight_buffer1_27_2_q0, weight_buffer0_27_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_27_2_q0 <= weight_buffer0_27_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_27_2_q0 <= weight_buffer1_27_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_27_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_27_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_27_3_q0_assign_proc : process(weight_buffer1_27_3_q0, weight_buffer0_27_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_27_3_q0 <= weight_buffer0_27_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_27_3_q0 <= weight_buffer1_27_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_27_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_27_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_28_0_q0_assign_proc : process(weight_buffer1_28_0_q0, weight_buffer0_28_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_28_0_q0 <= weight_buffer0_28_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_28_0_q0 <= weight_buffer1_28_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_28_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_28_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_28_1_q0_assign_proc : process(weight_buffer1_28_1_q0, weight_buffer0_28_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_28_1_q0 <= weight_buffer0_28_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_28_1_q0 <= weight_buffer1_28_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_28_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_28_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_28_2_q0_assign_proc : process(weight_buffer1_28_2_q0, weight_buffer0_28_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_28_2_q0 <= weight_buffer0_28_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_28_2_q0 <= weight_buffer1_28_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_28_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_28_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_28_3_q0_assign_proc : process(weight_buffer1_28_3_q0, weight_buffer0_28_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_28_3_q0 <= weight_buffer0_28_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_28_3_q0 <= weight_buffer1_28_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_28_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_28_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_29_0_q0_assign_proc : process(weight_buffer1_29_0_q0, weight_buffer0_29_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_29_0_q0 <= weight_buffer0_29_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_29_0_q0 <= weight_buffer1_29_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_29_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_29_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_29_1_q0_assign_proc : process(weight_buffer1_29_1_q0, weight_buffer0_29_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_29_1_q0 <= weight_buffer0_29_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_29_1_q0 <= weight_buffer1_29_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_29_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_29_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_29_2_q0_assign_proc : process(weight_buffer1_29_2_q0, weight_buffer0_29_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_29_2_q0 <= weight_buffer0_29_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_29_2_q0 <= weight_buffer1_29_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_29_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_29_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_29_3_q0_assign_proc : process(weight_buffer1_29_3_q0, weight_buffer0_29_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_29_3_q0 <= weight_buffer0_29_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_29_3_q0 <= weight_buffer1_29_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_29_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_29_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_2_0_q0_assign_proc : process(weight_buffer1_2_0_q0, weight_buffer0_2_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_2_0_q0 <= weight_buffer0_2_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_2_0_q0 <= weight_buffer1_2_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_2_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_2_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_2_1_q0_assign_proc : process(weight_buffer1_2_1_q0, weight_buffer0_2_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_2_1_q0 <= weight_buffer0_2_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_2_1_q0 <= weight_buffer1_2_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_2_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_2_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_2_2_q0_assign_proc : process(weight_buffer1_2_2_q0, weight_buffer0_2_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_2_2_q0 <= weight_buffer0_2_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_2_2_q0 <= weight_buffer1_2_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_2_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_2_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_2_3_q0_assign_proc : process(weight_buffer1_2_3_q0, weight_buffer0_2_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_2_3_q0 <= weight_buffer0_2_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_2_3_q0 <= weight_buffer1_2_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_2_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_2_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_30_0_q0_assign_proc : process(weight_buffer1_30_0_q0, weight_buffer0_30_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_30_0_q0 <= weight_buffer0_30_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_30_0_q0 <= weight_buffer1_30_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_30_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_30_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_30_1_q0_assign_proc : process(weight_buffer1_30_1_q0, weight_buffer0_30_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_30_1_q0 <= weight_buffer0_30_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_30_1_q0 <= weight_buffer1_30_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_30_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_30_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_30_2_q0_assign_proc : process(weight_buffer1_30_2_q0, weight_buffer0_30_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_30_2_q0 <= weight_buffer0_30_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_30_2_q0 <= weight_buffer1_30_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_30_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_30_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_30_3_q0_assign_proc : process(weight_buffer1_30_3_q0, weight_buffer0_30_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_30_3_q0 <= weight_buffer0_30_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_30_3_q0 <= weight_buffer1_30_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_30_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_30_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_31_0_q0_assign_proc : process(weight_buffer1_31_0_q0, weight_buffer0_31_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_31_0_q0 <= weight_buffer0_31_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_31_0_q0 <= weight_buffer1_31_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_31_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_31_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_31_1_q0_assign_proc : process(weight_buffer1_31_1_q0, weight_buffer0_31_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_31_1_q0 <= weight_buffer0_31_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_31_1_q0 <= weight_buffer1_31_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_31_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_31_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_31_2_q0_assign_proc : process(weight_buffer1_31_2_q0, weight_buffer0_31_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_31_2_q0 <= weight_buffer0_31_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_31_2_q0 <= weight_buffer1_31_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_31_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_31_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_31_3_q0_assign_proc : process(weight_buffer1_31_3_q0, weight_buffer0_31_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_31_3_q0 <= weight_buffer0_31_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_31_3_q0 <= weight_buffer1_31_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_31_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_31_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_3_0_q0_assign_proc : process(weight_buffer1_3_0_q0, weight_buffer0_3_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_3_0_q0 <= weight_buffer0_3_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_3_0_q0 <= weight_buffer1_3_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_3_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_3_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_3_1_q0_assign_proc : process(weight_buffer1_3_1_q0, weight_buffer0_3_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_3_1_q0 <= weight_buffer0_3_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_3_1_q0 <= weight_buffer1_3_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_3_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_3_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_3_2_q0_assign_proc : process(weight_buffer1_3_2_q0, weight_buffer0_3_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_3_2_q0 <= weight_buffer0_3_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_3_2_q0 <= weight_buffer1_3_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_3_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_3_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_3_3_q0_assign_proc : process(weight_buffer1_3_3_q0, weight_buffer0_3_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_3_3_q0 <= weight_buffer0_3_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_3_3_q0 <= weight_buffer1_3_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_3_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_3_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_4_0_q0_assign_proc : process(weight_buffer1_4_0_q0, weight_buffer0_4_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_4_0_q0 <= weight_buffer0_4_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_4_0_q0 <= weight_buffer1_4_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_4_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_4_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_4_1_q0_assign_proc : process(weight_buffer1_4_1_q0, weight_buffer0_4_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_4_1_q0 <= weight_buffer0_4_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_4_1_q0 <= weight_buffer1_4_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_4_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_4_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_4_2_q0_assign_proc : process(weight_buffer1_4_2_q0, weight_buffer0_4_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_4_2_q0 <= weight_buffer0_4_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_4_2_q0 <= weight_buffer1_4_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_4_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_4_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_4_3_q0_assign_proc : process(weight_buffer1_4_3_q0, weight_buffer0_4_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_4_3_q0 <= weight_buffer0_4_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_4_3_q0 <= weight_buffer1_4_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_4_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_4_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_5_0_q0_assign_proc : process(weight_buffer1_5_0_q0, weight_buffer0_5_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_5_0_q0 <= weight_buffer0_5_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_5_0_q0 <= weight_buffer1_5_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_5_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_5_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_5_1_q0_assign_proc : process(weight_buffer1_5_1_q0, weight_buffer0_5_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_5_1_q0 <= weight_buffer0_5_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_5_1_q0 <= weight_buffer1_5_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_5_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_5_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_5_2_q0_assign_proc : process(weight_buffer1_5_2_q0, weight_buffer0_5_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_5_2_q0 <= weight_buffer0_5_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_5_2_q0 <= weight_buffer1_5_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_5_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_5_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_5_3_q0_assign_proc : process(weight_buffer1_5_3_q0, weight_buffer0_5_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_5_3_q0 <= weight_buffer0_5_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_5_3_q0 <= weight_buffer1_5_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_5_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_5_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_6_0_q0_assign_proc : process(weight_buffer1_6_0_q0, weight_buffer0_6_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_6_0_q0 <= weight_buffer0_6_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_6_0_q0 <= weight_buffer1_6_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_6_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_6_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_6_1_q0_assign_proc : process(weight_buffer1_6_1_q0, weight_buffer0_6_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_6_1_q0 <= weight_buffer0_6_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_6_1_q0 <= weight_buffer1_6_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_6_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_6_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_6_2_q0_assign_proc : process(weight_buffer1_6_2_q0, weight_buffer0_6_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_6_2_q0 <= weight_buffer0_6_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_6_2_q0 <= weight_buffer1_6_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_6_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_6_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_6_3_q0_assign_proc : process(weight_buffer1_6_3_q0, weight_buffer0_6_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_6_3_q0 <= weight_buffer0_6_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_6_3_q0 <= weight_buffer1_6_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_6_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_6_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_7_0_q0_assign_proc : process(weight_buffer1_7_0_q0, weight_buffer0_7_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_7_0_q0 <= weight_buffer0_7_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_7_0_q0 <= weight_buffer1_7_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_7_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_7_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_7_1_q0_assign_proc : process(weight_buffer1_7_1_q0, weight_buffer0_7_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_7_1_q0 <= weight_buffer0_7_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_7_1_q0 <= weight_buffer1_7_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_7_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_7_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_7_2_q0_assign_proc : process(weight_buffer1_7_2_q0, weight_buffer0_7_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_7_2_q0 <= weight_buffer0_7_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_7_2_q0 <= weight_buffer1_7_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_7_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_7_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_7_3_q0_assign_proc : process(weight_buffer1_7_3_q0, weight_buffer0_7_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_7_3_q0 <= weight_buffer0_7_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_7_3_q0 <= weight_buffer1_7_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_7_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_7_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_8_0_q0_assign_proc : process(weight_buffer1_8_0_q0, weight_buffer0_8_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_8_0_q0 <= weight_buffer0_8_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_8_0_q0 <= weight_buffer1_8_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_8_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_8_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_8_1_q0_assign_proc : process(weight_buffer1_8_1_q0, weight_buffer0_8_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_8_1_q0 <= weight_buffer0_8_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_8_1_q0 <= weight_buffer1_8_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_8_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_8_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_8_2_q0_assign_proc : process(weight_buffer1_8_2_q0, weight_buffer0_8_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_8_2_q0 <= weight_buffer0_8_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_8_2_q0 <= weight_buffer1_8_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_8_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_8_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_8_3_q0_assign_proc : process(weight_buffer1_8_3_q0, weight_buffer0_8_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_8_3_q0 <= weight_buffer0_8_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_8_3_q0 <= weight_buffer1_8_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_8_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_8_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_9_0_q0_assign_proc : process(weight_buffer1_9_0_q0, weight_buffer0_9_0_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_9_0_q0 <= weight_buffer0_9_0_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_9_0_q0 <= weight_buffer1_9_0_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_9_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_9_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_9_1_q0_assign_proc : process(weight_buffer1_9_1_q0, weight_buffer0_9_1_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_9_1_q0 <= weight_buffer0_9_1_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_9_1_q0 <= weight_buffer1_9_1_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_9_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_9_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_9_2_q0_assign_proc : process(weight_buffer1_9_2_q0, weight_buffer0_9_2_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_9_2_q0 <= weight_buffer0_9_2_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_9_2_q0 <= weight_buffer1_9_2_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_9_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_9_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute4_fu_1110_weight_buffer_9_3_q0_assign_proc : process(weight_buffer1_9_3_q0, weight_buffer0_9_3_q0, ap_CS_fsm_state6, pingpong_reg_1032)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                grp_compute4_fu_1110_weight_buffer_9_3_q0 <= weight_buffer0_9_3_q0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                grp_compute4_fu_1110_weight_buffer_9_3_q0 <= weight_buffer1_9_3_q0;
            else 
                grp_compute4_fu_1110_weight_buffer_9_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute4_fu_1110_weight_buffer_9_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_copy_input_weight_fu_1649_LayerType_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_copy_input_weight_fu_1649_LayerType <= ap_const_lv4_0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_copy_input_weight_fu_1649_LayerType <= ap_const_lv4_1;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_copy_input_weight_fu_1649_LayerType <= ap_const_lv4_2;
        else 
            grp_copy_input_weight_fu_1649_LayerType <= "XXXX";
        end if; 
    end process;


    grp_copy_input_weight_fu_1649_Padding_assign_proc : process(Padding, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_copy_input_weight_fu_1649_Padding <= Padding;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_copy_input_weight_fu_1649_Padding <= ap_const_lv32_0;
        else 
            grp_copy_input_weight_fu_1649_Padding <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_copy_input_weight_fu_1649_TN_assign_proc : process(TN, TM, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_copy_input_weight_fu_1649_TN <= TN;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_copy_input_weight_fu_1649_TN <= TM;
        else 
            grp_copy_input_weight_fu_1649_TN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_copy_input_weight_fu_1649_ap_start <= grp_copy_input_weight_fu_1649_ap_start_reg;

    grp_copy_input_weight_fu_1649_enable_assign_proc : process(input_flag, pingpongx_offset_rea_read_fu_870_p2, tmp_43_reg_2525, ap_CS_fsm_state6, pingpong_reg_1032, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_copy_input_weight_fu_1649_enable <= tmp_43_reg_2525(0);
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_copy_input_weight_fu_1649_enable <= input_flag;
        else 
            grp_copy_input_weight_fu_1649_enable <= 'X';
        end if; 
    end process;


    grp_copy_input_weight_fu_1649_n_assign_proc : process(TMP_M, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, TMP_N_reg_1055, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_copy_input_weight_fu_1649_n <= TMP_N_reg_1055;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_copy_input_weight_fu_1649_n <= TMP_M;
        else 
            grp_copy_input_weight_fu_1649_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_copy_input_weight_fu_1649_p_read_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, NOP_0_load_reg_2492, TMP_N_next1_0_1_loa_reg_2530, TMP_N_next0_0_1_loa_reg_2536, ap_CS_fsm_state6, pingpong_reg_1032, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_copy_input_weight_fu_1649_p_read <= TMP_N_next1_0_1_loa_reg_2530;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_copy_input_weight_fu_1649_p_read <= TMP_N_next0_0_1_loa_reg_2536;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_copy_input_weight_fu_1649_p_read <= NOP_0_load_reg_2492;
        else 
            grp_copy_input_weight_fu_1649_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_copy_input_weight_fu_1649_weight_load_enable_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_copy_input_weight_fu_1649_weight_load_enable <= ap_const_logic_1;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_copy_input_weight_fu_1649_weight_load_enable <= ap_const_logic_0;
        else 
            grp_copy_input_weight_fu_1649_weight_load_enable <= 'X';
        end if; 
    end process;

    grp_fu_2209_p2 <= "0" when (n_reg_1044 = ap_const_lv31_0) else "1";

    grp_pool_yolo26_fu_2159_Input_0_q0_assign_proc : process(input_buffer1_0_q0, input_buffer0_0_q0, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1)) then 
                grp_pool_yolo26_fu_2159_Input_0_q0 <= input_buffer0_0_q0;
            elsif ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0)) then 
                grp_pool_yolo26_fu_2159_Input_0_q0 <= input_buffer1_0_q0;
            else 
                grp_pool_yolo26_fu_2159_Input_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_pool_yolo26_fu_2159_Input_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_pool_yolo26_fu_2159_Input_1_q0_assign_proc : process(input_buffer1_1_q0, input_buffer0_1_q0, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1)) then 
                grp_pool_yolo26_fu_2159_Input_1_q0 <= input_buffer0_1_q0;
            elsif ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0)) then 
                grp_pool_yolo26_fu_2159_Input_1_q0 <= input_buffer1_1_q0;
            else 
                grp_pool_yolo26_fu_2159_Input_1_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_pool_yolo26_fu_2159_Input_1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_pool_yolo26_fu_2159_Input_2_q0_assign_proc : process(input_buffer1_2_q0, input_buffer0_2_q0, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1)) then 
                grp_pool_yolo26_fu_2159_Input_2_q0 <= input_buffer0_2_q0;
            elsif ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0)) then 
                grp_pool_yolo26_fu_2159_Input_2_q0 <= input_buffer1_2_q0;
            else 
                grp_pool_yolo26_fu_2159_Input_2_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_pool_yolo26_fu_2159_Input_2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_pool_yolo26_fu_2159_Input_3_q0_assign_proc : process(input_buffer1_3_q0, input_buffer0_3_q0, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1)) then 
                grp_pool_yolo26_fu_2159_Input_3_q0 <= input_buffer0_3_q0;
            elsif ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0)) then 
                grp_pool_yolo26_fu_2159_Input_3_q0 <= input_buffer1_3_q0;
            else 
                grp_pool_yolo26_fu_2159_Input_3_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_pool_yolo26_fu_2159_Input_3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_pool_yolo26_fu_2159_ap_start <= grp_pool_yolo26_fu_2159_ap_start_reg;

    grp_reorg_yolo25_fu_2138_Input_0_q0_assign_proc : process(input_buffer1_0_q0, input_buffer0_0_q0, pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1)) then 
                grp_reorg_yolo25_fu_2138_Input_0_q0 <= input_buffer0_0_q0;
            elsif ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0)) then 
                grp_reorg_yolo25_fu_2138_Input_0_q0 <= input_buffer1_0_q0;
            else 
                grp_reorg_yolo25_fu_2138_Input_0_q0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_reorg_yolo25_fu_2138_Input_0_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reorg_yolo25_fu_2138_ap_start <= grp_reorg_yolo25_fu_2138_ap_start_reg;

    input_buffer0_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_0_address0, grp_copy_input_weight_fu_1649_input_buffer_0_address0, grp_reorg_yolo25_fu_2138_Input_0_address0, grp_pool_yolo26_fu_2159_Input_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_0_address0 <= grp_pool_yolo26_fu_2159_Input_0_address0;
        elsif (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_buffer0_0_address0 <= grp_reorg_yolo25_fu_2138_Input_0_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_0_address0 <= grp_copy_input_weight_fu_1649_input_buffer_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_0_address0 <= grp_compute4_fu_1110_input_buffer_0_address0;
        else 
            input_buffer0_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer0_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_0_ce0, grp_copy_input_weight_fu_1649_input_buffer_0_ce0, grp_reorg_yolo25_fu_2138_Input_0_ce0, grp_pool_yolo26_fu_2159_Input_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_0_ce0 <= grp_pool_yolo26_fu_2159_Input_0_ce0;
        elsif (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_buffer0_0_ce0 <= grp_reorg_yolo25_fu_2138_Input_0_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_0_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_0_ce0 <= grp_compute4_fu_1110_input_buffer_0_ce0;
        else 
            input_buffer0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer0_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_0_we0 <= grp_copy_input_weight_fu_1649_input_buffer_0_we0;
        else 
            input_buffer0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer0_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_1_address0, grp_copy_input_weight_fu_1649_input_buffer_1_address0, grp_pool_yolo26_fu_2159_Input_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_1_address0 <= grp_pool_yolo26_fu_2159_Input_1_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_1_address0 <= grp_copy_input_weight_fu_1649_input_buffer_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_1_address0 <= grp_compute4_fu_1110_input_buffer_1_address0;
        else 
            input_buffer0_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer0_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_1_ce0, grp_copy_input_weight_fu_1649_input_buffer_1_ce0, grp_pool_yolo26_fu_2159_Input_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_1_ce0 <= grp_pool_yolo26_fu_2159_Input_1_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_1_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_1_ce0 <= grp_compute4_fu_1110_input_buffer_1_ce0;
        else 
            input_buffer0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer0_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_1_we0 <= grp_copy_input_weight_fu_1649_input_buffer_1_we0;
        else 
            input_buffer0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer0_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_2_address0, grp_copy_input_weight_fu_1649_input_buffer_2_address0, grp_pool_yolo26_fu_2159_Input_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_2_address0 <= grp_pool_yolo26_fu_2159_Input_2_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_2_address0 <= grp_copy_input_weight_fu_1649_input_buffer_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_2_address0 <= grp_compute4_fu_1110_input_buffer_2_address0;
        else 
            input_buffer0_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer0_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_2_ce0, grp_copy_input_weight_fu_1649_input_buffer_2_ce0, grp_pool_yolo26_fu_2159_Input_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_2_ce0 <= grp_pool_yolo26_fu_2159_Input_2_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_2_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_2_ce0 <= grp_compute4_fu_1110_input_buffer_2_ce0;
        else 
            input_buffer0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer0_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_2_we0 <= grp_copy_input_weight_fu_1649_input_buffer_2_we0;
        else 
            input_buffer0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer0_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_3_address0, grp_copy_input_weight_fu_1649_input_buffer_3_address0, grp_pool_yolo26_fu_2159_Input_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_3_address0 <= grp_pool_yolo26_fu_2159_Input_3_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_3_address0 <= grp_copy_input_weight_fu_1649_input_buffer_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_3_address0 <= grp_compute4_fu_1110_input_buffer_3_address0;
        else 
            input_buffer0_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer0_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_3_ce0, grp_copy_input_weight_fu_1649_input_buffer_3_ce0, grp_pool_yolo26_fu_2159_Input_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer0_3_ce0 <= grp_pool_yolo26_fu_2159_Input_3_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_3_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer0_3_ce0 <= grp_compute4_fu_1110_input_buffer_3_ce0;
        else 
            input_buffer0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer0_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer0_3_we0 <= grp_copy_input_weight_fu_1649_input_buffer_3_we0;
        else 
            input_buffer0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_0_address0, grp_copy_input_weight_fu_1649_input_buffer_0_address0, grp_reorg_yolo25_fu_2138_Input_0_address0, grp_pool_yolo26_fu_2159_Input_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_0_address0 <= grp_pool_yolo26_fu_2159_Input_0_address0;
        elsif (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_buffer1_0_address0 <= grp_reorg_yolo25_fu_2138_Input_0_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_0_address0 <= grp_copy_input_weight_fu_1649_input_buffer_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_0_address0 <= grp_compute4_fu_1110_input_buffer_0_address0;
        else 
            input_buffer1_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer1_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_0_ce0, grp_copy_input_weight_fu_1649_input_buffer_0_ce0, grp_reorg_yolo25_fu_2138_Input_0_ce0, grp_pool_yolo26_fu_2159_Input_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_0_ce0 <= grp_pool_yolo26_fu_2159_Input_0_ce0;
        elsif (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_buffer1_0_ce0 <= grp_reorg_yolo25_fu_2138_Input_0_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_0_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_0_ce0 <= grp_compute4_fu_1110_input_buffer_0_ce0;
        else 
            input_buffer1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_0_we0 <= grp_copy_input_weight_fu_1649_input_buffer_0_we0;
        else 
            input_buffer1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_1_address0, grp_copy_input_weight_fu_1649_input_buffer_1_address0, grp_pool_yolo26_fu_2159_Input_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_1_address0 <= grp_pool_yolo26_fu_2159_Input_1_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_1_address0 <= grp_copy_input_weight_fu_1649_input_buffer_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_1_address0 <= grp_compute4_fu_1110_input_buffer_1_address0;
        else 
            input_buffer1_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer1_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_1_ce0, grp_copy_input_weight_fu_1649_input_buffer_1_ce0, grp_pool_yolo26_fu_2159_Input_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_1_ce0 <= grp_pool_yolo26_fu_2159_Input_1_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_1_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_1_ce0 <= grp_compute4_fu_1110_input_buffer_1_ce0;
        else 
            input_buffer1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_1_we0 <= grp_copy_input_weight_fu_1649_input_buffer_1_we0;
        else 
            input_buffer1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_2_address0, grp_copy_input_weight_fu_1649_input_buffer_2_address0, grp_pool_yolo26_fu_2159_Input_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_2_address0 <= grp_pool_yolo26_fu_2159_Input_2_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_2_address0 <= grp_copy_input_weight_fu_1649_input_buffer_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_2_address0 <= grp_compute4_fu_1110_input_buffer_2_address0;
        else 
            input_buffer1_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer1_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_2_ce0, grp_copy_input_weight_fu_1649_input_buffer_2_ce0, grp_pool_yolo26_fu_2159_Input_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_2_ce0 <= grp_pool_yolo26_fu_2159_Input_2_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_2_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_2_ce0 <= grp_compute4_fu_1110_input_buffer_2_ce0;
        else 
            input_buffer1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_2_we0 <= grp_copy_input_weight_fu_1649_input_buffer_2_we0;
        else 
            input_buffer1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_3_address0, grp_copy_input_weight_fu_1649_input_buffer_3_address0, grp_pool_yolo26_fu_2159_Input_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_3_address0 <= grp_pool_yolo26_fu_2159_Input_3_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_3_address0 <= grp_copy_input_weight_fu_1649_input_buffer_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_3_address0 <= grp_compute4_fu_1110_input_buffer_3_address0;
        else 
            input_buffer1_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer1_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_input_buffer_3_ce0, grp_copy_input_weight_fu_1649_input_buffer_3_ce0, grp_pool_yolo26_fu_2159_Input_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buffer1_3_ce0 <= grp_pool_yolo26_fu_2159_Input_3_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_3_ce0 <= grp_copy_input_weight_fu_1649_input_buffer_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            input_buffer1_3_ce0 <= grp_compute4_fu_1110_input_buffer_3_ce0;
        else 
            input_buffer1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer1_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_input_buffer_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            input_buffer1_3_we0 <= grp_copy_input_weight_fu_1649_input_buffer_3_we0;
        else 
            input_buffer1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    input_flag_read_read_fu_864_p2 <= (0=>input_flag, others=>'-');
    m_axi_Input1_ARADDR <= grp_copy_input_weight_fu_1649_m_axi_input1_ARADDR;
    m_axi_Input1_ARBURST <= grp_copy_input_weight_fu_1649_m_axi_input1_ARBURST;
    m_axi_Input1_ARCACHE <= grp_copy_input_weight_fu_1649_m_axi_input1_ARCACHE;
    m_axi_Input1_ARID <= grp_copy_input_weight_fu_1649_m_axi_input1_ARID;
    m_axi_Input1_ARLEN <= grp_copy_input_weight_fu_1649_m_axi_input1_ARLEN;
    m_axi_Input1_ARLOCK <= grp_copy_input_weight_fu_1649_m_axi_input1_ARLOCK;
    m_axi_Input1_ARPROT <= grp_copy_input_weight_fu_1649_m_axi_input1_ARPROT;
    m_axi_Input1_ARQOS <= grp_copy_input_weight_fu_1649_m_axi_input1_ARQOS;
    m_axi_Input1_ARREGION <= grp_copy_input_weight_fu_1649_m_axi_input1_ARREGION;
    m_axi_Input1_ARSIZE <= grp_copy_input_weight_fu_1649_m_axi_input1_ARSIZE;
    m_axi_Input1_ARUSER <= grp_copy_input_weight_fu_1649_m_axi_input1_ARUSER;

    m_axi_Input1_ARVALID_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input1_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input1_ARVALID <= grp_copy_input_weight_fu_1649_m_axi_input1_ARVALID;
        else 
            m_axi_Input1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input1_AWADDR <= ap_const_lv32_0;
    m_axi_Input1_AWBURST <= ap_const_lv2_0;
    m_axi_Input1_AWCACHE <= ap_const_lv4_0;
    m_axi_Input1_AWID <= ap_const_lv1_0;
    m_axi_Input1_AWLEN <= ap_const_lv32_0;
    m_axi_Input1_AWLOCK <= ap_const_lv2_0;
    m_axi_Input1_AWPROT <= ap_const_lv3_0;
    m_axi_Input1_AWQOS <= ap_const_lv4_0;
    m_axi_Input1_AWREGION <= ap_const_lv4_0;
    m_axi_Input1_AWSIZE <= ap_const_lv3_0;
    m_axi_Input1_AWUSER <= ap_const_lv1_0;
    m_axi_Input1_AWVALID <= ap_const_logic_0;
    m_axi_Input1_BREADY <= ap_const_logic_0;

    m_axi_Input1_RREADY_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input1_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input1_RREADY <= grp_copy_input_weight_fu_1649_m_axi_input1_RREADY;
        else 
            m_axi_Input1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input1_WDATA <= ap_const_lv32_0;
    m_axi_Input1_WID <= ap_const_lv1_0;
    m_axi_Input1_WLAST <= ap_const_logic_0;
    m_axi_Input1_WSTRB <= ap_const_lv4_0;
    m_axi_Input1_WUSER <= ap_const_lv1_0;
    m_axi_Input1_WVALID <= ap_const_logic_0;
    m_axi_Input2_ARADDR <= grp_copy_input_weight_fu_1649_m_axi_input2_ARADDR;
    m_axi_Input2_ARBURST <= grp_copy_input_weight_fu_1649_m_axi_input2_ARBURST;
    m_axi_Input2_ARCACHE <= grp_copy_input_weight_fu_1649_m_axi_input2_ARCACHE;
    m_axi_Input2_ARID <= grp_copy_input_weight_fu_1649_m_axi_input2_ARID;
    m_axi_Input2_ARLEN <= grp_copy_input_weight_fu_1649_m_axi_input2_ARLEN;
    m_axi_Input2_ARLOCK <= grp_copy_input_weight_fu_1649_m_axi_input2_ARLOCK;
    m_axi_Input2_ARPROT <= grp_copy_input_weight_fu_1649_m_axi_input2_ARPROT;
    m_axi_Input2_ARQOS <= grp_copy_input_weight_fu_1649_m_axi_input2_ARQOS;
    m_axi_Input2_ARREGION <= grp_copy_input_weight_fu_1649_m_axi_input2_ARREGION;
    m_axi_Input2_ARSIZE <= grp_copy_input_weight_fu_1649_m_axi_input2_ARSIZE;
    m_axi_Input2_ARUSER <= grp_copy_input_weight_fu_1649_m_axi_input2_ARUSER;

    m_axi_Input2_ARVALID_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input2_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input2_ARVALID <= grp_copy_input_weight_fu_1649_m_axi_input2_ARVALID;
        else 
            m_axi_Input2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input2_AWADDR <= ap_const_lv32_0;
    m_axi_Input2_AWBURST <= ap_const_lv2_0;
    m_axi_Input2_AWCACHE <= ap_const_lv4_0;
    m_axi_Input2_AWID <= ap_const_lv1_0;
    m_axi_Input2_AWLEN <= ap_const_lv32_0;
    m_axi_Input2_AWLOCK <= ap_const_lv2_0;
    m_axi_Input2_AWPROT <= ap_const_lv3_0;
    m_axi_Input2_AWQOS <= ap_const_lv4_0;
    m_axi_Input2_AWREGION <= ap_const_lv4_0;
    m_axi_Input2_AWSIZE <= ap_const_lv3_0;
    m_axi_Input2_AWUSER <= ap_const_lv1_0;
    m_axi_Input2_AWVALID <= ap_const_logic_0;
    m_axi_Input2_BREADY <= ap_const_logic_0;

    m_axi_Input2_RREADY_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input2_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input2_RREADY <= grp_copy_input_weight_fu_1649_m_axi_input2_RREADY;
        else 
            m_axi_Input2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input2_WDATA <= ap_const_lv32_0;
    m_axi_Input2_WID <= ap_const_lv1_0;
    m_axi_Input2_WLAST <= ap_const_logic_0;
    m_axi_Input2_WSTRB <= ap_const_lv4_0;
    m_axi_Input2_WUSER <= ap_const_lv1_0;
    m_axi_Input2_WVALID <= ap_const_logic_0;
    m_axi_Input3_ARADDR <= grp_copy_input_weight_fu_1649_m_axi_input3_ARADDR;
    m_axi_Input3_ARBURST <= grp_copy_input_weight_fu_1649_m_axi_input3_ARBURST;
    m_axi_Input3_ARCACHE <= grp_copy_input_weight_fu_1649_m_axi_input3_ARCACHE;
    m_axi_Input3_ARID <= grp_copy_input_weight_fu_1649_m_axi_input3_ARID;
    m_axi_Input3_ARLEN <= grp_copy_input_weight_fu_1649_m_axi_input3_ARLEN;
    m_axi_Input3_ARLOCK <= grp_copy_input_weight_fu_1649_m_axi_input3_ARLOCK;
    m_axi_Input3_ARPROT <= grp_copy_input_weight_fu_1649_m_axi_input3_ARPROT;
    m_axi_Input3_ARQOS <= grp_copy_input_weight_fu_1649_m_axi_input3_ARQOS;
    m_axi_Input3_ARREGION <= grp_copy_input_weight_fu_1649_m_axi_input3_ARREGION;
    m_axi_Input3_ARSIZE <= grp_copy_input_weight_fu_1649_m_axi_input3_ARSIZE;
    m_axi_Input3_ARUSER <= grp_copy_input_weight_fu_1649_m_axi_input3_ARUSER;

    m_axi_Input3_ARVALID_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input3_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input3_ARVALID <= grp_copy_input_weight_fu_1649_m_axi_input3_ARVALID;
        else 
            m_axi_Input3_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input3_AWADDR <= ap_const_lv32_0;
    m_axi_Input3_AWBURST <= ap_const_lv2_0;
    m_axi_Input3_AWCACHE <= ap_const_lv4_0;
    m_axi_Input3_AWID <= ap_const_lv1_0;
    m_axi_Input3_AWLEN <= ap_const_lv32_0;
    m_axi_Input3_AWLOCK <= ap_const_lv2_0;
    m_axi_Input3_AWPROT <= ap_const_lv3_0;
    m_axi_Input3_AWQOS <= ap_const_lv4_0;
    m_axi_Input3_AWREGION <= ap_const_lv4_0;
    m_axi_Input3_AWSIZE <= ap_const_lv3_0;
    m_axi_Input3_AWUSER <= ap_const_lv1_0;
    m_axi_Input3_AWVALID <= ap_const_logic_0;
    m_axi_Input3_BREADY <= ap_const_logic_0;

    m_axi_Input3_RREADY_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input3_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input3_RREADY <= grp_copy_input_weight_fu_1649_m_axi_input3_RREADY;
        else 
            m_axi_Input3_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input3_WDATA <= ap_const_lv32_0;
    m_axi_Input3_WID <= ap_const_lv1_0;
    m_axi_Input3_WLAST <= ap_const_logic_0;
    m_axi_Input3_WSTRB <= ap_const_lv4_0;
    m_axi_Input3_WUSER <= ap_const_lv1_0;
    m_axi_Input3_WVALID <= ap_const_logic_0;
    m_axi_Input_r_ARADDR <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARADDR;
    m_axi_Input_r_ARBURST <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARBURST;
    m_axi_Input_r_ARCACHE <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARCACHE;
    m_axi_Input_r_ARID <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARID;
    m_axi_Input_r_ARLEN <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARLEN;
    m_axi_Input_r_ARLOCK <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARLOCK;
    m_axi_Input_r_ARPROT <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARPROT;
    m_axi_Input_r_ARQOS <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARQOS;
    m_axi_Input_r_ARREGION <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARREGION;
    m_axi_Input_r_ARSIZE <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARSIZE;
    m_axi_Input_r_ARUSER <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARUSER;

    m_axi_Input_r_ARVALID_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input_r_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input_r_ARVALID <= grp_copy_input_weight_fu_1649_m_axi_input_r_ARVALID;
        else 
            m_axi_Input_r_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input_r_AWADDR <= ap_const_lv32_0;
    m_axi_Input_r_AWBURST <= ap_const_lv2_0;
    m_axi_Input_r_AWCACHE <= ap_const_lv4_0;
    m_axi_Input_r_AWID <= ap_const_lv1_0;
    m_axi_Input_r_AWLEN <= ap_const_lv32_0;
    m_axi_Input_r_AWLOCK <= ap_const_lv2_0;
    m_axi_Input_r_AWPROT <= ap_const_lv3_0;
    m_axi_Input_r_AWQOS <= ap_const_lv4_0;
    m_axi_Input_r_AWREGION <= ap_const_lv4_0;
    m_axi_Input_r_AWSIZE <= ap_const_lv3_0;
    m_axi_Input_r_AWUSER <= ap_const_lv1_0;
    m_axi_Input_r_AWVALID <= ap_const_logic_0;
    m_axi_Input_r_BREADY <= ap_const_logic_0;

    m_axi_Input_r_RREADY_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_input_r_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Input_r_RREADY <= grp_copy_input_weight_fu_1649_m_axi_input_r_RREADY;
        else 
            m_axi_Input_r_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Input_r_WDATA <= ap_const_lv32_0;
    m_axi_Input_r_WID <= ap_const_lv1_0;
    m_axi_Input_r_WLAST <= ap_const_logic_0;
    m_axi_Input_r_WSTRB <= ap_const_lv4_0;
    m_axi_Input_r_WUSER <= ap_const_lv1_0;
    m_axi_Input_r_WVALID <= ap_const_logic_0;
    m_axi_Weight_ARADDR <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARADDR;
    m_axi_Weight_ARBURST <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARBURST;
    m_axi_Weight_ARCACHE <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARCACHE;
    m_axi_Weight_ARID <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARID;
    m_axi_Weight_ARLEN <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARLEN;
    m_axi_Weight_ARLOCK <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARLOCK;
    m_axi_Weight_ARPROT <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARPROT;
    m_axi_Weight_ARQOS <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARQOS;
    m_axi_Weight_ARREGION <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARREGION;
    m_axi_Weight_ARSIZE <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARSIZE;
    m_axi_Weight_ARUSER <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARUSER;

    m_axi_Weight_ARVALID_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_Weight_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Weight_ARVALID <= grp_copy_input_weight_fu_1649_m_axi_Weight_ARVALID;
        else 
            m_axi_Weight_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Weight_AWADDR <= ap_const_lv32_0;
    m_axi_Weight_AWBURST <= ap_const_lv2_0;
    m_axi_Weight_AWCACHE <= ap_const_lv4_0;
    m_axi_Weight_AWID <= ap_const_lv1_0;
    m_axi_Weight_AWLEN <= ap_const_lv32_0;
    m_axi_Weight_AWLOCK <= ap_const_lv2_0;
    m_axi_Weight_AWPROT <= ap_const_lv3_0;
    m_axi_Weight_AWQOS <= ap_const_lv4_0;
    m_axi_Weight_AWREGION <= ap_const_lv4_0;
    m_axi_Weight_AWSIZE <= ap_const_lv3_0;
    m_axi_Weight_AWUSER <= ap_const_lv1_0;
    m_axi_Weight_AWVALID <= ap_const_logic_0;
    m_axi_Weight_BREADY <= ap_const_logic_0;

    m_axi_Weight_RREADY_assign_proc : process(ap_CS_fsm_state1, pingpongx_offset_rea_read_fu_870_p2, tmp_fu_2215_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_m_axi_Weight_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state2, tmp_40_fu_2240_p2, tmp_s_fu_2221_p2, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_s_fu_2221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_s_fu_2221_p2 = ap_const_lv1_0) and (tmp_fu_2215_p2 = ap_const_lv1_0) and (pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (tmp_40_fu_2240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_Weight_RREADY <= grp_copy_input_weight_fu_1649_m_axi_Weight_RREADY;
        else 
            m_axi_Weight_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Weight_WDATA <= ap_const_lv32_0;
    m_axi_Weight_WID <= ap_const_lv1_0;
    m_axi_Weight_WLAST <= ap_const_logic_0;
    m_axi_Weight_WSTRB <= ap_const_lv4_0;
    m_axi_Weight_WUSER <= ap_const_lv1_0;
    m_axi_Weight_WVALID <= ap_const_logic_0;
    n_1_fu_2261_p2 <= std_logic_vector(unsigned(n_reg_1044) + unsigned(ap_const_lv31_1));
    n_cast_fu_2252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_reg_1044),32));

    output_buffer_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_0_address0, grp_reorg_yolo25_fu_2138_Output_0_address0, grp_pool_yolo26_fu_2159_Output_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_0_address0 <= grp_pool_yolo26_fu_2159_Output_0_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_0_address0 <= grp_reorg_yolo25_fu_2138_Output_0_address0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_0_address0 <= grp_compute4_fu_1110_output_buffer_0_address0;
        else 
            output_buffer_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    output_buffer_0_address1 <= grp_compute4_fu_1110_output_buffer_0_address1;

    output_buffer_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_0_ce0, grp_reorg_yolo25_fu_2138_Output_0_ce0, grp_pool_yolo26_fu_2159_Output_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_0_ce0 <= grp_pool_yolo26_fu_2159_Output_0_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_0_ce0 <= grp_reorg_yolo25_fu_2138_Output_0_ce0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_0_ce0 <= grp_compute4_fu_1110_output_buffer_0_ce0;
        else 
            output_buffer_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_0_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_0_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_0_ce1 <= grp_compute4_fu_1110_output_buffer_0_ce1;
        else 
            output_buffer_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_0_d0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_0_d0, grp_pool_yolo26_fu_2159_Output_0_d0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_0_d0 <= grp_pool_yolo26_fu_2159_Output_0_d0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_0_d0 <= grp_reorg_yolo25_fu_2138_Output_0_d0;
        else 
            output_buffer_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_buffer_0_d1 <= grp_compute4_fu_1110_output_buffer_0_d1;

    output_buffer_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_0_we0, grp_pool_yolo26_fu_2159_Output_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_0_we0 <= grp_pool_yolo26_fu_2159_Output_0_we0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_0_we0 <= grp_reorg_yolo25_fu_2138_Output_0_we0;
        else 
            output_buffer_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_0_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_0_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_0_we1 <= grp_compute4_fu_1110_output_buffer_0_we1;
        else 
            output_buffer_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_10_address0 <= grp_compute4_fu_1110_output_buffer_10_address0;
    output_buffer_10_address1 <= grp_compute4_fu_1110_output_buffer_10_address1;

    output_buffer_10_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_10_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_10_ce0 <= grp_compute4_fu_1110_output_buffer_10_ce0;
        else 
            output_buffer_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_10_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_10_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_10_ce1 <= grp_compute4_fu_1110_output_buffer_10_ce1;
        else 
            output_buffer_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_10_d1 <= grp_compute4_fu_1110_output_buffer_10_d1;

    output_buffer_10_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_10_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_10_we1 <= grp_compute4_fu_1110_output_buffer_10_we1;
        else 
            output_buffer_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_11_address0 <= grp_compute4_fu_1110_output_buffer_11_address0;
    output_buffer_11_address1 <= grp_compute4_fu_1110_output_buffer_11_address1;

    output_buffer_11_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_11_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_11_ce0 <= grp_compute4_fu_1110_output_buffer_11_ce0;
        else 
            output_buffer_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_11_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_11_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_11_ce1 <= grp_compute4_fu_1110_output_buffer_11_ce1;
        else 
            output_buffer_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_11_d1 <= grp_compute4_fu_1110_output_buffer_11_d1;

    output_buffer_11_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_11_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_11_we1 <= grp_compute4_fu_1110_output_buffer_11_we1;
        else 
            output_buffer_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_12_address0 <= grp_compute4_fu_1110_output_buffer_12_address0;
    output_buffer_12_address1 <= grp_compute4_fu_1110_output_buffer_12_address1;

    output_buffer_12_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_12_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_12_ce0 <= grp_compute4_fu_1110_output_buffer_12_ce0;
        else 
            output_buffer_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_12_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_12_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_12_ce1 <= grp_compute4_fu_1110_output_buffer_12_ce1;
        else 
            output_buffer_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_12_d1 <= grp_compute4_fu_1110_output_buffer_12_d1;

    output_buffer_12_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_12_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_12_we1 <= grp_compute4_fu_1110_output_buffer_12_we1;
        else 
            output_buffer_12_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_13_address0 <= grp_compute4_fu_1110_output_buffer_13_address0;
    output_buffer_13_address1 <= grp_compute4_fu_1110_output_buffer_13_address1;

    output_buffer_13_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_13_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_13_ce0 <= grp_compute4_fu_1110_output_buffer_13_ce0;
        else 
            output_buffer_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_13_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_13_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_13_ce1 <= grp_compute4_fu_1110_output_buffer_13_ce1;
        else 
            output_buffer_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_13_d1 <= grp_compute4_fu_1110_output_buffer_13_d1;

    output_buffer_13_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_13_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_13_we1 <= grp_compute4_fu_1110_output_buffer_13_we1;
        else 
            output_buffer_13_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_14_address0 <= grp_compute4_fu_1110_output_buffer_14_address0;
    output_buffer_14_address1 <= grp_compute4_fu_1110_output_buffer_14_address1;

    output_buffer_14_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_14_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_14_ce0 <= grp_compute4_fu_1110_output_buffer_14_ce0;
        else 
            output_buffer_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_14_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_14_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_14_ce1 <= grp_compute4_fu_1110_output_buffer_14_ce1;
        else 
            output_buffer_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_14_d1 <= grp_compute4_fu_1110_output_buffer_14_d1;

    output_buffer_14_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_14_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_14_we1 <= grp_compute4_fu_1110_output_buffer_14_we1;
        else 
            output_buffer_14_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_15_address0 <= grp_compute4_fu_1110_output_buffer_15_address0;
    output_buffer_15_address1 <= grp_compute4_fu_1110_output_buffer_15_address1;

    output_buffer_15_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_15_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_15_ce0 <= grp_compute4_fu_1110_output_buffer_15_ce0;
        else 
            output_buffer_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_15_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_15_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_15_ce1 <= grp_compute4_fu_1110_output_buffer_15_ce1;
        else 
            output_buffer_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_15_d1 <= grp_compute4_fu_1110_output_buffer_15_d1;

    output_buffer_15_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_15_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_15_we1 <= grp_compute4_fu_1110_output_buffer_15_we1;
        else 
            output_buffer_15_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_16_address0 <= grp_compute4_fu_1110_output_buffer_16_address0;
    output_buffer_16_address1 <= grp_compute4_fu_1110_output_buffer_16_address1;

    output_buffer_16_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_16_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_16_ce0 <= grp_compute4_fu_1110_output_buffer_16_ce0;
        else 
            output_buffer_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_16_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_16_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_16_ce1 <= grp_compute4_fu_1110_output_buffer_16_ce1;
        else 
            output_buffer_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_16_d1 <= grp_compute4_fu_1110_output_buffer_16_d1;

    output_buffer_16_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_16_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_16_we1 <= grp_compute4_fu_1110_output_buffer_16_we1;
        else 
            output_buffer_16_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_17_address0 <= grp_compute4_fu_1110_output_buffer_17_address0;
    output_buffer_17_address1 <= grp_compute4_fu_1110_output_buffer_17_address1;

    output_buffer_17_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_17_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_17_ce0 <= grp_compute4_fu_1110_output_buffer_17_ce0;
        else 
            output_buffer_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_17_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_17_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_17_ce1 <= grp_compute4_fu_1110_output_buffer_17_ce1;
        else 
            output_buffer_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_17_d1 <= grp_compute4_fu_1110_output_buffer_17_d1;

    output_buffer_17_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_17_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_17_we1 <= grp_compute4_fu_1110_output_buffer_17_we1;
        else 
            output_buffer_17_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_18_address0 <= grp_compute4_fu_1110_output_buffer_18_address0;
    output_buffer_18_address1 <= grp_compute4_fu_1110_output_buffer_18_address1;

    output_buffer_18_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_18_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_18_ce0 <= grp_compute4_fu_1110_output_buffer_18_ce0;
        else 
            output_buffer_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_18_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_18_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_18_ce1 <= grp_compute4_fu_1110_output_buffer_18_ce1;
        else 
            output_buffer_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_18_d1 <= grp_compute4_fu_1110_output_buffer_18_d1;

    output_buffer_18_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_18_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_18_we1 <= grp_compute4_fu_1110_output_buffer_18_we1;
        else 
            output_buffer_18_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_19_address0 <= grp_compute4_fu_1110_output_buffer_19_address0;
    output_buffer_19_address1 <= grp_compute4_fu_1110_output_buffer_19_address1;

    output_buffer_19_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_19_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_19_ce0 <= grp_compute4_fu_1110_output_buffer_19_ce0;
        else 
            output_buffer_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_19_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_19_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_19_ce1 <= grp_compute4_fu_1110_output_buffer_19_ce1;
        else 
            output_buffer_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_19_d1 <= grp_compute4_fu_1110_output_buffer_19_d1;

    output_buffer_19_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_19_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_19_we1 <= grp_compute4_fu_1110_output_buffer_19_we1;
        else 
            output_buffer_19_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_1_address0, grp_reorg_yolo25_fu_2138_Output_1_address0, grp_pool_yolo26_fu_2159_Output_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_1_address0 <= grp_pool_yolo26_fu_2159_Output_1_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_1_address0 <= grp_reorg_yolo25_fu_2138_Output_1_address0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_1_address0 <= grp_compute4_fu_1110_output_buffer_1_address0;
        else 
            output_buffer_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    output_buffer_1_address1 <= grp_compute4_fu_1110_output_buffer_1_address1;

    output_buffer_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_1_ce0, grp_reorg_yolo25_fu_2138_Output_1_ce0, grp_pool_yolo26_fu_2159_Output_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_1_ce0 <= grp_pool_yolo26_fu_2159_Output_1_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_1_ce0 <= grp_reorg_yolo25_fu_2138_Output_1_ce0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_1_ce0 <= grp_compute4_fu_1110_output_buffer_1_ce0;
        else 
            output_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_1_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_1_ce1 <= grp_compute4_fu_1110_output_buffer_1_ce1;
        else 
            output_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_d0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_1_d0, grp_pool_yolo26_fu_2159_Output_1_d0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_1_d0 <= grp_pool_yolo26_fu_2159_Output_1_d0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_1_d0 <= grp_reorg_yolo25_fu_2138_Output_1_d0;
        else 
            output_buffer_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_buffer_1_d1 <= grp_compute4_fu_1110_output_buffer_1_d1;

    output_buffer_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_1_we0, grp_pool_yolo26_fu_2159_Output_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_1_we0 <= grp_pool_yolo26_fu_2159_Output_1_we0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_1_we0 <= grp_reorg_yolo25_fu_2138_Output_1_we0;
        else 
            output_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_1_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_1_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_1_we1 <= grp_compute4_fu_1110_output_buffer_1_we1;
        else 
            output_buffer_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_20_address0 <= grp_compute4_fu_1110_output_buffer_20_address0;
    output_buffer_20_address1 <= grp_compute4_fu_1110_output_buffer_20_address1;

    output_buffer_20_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_20_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_20_ce0 <= grp_compute4_fu_1110_output_buffer_20_ce0;
        else 
            output_buffer_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_20_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_20_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_20_ce1 <= grp_compute4_fu_1110_output_buffer_20_ce1;
        else 
            output_buffer_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_20_d1 <= grp_compute4_fu_1110_output_buffer_20_d1;

    output_buffer_20_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_20_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_20_we1 <= grp_compute4_fu_1110_output_buffer_20_we1;
        else 
            output_buffer_20_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_21_address0 <= grp_compute4_fu_1110_output_buffer_21_address0;
    output_buffer_21_address1 <= grp_compute4_fu_1110_output_buffer_21_address1;

    output_buffer_21_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_21_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_21_ce0 <= grp_compute4_fu_1110_output_buffer_21_ce0;
        else 
            output_buffer_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_21_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_21_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_21_ce1 <= grp_compute4_fu_1110_output_buffer_21_ce1;
        else 
            output_buffer_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_21_d1 <= grp_compute4_fu_1110_output_buffer_21_d1;

    output_buffer_21_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_21_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_21_we1 <= grp_compute4_fu_1110_output_buffer_21_we1;
        else 
            output_buffer_21_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_22_address0 <= grp_compute4_fu_1110_output_buffer_22_address0;
    output_buffer_22_address1 <= grp_compute4_fu_1110_output_buffer_22_address1;

    output_buffer_22_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_22_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_22_ce0 <= grp_compute4_fu_1110_output_buffer_22_ce0;
        else 
            output_buffer_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_22_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_22_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_22_ce1 <= grp_compute4_fu_1110_output_buffer_22_ce1;
        else 
            output_buffer_22_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_22_d1 <= grp_compute4_fu_1110_output_buffer_22_d1;

    output_buffer_22_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_22_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_22_we1 <= grp_compute4_fu_1110_output_buffer_22_we1;
        else 
            output_buffer_22_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_23_address0 <= grp_compute4_fu_1110_output_buffer_23_address0;
    output_buffer_23_address1 <= grp_compute4_fu_1110_output_buffer_23_address1;

    output_buffer_23_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_23_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_23_ce0 <= grp_compute4_fu_1110_output_buffer_23_ce0;
        else 
            output_buffer_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_23_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_23_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_23_ce1 <= grp_compute4_fu_1110_output_buffer_23_ce1;
        else 
            output_buffer_23_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_23_d1 <= grp_compute4_fu_1110_output_buffer_23_d1;

    output_buffer_23_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_23_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_23_we1 <= grp_compute4_fu_1110_output_buffer_23_we1;
        else 
            output_buffer_23_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_24_address0 <= grp_compute4_fu_1110_output_buffer_24_address0;
    output_buffer_24_address1 <= grp_compute4_fu_1110_output_buffer_24_address1;

    output_buffer_24_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_24_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_24_ce0 <= grp_compute4_fu_1110_output_buffer_24_ce0;
        else 
            output_buffer_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_24_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_24_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_24_ce1 <= grp_compute4_fu_1110_output_buffer_24_ce1;
        else 
            output_buffer_24_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_24_d1 <= grp_compute4_fu_1110_output_buffer_24_d1;

    output_buffer_24_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_24_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_24_we1 <= grp_compute4_fu_1110_output_buffer_24_we1;
        else 
            output_buffer_24_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_25_address0 <= grp_compute4_fu_1110_output_buffer_25_address0;
    output_buffer_25_address1 <= grp_compute4_fu_1110_output_buffer_25_address1;

    output_buffer_25_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_25_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_25_ce0 <= grp_compute4_fu_1110_output_buffer_25_ce0;
        else 
            output_buffer_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_25_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_25_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_25_ce1 <= grp_compute4_fu_1110_output_buffer_25_ce1;
        else 
            output_buffer_25_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_25_d1 <= grp_compute4_fu_1110_output_buffer_25_d1;

    output_buffer_25_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_25_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_25_we1 <= grp_compute4_fu_1110_output_buffer_25_we1;
        else 
            output_buffer_25_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_26_address0 <= grp_compute4_fu_1110_output_buffer_26_address0;
    output_buffer_26_address1 <= grp_compute4_fu_1110_output_buffer_26_address1;

    output_buffer_26_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_26_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_26_ce0 <= grp_compute4_fu_1110_output_buffer_26_ce0;
        else 
            output_buffer_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_26_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_26_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_26_ce1 <= grp_compute4_fu_1110_output_buffer_26_ce1;
        else 
            output_buffer_26_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_26_d1 <= grp_compute4_fu_1110_output_buffer_26_d1;

    output_buffer_26_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_26_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_26_we1 <= grp_compute4_fu_1110_output_buffer_26_we1;
        else 
            output_buffer_26_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_27_address0 <= grp_compute4_fu_1110_output_buffer_27_address0;
    output_buffer_27_address1 <= grp_compute4_fu_1110_output_buffer_27_address1;

    output_buffer_27_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_27_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_27_ce0 <= grp_compute4_fu_1110_output_buffer_27_ce0;
        else 
            output_buffer_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_27_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_27_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_27_ce1 <= grp_compute4_fu_1110_output_buffer_27_ce1;
        else 
            output_buffer_27_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_27_d1 <= grp_compute4_fu_1110_output_buffer_27_d1;

    output_buffer_27_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_27_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_27_we1 <= grp_compute4_fu_1110_output_buffer_27_we1;
        else 
            output_buffer_27_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_28_address0 <= grp_compute4_fu_1110_output_buffer_28_address0;
    output_buffer_28_address1 <= grp_compute4_fu_1110_output_buffer_28_address1;

    output_buffer_28_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_28_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_28_ce0 <= grp_compute4_fu_1110_output_buffer_28_ce0;
        else 
            output_buffer_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_28_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_28_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_28_ce1 <= grp_compute4_fu_1110_output_buffer_28_ce1;
        else 
            output_buffer_28_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_28_d1 <= grp_compute4_fu_1110_output_buffer_28_d1;

    output_buffer_28_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_28_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_28_we1 <= grp_compute4_fu_1110_output_buffer_28_we1;
        else 
            output_buffer_28_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_29_address0 <= grp_compute4_fu_1110_output_buffer_29_address0;
    output_buffer_29_address1 <= grp_compute4_fu_1110_output_buffer_29_address1;

    output_buffer_29_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_29_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_29_ce0 <= grp_compute4_fu_1110_output_buffer_29_ce0;
        else 
            output_buffer_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_29_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_29_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_29_ce1 <= grp_compute4_fu_1110_output_buffer_29_ce1;
        else 
            output_buffer_29_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_29_d1 <= grp_compute4_fu_1110_output_buffer_29_d1;

    output_buffer_29_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_29_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_29_we1 <= grp_compute4_fu_1110_output_buffer_29_we1;
        else 
            output_buffer_29_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_2_address0, grp_reorg_yolo25_fu_2138_Output_2_address0, grp_pool_yolo26_fu_2159_Output_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_2_address0 <= grp_pool_yolo26_fu_2159_Output_2_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_2_address0 <= grp_reorg_yolo25_fu_2138_Output_2_address0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_2_address0 <= grp_compute4_fu_1110_output_buffer_2_address0;
        else 
            output_buffer_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    output_buffer_2_address1 <= grp_compute4_fu_1110_output_buffer_2_address1;

    output_buffer_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_2_ce0, grp_reorg_yolo25_fu_2138_Output_2_ce0, grp_pool_yolo26_fu_2159_Output_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_2_ce0 <= grp_pool_yolo26_fu_2159_Output_2_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_2_ce0 <= grp_reorg_yolo25_fu_2138_Output_2_ce0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_2_ce0 <= grp_compute4_fu_1110_output_buffer_2_ce0;
        else 
            output_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_2_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_2_ce1 <= grp_compute4_fu_1110_output_buffer_2_ce1;
        else 
            output_buffer_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_d0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_2_d0, grp_pool_yolo26_fu_2159_Output_2_d0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_2_d0 <= grp_pool_yolo26_fu_2159_Output_2_d0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_2_d0 <= grp_reorg_yolo25_fu_2138_Output_2_d0;
        else 
            output_buffer_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_buffer_2_d1 <= grp_compute4_fu_1110_output_buffer_2_d1;

    output_buffer_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_2_we0, grp_pool_yolo26_fu_2159_Output_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_2_we0 <= grp_pool_yolo26_fu_2159_Output_2_we0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_2_we0 <= grp_reorg_yolo25_fu_2138_Output_2_we0;
        else 
            output_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_2_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_2_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_2_we1 <= grp_compute4_fu_1110_output_buffer_2_we1;
        else 
            output_buffer_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_30_address0 <= grp_compute4_fu_1110_output_buffer_30_address0;
    output_buffer_30_address1 <= grp_compute4_fu_1110_output_buffer_30_address1;

    output_buffer_30_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_30_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_30_ce0 <= grp_compute4_fu_1110_output_buffer_30_ce0;
        else 
            output_buffer_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_30_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_30_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_30_ce1 <= grp_compute4_fu_1110_output_buffer_30_ce1;
        else 
            output_buffer_30_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_30_d1 <= grp_compute4_fu_1110_output_buffer_30_d1;

    output_buffer_30_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_30_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_30_we1 <= grp_compute4_fu_1110_output_buffer_30_we1;
        else 
            output_buffer_30_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_31_address0 <= grp_compute4_fu_1110_output_buffer_31_address0;
    output_buffer_31_address1 <= grp_compute4_fu_1110_output_buffer_31_address1;

    output_buffer_31_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_31_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_31_ce0 <= grp_compute4_fu_1110_output_buffer_31_ce0;
        else 
            output_buffer_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_31_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_31_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_31_ce1 <= grp_compute4_fu_1110_output_buffer_31_ce1;
        else 
            output_buffer_31_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_31_d1 <= grp_compute4_fu_1110_output_buffer_31_d1;

    output_buffer_31_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_31_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_31_we1 <= grp_compute4_fu_1110_output_buffer_31_we1;
        else 
            output_buffer_31_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_3_address0, grp_reorg_yolo25_fu_2138_Output_3_address0, grp_pool_yolo26_fu_2159_Output_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_3_address0 <= grp_pool_yolo26_fu_2159_Output_3_address0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_3_address0 <= grp_reorg_yolo25_fu_2138_Output_3_address0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_3_address0 <= grp_compute4_fu_1110_output_buffer_3_address0;
        else 
            output_buffer_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    output_buffer_3_address1 <= grp_compute4_fu_1110_output_buffer_3_address1;

    output_buffer_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_3_ce0, grp_reorg_yolo25_fu_2138_Output_3_ce0, grp_pool_yolo26_fu_2159_Output_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_3_ce0 <= grp_pool_yolo26_fu_2159_Output_3_ce0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_3_ce0 <= grp_reorg_yolo25_fu_2138_Output_3_ce0;
        elsif ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_3_ce0 <= grp_compute4_fu_1110_output_buffer_3_ce0;
        else 
            output_buffer_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_3_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_3_ce1 <= grp_compute4_fu_1110_output_buffer_3_ce1;
        else 
            output_buffer_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_d0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_3_d0, grp_pool_yolo26_fu_2159_Output_3_d0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_3_d0 <= grp_pool_yolo26_fu_2159_Output_3_d0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_3_d0 <= grp_reorg_yolo25_fu_2138_Output_3_d0;
        else 
            output_buffer_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_buffer_3_d1 <= grp_compute4_fu_1110_output_buffer_3_d1;

    output_buffer_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, grp_reorg_yolo25_fu_2138_Output_3_we0, grp_pool_yolo26_fu_2159_Output_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            output_buffer_3_we0 <= grp_pool_yolo26_fu_2159_Output_3_we0;
        elsif ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            output_buffer_3_we0 <= grp_reorg_yolo25_fu_2138_Output_3_we0;
        else 
            output_buffer_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_3_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_3_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_3_we1 <= grp_compute4_fu_1110_output_buffer_3_we1;
        else 
            output_buffer_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_4_address0 <= grp_compute4_fu_1110_output_buffer_4_address0;
    output_buffer_4_address1 <= grp_compute4_fu_1110_output_buffer_4_address1;

    output_buffer_4_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_4_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_4_ce0 <= grp_compute4_fu_1110_output_buffer_4_ce0;
        else 
            output_buffer_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_4_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_4_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_4_ce1 <= grp_compute4_fu_1110_output_buffer_4_ce1;
        else 
            output_buffer_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_4_d1 <= grp_compute4_fu_1110_output_buffer_4_d1;

    output_buffer_4_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_4_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_4_we1 <= grp_compute4_fu_1110_output_buffer_4_we1;
        else 
            output_buffer_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_5_address0 <= grp_compute4_fu_1110_output_buffer_5_address0;
    output_buffer_5_address1 <= grp_compute4_fu_1110_output_buffer_5_address1;

    output_buffer_5_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_5_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_5_ce0 <= grp_compute4_fu_1110_output_buffer_5_ce0;
        else 
            output_buffer_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_5_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_5_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_5_ce1 <= grp_compute4_fu_1110_output_buffer_5_ce1;
        else 
            output_buffer_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_5_d1 <= grp_compute4_fu_1110_output_buffer_5_d1;

    output_buffer_5_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_5_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_5_we1 <= grp_compute4_fu_1110_output_buffer_5_we1;
        else 
            output_buffer_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_6_address0 <= grp_compute4_fu_1110_output_buffer_6_address0;
    output_buffer_6_address1 <= grp_compute4_fu_1110_output_buffer_6_address1;

    output_buffer_6_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_6_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_6_ce0 <= grp_compute4_fu_1110_output_buffer_6_ce0;
        else 
            output_buffer_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_6_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_6_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_6_ce1 <= grp_compute4_fu_1110_output_buffer_6_ce1;
        else 
            output_buffer_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_6_d1 <= grp_compute4_fu_1110_output_buffer_6_d1;

    output_buffer_6_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_6_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_6_we1 <= grp_compute4_fu_1110_output_buffer_6_we1;
        else 
            output_buffer_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_7_address0 <= grp_compute4_fu_1110_output_buffer_7_address0;
    output_buffer_7_address1 <= grp_compute4_fu_1110_output_buffer_7_address1;

    output_buffer_7_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_7_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_7_ce0 <= grp_compute4_fu_1110_output_buffer_7_ce0;
        else 
            output_buffer_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_7_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_7_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_7_ce1 <= grp_compute4_fu_1110_output_buffer_7_ce1;
        else 
            output_buffer_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_7_d1 <= grp_compute4_fu_1110_output_buffer_7_d1;

    output_buffer_7_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_7_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_7_we1 <= grp_compute4_fu_1110_output_buffer_7_we1;
        else 
            output_buffer_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_8_address0 <= grp_compute4_fu_1110_output_buffer_8_address0;
    output_buffer_8_address1 <= grp_compute4_fu_1110_output_buffer_8_address1;

    output_buffer_8_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_8_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_8_ce0 <= grp_compute4_fu_1110_output_buffer_8_ce0;
        else 
            output_buffer_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_8_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_8_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_8_ce1 <= grp_compute4_fu_1110_output_buffer_8_ce1;
        else 
            output_buffer_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_8_d1 <= grp_compute4_fu_1110_output_buffer_8_d1;

    output_buffer_8_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_8_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_8_we1 <= grp_compute4_fu_1110_output_buffer_8_we1;
        else 
            output_buffer_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_9_address0 <= grp_compute4_fu_1110_output_buffer_9_address0;
    output_buffer_9_address1 <= grp_compute4_fu_1110_output_buffer_9_address1;

    output_buffer_9_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_9_ce0)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_9_ce0 <= grp_compute4_fu_1110_output_buffer_9_ce0;
        else 
            output_buffer_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buffer_9_ce1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_9_ce1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_9_ce1 <= grp_compute4_fu_1110_output_buffer_9_ce1;
        else 
            output_buffer_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_9_d1 <= grp_compute4_fu_1110_output_buffer_9_d1;

    output_buffer_9_we1_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_output_buffer_9_we1)
    begin
        if ((((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_9_we1 <= grp_compute4_fu_1110_output_buffer_9_we1;
        else 
            output_buffer_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    pingpongx_offset_rea_read_fu_870_p2 <= (0=>pingpongx_offset, others=>'-');
    tmp_39_fu_2246_p2 <= std_logic_vector(unsigned(nLoops) + unsigned(ap_const_lv32_1));
    tmp_40_fu_2240_p2 <= "1" when (LayerType = ap_const_lv32_2) else "0";
    tmp_41_fu_2256_p2 <= "1" when (signed(n_cast_fu_2252_p1) < signed(tmp_39_reg_2512)) else "0";
    tmp_43_fu_2267_p2 <= "0" when (n_cast_fu_2252_p1 = nLoops) else "1";
    tmp_fu_2215_p2 <= "1" when (LayerType = ap_const_lv32_0) else "0";
    tmp_s_fu_2221_p2 <= "1" when (LayerType = ap_const_lv32_1) else "0";

    weight_buffer0_0_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_0_address0 <= grp_compute4_fu_1110_weight_buffer_0_0_address0;
        else 
            weight_buffer0_0_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_0_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_0_ce0 <= grp_compute4_fu_1110_weight_buffer_0_0_ce0;
        else 
            weight_buffer0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_0_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_0_we0;
        else 
            weight_buffer0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_0_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_1_address0 <= grp_compute4_fu_1110_weight_buffer_0_1_address0;
        else 
            weight_buffer0_0_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_0_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_1_ce0 <= grp_compute4_fu_1110_weight_buffer_0_1_ce0;
        else 
            weight_buffer0_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_0_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_1_we0;
        else 
            weight_buffer0_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_0_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_2_address0 <= grp_compute4_fu_1110_weight_buffer_0_2_address0;
        else 
            weight_buffer0_0_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_0_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_2_ce0 <= grp_compute4_fu_1110_weight_buffer_0_2_ce0;
        else 
            weight_buffer0_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_0_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_2_we0;
        else 
            weight_buffer0_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_0_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_3_address0 <= grp_compute4_fu_1110_weight_buffer_0_3_address0;
        else 
            weight_buffer0_0_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_0_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_0_3_ce0 <= grp_compute4_fu_1110_weight_buffer_0_3_ce0;
        else 
            weight_buffer0_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_0_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_0_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_3_we0;
        else 
            weight_buffer0_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_0_address0 <= grp_compute4_fu_1110_weight_buffer_10_0_address0;
        else 
            weight_buffer0_10_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_10_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_0_ce0 <= grp_compute4_fu_1110_weight_buffer_10_0_ce0;
        else 
            weight_buffer0_10_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_0_we0;
        else 
            weight_buffer0_10_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_1_address0 <= grp_compute4_fu_1110_weight_buffer_10_1_address0;
        else 
            weight_buffer0_10_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_10_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_1_ce0 <= grp_compute4_fu_1110_weight_buffer_10_1_ce0;
        else 
            weight_buffer0_10_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_1_we0;
        else 
            weight_buffer0_10_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_2_address0 <= grp_compute4_fu_1110_weight_buffer_10_2_address0;
        else 
            weight_buffer0_10_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_10_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_2_ce0 <= grp_compute4_fu_1110_weight_buffer_10_2_ce0;
        else 
            weight_buffer0_10_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_2_we0;
        else 
            weight_buffer0_10_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_3_address0 <= grp_compute4_fu_1110_weight_buffer_10_3_address0;
        else 
            weight_buffer0_10_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_10_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_10_3_ce0 <= grp_compute4_fu_1110_weight_buffer_10_3_ce0;
        else 
            weight_buffer0_10_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_10_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_10_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_3_we0;
        else 
            weight_buffer0_10_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_0_address0 <= grp_compute4_fu_1110_weight_buffer_11_0_address0;
        else 
            weight_buffer0_11_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_11_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_0_ce0 <= grp_compute4_fu_1110_weight_buffer_11_0_ce0;
        else 
            weight_buffer0_11_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_0_we0;
        else 
            weight_buffer0_11_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_1_address0 <= grp_compute4_fu_1110_weight_buffer_11_1_address0;
        else 
            weight_buffer0_11_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_11_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_1_ce0 <= grp_compute4_fu_1110_weight_buffer_11_1_ce0;
        else 
            weight_buffer0_11_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_1_we0;
        else 
            weight_buffer0_11_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_2_address0 <= grp_compute4_fu_1110_weight_buffer_11_2_address0;
        else 
            weight_buffer0_11_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_11_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_2_ce0 <= grp_compute4_fu_1110_weight_buffer_11_2_ce0;
        else 
            weight_buffer0_11_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_2_we0;
        else 
            weight_buffer0_11_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_3_address0 <= grp_compute4_fu_1110_weight_buffer_11_3_address0;
        else 
            weight_buffer0_11_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_11_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_11_3_ce0 <= grp_compute4_fu_1110_weight_buffer_11_3_ce0;
        else 
            weight_buffer0_11_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_11_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_11_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_3_we0;
        else 
            weight_buffer0_11_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_0_address0 <= grp_compute4_fu_1110_weight_buffer_12_0_address0;
        else 
            weight_buffer0_12_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_12_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_0_ce0 <= grp_compute4_fu_1110_weight_buffer_12_0_ce0;
        else 
            weight_buffer0_12_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_0_we0;
        else 
            weight_buffer0_12_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_1_address0 <= grp_compute4_fu_1110_weight_buffer_12_1_address0;
        else 
            weight_buffer0_12_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_12_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_1_ce0 <= grp_compute4_fu_1110_weight_buffer_12_1_ce0;
        else 
            weight_buffer0_12_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_1_we0;
        else 
            weight_buffer0_12_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_2_address0 <= grp_compute4_fu_1110_weight_buffer_12_2_address0;
        else 
            weight_buffer0_12_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_12_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_2_ce0 <= grp_compute4_fu_1110_weight_buffer_12_2_ce0;
        else 
            weight_buffer0_12_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_2_we0;
        else 
            weight_buffer0_12_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_3_address0 <= grp_compute4_fu_1110_weight_buffer_12_3_address0;
        else 
            weight_buffer0_12_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_12_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_12_3_ce0 <= grp_compute4_fu_1110_weight_buffer_12_3_ce0;
        else 
            weight_buffer0_12_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_12_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_12_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_3_we0;
        else 
            weight_buffer0_12_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_0_address0 <= grp_compute4_fu_1110_weight_buffer_13_0_address0;
        else 
            weight_buffer0_13_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_13_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_0_ce0 <= grp_compute4_fu_1110_weight_buffer_13_0_ce0;
        else 
            weight_buffer0_13_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_0_we0;
        else 
            weight_buffer0_13_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_1_address0 <= grp_compute4_fu_1110_weight_buffer_13_1_address0;
        else 
            weight_buffer0_13_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_13_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_1_ce0 <= grp_compute4_fu_1110_weight_buffer_13_1_ce0;
        else 
            weight_buffer0_13_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_1_we0;
        else 
            weight_buffer0_13_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_2_address0 <= grp_compute4_fu_1110_weight_buffer_13_2_address0;
        else 
            weight_buffer0_13_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_13_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_2_ce0 <= grp_compute4_fu_1110_weight_buffer_13_2_ce0;
        else 
            weight_buffer0_13_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_2_we0;
        else 
            weight_buffer0_13_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_3_address0 <= grp_compute4_fu_1110_weight_buffer_13_3_address0;
        else 
            weight_buffer0_13_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_13_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_13_3_ce0 <= grp_compute4_fu_1110_weight_buffer_13_3_ce0;
        else 
            weight_buffer0_13_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_13_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_13_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_3_we0;
        else 
            weight_buffer0_13_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_0_address0 <= grp_compute4_fu_1110_weight_buffer_14_0_address0;
        else 
            weight_buffer0_14_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_14_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_0_ce0 <= grp_compute4_fu_1110_weight_buffer_14_0_ce0;
        else 
            weight_buffer0_14_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_0_we0;
        else 
            weight_buffer0_14_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_1_address0 <= grp_compute4_fu_1110_weight_buffer_14_1_address0;
        else 
            weight_buffer0_14_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_14_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_1_ce0 <= grp_compute4_fu_1110_weight_buffer_14_1_ce0;
        else 
            weight_buffer0_14_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_1_we0;
        else 
            weight_buffer0_14_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_2_address0 <= grp_compute4_fu_1110_weight_buffer_14_2_address0;
        else 
            weight_buffer0_14_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_14_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_2_ce0 <= grp_compute4_fu_1110_weight_buffer_14_2_ce0;
        else 
            weight_buffer0_14_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_2_we0;
        else 
            weight_buffer0_14_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_3_address0 <= grp_compute4_fu_1110_weight_buffer_14_3_address0;
        else 
            weight_buffer0_14_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_14_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_14_3_ce0 <= grp_compute4_fu_1110_weight_buffer_14_3_ce0;
        else 
            weight_buffer0_14_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_14_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_14_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_3_we0;
        else 
            weight_buffer0_14_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_0_address0 <= grp_compute4_fu_1110_weight_buffer_15_0_address0;
        else 
            weight_buffer0_15_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_15_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_0_ce0 <= grp_compute4_fu_1110_weight_buffer_15_0_ce0;
        else 
            weight_buffer0_15_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_0_we0;
        else 
            weight_buffer0_15_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_1_address0 <= grp_compute4_fu_1110_weight_buffer_15_1_address0;
        else 
            weight_buffer0_15_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_15_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_1_ce0 <= grp_compute4_fu_1110_weight_buffer_15_1_ce0;
        else 
            weight_buffer0_15_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_1_we0;
        else 
            weight_buffer0_15_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_2_address0 <= grp_compute4_fu_1110_weight_buffer_15_2_address0;
        else 
            weight_buffer0_15_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_15_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_2_ce0 <= grp_compute4_fu_1110_weight_buffer_15_2_ce0;
        else 
            weight_buffer0_15_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_2_we0;
        else 
            weight_buffer0_15_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_3_address0 <= grp_compute4_fu_1110_weight_buffer_15_3_address0;
        else 
            weight_buffer0_15_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_15_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_15_3_ce0 <= grp_compute4_fu_1110_weight_buffer_15_3_ce0;
        else 
            weight_buffer0_15_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_15_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_15_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_3_we0;
        else 
            weight_buffer0_15_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_0_address0 <= grp_compute4_fu_1110_weight_buffer_16_0_address0;
        else 
            weight_buffer0_16_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_16_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_0_ce0 <= grp_compute4_fu_1110_weight_buffer_16_0_ce0;
        else 
            weight_buffer0_16_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_0_we0;
        else 
            weight_buffer0_16_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_1_address0 <= grp_compute4_fu_1110_weight_buffer_16_1_address0;
        else 
            weight_buffer0_16_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_16_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_1_ce0 <= grp_compute4_fu_1110_weight_buffer_16_1_ce0;
        else 
            weight_buffer0_16_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_1_we0;
        else 
            weight_buffer0_16_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_2_address0 <= grp_compute4_fu_1110_weight_buffer_16_2_address0;
        else 
            weight_buffer0_16_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_16_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_2_ce0 <= grp_compute4_fu_1110_weight_buffer_16_2_ce0;
        else 
            weight_buffer0_16_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_2_we0;
        else 
            weight_buffer0_16_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_3_address0 <= grp_compute4_fu_1110_weight_buffer_16_3_address0;
        else 
            weight_buffer0_16_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_16_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_16_3_ce0 <= grp_compute4_fu_1110_weight_buffer_16_3_ce0;
        else 
            weight_buffer0_16_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_16_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_16_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_3_we0;
        else 
            weight_buffer0_16_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_0_address0 <= grp_compute4_fu_1110_weight_buffer_17_0_address0;
        else 
            weight_buffer0_17_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_17_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_0_ce0 <= grp_compute4_fu_1110_weight_buffer_17_0_ce0;
        else 
            weight_buffer0_17_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_0_we0;
        else 
            weight_buffer0_17_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_1_address0 <= grp_compute4_fu_1110_weight_buffer_17_1_address0;
        else 
            weight_buffer0_17_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_17_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_1_ce0 <= grp_compute4_fu_1110_weight_buffer_17_1_ce0;
        else 
            weight_buffer0_17_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_1_we0;
        else 
            weight_buffer0_17_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_2_address0 <= grp_compute4_fu_1110_weight_buffer_17_2_address0;
        else 
            weight_buffer0_17_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_17_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_2_ce0 <= grp_compute4_fu_1110_weight_buffer_17_2_ce0;
        else 
            weight_buffer0_17_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_2_we0;
        else 
            weight_buffer0_17_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_3_address0 <= grp_compute4_fu_1110_weight_buffer_17_3_address0;
        else 
            weight_buffer0_17_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_17_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_17_3_ce0 <= grp_compute4_fu_1110_weight_buffer_17_3_ce0;
        else 
            weight_buffer0_17_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_17_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_17_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_3_we0;
        else 
            weight_buffer0_17_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_0_address0 <= grp_compute4_fu_1110_weight_buffer_18_0_address0;
        else 
            weight_buffer0_18_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_18_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_0_ce0 <= grp_compute4_fu_1110_weight_buffer_18_0_ce0;
        else 
            weight_buffer0_18_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_0_we0;
        else 
            weight_buffer0_18_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_1_address0 <= grp_compute4_fu_1110_weight_buffer_18_1_address0;
        else 
            weight_buffer0_18_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_18_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_1_ce0 <= grp_compute4_fu_1110_weight_buffer_18_1_ce0;
        else 
            weight_buffer0_18_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_1_we0;
        else 
            weight_buffer0_18_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_2_address0 <= grp_compute4_fu_1110_weight_buffer_18_2_address0;
        else 
            weight_buffer0_18_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_18_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_2_ce0 <= grp_compute4_fu_1110_weight_buffer_18_2_ce0;
        else 
            weight_buffer0_18_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_2_we0;
        else 
            weight_buffer0_18_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_3_address0 <= grp_compute4_fu_1110_weight_buffer_18_3_address0;
        else 
            weight_buffer0_18_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_18_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_18_3_ce0 <= grp_compute4_fu_1110_weight_buffer_18_3_ce0;
        else 
            weight_buffer0_18_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_18_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_18_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_3_we0;
        else 
            weight_buffer0_18_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_0_address0 <= grp_compute4_fu_1110_weight_buffer_19_0_address0;
        else 
            weight_buffer0_19_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_19_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_0_ce0 <= grp_compute4_fu_1110_weight_buffer_19_0_ce0;
        else 
            weight_buffer0_19_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_0_we0;
        else 
            weight_buffer0_19_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_1_address0 <= grp_compute4_fu_1110_weight_buffer_19_1_address0;
        else 
            weight_buffer0_19_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_19_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_1_ce0 <= grp_compute4_fu_1110_weight_buffer_19_1_ce0;
        else 
            weight_buffer0_19_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_1_we0;
        else 
            weight_buffer0_19_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_2_address0 <= grp_compute4_fu_1110_weight_buffer_19_2_address0;
        else 
            weight_buffer0_19_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_19_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_2_ce0 <= grp_compute4_fu_1110_weight_buffer_19_2_ce0;
        else 
            weight_buffer0_19_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_2_we0;
        else 
            weight_buffer0_19_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_3_address0 <= grp_compute4_fu_1110_weight_buffer_19_3_address0;
        else 
            weight_buffer0_19_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_19_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_19_3_ce0 <= grp_compute4_fu_1110_weight_buffer_19_3_ce0;
        else 
            weight_buffer0_19_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_19_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_19_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_3_we0;
        else 
            weight_buffer0_19_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_0_address0 <= grp_compute4_fu_1110_weight_buffer_1_0_address0;
        else 
            weight_buffer0_1_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_1_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_0_ce0 <= grp_compute4_fu_1110_weight_buffer_1_0_ce0;
        else 
            weight_buffer0_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_0_we0;
        else 
            weight_buffer0_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_1_address0 <= grp_compute4_fu_1110_weight_buffer_1_1_address0;
        else 
            weight_buffer0_1_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_1_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_1_ce0 <= grp_compute4_fu_1110_weight_buffer_1_1_ce0;
        else 
            weight_buffer0_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_1_we0;
        else 
            weight_buffer0_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_2_address0 <= grp_compute4_fu_1110_weight_buffer_1_2_address0;
        else 
            weight_buffer0_1_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_1_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_2_ce0 <= grp_compute4_fu_1110_weight_buffer_1_2_ce0;
        else 
            weight_buffer0_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_2_we0;
        else 
            weight_buffer0_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_3_address0 <= grp_compute4_fu_1110_weight_buffer_1_3_address0;
        else 
            weight_buffer0_1_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_1_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_1_3_ce0 <= grp_compute4_fu_1110_weight_buffer_1_3_ce0;
        else 
            weight_buffer0_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_1_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_1_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_3_we0;
        else 
            weight_buffer0_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_0_address0 <= grp_compute4_fu_1110_weight_buffer_20_0_address0;
        else 
            weight_buffer0_20_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_20_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_0_ce0 <= grp_compute4_fu_1110_weight_buffer_20_0_ce0;
        else 
            weight_buffer0_20_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_0_we0;
        else 
            weight_buffer0_20_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_1_address0 <= grp_compute4_fu_1110_weight_buffer_20_1_address0;
        else 
            weight_buffer0_20_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_20_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_1_ce0 <= grp_compute4_fu_1110_weight_buffer_20_1_ce0;
        else 
            weight_buffer0_20_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_1_we0;
        else 
            weight_buffer0_20_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_2_address0 <= grp_compute4_fu_1110_weight_buffer_20_2_address0;
        else 
            weight_buffer0_20_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_20_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_2_ce0 <= grp_compute4_fu_1110_weight_buffer_20_2_ce0;
        else 
            weight_buffer0_20_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_2_we0;
        else 
            weight_buffer0_20_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_3_address0 <= grp_compute4_fu_1110_weight_buffer_20_3_address0;
        else 
            weight_buffer0_20_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_20_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_20_3_ce0 <= grp_compute4_fu_1110_weight_buffer_20_3_ce0;
        else 
            weight_buffer0_20_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_20_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_20_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_3_we0;
        else 
            weight_buffer0_20_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_0_address0 <= grp_compute4_fu_1110_weight_buffer_21_0_address0;
        else 
            weight_buffer0_21_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_21_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_0_ce0 <= grp_compute4_fu_1110_weight_buffer_21_0_ce0;
        else 
            weight_buffer0_21_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_0_we0;
        else 
            weight_buffer0_21_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_1_address0 <= grp_compute4_fu_1110_weight_buffer_21_1_address0;
        else 
            weight_buffer0_21_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_21_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_1_ce0 <= grp_compute4_fu_1110_weight_buffer_21_1_ce0;
        else 
            weight_buffer0_21_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_1_we0;
        else 
            weight_buffer0_21_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_2_address0 <= grp_compute4_fu_1110_weight_buffer_21_2_address0;
        else 
            weight_buffer0_21_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_21_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_2_ce0 <= grp_compute4_fu_1110_weight_buffer_21_2_ce0;
        else 
            weight_buffer0_21_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_2_we0;
        else 
            weight_buffer0_21_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_3_address0 <= grp_compute4_fu_1110_weight_buffer_21_3_address0;
        else 
            weight_buffer0_21_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_21_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_21_3_ce0 <= grp_compute4_fu_1110_weight_buffer_21_3_ce0;
        else 
            weight_buffer0_21_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_21_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_21_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_3_we0;
        else 
            weight_buffer0_21_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_0_address0 <= grp_compute4_fu_1110_weight_buffer_22_0_address0;
        else 
            weight_buffer0_22_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_22_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_0_ce0 <= grp_compute4_fu_1110_weight_buffer_22_0_ce0;
        else 
            weight_buffer0_22_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_0_we0;
        else 
            weight_buffer0_22_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_1_address0 <= grp_compute4_fu_1110_weight_buffer_22_1_address0;
        else 
            weight_buffer0_22_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_22_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_1_ce0 <= grp_compute4_fu_1110_weight_buffer_22_1_ce0;
        else 
            weight_buffer0_22_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_1_we0;
        else 
            weight_buffer0_22_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_2_address0 <= grp_compute4_fu_1110_weight_buffer_22_2_address0;
        else 
            weight_buffer0_22_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_22_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_2_ce0 <= grp_compute4_fu_1110_weight_buffer_22_2_ce0;
        else 
            weight_buffer0_22_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_2_we0;
        else 
            weight_buffer0_22_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_3_address0 <= grp_compute4_fu_1110_weight_buffer_22_3_address0;
        else 
            weight_buffer0_22_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_22_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_22_3_ce0 <= grp_compute4_fu_1110_weight_buffer_22_3_ce0;
        else 
            weight_buffer0_22_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_22_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_22_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_3_we0;
        else 
            weight_buffer0_22_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_0_address0 <= grp_compute4_fu_1110_weight_buffer_23_0_address0;
        else 
            weight_buffer0_23_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_23_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_0_ce0 <= grp_compute4_fu_1110_weight_buffer_23_0_ce0;
        else 
            weight_buffer0_23_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_0_we0;
        else 
            weight_buffer0_23_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_1_address0 <= grp_compute4_fu_1110_weight_buffer_23_1_address0;
        else 
            weight_buffer0_23_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_23_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_1_ce0 <= grp_compute4_fu_1110_weight_buffer_23_1_ce0;
        else 
            weight_buffer0_23_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_1_we0;
        else 
            weight_buffer0_23_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_2_address0 <= grp_compute4_fu_1110_weight_buffer_23_2_address0;
        else 
            weight_buffer0_23_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_23_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_2_ce0 <= grp_compute4_fu_1110_weight_buffer_23_2_ce0;
        else 
            weight_buffer0_23_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_2_we0;
        else 
            weight_buffer0_23_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_3_address0 <= grp_compute4_fu_1110_weight_buffer_23_3_address0;
        else 
            weight_buffer0_23_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_23_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_23_3_ce0 <= grp_compute4_fu_1110_weight_buffer_23_3_ce0;
        else 
            weight_buffer0_23_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_23_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_23_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_3_we0;
        else 
            weight_buffer0_23_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_0_address0 <= grp_compute4_fu_1110_weight_buffer_24_0_address0;
        else 
            weight_buffer0_24_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_24_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_0_ce0 <= grp_compute4_fu_1110_weight_buffer_24_0_ce0;
        else 
            weight_buffer0_24_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_0_we0;
        else 
            weight_buffer0_24_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_1_address0 <= grp_compute4_fu_1110_weight_buffer_24_1_address0;
        else 
            weight_buffer0_24_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_24_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_1_ce0 <= grp_compute4_fu_1110_weight_buffer_24_1_ce0;
        else 
            weight_buffer0_24_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_1_we0;
        else 
            weight_buffer0_24_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_2_address0 <= grp_compute4_fu_1110_weight_buffer_24_2_address0;
        else 
            weight_buffer0_24_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_24_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_2_ce0 <= grp_compute4_fu_1110_weight_buffer_24_2_ce0;
        else 
            weight_buffer0_24_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_2_we0;
        else 
            weight_buffer0_24_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_3_address0 <= grp_compute4_fu_1110_weight_buffer_24_3_address0;
        else 
            weight_buffer0_24_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_24_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_24_3_ce0 <= grp_compute4_fu_1110_weight_buffer_24_3_ce0;
        else 
            weight_buffer0_24_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_24_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_24_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_3_we0;
        else 
            weight_buffer0_24_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_0_address0 <= grp_compute4_fu_1110_weight_buffer_25_0_address0;
        else 
            weight_buffer0_25_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_25_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_0_ce0 <= grp_compute4_fu_1110_weight_buffer_25_0_ce0;
        else 
            weight_buffer0_25_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_0_we0;
        else 
            weight_buffer0_25_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_1_address0 <= grp_compute4_fu_1110_weight_buffer_25_1_address0;
        else 
            weight_buffer0_25_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_25_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_1_ce0 <= grp_compute4_fu_1110_weight_buffer_25_1_ce0;
        else 
            weight_buffer0_25_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_1_we0;
        else 
            weight_buffer0_25_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_2_address0 <= grp_compute4_fu_1110_weight_buffer_25_2_address0;
        else 
            weight_buffer0_25_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_25_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_2_ce0 <= grp_compute4_fu_1110_weight_buffer_25_2_ce0;
        else 
            weight_buffer0_25_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_2_we0;
        else 
            weight_buffer0_25_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_3_address0 <= grp_compute4_fu_1110_weight_buffer_25_3_address0;
        else 
            weight_buffer0_25_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_25_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_25_3_ce0 <= grp_compute4_fu_1110_weight_buffer_25_3_ce0;
        else 
            weight_buffer0_25_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_25_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_25_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_3_we0;
        else 
            weight_buffer0_25_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_0_address0 <= grp_compute4_fu_1110_weight_buffer_26_0_address0;
        else 
            weight_buffer0_26_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_26_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_0_ce0 <= grp_compute4_fu_1110_weight_buffer_26_0_ce0;
        else 
            weight_buffer0_26_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_0_we0;
        else 
            weight_buffer0_26_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_1_address0 <= grp_compute4_fu_1110_weight_buffer_26_1_address0;
        else 
            weight_buffer0_26_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_26_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_1_ce0 <= grp_compute4_fu_1110_weight_buffer_26_1_ce0;
        else 
            weight_buffer0_26_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_1_we0;
        else 
            weight_buffer0_26_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_2_address0 <= grp_compute4_fu_1110_weight_buffer_26_2_address0;
        else 
            weight_buffer0_26_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_26_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_2_ce0 <= grp_compute4_fu_1110_weight_buffer_26_2_ce0;
        else 
            weight_buffer0_26_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_2_we0;
        else 
            weight_buffer0_26_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_3_address0 <= grp_compute4_fu_1110_weight_buffer_26_3_address0;
        else 
            weight_buffer0_26_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_26_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_26_3_ce0 <= grp_compute4_fu_1110_weight_buffer_26_3_ce0;
        else 
            weight_buffer0_26_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_26_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_26_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_3_we0;
        else 
            weight_buffer0_26_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_0_address0 <= grp_compute4_fu_1110_weight_buffer_27_0_address0;
        else 
            weight_buffer0_27_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_27_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_0_ce0 <= grp_compute4_fu_1110_weight_buffer_27_0_ce0;
        else 
            weight_buffer0_27_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_0_we0;
        else 
            weight_buffer0_27_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_1_address0 <= grp_compute4_fu_1110_weight_buffer_27_1_address0;
        else 
            weight_buffer0_27_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_27_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_1_ce0 <= grp_compute4_fu_1110_weight_buffer_27_1_ce0;
        else 
            weight_buffer0_27_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_1_we0;
        else 
            weight_buffer0_27_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_2_address0 <= grp_compute4_fu_1110_weight_buffer_27_2_address0;
        else 
            weight_buffer0_27_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_27_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_2_ce0 <= grp_compute4_fu_1110_weight_buffer_27_2_ce0;
        else 
            weight_buffer0_27_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_2_we0;
        else 
            weight_buffer0_27_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_3_address0 <= grp_compute4_fu_1110_weight_buffer_27_3_address0;
        else 
            weight_buffer0_27_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_27_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_27_3_ce0 <= grp_compute4_fu_1110_weight_buffer_27_3_ce0;
        else 
            weight_buffer0_27_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_27_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_27_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_3_we0;
        else 
            weight_buffer0_27_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_0_address0 <= grp_compute4_fu_1110_weight_buffer_28_0_address0;
        else 
            weight_buffer0_28_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_28_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_0_ce0 <= grp_compute4_fu_1110_weight_buffer_28_0_ce0;
        else 
            weight_buffer0_28_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_0_we0;
        else 
            weight_buffer0_28_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_1_address0 <= grp_compute4_fu_1110_weight_buffer_28_1_address0;
        else 
            weight_buffer0_28_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_28_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_1_ce0 <= grp_compute4_fu_1110_weight_buffer_28_1_ce0;
        else 
            weight_buffer0_28_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_1_we0;
        else 
            weight_buffer0_28_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_2_address0 <= grp_compute4_fu_1110_weight_buffer_28_2_address0;
        else 
            weight_buffer0_28_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_28_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_2_ce0 <= grp_compute4_fu_1110_weight_buffer_28_2_ce0;
        else 
            weight_buffer0_28_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_2_we0;
        else 
            weight_buffer0_28_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_3_address0 <= grp_compute4_fu_1110_weight_buffer_28_3_address0;
        else 
            weight_buffer0_28_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_28_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_28_3_ce0 <= grp_compute4_fu_1110_weight_buffer_28_3_ce0;
        else 
            weight_buffer0_28_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_28_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_28_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_3_we0;
        else 
            weight_buffer0_28_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_0_address0 <= grp_compute4_fu_1110_weight_buffer_29_0_address0;
        else 
            weight_buffer0_29_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_29_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_0_ce0 <= grp_compute4_fu_1110_weight_buffer_29_0_ce0;
        else 
            weight_buffer0_29_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_0_we0;
        else 
            weight_buffer0_29_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_1_address0 <= grp_compute4_fu_1110_weight_buffer_29_1_address0;
        else 
            weight_buffer0_29_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_29_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_1_ce0 <= grp_compute4_fu_1110_weight_buffer_29_1_ce0;
        else 
            weight_buffer0_29_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_1_we0;
        else 
            weight_buffer0_29_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_2_address0 <= grp_compute4_fu_1110_weight_buffer_29_2_address0;
        else 
            weight_buffer0_29_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_29_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_2_ce0 <= grp_compute4_fu_1110_weight_buffer_29_2_ce0;
        else 
            weight_buffer0_29_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_2_we0;
        else 
            weight_buffer0_29_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_3_address0 <= grp_compute4_fu_1110_weight_buffer_29_3_address0;
        else 
            weight_buffer0_29_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_29_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_29_3_ce0 <= grp_compute4_fu_1110_weight_buffer_29_3_ce0;
        else 
            weight_buffer0_29_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_29_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_29_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_3_we0;
        else 
            weight_buffer0_29_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_0_address0 <= grp_compute4_fu_1110_weight_buffer_2_0_address0;
        else 
            weight_buffer0_2_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_2_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_0_ce0 <= grp_compute4_fu_1110_weight_buffer_2_0_ce0;
        else 
            weight_buffer0_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_0_we0;
        else 
            weight_buffer0_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_1_address0 <= grp_compute4_fu_1110_weight_buffer_2_1_address0;
        else 
            weight_buffer0_2_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_2_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_1_ce0 <= grp_compute4_fu_1110_weight_buffer_2_1_ce0;
        else 
            weight_buffer0_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_1_we0;
        else 
            weight_buffer0_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_2_address0 <= grp_compute4_fu_1110_weight_buffer_2_2_address0;
        else 
            weight_buffer0_2_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_2_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_2_ce0 <= grp_compute4_fu_1110_weight_buffer_2_2_ce0;
        else 
            weight_buffer0_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_2_we0;
        else 
            weight_buffer0_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_3_address0 <= grp_compute4_fu_1110_weight_buffer_2_3_address0;
        else 
            weight_buffer0_2_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_2_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_2_3_ce0 <= grp_compute4_fu_1110_weight_buffer_2_3_ce0;
        else 
            weight_buffer0_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_2_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_2_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_3_we0;
        else 
            weight_buffer0_2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_0_address0 <= grp_compute4_fu_1110_weight_buffer_30_0_address0;
        else 
            weight_buffer0_30_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_30_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_0_ce0 <= grp_compute4_fu_1110_weight_buffer_30_0_ce0;
        else 
            weight_buffer0_30_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_0_we0;
        else 
            weight_buffer0_30_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_1_address0 <= grp_compute4_fu_1110_weight_buffer_30_1_address0;
        else 
            weight_buffer0_30_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_30_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_1_ce0 <= grp_compute4_fu_1110_weight_buffer_30_1_ce0;
        else 
            weight_buffer0_30_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_1_we0;
        else 
            weight_buffer0_30_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_2_address0 <= grp_compute4_fu_1110_weight_buffer_30_2_address0;
        else 
            weight_buffer0_30_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_30_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_2_ce0 <= grp_compute4_fu_1110_weight_buffer_30_2_ce0;
        else 
            weight_buffer0_30_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_2_we0;
        else 
            weight_buffer0_30_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_3_address0 <= grp_compute4_fu_1110_weight_buffer_30_3_address0;
        else 
            weight_buffer0_30_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_30_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_30_3_ce0 <= grp_compute4_fu_1110_weight_buffer_30_3_ce0;
        else 
            weight_buffer0_30_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_30_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_30_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_3_we0;
        else 
            weight_buffer0_30_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_0_address0 <= grp_compute4_fu_1110_weight_buffer_31_0_address0;
        else 
            weight_buffer0_31_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_31_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_0_ce0 <= grp_compute4_fu_1110_weight_buffer_31_0_ce0;
        else 
            weight_buffer0_31_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_0_we0;
        else 
            weight_buffer0_31_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_1_address0 <= grp_compute4_fu_1110_weight_buffer_31_1_address0;
        else 
            weight_buffer0_31_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_31_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_1_ce0 <= grp_compute4_fu_1110_weight_buffer_31_1_ce0;
        else 
            weight_buffer0_31_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_1_we0;
        else 
            weight_buffer0_31_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_2_address0 <= grp_compute4_fu_1110_weight_buffer_31_2_address0;
        else 
            weight_buffer0_31_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_31_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_2_ce0 <= grp_compute4_fu_1110_weight_buffer_31_2_ce0;
        else 
            weight_buffer0_31_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_2_we0;
        else 
            weight_buffer0_31_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_3_address0 <= grp_compute4_fu_1110_weight_buffer_31_3_address0;
        else 
            weight_buffer0_31_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_31_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_31_3_ce0 <= grp_compute4_fu_1110_weight_buffer_31_3_ce0;
        else 
            weight_buffer0_31_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_31_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_31_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_3_we0;
        else 
            weight_buffer0_31_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_0_address0 <= grp_compute4_fu_1110_weight_buffer_3_0_address0;
        else 
            weight_buffer0_3_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_3_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_0_ce0 <= grp_compute4_fu_1110_weight_buffer_3_0_ce0;
        else 
            weight_buffer0_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_0_we0;
        else 
            weight_buffer0_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_1_address0 <= grp_compute4_fu_1110_weight_buffer_3_1_address0;
        else 
            weight_buffer0_3_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_3_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_1_ce0 <= grp_compute4_fu_1110_weight_buffer_3_1_ce0;
        else 
            weight_buffer0_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_1_we0;
        else 
            weight_buffer0_3_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_2_address0 <= grp_compute4_fu_1110_weight_buffer_3_2_address0;
        else 
            weight_buffer0_3_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_3_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_2_ce0 <= grp_compute4_fu_1110_weight_buffer_3_2_ce0;
        else 
            weight_buffer0_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_2_we0;
        else 
            weight_buffer0_3_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_3_address0 <= grp_compute4_fu_1110_weight_buffer_3_3_address0;
        else 
            weight_buffer0_3_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_3_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_3_3_ce0 <= grp_compute4_fu_1110_weight_buffer_3_3_ce0;
        else 
            weight_buffer0_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_3_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_3_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_3_we0;
        else 
            weight_buffer0_3_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_0_address0 <= grp_compute4_fu_1110_weight_buffer_4_0_address0;
        else 
            weight_buffer0_4_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_4_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_0_ce0 <= grp_compute4_fu_1110_weight_buffer_4_0_ce0;
        else 
            weight_buffer0_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_0_we0;
        else 
            weight_buffer0_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_1_address0 <= grp_compute4_fu_1110_weight_buffer_4_1_address0;
        else 
            weight_buffer0_4_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_4_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_1_ce0 <= grp_compute4_fu_1110_weight_buffer_4_1_ce0;
        else 
            weight_buffer0_4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_1_we0;
        else 
            weight_buffer0_4_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_2_address0 <= grp_compute4_fu_1110_weight_buffer_4_2_address0;
        else 
            weight_buffer0_4_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_4_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_2_ce0 <= grp_compute4_fu_1110_weight_buffer_4_2_ce0;
        else 
            weight_buffer0_4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_2_we0;
        else 
            weight_buffer0_4_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_3_address0 <= grp_compute4_fu_1110_weight_buffer_4_3_address0;
        else 
            weight_buffer0_4_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_4_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_4_3_ce0 <= grp_compute4_fu_1110_weight_buffer_4_3_ce0;
        else 
            weight_buffer0_4_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_4_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_4_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_3_we0;
        else 
            weight_buffer0_4_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_0_address0 <= grp_compute4_fu_1110_weight_buffer_5_0_address0;
        else 
            weight_buffer0_5_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_5_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_0_ce0 <= grp_compute4_fu_1110_weight_buffer_5_0_ce0;
        else 
            weight_buffer0_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_0_we0;
        else 
            weight_buffer0_5_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_1_address0 <= grp_compute4_fu_1110_weight_buffer_5_1_address0;
        else 
            weight_buffer0_5_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_5_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_1_ce0 <= grp_compute4_fu_1110_weight_buffer_5_1_ce0;
        else 
            weight_buffer0_5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_1_we0;
        else 
            weight_buffer0_5_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_2_address0 <= grp_compute4_fu_1110_weight_buffer_5_2_address0;
        else 
            weight_buffer0_5_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_5_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_2_ce0 <= grp_compute4_fu_1110_weight_buffer_5_2_ce0;
        else 
            weight_buffer0_5_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_2_we0;
        else 
            weight_buffer0_5_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_3_address0 <= grp_compute4_fu_1110_weight_buffer_5_3_address0;
        else 
            weight_buffer0_5_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_5_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_5_3_ce0 <= grp_compute4_fu_1110_weight_buffer_5_3_ce0;
        else 
            weight_buffer0_5_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_5_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_5_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_3_we0;
        else 
            weight_buffer0_5_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_0_address0 <= grp_compute4_fu_1110_weight_buffer_6_0_address0;
        else 
            weight_buffer0_6_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_6_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_0_ce0 <= grp_compute4_fu_1110_weight_buffer_6_0_ce0;
        else 
            weight_buffer0_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_0_we0;
        else 
            weight_buffer0_6_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_1_address0 <= grp_compute4_fu_1110_weight_buffer_6_1_address0;
        else 
            weight_buffer0_6_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_6_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_1_ce0 <= grp_compute4_fu_1110_weight_buffer_6_1_ce0;
        else 
            weight_buffer0_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_1_we0;
        else 
            weight_buffer0_6_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_2_address0 <= grp_compute4_fu_1110_weight_buffer_6_2_address0;
        else 
            weight_buffer0_6_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_6_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_2_ce0 <= grp_compute4_fu_1110_weight_buffer_6_2_ce0;
        else 
            weight_buffer0_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_2_we0;
        else 
            weight_buffer0_6_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_3_address0 <= grp_compute4_fu_1110_weight_buffer_6_3_address0;
        else 
            weight_buffer0_6_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_6_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_6_3_ce0 <= grp_compute4_fu_1110_weight_buffer_6_3_ce0;
        else 
            weight_buffer0_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_6_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_6_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_3_we0;
        else 
            weight_buffer0_6_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_0_address0 <= grp_compute4_fu_1110_weight_buffer_7_0_address0;
        else 
            weight_buffer0_7_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_7_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_0_ce0 <= grp_compute4_fu_1110_weight_buffer_7_0_ce0;
        else 
            weight_buffer0_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_0_we0;
        else 
            weight_buffer0_7_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_1_address0 <= grp_compute4_fu_1110_weight_buffer_7_1_address0;
        else 
            weight_buffer0_7_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_7_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_1_ce0 <= grp_compute4_fu_1110_weight_buffer_7_1_ce0;
        else 
            weight_buffer0_7_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_1_we0;
        else 
            weight_buffer0_7_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_2_address0 <= grp_compute4_fu_1110_weight_buffer_7_2_address0;
        else 
            weight_buffer0_7_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_7_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_2_ce0 <= grp_compute4_fu_1110_weight_buffer_7_2_ce0;
        else 
            weight_buffer0_7_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_2_we0;
        else 
            weight_buffer0_7_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_3_address0 <= grp_compute4_fu_1110_weight_buffer_7_3_address0;
        else 
            weight_buffer0_7_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_7_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_7_3_ce0 <= grp_compute4_fu_1110_weight_buffer_7_3_ce0;
        else 
            weight_buffer0_7_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_7_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_7_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_3_we0;
        else 
            weight_buffer0_7_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_0_address0 <= grp_compute4_fu_1110_weight_buffer_8_0_address0;
        else 
            weight_buffer0_8_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_8_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_0_ce0 <= grp_compute4_fu_1110_weight_buffer_8_0_ce0;
        else 
            weight_buffer0_8_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_0_we0;
        else 
            weight_buffer0_8_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_1_address0 <= grp_compute4_fu_1110_weight_buffer_8_1_address0;
        else 
            weight_buffer0_8_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_8_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_1_ce0 <= grp_compute4_fu_1110_weight_buffer_8_1_ce0;
        else 
            weight_buffer0_8_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_1_we0;
        else 
            weight_buffer0_8_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_2_address0 <= grp_compute4_fu_1110_weight_buffer_8_2_address0;
        else 
            weight_buffer0_8_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_8_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_2_ce0 <= grp_compute4_fu_1110_weight_buffer_8_2_ce0;
        else 
            weight_buffer0_8_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_2_we0;
        else 
            weight_buffer0_8_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_3_address0 <= grp_compute4_fu_1110_weight_buffer_8_3_address0;
        else 
            weight_buffer0_8_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_8_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_8_3_ce0 <= grp_compute4_fu_1110_weight_buffer_8_3_ce0;
        else 
            weight_buffer0_8_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_8_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_8_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_3_we0;
        else 
            weight_buffer0_8_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_0_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_0_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_0_address0 <= grp_compute4_fu_1110_weight_buffer_9_0_address0;
        else 
            weight_buffer0_9_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_9_0_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_0_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_0_ce0 <= grp_compute4_fu_1110_weight_buffer_9_0_ce0;
        else 
            weight_buffer0_9_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_0_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_0_we0;
        else 
            weight_buffer0_9_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_1_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_1_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_1_address0 <= grp_compute4_fu_1110_weight_buffer_9_1_address0;
        else 
            weight_buffer0_9_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_9_1_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_1_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_1_ce0 <= grp_compute4_fu_1110_weight_buffer_9_1_ce0;
        else 
            weight_buffer0_9_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_1_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_1_we0;
        else 
            weight_buffer0_9_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_2_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_2_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_2_address0 <= grp_compute4_fu_1110_weight_buffer_9_2_address0;
        else 
            weight_buffer0_9_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_9_2_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_2_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_2_ce0 <= grp_compute4_fu_1110_weight_buffer_9_2_ce0;
        else 
            weight_buffer0_9_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_2_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_2_we0;
        else 
            weight_buffer0_9_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_3_address0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_3_address0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_3_address0 <= grp_compute4_fu_1110_weight_buffer_9_3_address0;
        else 
            weight_buffer0_9_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer0_9_3_ce0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_3_ce0;
        elsif (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer0_9_3_ce0 <= grp_compute4_fu_1110_weight_buffer_9_3_ce0;
        else 
            weight_buffer0_9_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer0_9_3_we0_assign_proc : process(pingpongx_offset_rea_read_fu_870_p2, ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpongx_offset_rea_read_fu_870_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((pingpong_reg_1032 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            weight_buffer0_9_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_3_we0;
        else 
            weight_buffer0_9_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_0_address0 <= grp_compute4_fu_1110_weight_buffer_0_0_address0;
            else 
                weight_buffer1_0_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_0_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_0_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_0_ce0 <= grp_compute4_fu_1110_weight_buffer_0_0_ce0;
            else 
                weight_buffer1_0_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_0_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_0_we0;
        else 
            weight_buffer1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_1_address0 <= grp_compute4_fu_1110_weight_buffer_0_1_address0;
            else 
                weight_buffer1_0_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_0_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_0_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_1_ce0 <= grp_compute4_fu_1110_weight_buffer_0_1_ce0;
            else 
                weight_buffer1_0_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_0_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_1_we0;
        else 
            weight_buffer1_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_2_address0 <= grp_compute4_fu_1110_weight_buffer_0_2_address0;
            else 
                weight_buffer1_0_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_0_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_0_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_2_ce0 <= grp_compute4_fu_1110_weight_buffer_0_2_ce0;
            else 
                weight_buffer1_0_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_0_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_2_we0;
        else 
            weight_buffer1_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_0_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_3_address0 <= grp_compute4_fu_1110_weight_buffer_0_3_address0;
            else 
                weight_buffer1_0_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_0_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_0_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_0_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_0_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_0_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_0_3_ce0 <= grp_compute4_fu_1110_weight_buffer_0_3_ce0;
            else 
                weight_buffer1_0_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_0_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_0_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_0_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_0_3_we0;
        else 
            weight_buffer1_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_0_address0 <= grp_compute4_fu_1110_weight_buffer_10_0_address0;
            else 
                weight_buffer1_10_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_10_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_10_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_0_ce0 <= grp_compute4_fu_1110_weight_buffer_10_0_ce0;
            else 
                weight_buffer1_10_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_10_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_10_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_0_we0;
        else 
            weight_buffer1_10_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_1_address0 <= grp_compute4_fu_1110_weight_buffer_10_1_address0;
            else 
                weight_buffer1_10_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_10_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_10_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_1_ce0 <= grp_compute4_fu_1110_weight_buffer_10_1_ce0;
            else 
                weight_buffer1_10_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_10_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_10_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_1_we0;
        else 
            weight_buffer1_10_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_2_address0 <= grp_compute4_fu_1110_weight_buffer_10_2_address0;
            else 
                weight_buffer1_10_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_10_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_10_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_2_ce0 <= grp_compute4_fu_1110_weight_buffer_10_2_ce0;
            else 
                weight_buffer1_10_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_10_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_10_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_2_we0;
        else 
            weight_buffer1_10_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_10_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_3_address0 <= grp_compute4_fu_1110_weight_buffer_10_3_address0;
            else 
                weight_buffer1_10_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_10_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_10_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_10_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_10_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_10_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_10_3_ce0 <= grp_compute4_fu_1110_weight_buffer_10_3_ce0;
            else 
                weight_buffer1_10_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_10_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_10_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_10_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_10_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_10_3_we0;
        else 
            weight_buffer1_10_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_0_address0 <= grp_compute4_fu_1110_weight_buffer_11_0_address0;
            else 
                weight_buffer1_11_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_11_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_11_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_0_ce0 <= grp_compute4_fu_1110_weight_buffer_11_0_ce0;
            else 
                weight_buffer1_11_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_11_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_11_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_0_we0;
        else 
            weight_buffer1_11_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_1_address0 <= grp_compute4_fu_1110_weight_buffer_11_1_address0;
            else 
                weight_buffer1_11_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_11_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_11_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_1_ce0 <= grp_compute4_fu_1110_weight_buffer_11_1_ce0;
            else 
                weight_buffer1_11_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_11_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_11_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_1_we0;
        else 
            weight_buffer1_11_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_2_address0 <= grp_compute4_fu_1110_weight_buffer_11_2_address0;
            else 
                weight_buffer1_11_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_11_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_11_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_2_ce0 <= grp_compute4_fu_1110_weight_buffer_11_2_ce0;
            else 
                weight_buffer1_11_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_11_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_11_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_2_we0;
        else 
            weight_buffer1_11_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_11_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_3_address0 <= grp_compute4_fu_1110_weight_buffer_11_3_address0;
            else 
                weight_buffer1_11_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_11_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_11_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_11_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_11_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_11_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_11_3_ce0 <= grp_compute4_fu_1110_weight_buffer_11_3_ce0;
            else 
                weight_buffer1_11_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_11_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_11_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_11_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_11_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_11_3_we0;
        else 
            weight_buffer1_11_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_0_address0 <= grp_compute4_fu_1110_weight_buffer_12_0_address0;
            else 
                weight_buffer1_12_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_12_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_12_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_0_ce0 <= grp_compute4_fu_1110_weight_buffer_12_0_ce0;
            else 
                weight_buffer1_12_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_12_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_12_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_0_we0;
        else 
            weight_buffer1_12_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_1_address0 <= grp_compute4_fu_1110_weight_buffer_12_1_address0;
            else 
                weight_buffer1_12_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_12_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_12_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_1_ce0 <= grp_compute4_fu_1110_weight_buffer_12_1_ce0;
            else 
                weight_buffer1_12_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_12_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_12_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_1_we0;
        else 
            weight_buffer1_12_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_2_address0 <= grp_compute4_fu_1110_weight_buffer_12_2_address0;
            else 
                weight_buffer1_12_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_12_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_12_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_2_ce0 <= grp_compute4_fu_1110_weight_buffer_12_2_ce0;
            else 
                weight_buffer1_12_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_12_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_12_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_2_we0;
        else 
            weight_buffer1_12_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_12_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_3_address0 <= grp_compute4_fu_1110_weight_buffer_12_3_address0;
            else 
                weight_buffer1_12_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_12_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_12_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_12_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_12_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_12_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_12_3_ce0 <= grp_compute4_fu_1110_weight_buffer_12_3_ce0;
            else 
                weight_buffer1_12_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_12_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_12_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_12_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_12_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_12_3_we0;
        else 
            weight_buffer1_12_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_0_address0 <= grp_compute4_fu_1110_weight_buffer_13_0_address0;
            else 
                weight_buffer1_13_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_13_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_13_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_0_ce0 <= grp_compute4_fu_1110_weight_buffer_13_0_ce0;
            else 
                weight_buffer1_13_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_13_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_13_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_0_we0;
        else 
            weight_buffer1_13_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_1_address0 <= grp_compute4_fu_1110_weight_buffer_13_1_address0;
            else 
                weight_buffer1_13_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_13_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_13_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_1_ce0 <= grp_compute4_fu_1110_weight_buffer_13_1_ce0;
            else 
                weight_buffer1_13_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_13_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_13_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_1_we0;
        else 
            weight_buffer1_13_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_2_address0 <= grp_compute4_fu_1110_weight_buffer_13_2_address0;
            else 
                weight_buffer1_13_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_13_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_13_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_2_ce0 <= grp_compute4_fu_1110_weight_buffer_13_2_ce0;
            else 
                weight_buffer1_13_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_13_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_13_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_2_we0;
        else 
            weight_buffer1_13_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_13_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_3_address0 <= grp_compute4_fu_1110_weight_buffer_13_3_address0;
            else 
                weight_buffer1_13_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_13_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_13_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_13_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_13_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_13_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_13_3_ce0 <= grp_compute4_fu_1110_weight_buffer_13_3_ce0;
            else 
                weight_buffer1_13_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_13_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_13_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_13_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_13_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_13_3_we0;
        else 
            weight_buffer1_13_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_0_address0 <= grp_compute4_fu_1110_weight_buffer_14_0_address0;
            else 
                weight_buffer1_14_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_14_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_14_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_0_ce0 <= grp_compute4_fu_1110_weight_buffer_14_0_ce0;
            else 
                weight_buffer1_14_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_14_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_14_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_0_we0;
        else 
            weight_buffer1_14_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_1_address0 <= grp_compute4_fu_1110_weight_buffer_14_1_address0;
            else 
                weight_buffer1_14_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_14_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_14_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_1_ce0 <= grp_compute4_fu_1110_weight_buffer_14_1_ce0;
            else 
                weight_buffer1_14_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_14_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_14_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_1_we0;
        else 
            weight_buffer1_14_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_2_address0 <= grp_compute4_fu_1110_weight_buffer_14_2_address0;
            else 
                weight_buffer1_14_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_14_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_14_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_2_ce0 <= grp_compute4_fu_1110_weight_buffer_14_2_ce0;
            else 
                weight_buffer1_14_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_14_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_14_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_2_we0;
        else 
            weight_buffer1_14_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_14_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_3_address0 <= grp_compute4_fu_1110_weight_buffer_14_3_address0;
            else 
                weight_buffer1_14_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_14_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_14_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_14_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_14_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_14_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_14_3_ce0 <= grp_compute4_fu_1110_weight_buffer_14_3_ce0;
            else 
                weight_buffer1_14_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_14_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_14_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_14_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_14_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_14_3_we0;
        else 
            weight_buffer1_14_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_0_address0 <= grp_compute4_fu_1110_weight_buffer_15_0_address0;
            else 
                weight_buffer1_15_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_15_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_15_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_0_ce0 <= grp_compute4_fu_1110_weight_buffer_15_0_ce0;
            else 
                weight_buffer1_15_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_15_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_15_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_0_we0;
        else 
            weight_buffer1_15_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_1_address0 <= grp_compute4_fu_1110_weight_buffer_15_1_address0;
            else 
                weight_buffer1_15_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_15_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_15_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_1_ce0 <= grp_compute4_fu_1110_weight_buffer_15_1_ce0;
            else 
                weight_buffer1_15_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_15_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_15_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_1_we0;
        else 
            weight_buffer1_15_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_2_address0 <= grp_compute4_fu_1110_weight_buffer_15_2_address0;
            else 
                weight_buffer1_15_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_15_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_15_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_2_ce0 <= grp_compute4_fu_1110_weight_buffer_15_2_ce0;
            else 
                weight_buffer1_15_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_15_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_15_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_2_we0;
        else 
            weight_buffer1_15_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_15_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_3_address0 <= grp_compute4_fu_1110_weight_buffer_15_3_address0;
            else 
                weight_buffer1_15_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_15_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_15_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_15_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_15_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_15_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_15_3_ce0 <= grp_compute4_fu_1110_weight_buffer_15_3_ce0;
            else 
                weight_buffer1_15_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_15_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_15_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_15_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_15_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_15_3_we0;
        else 
            weight_buffer1_15_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_0_address0 <= grp_compute4_fu_1110_weight_buffer_16_0_address0;
            else 
                weight_buffer1_16_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_16_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_16_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_0_ce0 <= grp_compute4_fu_1110_weight_buffer_16_0_ce0;
            else 
                weight_buffer1_16_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_16_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_16_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_0_we0;
        else 
            weight_buffer1_16_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_1_address0 <= grp_compute4_fu_1110_weight_buffer_16_1_address0;
            else 
                weight_buffer1_16_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_16_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_16_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_1_ce0 <= grp_compute4_fu_1110_weight_buffer_16_1_ce0;
            else 
                weight_buffer1_16_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_16_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_16_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_1_we0;
        else 
            weight_buffer1_16_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_2_address0 <= grp_compute4_fu_1110_weight_buffer_16_2_address0;
            else 
                weight_buffer1_16_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_16_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_16_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_2_ce0 <= grp_compute4_fu_1110_weight_buffer_16_2_ce0;
            else 
                weight_buffer1_16_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_16_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_16_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_2_we0;
        else 
            weight_buffer1_16_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_16_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_3_address0 <= grp_compute4_fu_1110_weight_buffer_16_3_address0;
            else 
                weight_buffer1_16_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_16_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_16_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_16_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_16_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_16_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_16_3_ce0 <= grp_compute4_fu_1110_weight_buffer_16_3_ce0;
            else 
                weight_buffer1_16_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_16_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_16_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_16_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_16_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_16_3_we0;
        else 
            weight_buffer1_16_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_0_address0 <= grp_compute4_fu_1110_weight_buffer_17_0_address0;
            else 
                weight_buffer1_17_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_17_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_17_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_0_ce0 <= grp_compute4_fu_1110_weight_buffer_17_0_ce0;
            else 
                weight_buffer1_17_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_17_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_17_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_0_we0;
        else 
            weight_buffer1_17_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_1_address0 <= grp_compute4_fu_1110_weight_buffer_17_1_address0;
            else 
                weight_buffer1_17_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_17_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_17_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_1_ce0 <= grp_compute4_fu_1110_weight_buffer_17_1_ce0;
            else 
                weight_buffer1_17_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_17_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_17_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_1_we0;
        else 
            weight_buffer1_17_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_2_address0 <= grp_compute4_fu_1110_weight_buffer_17_2_address0;
            else 
                weight_buffer1_17_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_17_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_17_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_2_ce0 <= grp_compute4_fu_1110_weight_buffer_17_2_ce0;
            else 
                weight_buffer1_17_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_17_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_17_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_2_we0;
        else 
            weight_buffer1_17_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_17_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_3_address0 <= grp_compute4_fu_1110_weight_buffer_17_3_address0;
            else 
                weight_buffer1_17_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_17_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_17_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_17_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_17_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_17_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_17_3_ce0 <= grp_compute4_fu_1110_weight_buffer_17_3_ce0;
            else 
                weight_buffer1_17_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_17_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_17_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_17_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_17_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_17_3_we0;
        else 
            weight_buffer1_17_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_0_address0 <= grp_compute4_fu_1110_weight_buffer_18_0_address0;
            else 
                weight_buffer1_18_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_18_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_18_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_0_ce0 <= grp_compute4_fu_1110_weight_buffer_18_0_ce0;
            else 
                weight_buffer1_18_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_18_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_18_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_0_we0;
        else 
            weight_buffer1_18_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_1_address0 <= grp_compute4_fu_1110_weight_buffer_18_1_address0;
            else 
                weight_buffer1_18_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_18_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_18_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_1_ce0 <= grp_compute4_fu_1110_weight_buffer_18_1_ce0;
            else 
                weight_buffer1_18_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_18_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_18_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_1_we0;
        else 
            weight_buffer1_18_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_2_address0 <= grp_compute4_fu_1110_weight_buffer_18_2_address0;
            else 
                weight_buffer1_18_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_18_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_18_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_2_ce0 <= grp_compute4_fu_1110_weight_buffer_18_2_ce0;
            else 
                weight_buffer1_18_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_18_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_18_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_2_we0;
        else 
            weight_buffer1_18_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_18_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_3_address0 <= grp_compute4_fu_1110_weight_buffer_18_3_address0;
            else 
                weight_buffer1_18_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_18_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_18_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_18_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_18_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_18_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_18_3_ce0 <= grp_compute4_fu_1110_weight_buffer_18_3_ce0;
            else 
                weight_buffer1_18_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_18_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_18_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_18_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_18_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_18_3_we0;
        else 
            weight_buffer1_18_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_0_address0 <= grp_compute4_fu_1110_weight_buffer_19_0_address0;
            else 
                weight_buffer1_19_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_19_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_19_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_0_ce0 <= grp_compute4_fu_1110_weight_buffer_19_0_ce0;
            else 
                weight_buffer1_19_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_19_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_19_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_0_we0;
        else 
            weight_buffer1_19_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_1_address0 <= grp_compute4_fu_1110_weight_buffer_19_1_address0;
            else 
                weight_buffer1_19_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_19_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_19_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_1_ce0 <= grp_compute4_fu_1110_weight_buffer_19_1_ce0;
            else 
                weight_buffer1_19_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_19_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_19_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_1_we0;
        else 
            weight_buffer1_19_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_2_address0 <= grp_compute4_fu_1110_weight_buffer_19_2_address0;
            else 
                weight_buffer1_19_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_19_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_19_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_2_ce0 <= grp_compute4_fu_1110_weight_buffer_19_2_ce0;
            else 
                weight_buffer1_19_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_19_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_19_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_2_we0;
        else 
            weight_buffer1_19_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_19_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_3_address0 <= grp_compute4_fu_1110_weight_buffer_19_3_address0;
            else 
                weight_buffer1_19_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_19_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_19_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_19_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_19_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_19_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_19_3_ce0 <= grp_compute4_fu_1110_weight_buffer_19_3_ce0;
            else 
                weight_buffer1_19_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_19_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_19_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_19_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_19_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_19_3_we0;
        else 
            weight_buffer1_19_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_0_address0 <= grp_compute4_fu_1110_weight_buffer_1_0_address0;
            else 
                weight_buffer1_1_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_1_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_1_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_0_ce0 <= grp_compute4_fu_1110_weight_buffer_1_0_ce0;
            else 
                weight_buffer1_1_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_1_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_0_we0;
        else 
            weight_buffer1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_1_address0 <= grp_compute4_fu_1110_weight_buffer_1_1_address0;
            else 
                weight_buffer1_1_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_1_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_1_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_1_ce0 <= grp_compute4_fu_1110_weight_buffer_1_1_ce0;
            else 
                weight_buffer1_1_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_1_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_1_we0;
        else 
            weight_buffer1_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_2_address0 <= grp_compute4_fu_1110_weight_buffer_1_2_address0;
            else 
                weight_buffer1_1_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_1_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_1_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_2_ce0 <= grp_compute4_fu_1110_weight_buffer_1_2_ce0;
            else 
                weight_buffer1_1_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_1_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_2_we0;
        else 
            weight_buffer1_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_1_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_3_address0 <= grp_compute4_fu_1110_weight_buffer_1_3_address0;
            else 
                weight_buffer1_1_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_1_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_1_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_1_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_1_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_1_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_1_3_ce0 <= grp_compute4_fu_1110_weight_buffer_1_3_ce0;
            else 
                weight_buffer1_1_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_1_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_1_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_1_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_1_3_we0;
        else 
            weight_buffer1_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_0_address0 <= grp_compute4_fu_1110_weight_buffer_20_0_address0;
            else 
                weight_buffer1_20_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_20_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_20_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_0_ce0 <= grp_compute4_fu_1110_weight_buffer_20_0_ce0;
            else 
                weight_buffer1_20_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_20_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_20_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_0_we0;
        else 
            weight_buffer1_20_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_1_address0 <= grp_compute4_fu_1110_weight_buffer_20_1_address0;
            else 
                weight_buffer1_20_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_20_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_20_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_1_ce0 <= grp_compute4_fu_1110_weight_buffer_20_1_ce0;
            else 
                weight_buffer1_20_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_20_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_20_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_1_we0;
        else 
            weight_buffer1_20_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_2_address0 <= grp_compute4_fu_1110_weight_buffer_20_2_address0;
            else 
                weight_buffer1_20_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_20_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_20_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_2_ce0 <= grp_compute4_fu_1110_weight_buffer_20_2_ce0;
            else 
                weight_buffer1_20_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_20_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_20_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_2_we0;
        else 
            weight_buffer1_20_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_20_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_3_address0 <= grp_compute4_fu_1110_weight_buffer_20_3_address0;
            else 
                weight_buffer1_20_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_20_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_20_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_20_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_20_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_20_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_20_3_ce0 <= grp_compute4_fu_1110_weight_buffer_20_3_ce0;
            else 
                weight_buffer1_20_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_20_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_20_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_20_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_20_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_20_3_we0;
        else 
            weight_buffer1_20_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_0_address0 <= grp_compute4_fu_1110_weight_buffer_21_0_address0;
            else 
                weight_buffer1_21_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_21_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_21_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_0_ce0 <= grp_compute4_fu_1110_weight_buffer_21_0_ce0;
            else 
                weight_buffer1_21_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_21_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_21_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_0_we0;
        else 
            weight_buffer1_21_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_1_address0 <= grp_compute4_fu_1110_weight_buffer_21_1_address0;
            else 
                weight_buffer1_21_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_21_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_21_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_1_ce0 <= grp_compute4_fu_1110_weight_buffer_21_1_ce0;
            else 
                weight_buffer1_21_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_21_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_21_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_1_we0;
        else 
            weight_buffer1_21_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_2_address0 <= grp_compute4_fu_1110_weight_buffer_21_2_address0;
            else 
                weight_buffer1_21_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_21_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_21_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_2_ce0 <= grp_compute4_fu_1110_weight_buffer_21_2_ce0;
            else 
                weight_buffer1_21_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_21_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_21_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_2_we0;
        else 
            weight_buffer1_21_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_21_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_3_address0 <= grp_compute4_fu_1110_weight_buffer_21_3_address0;
            else 
                weight_buffer1_21_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_21_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_21_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_21_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_21_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_21_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_21_3_ce0 <= grp_compute4_fu_1110_weight_buffer_21_3_ce0;
            else 
                weight_buffer1_21_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_21_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_21_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_21_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_21_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_21_3_we0;
        else 
            weight_buffer1_21_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_0_address0 <= grp_compute4_fu_1110_weight_buffer_22_0_address0;
            else 
                weight_buffer1_22_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_22_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_22_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_0_ce0 <= grp_compute4_fu_1110_weight_buffer_22_0_ce0;
            else 
                weight_buffer1_22_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_22_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_22_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_0_we0;
        else 
            weight_buffer1_22_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_1_address0 <= grp_compute4_fu_1110_weight_buffer_22_1_address0;
            else 
                weight_buffer1_22_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_22_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_22_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_1_ce0 <= grp_compute4_fu_1110_weight_buffer_22_1_ce0;
            else 
                weight_buffer1_22_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_22_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_22_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_1_we0;
        else 
            weight_buffer1_22_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_2_address0 <= grp_compute4_fu_1110_weight_buffer_22_2_address0;
            else 
                weight_buffer1_22_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_22_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_22_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_2_ce0 <= grp_compute4_fu_1110_weight_buffer_22_2_ce0;
            else 
                weight_buffer1_22_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_22_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_22_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_2_we0;
        else 
            weight_buffer1_22_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_22_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_3_address0 <= grp_compute4_fu_1110_weight_buffer_22_3_address0;
            else 
                weight_buffer1_22_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_22_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_22_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_22_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_22_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_22_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_22_3_ce0 <= grp_compute4_fu_1110_weight_buffer_22_3_ce0;
            else 
                weight_buffer1_22_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_22_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_22_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_22_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_22_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_22_3_we0;
        else 
            weight_buffer1_22_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_0_address0 <= grp_compute4_fu_1110_weight_buffer_23_0_address0;
            else 
                weight_buffer1_23_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_23_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_23_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_0_ce0 <= grp_compute4_fu_1110_weight_buffer_23_0_ce0;
            else 
                weight_buffer1_23_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_23_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_23_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_0_we0;
        else 
            weight_buffer1_23_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_1_address0 <= grp_compute4_fu_1110_weight_buffer_23_1_address0;
            else 
                weight_buffer1_23_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_23_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_23_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_1_ce0 <= grp_compute4_fu_1110_weight_buffer_23_1_ce0;
            else 
                weight_buffer1_23_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_23_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_23_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_1_we0;
        else 
            weight_buffer1_23_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_2_address0 <= grp_compute4_fu_1110_weight_buffer_23_2_address0;
            else 
                weight_buffer1_23_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_23_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_23_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_2_ce0 <= grp_compute4_fu_1110_weight_buffer_23_2_ce0;
            else 
                weight_buffer1_23_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_23_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_23_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_2_we0;
        else 
            weight_buffer1_23_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_23_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_3_address0 <= grp_compute4_fu_1110_weight_buffer_23_3_address0;
            else 
                weight_buffer1_23_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_23_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_23_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_23_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_23_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_23_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_23_3_ce0 <= grp_compute4_fu_1110_weight_buffer_23_3_ce0;
            else 
                weight_buffer1_23_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_23_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_23_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_23_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_23_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_23_3_we0;
        else 
            weight_buffer1_23_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_0_address0 <= grp_compute4_fu_1110_weight_buffer_24_0_address0;
            else 
                weight_buffer1_24_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_24_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_24_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_0_ce0 <= grp_compute4_fu_1110_weight_buffer_24_0_ce0;
            else 
                weight_buffer1_24_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_24_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_24_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_0_we0;
        else 
            weight_buffer1_24_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_1_address0 <= grp_compute4_fu_1110_weight_buffer_24_1_address0;
            else 
                weight_buffer1_24_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_24_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_24_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_1_ce0 <= grp_compute4_fu_1110_weight_buffer_24_1_ce0;
            else 
                weight_buffer1_24_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_24_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_24_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_1_we0;
        else 
            weight_buffer1_24_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_2_address0 <= grp_compute4_fu_1110_weight_buffer_24_2_address0;
            else 
                weight_buffer1_24_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_24_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_24_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_2_ce0 <= grp_compute4_fu_1110_weight_buffer_24_2_ce0;
            else 
                weight_buffer1_24_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_24_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_24_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_2_we0;
        else 
            weight_buffer1_24_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_24_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_3_address0 <= grp_compute4_fu_1110_weight_buffer_24_3_address0;
            else 
                weight_buffer1_24_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_24_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_24_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_24_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_24_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_24_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_24_3_ce0 <= grp_compute4_fu_1110_weight_buffer_24_3_ce0;
            else 
                weight_buffer1_24_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_24_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_24_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_24_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_24_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_24_3_we0;
        else 
            weight_buffer1_24_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_0_address0 <= grp_compute4_fu_1110_weight_buffer_25_0_address0;
            else 
                weight_buffer1_25_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_25_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_25_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_0_ce0 <= grp_compute4_fu_1110_weight_buffer_25_0_ce0;
            else 
                weight_buffer1_25_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_25_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_25_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_0_we0;
        else 
            weight_buffer1_25_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_1_address0 <= grp_compute4_fu_1110_weight_buffer_25_1_address0;
            else 
                weight_buffer1_25_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_25_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_25_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_1_ce0 <= grp_compute4_fu_1110_weight_buffer_25_1_ce0;
            else 
                weight_buffer1_25_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_25_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_25_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_1_we0;
        else 
            weight_buffer1_25_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_2_address0 <= grp_compute4_fu_1110_weight_buffer_25_2_address0;
            else 
                weight_buffer1_25_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_25_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_25_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_2_ce0 <= grp_compute4_fu_1110_weight_buffer_25_2_ce0;
            else 
                weight_buffer1_25_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_25_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_25_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_2_we0;
        else 
            weight_buffer1_25_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_25_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_3_address0 <= grp_compute4_fu_1110_weight_buffer_25_3_address0;
            else 
                weight_buffer1_25_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_25_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_25_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_25_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_25_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_25_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_25_3_ce0 <= grp_compute4_fu_1110_weight_buffer_25_3_ce0;
            else 
                weight_buffer1_25_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_25_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_25_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_25_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_25_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_25_3_we0;
        else 
            weight_buffer1_25_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_0_address0 <= grp_compute4_fu_1110_weight_buffer_26_0_address0;
            else 
                weight_buffer1_26_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_26_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_26_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_0_ce0 <= grp_compute4_fu_1110_weight_buffer_26_0_ce0;
            else 
                weight_buffer1_26_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_26_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_26_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_0_we0;
        else 
            weight_buffer1_26_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_1_address0 <= grp_compute4_fu_1110_weight_buffer_26_1_address0;
            else 
                weight_buffer1_26_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_26_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_26_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_1_ce0 <= grp_compute4_fu_1110_weight_buffer_26_1_ce0;
            else 
                weight_buffer1_26_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_26_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_26_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_1_we0;
        else 
            weight_buffer1_26_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_2_address0 <= grp_compute4_fu_1110_weight_buffer_26_2_address0;
            else 
                weight_buffer1_26_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_26_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_26_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_2_ce0 <= grp_compute4_fu_1110_weight_buffer_26_2_ce0;
            else 
                weight_buffer1_26_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_26_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_26_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_2_we0;
        else 
            weight_buffer1_26_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_26_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_3_address0 <= grp_compute4_fu_1110_weight_buffer_26_3_address0;
            else 
                weight_buffer1_26_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_26_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_26_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_26_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_26_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_26_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_26_3_ce0 <= grp_compute4_fu_1110_weight_buffer_26_3_ce0;
            else 
                weight_buffer1_26_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_26_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_26_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_26_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_26_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_26_3_we0;
        else 
            weight_buffer1_26_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_0_address0 <= grp_compute4_fu_1110_weight_buffer_27_0_address0;
            else 
                weight_buffer1_27_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_27_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_27_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_0_ce0 <= grp_compute4_fu_1110_weight_buffer_27_0_ce0;
            else 
                weight_buffer1_27_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_27_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_27_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_0_we0;
        else 
            weight_buffer1_27_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_1_address0 <= grp_compute4_fu_1110_weight_buffer_27_1_address0;
            else 
                weight_buffer1_27_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_27_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_27_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_1_ce0 <= grp_compute4_fu_1110_weight_buffer_27_1_ce0;
            else 
                weight_buffer1_27_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_27_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_27_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_1_we0;
        else 
            weight_buffer1_27_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_2_address0 <= grp_compute4_fu_1110_weight_buffer_27_2_address0;
            else 
                weight_buffer1_27_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_27_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_27_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_2_ce0 <= grp_compute4_fu_1110_weight_buffer_27_2_ce0;
            else 
                weight_buffer1_27_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_27_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_27_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_2_we0;
        else 
            weight_buffer1_27_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_27_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_3_address0 <= grp_compute4_fu_1110_weight_buffer_27_3_address0;
            else 
                weight_buffer1_27_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_27_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_27_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_27_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_27_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_27_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_27_3_ce0 <= grp_compute4_fu_1110_weight_buffer_27_3_ce0;
            else 
                weight_buffer1_27_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_27_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_27_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_27_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_27_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_27_3_we0;
        else 
            weight_buffer1_27_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_0_address0 <= grp_compute4_fu_1110_weight_buffer_28_0_address0;
            else 
                weight_buffer1_28_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_28_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_28_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_0_ce0 <= grp_compute4_fu_1110_weight_buffer_28_0_ce0;
            else 
                weight_buffer1_28_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_28_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_28_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_0_we0;
        else 
            weight_buffer1_28_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_1_address0 <= grp_compute4_fu_1110_weight_buffer_28_1_address0;
            else 
                weight_buffer1_28_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_28_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_28_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_1_ce0 <= grp_compute4_fu_1110_weight_buffer_28_1_ce0;
            else 
                weight_buffer1_28_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_28_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_28_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_1_we0;
        else 
            weight_buffer1_28_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_2_address0 <= grp_compute4_fu_1110_weight_buffer_28_2_address0;
            else 
                weight_buffer1_28_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_28_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_28_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_2_ce0 <= grp_compute4_fu_1110_weight_buffer_28_2_ce0;
            else 
                weight_buffer1_28_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_28_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_28_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_2_we0;
        else 
            weight_buffer1_28_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_28_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_3_address0 <= grp_compute4_fu_1110_weight_buffer_28_3_address0;
            else 
                weight_buffer1_28_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_28_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_28_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_28_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_28_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_28_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_28_3_ce0 <= grp_compute4_fu_1110_weight_buffer_28_3_ce0;
            else 
                weight_buffer1_28_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_28_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_28_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_28_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_28_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_28_3_we0;
        else 
            weight_buffer1_28_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_0_address0 <= grp_compute4_fu_1110_weight_buffer_29_0_address0;
            else 
                weight_buffer1_29_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_29_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_29_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_0_ce0 <= grp_compute4_fu_1110_weight_buffer_29_0_ce0;
            else 
                weight_buffer1_29_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_29_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_29_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_0_we0;
        else 
            weight_buffer1_29_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_1_address0 <= grp_compute4_fu_1110_weight_buffer_29_1_address0;
            else 
                weight_buffer1_29_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_29_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_29_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_1_ce0 <= grp_compute4_fu_1110_weight_buffer_29_1_ce0;
            else 
                weight_buffer1_29_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_29_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_29_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_1_we0;
        else 
            weight_buffer1_29_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_2_address0 <= grp_compute4_fu_1110_weight_buffer_29_2_address0;
            else 
                weight_buffer1_29_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_29_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_29_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_2_ce0 <= grp_compute4_fu_1110_weight_buffer_29_2_ce0;
            else 
                weight_buffer1_29_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_29_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_29_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_2_we0;
        else 
            weight_buffer1_29_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_29_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_3_address0 <= grp_compute4_fu_1110_weight_buffer_29_3_address0;
            else 
                weight_buffer1_29_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_29_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_29_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_29_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_29_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_29_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_29_3_ce0 <= grp_compute4_fu_1110_weight_buffer_29_3_ce0;
            else 
                weight_buffer1_29_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_29_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_29_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_29_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_29_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_29_3_we0;
        else 
            weight_buffer1_29_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_0_address0 <= grp_compute4_fu_1110_weight_buffer_2_0_address0;
            else 
                weight_buffer1_2_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_2_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_2_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_0_ce0 <= grp_compute4_fu_1110_weight_buffer_2_0_ce0;
            else 
                weight_buffer1_2_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_2_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_0_we0;
        else 
            weight_buffer1_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_1_address0 <= grp_compute4_fu_1110_weight_buffer_2_1_address0;
            else 
                weight_buffer1_2_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_2_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_2_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_1_ce0 <= grp_compute4_fu_1110_weight_buffer_2_1_ce0;
            else 
                weight_buffer1_2_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_2_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_1_we0;
        else 
            weight_buffer1_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_2_address0 <= grp_compute4_fu_1110_weight_buffer_2_2_address0;
            else 
                weight_buffer1_2_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_2_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_2_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_2_ce0 <= grp_compute4_fu_1110_weight_buffer_2_2_ce0;
            else 
                weight_buffer1_2_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_2_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_2_we0;
        else 
            weight_buffer1_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_2_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_3_address0 <= grp_compute4_fu_1110_weight_buffer_2_3_address0;
            else 
                weight_buffer1_2_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_2_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_2_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_2_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_2_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_2_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_2_3_ce0 <= grp_compute4_fu_1110_weight_buffer_2_3_ce0;
            else 
                weight_buffer1_2_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_2_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_2_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_2_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_2_3_we0;
        else 
            weight_buffer1_2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_0_address0 <= grp_compute4_fu_1110_weight_buffer_30_0_address0;
            else 
                weight_buffer1_30_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_30_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_30_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_0_ce0 <= grp_compute4_fu_1110_weight_buffer_30_0_ce0;
            else 
                weight_buffer1_30_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_30_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_30_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_0_we0;
        else 
            weight_buffer1_30_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_1_address0 <= grp_compute4_fu_1110_weight_buffer_30_1_address0;
            else 
                weight_buffer1_30_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_30_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_30_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_1_ce0 <= grp_compute4_fu_1110_weight_buffer_30_1_ce0;
            else 
                weight_buffer1_30_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_30_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_30_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_1_we0;
        else 
            weight_buffer1_30_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_2_address0 <= grp_compute4_fu_1110_weight_buffer_30_2_address0;
            else 
                weight_buffer1_30_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_30_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_30_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_2_ce0 <= grp_compute4_fu_1110_weight_buffer_30_2_ce0;
            else 
                weight_buffer1_30_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_30_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_30_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_2_we0;
        else 
            weight_buffer1_30_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_30_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_3_address0 <= grp_compute4_fu_1110_weight_buffer_30_3_address0;
            else 
                weight_buffer1_30_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_30_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_30_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_30_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_30_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_30_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_30_3_ce0 <= grp_compute4_fu_1110_weight_buffer_30_3_ce0;
            else 
                weight_buffer1_30_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_30_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_30_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_30_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_30_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_30_3_we0;
        else 
            weight_buffer1_30_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_0_address0 <= grp_compute4_fu_1110_weight_buffer_31_0_address0;
            else 
                weight_buffer1_31_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_31_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_31_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_0_ce0 <= grp_compute4_fu_1110_weight_buffer_31_0_ce0;
            else 
                weight_buffer1_31_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_31_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_31_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_0_we0;
        else 
            weight_buffer1_31_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_1_address0 <= grp_compute4_fu_1110_weight_buffer_31_1_address0;
            else 
                weight_buffer1_31_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_31_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_31_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_1_ce0 <= grp_compute4_fu_1110_weight_buffer_31_1_ce0;
            else 
                weight_buffer1_31_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_31_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_31_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_1_we0;
        else 
            weight_buffer1_31_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_2_address0 <= grp_compute4_fu_1110_weight_buffer_31_2_address0;
            else 
                weight_buffer1_31_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_31_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_31_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_2_ce0 <= grp_compute4_fu_1110_weight_buffer_31_2_ce0;
            else 
                weight_buffer1_31_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_31_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_31_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_2_we0;
        else 
            weight_buffer1_31_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_31_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_3_address0 <= grp_compute4_fu_1110_weight_buffer_31_3_address0;
            else 
                weight_buffer1_31_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_31_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_31_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_31_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_31_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_31_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_31_3_ce0 <= grp_compute4_fu_1110_weight_buffer_31_3_ce0;
            else 
                weight_buffer1_31_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_31_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_31_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_31_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_31_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_31_3_we0;
        else 
            weight_buffer1_31_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_0_address0 <= grp_compute4_fu_1110_weight_buffer_3_0_address0;
            else 
                weight_buffer1_3_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_3_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_3_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_0_ce0 <= grp_compute4_fu_1110_weight_buffer_3_0_ce0;
            else 
                weight_buffer1_3_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_3_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_0_we0;
        else 
            weight_buffer1_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_1_address0 <= grp_compute4_fu_1110_weight_buffer_3_1_address0;
            else 
                weight_buffer1_3_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_3_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_3_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_1_ce0 <= grp_compute4_fu_1110_weight_buffer_3_1_ce0;
            else 
                weight_buffer1_3_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_3_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_1_we0;
        else 
            weight_buffer1_3_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_2_address0 <= grp_compute4_fu_1110_weight_buffer_3_2_address0;
            else 
                weight_buffer1_3_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_3_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_3_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_2_ce0 <= grp_compute4_fu_1110_weight_buffer_3_2_ce0;
            else 
                weight_buffer1_3_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_3_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_2_we0;
        else 
            weight_buffer1_3_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_3_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_3_address0 <= grp_compute4_fu_1110_weight_buffer_3_3_address0;
            else 
                weight_buffer1_3_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_3_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_3_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_3_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_3_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_3_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_3_3_ce0 <= grp_compute4_fu_1110_weight_buffer_3_3_ce0;
            else 
                weight_buffer1_3_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_3_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_3_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_3_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_3_3_we0;
        else 
            weight_buffer1_3_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_0_address0 <= grp_compute4_fu_1110_weight_buffer_4_0_address0;
            else 
                weight_buffer1_4_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_4_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_4_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_0_ce0 <= grp_compute4_fu_1110_weight_buffer_4_0_ce0;
            else 
                weight_buffer1_4_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_4_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_0_we0;
        else 
            weight_buffer1_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_1_address0 <= grp_compute4_fu_1110_weight_buffer_4_1_address0;
            else 
                weight_buffer1_4_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_4_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_4_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_1_ce0 <= grp_compute4_fu_1110_weight_buffer_4_1_ce0;
            else 
                weight_buffer1_4_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_4_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_1_we0;
        else 
            weight_buffer1_4_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_2_address0 <= grp_compute4_fu_1110_weight_buffer_4_2_address0;
            else 
                weight_buffer1_4_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_4_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_4_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_2_ce0 <= grp_compute4_fu_1110_weight_buffer_4_2_ce0;
            else 
                weight_buffer1_4_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_4_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_2_we0;
        else 
            weight_buffer1_4_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_4_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_3_address0 <= grp_compute4_fu_1110_weight_buffer_4_3_address0;
            else 
                weight_buffer1_4_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_4_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_4_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_4_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_4_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_4_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_4_3_ce0 <= grp_compute4_fu_1110_weight_buffer_4_3_ce0;
            else 
                weight_buffer1_4_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_4_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_4_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_4_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_4_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_4_3_we0;
        else 
            weight_buffer1_4_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_0_address0 <= grp_compute4_fu_1110_weight_buffer_5_0_address0;
            else 
                weight_buffer1_5_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_5_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_5_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_0_ce0 <= grp_compute4_fu_1110_weight_buffer_5_0_ce0;
            else 
                weight_buffer1_5_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_5_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_0_we0;
        else 
            weight_buffer1_5_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_1_address0 <= grp_compute4_fu_1110_weight_buffer_5_1_address0;
            else 
                weight_buffer1_5_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_5_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_5_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_1_ce0 <= grp_compute4_fu_1110_weight_buffer_5_1_ce0;
            else 
                weight_buffer1_5_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_5_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_1_we0;
        else 
            weight_buffer1_5_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_2_address0 <= grp_compute4_fu_1110_weight_buffer_5_2_address0;
            else 
                weight_buffer1_5_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_5_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_5_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_2_ce0 <= grp_compute4_fu_1110_weight_buffer_5_2_ce0;
            else 
                weight_buffer1_5_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_5_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_5_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_2_we0;
        else 
            weight_buffer1_5_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_5_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_3_address0 <= grp_compute4_fu_1110_weight_buffer_5_3_address0;
            else 
                weight_buffer1_5_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_5_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_5_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_5_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_5_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_5_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_5_3_ce0 <= grp_compute4_fu_1110_weight_buffer_5_3_ce0;
            else 
                weight_buffer1_5_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_5_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_5_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_5_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_5_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_5_3_we0;
        else 
            weight_buffer1_5_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_0_address0 <= grp_compute4_fu_1110_weight_buffer_6_0_address0;
            else 
                weight_buffer1_6_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_6_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_6_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_0_ce0 <= grp_compute4_fu_1110_weight_buffer_6_0_ce0;
            else 
                weight_buffer1_6_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_6_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_0_we0;
        else 
            weight_buffer1_6_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_1_address0 <= grp_compute4_fu_1110_weight_buffer_6_1_address0;
            else 
                weight_buffer1_6_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_6_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_6_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_1_ce0 <= grp_compute4_fu_1110_weight_buffer_6_1_ce0;
            else 
                weight_buffer1_6_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_6_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_1_we0;
        else 
            weight_buffer1_6_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_2_address0 <= grp_compute4_fu_1110_weight_buffer_6_2_address0;
            else 
                weight_buffer1_6_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_6_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_6_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_2_ce0 <= grp_compute4_fu_1110_weight_buffer_6_2_ce0;
            else 
                weight_buffer1_6_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_6_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_2_we0;
        else 
            weight_buffer1_6_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_6_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_3_address0 <= grp_compute4_fu_1110_weight_buffer_6_3_address0;
            else 
                weight_buffer1_6_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_6_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_6_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_6_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_6_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_6_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_6_3_ce0 <= grp_compute4_fu_1110_weight_buffer_6_3_ce0;
            else 
                weight_buffer1_6_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_6_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_6_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_6_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_6_3_we0;
        else 
            weight_buffer1_6_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_0_address0 <= grp_compute4_fu_1110_weight_buffer_7_0_address0;
            else 
                weight_buffer1_7_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_7_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_7_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_0_ce0 <= grp_compute4_fu_1110_weight_buffer_7_0_ce0;
            else 
                weight_buffer1_7_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_7_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_0_we0;
        else 
            weight_buffer1_7_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_1_address0 <= grp_compute4_fu_1110_weight_buffer_7_1_address0;
            else 
                weight_buffer1_7_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_7_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_7_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_1_ce0 <= grp_compute4_fu_1110_weight_buffer_7_1_ce0;
            else 
                weight_buffer1_7_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_7_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_7_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_1_we0;
        else 
            weight_buffer1_7_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_2_address0 <= grp_compute4_fu_1110_weight_buffer_7_2_address0;
            else 
                weight_buffer1_7_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_7_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_7_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_2_ce0 <= grp_compute4_fu_1110_weight_buffer_7_2_ce0;
            else 
                weight_buffer1_7_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_7_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_7_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_2_we0;
        else 
            weight_buffer1_7_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_7_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_3_address0 <= grp_compute4_fu_1110_weight_buffer_7_3_address0;
            else 
                weight_buffer1_7_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_7_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_7_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_7_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_7_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_7_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_7_3_ce0 <= grp_compute4_fu_1110_weight_buffer_7_3_ce0;
            else 
                weight_buffer1_7_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_7_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_7_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_7_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_7_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_7_3_we0;
        else 
            weight_buffer1_7_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_0_address0 <= grp_compute4_fu_1110_weight_buffer_8_0_address0;
            else 
                weight_buffer1_8_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_8_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_8_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_0_ce0 <= grp_compute4_fu_1110_weight_buffer_8_0_ce0;
            else 
                weight_buffer1_8_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_8_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_8_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_0_we0;
        else 
            weight_buffer1_8_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_1_address0 <= grp_compute4_fu_1110_weight_buffer_8_1_address0;
            else 
                weight_buffer1_8_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_8_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_8_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_1_ce0 <= grp_compute4_fu_1110_weight_buffer_8_1_ce0;
            else 
                weight_buffer1_8_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_8_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_8_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_1_we0;
        else 
            weight_buffer1_8_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_2_address0 <= grp_compute4_fu_1110_weight_buffer_8_2_address0;
            else 
                weight_buffer1_8_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_8_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_8_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_2_ce0 <= grp_compute4_fu_1110_weight_buffer_8_2_ce0;
            else 
                weight_buffer1_8_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_8_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_8_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_2_we0;
        else 
            weight_buffer1_8_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_8_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_3_address0 <= grp_compute4_fu_1110_weight_buffer_8_3_address0;
            else 
                weight_buffer1_8_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_8_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_8_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_8_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_8_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_8_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_8_3_ce0 <= grp_compute4_fu_1110_weight_buffer_8_3_ce0;
            else 
                weight_buffer1_8_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_8_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_8_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_8_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_8_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_8_3_we0;
        else 
            weight_buffer1_8_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_0_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_0_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_0_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_0_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_0_address0 <= grp_compute4_fu_1110_weight_buffer_9_0_address0;
            else 
                weight_buffer1_9_0_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_9_0_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_9_0_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_0_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_0_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_0_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_0_ce0 <= grp_compute4_fu_1110_weight_buffer_9_0_ce0;
            else 
                weight_buffer1_9_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_9_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_0_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_0_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_9_0_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_0_we0;
        else 
            weight_buffer1_9_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_1_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_1_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_1_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_1_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_1_address0 <= grp_compute4_fu_1110_weight_buffer_9_1_address0;
            else 
                weight_buffer1_9_1_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_9_1_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_9_1_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_1_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_1_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_1_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_1_ce0 <= grp_compute4_fu_1110_weight_buffer_9_1_ce0;
            else 
                weight_buffer1_9_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_9_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_1_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_1_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_9_1_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_1_we0;
        else 
            weight_buffer1_9_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_2_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_2_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_2_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_2_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_2_address0 <= grp_compute4_fu_1110_weight_buffer_9_2_address0;
            else 
                weight_buffer1_9_2_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_9_2_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_9_2_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_2_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_2_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_2_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_2_ce0 <= grp_compute4_fu_1110_weight_buffer_9_2_ce0;
            else 
                weight_buffer1_9_2_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_9_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_2_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_2_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_9_2_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_2_we0;
        else 
            weight_buffer1_9_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_3_address0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_3_address0, grp_copy_input_weight_fu_1649_weight_buffer_9_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_3_address0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_3_address0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_3_address0 <= grp_compute4_fu_1110_weight_buffer_9_3_address0;
            else 
                weight_buffer1_9_3_address0 <= "XXXX";
            end if;
        else 
            weight_buffer1_9_3_address0 <= "XXXX";
        end if; 
    end process;


    weight_buffer1_9_3_ce0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_compute4_fu_1110_weight_buffer_9_3_ce0, grp_copy_input_weight_fu_1649_weight_buffer_9_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_reg_1032 = ap_const_lv1_1)) then 
                weight_buffer1_9_3_ce0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_3_ce0;
            elsif ((pingpong_reg_1032 = ap_const_lv1_0)) then 
                weight_buffer1_9_3_ce0 <= grp_compute4_fu_1110_weight_buffer_9_3_ce0;
            else 
                weight_buffer1_9_3_ce0 <= ap_const_logic_0;
            end if;
        else 
            weight_buffer1_9_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer1_9_3_we0_assign_proc : process(ap_CS_fsm_state6, pingpong_reg_1032, grp_copy_input_weight_fu_1649_weight_buffer_9_3_we0)
    begin
        if (((pingpong_reg_1032 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weight_buffer1_9_3_we0 <= grp_copy_input_weight_fu_1649_weight_buffer_9_3_we0;
        else 
            weight_buffer1_9_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
