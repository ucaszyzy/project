// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module copy_local_beta (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        beta_buffer_address0,
        beta_buffer_ce0,
        beta_buffer_q0,
        local_beta_buffer_0,
        local_beta_buffer_1,
        local_beta_buffer_2,
        local_beta_buffer_3,
        local_beta_buffer_4,
        local_beta_buffer_5,
        local_beta_buffer_6,
        local_beta_buffer_7,
        local_beta_buffer_8,
        local_beta_buffer_9,
        local_beta_buffer_10,
        local_beta_buffer_11,
        local_beta_buffer_12,
        local_beta_buffer_13,
        local_beta_buffer_14,
        local_beta_buffer_15,
        local_beta_buffer_16,
        local_beta_buffer_17,
        local_beta_buffer_18,
        local_beta_buffer_19,
        local_beta_buffer_20,
        local_beta_buffer_21,
        local_beta_buffer_22,
        local_beta_buffer_23,
        local_beta_buffer_24,
        local_beta_buffer_25,
        local_beta_buffer_26,
        local_beta_buffer_27,
        local_beta_buffer_28,
        local_beta_buffer_29,
        local_beta_buffer_30,
        local_beta_buffer_31,
        TM_MIN,
        m,
        InterSubBeta,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] beta_buffer_address0;
output   beta_buffer_ce0;
input  [15:0] beta_buffer_q0;
input  [31:0] local_beta_buffer_0;
input  [31:0] local_beta_buffer_1;
input  [31:0] local_beta_buffer_2;
input  [31:0] local_beta_buffer_3;
input  [31:0] local_beta_buffer_4;
input  [31:0] local_beta_buffer_5;
input  [31:0] local_beta_buffer_6;
input  [31:0] local_beta_buffer_7;
input  [31:0] local_beta_buffer_8;
input  [31:0] local_beta_buffer_9;
input  [31:0] local_beta_buffer_10;
input  [31:0] local_beta_buffer_11;
input  [31:0] local_beta_buffer_12;
input  [31:0] local_beta_buffer_13;
input  [31:0] local_beta_buffer_14;
input  [31:0] local_beta_buffer_15;
input  [31:0] local_beta_buffer_16;
input  [31:0] local_beta_buffer_17;
input  [31:0] local_beta_buffer_18;
input  [31:0] local_beta_buffer_19;
input  [31:0] local_beta_buffer_20;
input  [31:0] local_beta_buffer_21;
input  [31:0] local_beta_buffer_22;
input  [31:0] local_beta_buffer_23;
input  [31:0] local_beta_buffer_24;
input  [31:0] local_beta_buffer_25;
input  [31:0] local_beta_buffer_26;
input  [31:0] local_beta_buffer_27;
input  [31:0] local_beta_buffer_28;
input  [31:0] local_beta_buffer_29;
input  [31:0] local_beta_buffer_30;
input  [31:0] local_beta_buffer_31;
input  [31:0] TM_MIN;
input  [31:0] m;
input  [7:0] InterSubBeta;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;
output  [31:0] ap_return_16;
output  [31:0] ap_return_17;
output  [31:0] ap_return_18;
output  [31:0] ap_return_19;
output  [31:0] ap_return_20;
output  [31:0] ap_return_21;
output  [31:0] ap_return_22;
output  [31:0] ap_return_23;
output  [31:0] ap_return_24;
output  [31:0] ap_return_25;
output  [31:0] ap_return_26;
output  [31:0] ap_return_27;
output  [31:0] ap_return_28;
output  [31:0] ap_return_29;
output  [31:0] ap_return_30;
output  [31:0] ap_return_31;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg beta_buffer_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [31:0] offset_reg_645;
reg   [30:0] tm_reg_654;
wire   [30:0] tmp_cast_fu_669_p1;
reg   [30:0] tmp_cast_reg_2390;
wire   [0:0] tmp_s_fu_837_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [30:0] tm_2_fu_842_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] tmp_fu_853_p1;
reg   [4:0] tmp_reg_2409;
wire   [31:0] offset_1_fu_857_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire  signed [63:0] tmp_59_fu_848_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] local_beta_buffer31_s_fu_166;
wire  signed [31:0] local_beta_buffer_ca_fu_872_p1;
wire    ap_CS_fsm_state4;
reg   [0:0] write_flag_fu_170;
reg   [0:0] write_flag31_fu_174;
reg   [31:0] local_beta_buffer30_s_fu_178;
reg   [31:0] local_beta_buffer_s_fu_182;
reg   [0:0] write_flag30_fu_186;
reg   [31:0] local_beta_buffer299_fu_190;
reg   [0:0] write_flag4_fu_194;
reg   [0:0] write_flag29_fu_198;
reg   [31:0] local_beta_buffer28_s_fu_202;
reg   [31:0] local_beta_buffer16_s_fu_206;
reg   [0:0] write_flag28_fu_210;
reg   [31:0] local_beta_buffer27_s_fu_214;
reg   [0:0] write_flag8_fu_218;
reg   [0:0] write_flag27_fu_222;
reg   [31:0] local_beta_buffer26_s_fu_226;
reg   [31:0] local_beta_buffer2_s_fu_230;
reg   [0:0] write_flag26_fu_234;
reg   [31:0] local_beta_buffer25_s_fu_238;
reg   [0:0] write_flag11_fu_242;
reg   [0:0] write_flag25_fu_246;
reg   [31:0] local_beta_buffer24_s_fu_250;
reg   [31:0] local_beta_buffer3_s_fu_254;
reg   [0:0] write_flag24_fu_258;
reg   [31:0] local_beta_buffer23_s_fu_262;
reg   [0:0] write_flag14_fu_266;
reg   [0:0] write_flag23_fu_270;
reg   [31:0] local_beta_buffer22_s_fu_274;
reg   [31:0] local_beta_buffer4_s_fu_278;
reg   [0:0] write_flag22_fu_282;
reg   [31:0] local_beta_buffer21_s_fu_286;
reg   [0:0] write_flag17_fu_290;
reg   [0:0] write_flag21_fu_294;
reg   [31:0] local_beta_buffer20_s_fu_298;
reg   [31:0] local_beta_buffer5_s_fu_302;
reg   [0:0] write_flag20_fu_306;
reg   [31:0] local_beta_buffer19_s_fu_310;
reg   [0:0] write_flag19_fu_314;
reg   [0:0] write_flag18_fu_318;
reg   [31:0] local_beta_buffer18_s_fu_322;
reg   [31:0] local_beta_buffer6_s_fu_326;
reg   [0:0] write_flag16_fu_330;
reg   [31:0] local_beta_buffer17_s_fu_334;
reg   [0:0] write_flag15_fu_338;
reg   [0:0] write_flag13_fu_342;
reg   [31:0] local_beta_buffer165_fu_346;
reg   [31:0] local_beta_buffer7_s_fu_350;
reg   [0:0] write_flag12_fu_354;
reg   [31:0] local_beta_buffer155_fu_358;
reg   [0:0] write_flag10_fu_362;
reg   [0:0] write_flag9_fu_366;
reg   [31:0] local_beta_buffer14_s_fu_370;
reg   [31:0] local_beta_buffer8_s_fu_374;
reg   [0:0] write_flag7_fu_378;
reg   [31:0] local_beta_buffer13_s_fu_382;
reg   [0:0] write_flag6_fu_386;
reg   [0:0] write_flag5_fu_390;
reg   [31:0] local_beta_buffer12_s_fu_394;
reg   [31:0] local_beta_buffer9_s_fu_398;
reg   [0:0] write_flag3_fu_402;
reg   [31:0] local_beta_buffer11_s_fu_406;
reg   [0:0] write_flag2_fu_410;
reg   [0:0] write_flag1_fu_414;
reg   [31:0] local_beta_buffer10_s_fu_418;
wire   [3:0] InterSubBeta_4b_V_fu_665_p1;
wire   [31:0] tm_cast_fu_833_p1;
wire  signed [30:0] tmp_92_cast_fu_863_p1;
wire   [30:0] local_beta_buffer_fu_867_p2;
wire   [31:0] local_beta_buffer_0_1_fu_1388_p3;
wire   [31:0] local_beta_buffer_1_1_fu_1395_p3;
wire   [31:0] local_beta_buffer_2_1_fu_1402_p3;
wire   [31:0] local_beta_buffer_3_1_fu_1409_p3;
wire   [31:0] local_beta_buffer_4_1_fu_1416_p3;
wire   [31:0] local_beta_buffer_5_1_fu_1423_p3;
wire   [31:0] local_beta_buffer_6_1_fu_1430_p3;
wire   [31:0] local_beta_buffer_7_1_fu_1437_p3;
wire   [31:0] local_beta_buffer_8_1_fu_1444_p3;
wire   [31:0] local_beta_buffer_9_1_fu_1451_p3;
wire   [31:0] local_beta_buffer_10_1_fu_1458_p3;
wire   [31:0] local_beta_buffer_11_1_fu_1465_p3;
wire   [31:0] local_beta_buffer_12_1_fu_1472_p3;
wire   [31:0] local_beta_buffer_13_1_fu_1479_p3;
wire   [31:0] local_beta_buffer_14_1_fu_1486_p3;
wire   [31:0] local_beta_buffer_15_1_fu_1493_p3;
wire   [31:0] local_beta_buffer_16_1_fu_1500_p3;
wire   [31:0] local_beta_buffer_17_1_fu_1507_p3;
wire   [31:0] local_beta_buffer_18_1_fu_1514_p3;
wire   [31:0] local_beta_buffer_19_1_fu_1521_p3;
wire   [31:0] local_beta_buffer_20_1_fu_1528_p3;
wire   [31:0] local_beta_buffer_21_1_fu_1535_p3;
wire   [31:0] local_beta_buffer_22_1_fu_1542_p3;
wire   [31:0] local_beta_buffer_23_1_fu_1549_p3;
wire   [31:0] local_beta_buffer_24_1_fu_1556_p3;
wire   [31:0] local_beta_buffer_25_1_fu_1563_p3;
wire   [31:0] local_beta_buffer_26_1_fu_1570_p3;
wire   [31:0] local_beta_buffer_27_1_fu_1577_p3;
wire   [31:0] local_beta_buffer_28_1_fu_1584_p3;
wire   [31:0] local_beta_buffer_29_1_fu_1591_p3;
wire   [31:0] local_beta_buffer_30_1_fu_1598_p3;
wire   [31:0] local_beta_buffer_31_1_fu_1605_p3;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_s_fu_837_p2 == 1'd1))) begin
        offset_reg_645 <= offset_1_fu_857_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        offset_reg_645 <= m;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_s_fu_837_p2 == 1'd1))) begin
        tm_reg_654 <= tm_2_fu_842_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tm_reg_654 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag10_fu_362 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag10_fu_362 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag11_fu_242 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag11_fu_242 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag12_fu_354 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag12_fu_354 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag13_fu_342 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag13_fu_342 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag14_fu_266 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag14_fu_266 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag15_fu_338 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag15_fu_338 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag16_fu_330 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag16_fu_330 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag17_fu_290 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag17_fu_290 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag18_fu_318 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag18_fu_318 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag19_fu_314 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag19_fu_314 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag1_fu_414 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag1_fu_414 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag20_fu_306 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag20_fu_306 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag21_fu_294 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag21_fu_294 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag22_fu_282 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag22_fu_282 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag23_fu_270 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag23_fu_270 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag24_fu_258 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag24_fu_258 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag25_fu_246 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag25_fu_246 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd26) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag26_fu_234 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag26_fu_234 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd27) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag27_fu_222 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag27_fu_222 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd28) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag28_fu_210 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag28_fu_210 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag29_fu_198 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag29_fu_198 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag2_fu_410 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag2_fu_410 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd30) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag30_fu_186 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag30_fu_186 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd31) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag31_fu_174 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag31_fu_174 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag3_fu_402 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag3_fu_402 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag4_fu_194 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag4_fu_194 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag5_fu_390 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag5_fu_390 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag6_fu_386 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag6_fu_386 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag7_fu_378 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag7_fu_378 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag8_fu_218 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag8_fu_218 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag9_fu_366 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag9_fu_366 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag_fu_170 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag_fu_170 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer10_s_fu_418 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer11_s_fu_406 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer12_s_fu_394 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer13_s_fu_382 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer14_s_fu_370 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer155_fu_358 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer165_fu_346 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer16_s_fu_206 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer17_s_fu_334 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer18_s_fu_322 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer19_s_fu_310 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer20_s_fu_298 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer21_s_fu_286 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer22_s_fu_274 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer23_s_fu_262 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer24_s_fu_250 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer25_s_fu_238 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd26) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer26_s_fu_226 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd27) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer27_s_fu_214 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd28) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer28_s_fu_202 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer299_fu_190 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer2_s_fu_230 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd30) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer30_s_fu_178 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd31) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer31_s_fu_166 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer3_s_fu_254 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer4_s_fu_278 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer5_s_fu_302 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer6_s_fu_326 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer7_s_fu_350 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer8_s_fu_374 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer9_s_fu_398 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_2409 == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_beta_buffer_s_fu_182 <= local_beta_buffer_ca_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_cast_reg_2390[3 : 0] <= tmp_cast_fu_669_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_s_fu_837_p2 == 1'd1))) begin
        tmp_reg_2409 <= tmp_fu_853_p1;
    end
end

always @ (*) begin
    if ((tmp_s_fu_837_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        beta_buffer_ce0 = 1'b1;
    end else begin
        beta_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_s_fu_837_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_s_fu_837_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign InterSubBeta_4b_V_fu_665_p1 = InterSubBeta[3:0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = local_beta_buffer_0_1_fu_1388_p3;

assign ap_return_1 = local_beta_buffer_1_1_fu_1395_p3;

assign ap_return_10 = local_beta_buffer_10_1_fu_1458_p3;

assign ap_return_11 = local_beta_buffer_11_1_fu_1465_p3;

assign ap_return_12 = local_beta_buffer_12_1_fu_1472_p3;

assign ap_return_13 = local_beta_buffer_13_1_fu_1479_p3;

assign ap_return_14 = local_beta_buffer_14_1_fu_1486_p3;

assign ap_return_15 = local_beta_buffer_15_1_fu_1493_p3;

assign ap_return_16 = local_beta_buffer_16_1_fu_1500_p3;

assign ap_return_17 = local_beta_buffer_17_1_fu_1507_p3;

assign ap_return_18 = local_beta_buffer_18_1_fu_1514_p3;

assign ap_return_19 = local_beta_buffer_19_1_fu_1521_p3;

assign ap_return_2 = local_beta_buffer_2_1_fu_1402_p3;

assign ap_return_20 = local_beta_buffer_20_1_fu_1528_p3;

assign ap_return_21 = local_beta_buffer_21_1_fu_1535_p3;

assign ap_return_22 = local_beta_buffer_22_1_fu_1542_p3;

assign ap_return_23 = local_beta_buffer_23_1_fu_1549_p3;

assign ap_return_24 = local_beta_buffer_24_1_fu_1556_p3;

assign ap_return_25 = local_beta_buffer_25_1_fu_1563_p3;

assign ap_return_26 = local_beta_buffer_26_1_fu_1570_p3;

assign ap_return_27 = local_beta_buffer_27_1_fu_1577_p3;

assign ap_return_28 = local_beta_buffer_28_1_fu_1584_p3;

assign ap_return_29 = local_beta_buffer_29_1_fu_1591_p3;

assign ap_return_3 = local_beta_buffer_3_1_fu_1409_p3;

assign ap_return_30 = local_beta_buffer_30_1_fu_1598_p3;

assign ap_return_31 = local_beta_buffer_31_1_fu_1605_p3;

assign ap_return_4 = local_beta_buffer_4_1_fu_1416_p3;

assign ap_return_5 = local_beta_buffer_5_1_fu_1423_p3;

assign ap_return_6 = local_beta_buffer_6_1_fu_1430_p3;

assign ap_return_7 = local_beta_buffer_7_1_fu_1437_p3;

assign ap_return_8 = local_beta_buffer_8_1_fu_1444_p3;

assign ap_return_9 = local_beta_buffer_9_1_fu_1451_p3;

assign beta_buffer_address0 = tmp_59_fu_848_p1;

assign local_beta_buffer_0_1_fu_1388_p3 = ((write_flag_fu_170[0:0] === 1'b1) ? local_beta_buffer_s_fu_182 : local_beta_buffer_0);

assign local_beta_buffer_10_1_fu_1458_p3 = ((write_flag2_fu_410[0:0] === 1'b1) ? local_beta_buffer10_s_fu_418 : local_beta_buffer_10);

assign local_beta_buffer_11_1_fu_1465_p3 = ((write_flag1_fu_414[0:0] === 1'b1) ? local_beta_buffer11_s_fu_406 : local_beta_buffer_11);

assign local_beta_buffer_12_1_fu_1472_p3 = ((write_flag3_fu_402[0:0] === 1'b1) ? local_beta_buffer12_s_fu_394 : local_beta_buffer_12);

assign local_beta_buffer_13_1_fu_1479_p3 = ((write_flag5_fu_390[0:0] === 1'b1) ? local_beta_buffer13_s_fu_382 : local_beta_buffer_13);

assign local_beta_buffer_14_1_fu_1486_p3 = ((write_flag7_fu_378[0:0] === 1'b1) ? local_beta_buffer14_s_fu_370 : local_beta_buffer_14);

assign local_beta_buffer_15_1_fu_1493_p3 = ((write_flag9_fu_366[0:0] === 1'b1) ? local_beta_buffer155_fu_358 : local_beta_buffer_15);

assign local_beta_buffer_16_1_fu_1500_p3 = ((write_flag12_fu_354[0:0] === 1'b1) ? local_beta_buffer165_fu_346 : local_beta_buffer_16);

assign local_beta_buffer_17_1_fu_1507_p3 = ((write_flag13_fu_342[0:0] === 1'b1) ? local_beta_buffer17_s_fu_334 : local_beta_buffer_17);

assign local_beta_buffer_18_1_fu_1514_p3 = ((write_flag16_fu_330[0:0] === 1'b1) ? local_beta_buffer18_s_fu_322 : local_beta_buffer_18);

assign local_beta_buffer_19_1_fu_1521_p3 = ((write_flag18_fu_318[0:0] === 1'b1) ? local_beta_buffer19_s_fu_310 : local_beta_buffer_19);

assign local_beta_buffer_1_1_fu_1395_p3 = ((write_flag4_fu_194[0:0] === 1'b1) ? local_beta_buffer16_s_fu_206 : local_beta_buffer_1);

assign local_beta_buffer_20_1_fu_1528_p3 = ((write_flag20_fu_306[0:0] === 1'b1) ? local_beta_buffer20_s_fu_298 : local_beta_buffer_20);

assign local_beta_buffer_21_1_fu_1535_p3 = ((write_flag21_fu_294[0:0] === 1'b1) ? local_beta_buffer21_s_fu_286 : local_beta_buffer_21);

assign local_beta_buffer_22_1_fu_1542_p3 = ((write_flag22_fu_282[0:0] === 1'b1) ? local_beta_buffer22_s_fu_274 : local_beta_buffer_22);

assign local_beta_buffer_23_1_fu_1549_p3 = ((write_flag23_fu_270[0:0] === 1'b1) ? local_beta_buffer23_s_fu_262 : local_beta_buffer_23);

assign local_beta_buffer_24_1_fu_1556_p3 = ((write_flag24_fu_258[0:0] === 1'b1) ? local_beta_buffer24_s_fu_250 : local_beta_buffer_24);

assign local_beta_buffer_25_1_fu_1563_p3 = ((write_flag25_fu_246[0:0] === 1'b1) ? local_beta_buffer25_s_fu_238 : local_beta_buffer_25);

assign local_beta_buffer_26_1_fu_1570_p3 = ((write_flag26_fu_234[0:0] === 1'b1) ? local_beta_buffer26_s_fu_226 : local_beta_buffer_26);

assign local_beta_buffer_27_1_fu_1577_p3 = ((write_flag27_fu_222[0:0] === 1'b1) ? local_beta_buffer27_s_fu_214 : local_beta_buffer_27);

assign local_beta_buffer_28_1_fu_1584_p3 = ((write_flag28_fu_210[0:0] === 1'b1) ? local_beta_buffer28_s_fu_202 : local_beta_buffer_28);

assign local_beta_buffer_29_1_fu_1591_p3 = ((write_flag29_fu_198[0:0] === 1'b1) ? local_beta_buffer299_fu_190 : local_beta_buffer_29);

assign local_beta_buffer_2_1_fu_1402_p3 = ((write_flag8_fu_218[0:0] === 1'b1) ? local_beta_buffer2_s_fu_230 : local_beta_buffer_2);

assign local_beta_buffer_30_1_fu_1598_p3 = ((write_flag30_fu_186[0:0] === 1'b1) ? local_beta_buffer30_s_fu_178 : local_beta_buffer_30);

assign local_beta_buffer_31_1_fu_1605_p3 = ((write_flag31_fu_174[0:0] === 1'b1) ? local_beta_buffer31_s_fu_166 : local_beta_buffer_31);

assign local_beta_buffer_3_1_fu_1409_p3 = ((write_flag11_fu_242[0:0] === 1'b1) ? local_beta_buffer3_s_fu_254 : local_beta_buffer_3);

assign local_beta_buffer_4_1_fu_1416_p3 = ((write_flag14_fu_266[0:0] === 1'b1) ? local_beta_buffer4_s_fu_278 : local_beta_buffer_4);

assign local_beta_buffer_5_1_fu_1423_p3 = ((write_flag17_fu_290[0:0] === 1'b1) ? local_beta_buffer5_s_fu_302 : local_beta_buffer_5);

assign local_beta_buffer_6_1_fu_1430_p3 = ((write_flag19_fu_314[0:0] === 1'b1) ? local_beta_buffer6_s_fu_326 : local_beta_buffer_6);

assign local_beta_buffer_7_1_fu_1437_p3 = ((write_flag15_fu_338[0:0] === 1'b1) ? local_beta_buffer7_s_fu_350 : local_beta_buffer_7);

assign local_beta_buffer_8_1_fu_1444_p3 = ((write_flag10_fu_362[0:0] === 1'b1) ? local_beta_buffer8_s_fu_374 : local_beta_buffer_8);

assign local_beta_buffer_9_1_fu_1451_p3 = ((write_flag6_fu_386[0:0] === 1'b1) ? local_beta_buffer9_s_fu_398 : local_beta_buffer_9);

assign local_beta_buffer_ca_fu_872_p1 = $signed(local_beta_buffer_fu_867_p2);

assign local_beta_buffer_fu_867_p2 = tmp_92_cast_fu_863_p1 << tmp_cast_reg_2390;

assign offset_1_fu_857_p2 = ($signed(offset_reg_645) + $signed(32'd1));

assign tm_2_fu_842_p2 = (tm_reg_654 + 31'd1);

assign tm_cast_fu_833_p1 = tm_reg_654;

assign tmp_59_fu_848_p1 = offset_reg_645;

assign tmp_92_cast_fu_863_p1 = $signed(beta_buffer_q0);

assign tmp_cast_fu_669_p1 = InterSubBeta_4b_V_fu_665_p1;

assign tmp_fu_853_p1 = tm_reg_654[4:0];

assign tmp_s_fu_837_p2 = (($signed(tm_cast_fu_833_p1) < $signed(TM_MIN)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_cast_reg_2390[30:4] <= 27'b000000000000000000000000000;
end

endmodule //copy_local_beta
