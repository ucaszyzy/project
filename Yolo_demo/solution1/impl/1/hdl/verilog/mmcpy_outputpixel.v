// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mmcpy_outputpixel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_Output_r_AWVALID,
        m_axi_Output_r_AWREADY,
        m_axi_Output_r_AWADDR,
        m_axi_Output_r_AWID,
        m_axi_Output_r_AWLEN,
        m_axi_Output_r_AWSIZE,
        m_axi_Output_r_AWBURST,
        m_axi_Output_r_AWLOCK,
        m_axi_Output_r_AWCACHE,
        m_axi_Output_r_AWPROT,
        m_axi_Output_r_AWQOS,
        m_axi_Output_r_AWREGION,
        m_axi_Output_r_AWUSER,
        m_axi_Output_r_WVALID,
        m_axi_Output_r_WREADY,
        m_axi_Output_r_WDATA,
        m_axi_Output_r_WSTRB,
        m_axi_Output_r_WLAST,
        m_axi_Output_r_WID,
        m_axi_Output_r_WUSER,
        m_axi_Output_r_ARVALID,
        m_axi_Output_r_ARREADY,
        m_axi_Output_r_ARADDR,
        m_axi_Output_r_ARID,
        m_axi_Output_r_ARLEN,
        m_axi_Output_r_ARSIZE,
        m_axi_Output_r_ARBURST,
        m_axi_Output_r_ARLOCK,
        m_axi_Output_r_ARCACHE,
        m_axi_Output_r_ARPROT,
        m_axi_Output_r_ARQOS,
        m_axi_Output_r_ARREGION,
        m_axi_Output_r_ARUSER,
        m_axi_Output_r_RVALID,
        m_axi_Output_r_RREADY,
        m_axi_Output_r_RDATA,
        m_axi_Output_r_RLAST,
        m_axi_Output_r_RID,
        m_axi_Output_r_RUSER,
        m_axi_Output_r_RRESP,
        m_axi_Output_r_BVALID,
        m_axi_Output_r_BREADY,
        m_axi_Output_r_BRESP,
        m_axi_Output_r_BID,
        m_axi_Output_r_BUSER,
        Output_offset,
        m_axi_Output1_AWVALID,
        m_axi_Output1_AWREADY,
        m_axi_Output1_AWADDR,
        m_axi_Output1_AWID,
        m_axi_Output1_AWLEN,
        m_axi_Output1_AWSIZE,
        m_axi_Output1_AWBURST,
        m_axi_Output1_AWLOCK,
        m_axi_Output1_AWCACHE,
        m_axi_Output1_AWPROT,
        m_axi_Output1_AWQOS,
        m_axi_Output1_AWREGION,
        m_axi_Output1_AWUSER,
        m_axi_Output1_WVALID,
        m_axi_Output1_WREADY,
        m_axi_Output1_WDATA,
        m_axi_Output1_WSTRB,
        m_axi_Output1_WLAST,
        m_axi_Output1_WID,
        m_axi_Output1_WUSER,
        m_axi_Output1_ARVALID,
        m_axi_Output1_ARREADY,
        m_axi_Output1_ARADDR,
        m_axi_Output1_ARID,
        m_axi_Output1_ARLEN,
        m_axi_Output1_ARSIZE,
        m_axi_Output1_ARBURST,
        m_axi_Output1_ARLOCK,
        m_axi_Output1_ARCACHE,
        m_axi_Output1_ARPROT,
        m_axi_Output1_ARQOS,
        m_axi_Output1_ARREGION,
        m_axi_Output1_ARUSER,
        m_axi_Output1_RVALID,
        m_axi_Output1_RREADY,
        m_axi_Output1_RDATA,
        m_axi_Output1_RLAST,
        m_axi_Output1_RID,
        m_axi_Output1_RUSER,
        m_axi_Output1_RRESP,
        m_axi_Output1_BVALID,
        m_axi_Output1_BREADY,
        m_axi_Output1_BRESP,
        m_axi_Output1_BID,
        m_axi_Output1_BUSER,
        Output1_offset,
        output_tmp_address0,
        output_tmp_ce0,
        output_tmp_q0,
        output_tmp1_address0,
        output_tmp1_ce0,
        output_tmp1_q0,
        tm_V_6,
        mLoop1_V,
        mLoop2_V,
        outputoffsetarray_0,
        outputoffsetarray_1,
        OutputLength,
        OutputLength1,
        enable
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_Output_r_AWVALID;
input   m_axi_Output_r_AWREADY;
output  [31:0] m_axi_Output_r_AWADDR;
output  [0:0] m_axi_Output_r_AWID;
output  [31:0] m_axi_Output_r_AWLEN;
output  [2:0] m_axi_Output_r_AWSIZE;
output  [1:0] m_axi_Output_r_AWBURST;
output  [1:0] m_axi_Output_r_AWLOCK;
output  [3:0] m_axi_Output_r_AWCACHE;
output  [2:0] m_axi_Output_r_AWPROT;
output  [3:0] m_axi_Output_r_AWQOS;
output  [3:0] m_axi_Output_r_AWREGION;
output  [0:0] m_axi_Output_r_AWUSER;
output   m_axi_Output_r_WVALID;
input   m_axi_Output_r_WREADY;
output  [31:0] m_axi_Output_r_WDATA;
output  [3:0] m_axi_Output_r_WSTRB;
output   m_axi_Output_r_WLAST;
output  [0:0] m_axi_Output_r_WID;
output  [0:0] m_axi_Output_r_WUSER;
output   m_axi_Output_r_ARVALID;
input   m_axi_Output_r_ARREADY;
output  [31:0] m_axi_Output_r_ARADDR;
output  [0:0] m_axi_Output_r_ARID;
output  [31:0] m_axi_Output_r_ARLEN;
output  [2:0] m_axi_Output_r_ARSIZE;
output  [1:0] m_axi_Output_r_ARBURST;
output  [1:0] m_axi_Output_r_ARLOCK;
output  [3:0] m_axi_Output_r_ARCACHE;
output  [2:0] m_axi_Output_r_ARPROT;
output  [3:0] m_axi_Output_r_ARQOS;
output  [3:0] m_axi_Output_r_ARREGION;
output  [0:0] m_axi_Output_r_ARUSER;
input   m_axi_Output_r_RVALID;
output   m_axi_Output_r_RREADY;
input  [31:0] m_axi_Output_r_RDATA;
input   m_axi_Output_r_RLAST;
input  [0:0] m_axi_Output_r_RID;
input  [0:0] m_axi_Output_r_RUSER;
input  [1:0] m_axi_Output_r_RRESP;
input   m_axi_Output_r_BVALID;
output   m_axi_Output_r_BREADY;
input  [1:0] m_axi_Output_r_BRESP;
input  [0:0] m_axi_Output_r_BID;
input  [0:0] m_axi_Output_r_BUSER;
input  [29:0] Output_offset;
output   m_axi_Output1_AWVALID;
input   m_axi_Output1_AWREADY;
output  [31:0] m_axi_Output1_AWADDR;
output  [0:0] m_axi_Output1_AWID;
output  [31:0] m_axi_Output1_AWLEN;
output  [2:0] m_axi_Output1_AWSIZE;
output  [1:0] m_axi_Output1_AWBURST;
output  [1:0] m_axi_Output1_AWLOCK;
output  [3:0] m_axi_Output1_AWCACHE;
output  [2:0] m_axi_Output1_AWPROT;
output  [3:0] m_axi_Output1_AWQOS;
output  [3:0] m_axi_Output1_AWREGION;
output  [0:0] m_axi_Output1_AWUSER;
output   m_axi_Output1_WVALID;
input   m_axi_Output1_WREADY;
output  [31:0] m_axi_Output1_WDATA;
output  [3:0] m_axi_Output1_WSTRB;
output   m_axi_Output1_WLAST;
output  [0:0] m_axi_Output1_WID;
output  [0:0] m_axi_Output1_WUSER;
output   m_axi_Output1_ARVALID;
input   m_axi_Output1_ARREADY;
output  [31:0] m_axi_Output1_ARADDR;
output  [0:0] m_axi_Output1_ARID;
output  [31:0] m_axi_Output1_ARLEN;
output  [2:0] m_axi_Output1_ARSIZE;
output  [1:0] m_axi_Output1_ARBURST;
output  [1:0] m_axi_Output1_ARLOCK;
output  [3:0] m_axi_Output1_ARCACHE;
output  [2:0] m_axi_Output1_ARPROT;
output  [3:0] m_axi_Output1_ARQOS;
output  [3:0] m_axi_Output1_ARREGION;
output  [0:0] m_axi_Output1_ARUSER;
input   m_axi_Output1_RVALID;
output   m_axi_Output1_RREADY;
input  [31:0] m_axi_Output1_RDATA;
input   m_axi_Output1_RLAST;
input  [0:0] m_axi_Output1_RID;
input  [0:0] m_axi_Output1_RUSER;
input  [1:0] m_axi_Output1_RRESP;
input   m_axi_Output1_BVALID;
output   m_axi_Output1_BREADY;
input  [1:0] m_axi_Output1_BRESP;
input  [0:0] m_axi_Output1_BID;
input  [0:0] m_axi_Output1_BUSER;
input  [29:0] Output1_offset;
output  [7:0] output_tmp_address0;
output   output_tmp_ce0;
input  [31:0] output_tmp_q0;
output  [7:0] output_tmp1_address0;
output   output_tmp1_ce0;
input  [31:0] output_tmp1_q0;
input  [5:0] tm_V_6;
input  [4:0] mLoop1_V;
input  [5:0] mLoop2_V;
input  [31:0] outputoffsetarray_0;
input  [31:0] outputoffsetarray_1;
input  [7:0] OutputLength;
input  [7:0] OutputLength1;
input   enable;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_Output_r_AWVALID;
reg m_axi_Output_r_WVALID;
reg m_axi_Output_r_BREADY;
reg m_axi_Output1_AWVALID;
reg m_axi_Output1_WVALID;
reg m_axi_Output1_BREADY;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] enable_read_read_fu_64_p2;
wire    grp_mmcpy_outputport_fu_124_ap_start;
wire    grp_mmcpy_outputport_fu_124_ap_done;
wire    grp_mmcpy_outputport_fu_124_ap_idle;
wire    grp_mmcpy_outputport_fu_124_ap_ready;
wire    grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID;
wire   [31:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR;
wire   [0:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID;
wire   [31:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN;
wire   [2:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE;
wire   [1:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST;
wire   [1:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK;
wire   [3:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE;
wire   [2:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT;
wire   [3:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS;
wire   [3:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION;
wire   [0:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER;
wire    grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID;
wire   [31:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA;
wire   [3:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB;
wire    grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST;
wire   [0:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID;
wire   [0:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER;
wire    grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARVALID;
wire   [31:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARADDR;
wire   [0:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARID;
wire   [31:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLEN;
wire   [2:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARSIZE;
wire   [1:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARBURST;
wire   [1:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLOCK;
wire   [3:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARCACHE;
wire   [2:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARPROT;
wire   [3:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARQOS;
wire   [3:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARREGION;
wire   [0:0] grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARUSER;
wire    grp_mmcpy_outputport_fu_124_m_axi_Output_r_RREADY;
wire    grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY;
wire   [7:0] grp_mmcpy_outputport_fu_124_output_tmp_address0;
wire    grp_mmcpy_outputport_fu_124_output_tmp_ce0;
wire    grp_mmcpy_outputport1_fu_142_ap_start;
wire    grp_mmcpy_outputport1_fu_142_ap_done;
wire    grp_mmcpy_outputport1_fu_142_ap_idle;
wire    grp_mmcpy_outputport1_fu_142_ap_ready;
wire    grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID;
wire   [31:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR;
wire   [0:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID;
wire   [31:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN;
wire   [2:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE;
wire   [1:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST;
wire   [1:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK;
wire   [3:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE;
wire   [2:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT;
wire   [3:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS;
wire   [3:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION;
wire   [0:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER;
wire    grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID;
wire   [31:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA;
wire   [3:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB;
wire    grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST;
wire   [0:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID;
wire   [0:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER;
wire    grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARVALID;
wire   [31:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARADDR;
wire   [0:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARID;
wire   [31:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLEN;
wire   [2:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARSIZE;
wire   [1:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARBURST;
wire   [1:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLOCK;
wire   [3:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARCACHE;
wire   [2:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARPROT;
wire   [3:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARQOS;
wire   [3:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARREGION;
wire   [0:0] grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARUSER;
wire    grp_mmcpy_outputport1_fu_142_m_axi_Output_r_RREADY;
wire    grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY;
wire   [7:0] grp_mmcpy_outputport1_fu_142_output_tmp_address0;
wire    grp_mmcpy_outputport1_fu_142_output_tmp_ce0;
reg    grp_mmcpy_outputport_fu_124_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_mmcpy_outputport1_fu_142_ap_start_reg;
reg    ap_block_state2_on_subcall_done;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_mmcpy_outputport_fu_124_ap_start_reg = 1'b0;
#0 grp_mmcpy_outputport1_fu_142_ap_start_reg = 1'b0;
end

mmcpy_outputport grp_mmcpy_outputport_fu_124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_outputport_fu_124_ap_start),
    .ap_done(grp_mmcpy_outputport_fu_124_ap_done),
    .ap_idle(grp_mmcpy_outputport_fu_124_ap_idle),
    .ap_ready(grp_mmcpy_outputport_fu_124_ap_ready),
    .m_axi_Output_r_AWVALID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID),
    .m_axi_Output_r_AWREADY(m_axi_Output_r_AWREADY),
    .m_axi_Output_r_AWADDR(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR),
    .m_axi_Output_r_AWID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID),
    .m_axi_Output_r_AWLEN(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN),
    .m_axi_Output_r_AWSIZE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE),
    .m_axi_Output_r_AWBURST(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST),
    .m_axi_Output_r_AWLOCK(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK),
    .m_axi_Output_r_AWCACHE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE),
    .m_axi_Output_r_AWPROT(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT),
    .m_axi_Output_r_AWQOS(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS),
    .m_axi_Output_r_AWREGION(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION),
    .m_axi_Output_r_AWUSER(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER),
    .m_axi_Output_r_WVALID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID),
    .m_axi_Output_r_WREADY(m_axi_Output_r_WREADY),
    .m_axi_Output_r_WDATA(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA),
    .m_axi_Output_r_WSTRB(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB),
    .m_axi_Output_r_WLAST(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST),
    .m_axi_Output_r_WID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID),
    .m_axi_Output_r_WUSER(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER),
    .m_axi_Output_r_ARVALID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARVALID),
    .m_axi_Output_r_ARREADY(1'b0),
    .m_axi_Output_r_ARADDR(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARADDR),
    .m_axi_Output_r_ARID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARID),
    .m_axi_Output_r_ARLEN(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLEN),
    .m_axi_Output_r_ARSIZE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARSIZE),
    .m_axi_Output_r_ARBURST(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARBURST),
    .m_axi_Output_r_ARLOCK(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLOCK),
    .m_axi_Output_r_ARCACHE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARCACHE),
    .m_axi_Output_r_ARPROT(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARPROT),
    .m_axi_Output_r_ARQOS(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARQOS),
    .m_axi_Output_r_ARREGION(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARREGION),
    .m_axi_Output_r_ARUSER(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARUSER),
    .m_axi_Output_r_RVALID(1'b0),
    .m_axi_Output_r_RREADY(grp_mmcpy_outputport_fu_124_m_axi_Output_r_RREADY),
    .m_axi_Output_r_RDATA(32'd0),
    .m_axi_Output_r_RLAST(1'b0),
    .m_axi_Output_r_RID(1'd0),
    .m_axi_Output_r_RUSER(1'd0),
    .m_axi_Output_r_RRESP(2'd0),
    .m_axi_Output_r_BVALID(m_axi_Output_r_BVALID),
    .m_axi_Output_r_BREADY(grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY),
    .m_axi_Output_r_BRESP(m_axi_Output_r_BRESP),
    .m_axi_Output_r_BID(m_axi_Output_r_BID),
    .m_axi_Output_r_BUSER(m_axi_Output_r_BUSER),
    .Output_offset(Output_offset),
    .output_tmp_address0(grp_mmcpy_outputport_fu_124_output_tmp_address0),
    .output_tmp_ce0(grp_mmcpy_outputport_fu_124_output_tmp_ce0),
    .output_tmp_q0(output_tmp_q0),
    .tm_V_4(tm_V_6),
    .mLoop_V(mLoop1_V),
    .OutputOffset(outputoffsetarray_0),
    .OutputLength(OutputLength)
);

mmcpy_outputport1 grp_mmcpy_outputport1_fu_142(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_outputport1_fu_142_ap_start),
    .ap_done(grp_mmcpy_outputport1_fu_142_ap_done),
    .ap_idle(grp_mmcpy_outputport1_fu_142_ap_idle),
    .ap_ready(grp_mmcpy_outputport1_fu_142_ap_ready),
    .m_axi_Output_r_AWVALID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID),
    .m_axi_Output_r_AWREADY(m_axi_Output1_AWREADY),
    .m_axi_Output_r_AWADDR(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR),
    .m_axi_Output_r_AWID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID),
    .m_axi_Output_r_AWLEN(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN),
    .m_axi_Output_r_AWSIZE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE),
    .m_axi_Output_r_AWBURST(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST),
    .m_axi_Output_r_AWLOCK(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK),
    .m_axi_Output_r_AWCACHE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE),
    .m_axi_Output_r_AWPROT(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT),
    .m_axi_Output_r_AWQOS(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS),
    .m_axi_Output_r_AWREGION(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION),
    .m_axi_Output_r_AWUSER(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER),
    .m_axi_Output_r_WVALID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID),
    .m_axi_Output_r_WREADY(m_axi_Output1_WREADY),
    .m_axi_Output_r_WDATA(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA),
    .m_axi_Output_r_WSTRB(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB),
    .m_axi_Output_r_WLAST(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST),
    .m_axi_Output_r_WID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID),
    .m_axi_Output_r_WUSER(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER),
    .m_axi_Output_r_ARVALID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARVALID),
    .m_axi_Output_r_ARREADY(1'b0),
    .m_axi_Output_r_ARADDR(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARADDR),
    .m_axi_Output_r_ARID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARID),
    .m_axi_Output_r_ARLEN(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLEN),
    .m_axi_Output_r_ARSIZE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARSIZE),
    .m_axi_Output_r_ARBURST(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARBURST),
    .m_axi_Output_r_ARLOCK(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLOCK),
    .m_axi_Output_r_ARCACHE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARCACHE),
    .m_axi_Output_r_ARPROT(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARPROT),
    .m_axi_Output_r_ARQOS(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARQOS),
    .m_axi_Output_r_ARREGION(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARREGION),
    .m_axi_Output_r_ARUSER(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARUSER),
    .m_axi_Output_r_RVALID(1'b0),
    .m_axi_Output_r_RREADY(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_RREADY),
    .m_axi_Output_r_RDATA(32'd0),
    .m_axi_Output_r_RLAST(1'b0),
    .m_axi_Output_r_RID(1'd0),
    .m_axi_Output_r_RUSER(1'd0),
    .m_axi_Output_r_RRESP(2'd0),
    .m_axi_Output_r_BVALID(m_axi_Output1_BVALID),
    .m_axi_Output_r_BREADY(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY),
    .m_axi_Output_r_BRESP(m_axi_Output1_BRESP),
    .m_axi_Output_r_BID(m_axi_Output1_BID),
    .m_axi_Output_r_BUSER(m_axi_Output1_BUSER),
    .Output_offset(Output1_offset),
    .output_tmp_address0(grp_mmcpy_outputport1_fu_142_output_tmp_address0),
    .output_tmp_ce0(grp_mmcpy_outputport1_fu_142_output_tmp_ce0),
    .output_tmp_q0(output_tmp1_q0),
    .tm_V_2(tm_V_6),
    .mLoop_V(mLoop2_V),
    .OutputOffset(outputoffsetarray_1),
    .OutputLength(OutputLength1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_outputport1_fu_142_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1))) begin
            grp_mmcpy_outputport1_fu_142_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_outputport1_fu_142_ap_ready == 1'b1)) begin
            grp_mmcpy_outputport1_fu_142_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_outputport_fu_124_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1))) begin
            grp_mmcpy_outputport_fu_124_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_outputport_fu_124_ap_ready == 1'b1)) begin
            grp_mmcpy_outputport_fu_124_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (enable_read_read_fu_64_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1)))) begin
        m_axi_Output1_AWVALID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID;
    end else begin
        m_axi_Output1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (enable_read_read_fu_64_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1)))) begin
        m_axi_Output1_BREADY = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY;
    end else begin
        m_axi_Output1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (enable_read_read_fu_64_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1)))) begin
        m_axi_Output1_WVALID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID;
    end else begin
        m_axi_Output1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (enable_read_read_fu_64_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1)))) begin
        m_axi_Output_r_AWVALID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID;
    end else begin
        m_axi_Output_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (enable_read_read_fu_64_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1)))) begin
        m_axi_Output_r_BREADY = grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY;
    end else begin
        m_axi_Output_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (enable_read_read_fu_64_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_64_p2 == 1'd1)))) begin
        m_axi_Output_r_WVALID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID;
    end else begin
        m_axi_Output_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = (((grp_mmcpy_outputport1_fu_142_ap_done == 1'b0) & (enable_read_read_fu_64_p2 == 1'd1)) | ((grp_mmcpy_outputport_fu_124_ap_done == 1'b0) & (enable_read_read_fu_64_p2 == 1'd1)));
end

assign enable_read_read_fu_64_p2 = enable;

assign grp_mmcpy_outputport1_fu_142_ap_start = grp_mmcpy_outputport1_fu_142_ap_start_reg;

assign grp_mmcpy_outputport_fu_124_ap_start = grp_mmcpy_outputport_fu_124_ap_start_reg;

assign m_axi_Output1_ARADDR = 32'd0;

assign m_axi_Output1_ARBURST = 2'd0;

assign m_axi_Output1_ARCACHE = 4'd0;

assign m_axi_Output1_ARID = 1'd0;

assign m_axi_Output1_ARLEN = 32'd0;

assign m_axi_Output1_ARLOCK = 2'd0;

assign m_axi_Output1_ARPROT = 3'd0;

assign m_axi_Output1_ARQOS = 4'd0;

assign m_axi_Output1_ARREGION = 4'd0;

assign m_axi_Output1_ARSIZE = 3'd0;

assign m_axi_Output1_ARUSER = 1'd0;

assign m_axi_Output1_ARVALID = 1'b0;

assign m_axi_Output1_AWADDR = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR;

assign m_axi_Output1_AWBURST = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST;

assign m_axi_Output1_AWCACHE = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE;

assign m_axi_Output1_AWID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID;

assign m_axi_Output1_AWLEN = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN;

assign m_axi_Output1_AWLOCK = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK;

assign m_axi_Output1_AWPROT = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT;

assign m_axi_Output1_AWQOS = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS;

assign m_axi_Output1_AWREGION = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION;

assign m_axi_Output1_AWSIZE = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE;

assign m_axi_Output1_AWUSER = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER;

assign m_axi_Output1_RREADY = 1'b0;

assign m_axi_Output1_WDATA = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA;

assign m_axi_Output1_WID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID;

assign m_axi_Output1_WLAST = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST;

assign m_axi_Output1_WSTRB = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB;

assign m_axi_Output1_WUSER = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER;

assign m_axi_Output_r_ARADDR = 32'd0;

assign m_axi_Output_r_ARBURST = 2'd0;

assign m_axi_Output_r_ARCACHE = 4'd0;

assign m_axi_Output_r_ARID = 1'd0;

assign m_axi_Output_r_ARLEN = 32'd0;

assign m_axi_Output_r_ARLOCK = 2'd0;

assign m_axi_Output_r_ARPROT = 3'd0;

assign m_axi_Output_r_ARQOS = 4'd0;

assign m_axi_Output_r_ARREGION = 4'd0;

assign m_axi_Output_r_ARSIZE = 3'd0;

assign m_axi_Output_r_ARUSER = 1'd0;

assign m_axi_Output_r_ARVALID = 1'b0;

assign m_axi_Output_r_AWADDR = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR;

assign m_axi_Output_r_AWBURST = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST;

assign m_axi_Output_r_AWCACHE = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE;

assign m_axi_Output_r_AWID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID;

assign m_axi_Output_r_AWLEN = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN;

assign m_axi_Output_r_AWLOCK = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK;

assign m_axi_Output_r_AWPROT = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT;

assign m_axi_Output_r_AWQOS = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS;

assign m_axi_Output_r_AWREGION = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION;

assign m_axi_Output_r_AWSIZE = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE;

assign m_axi_Output_r_AWUSER = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER;

assign m_axi_Output_r_RREADY = 1'b0;

assign m_axi_Output_r_WDATA = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA;

assign m_axi_Output_r_WID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID;

assign m_axi_Output_r_WLAST = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST;

assign m_axi_Output_r_WSTRB = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB;

assign m_axi_Output_r_WUSER = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER;

assign output_tmp1_address0 = grp_mmcpy_outputport1_fu_142_output_tmp_address0;

assign output_tmp1_ce0 = grp_mmcpy_outputport1_fu_142_output_tmp_ce0;

assign output_tmp_address0 = grp_mmcpy_outputport_fu_124_output_tmp_address0;

assign output_tmp_ce0 = grp_mmcpy_outputport_fu_124_output_tmp_ce0;

endmodule //mmcpy_outputpixel
