-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity write_back_output_re is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_buffer_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_0_ce0 : OUT STD_LOGIC;
    output_buffer_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_1_ce0 : OUT STD_LOGIC;
    output_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_2_ce0 : OUT STD_LOGIC;
    output_buffer_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_3_ce0 : OUT STD_LOGIC;
    output_buffer_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_4_ce0 : OUT STD_LOGIC;
    output_buffer_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_5_ce0 : OUT STD_LOGIC;
    output_buffer_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_6_ce0 : OUT STD_LOGIC;
    output_buffer_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_7_ce0 : OUT STD_LOGIC;
    output_buffer_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_8_ce0 : OUT STD_LOGIC;
    output_buffer_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_9_ce0 : OUT STD_LOGIC;
    output_buffer_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_10_ce0 : OUT STD_LOGIC;
    output_buffer_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_11_ce0 : OUT STD_LOGIC;
    output_buffer_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_12_ce0 : OUT STD_LOGIC;
    output_buffer_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_13_ce0 : OUT STD_LOGIC;
    output_buffer_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_14_ce0 : OUT STD_LOGIC;
    output_buffer_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_15_ce0 : OUT STD_LOGIC;
    output_buffer_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_16_ce0 : OUT STD_LOGIC;
    output_buffer_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_17_ce0 : OUT STD_LOGIC;
    output_buffer_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_18_ce0 : OUT STD_LOGIC;
    output_buffer_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_19_ce0 : OUT STD_LOGIC;
    output_buffer_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_20_ce0 : OUT STD_LOGIC;
    output_buffer_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_21_ce0 : OUT STD_LOGIC;
    output_buffer_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_22_ce0 : OUT STD_LOGIC;
    output_buffer_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_23_ce0 : OUT STD_LOGIC;
    output_buffer_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_24_ce0 : OUT STD_LOGIC;
    output_buffer_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_25_ce0 : OUT STD_LOGIC;
    output_buffer_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_26_ce0 : OUT STD_LOGIC;
    output_buffer_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_27_ce0 : OUT STD_LOGIC;
    output_buffer_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_28_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_28_ce0 : OUT STD_LOGIC;
    output_buffer_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_29_ce0 : OUT STD_LOGIC;
    output_buffer_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_30_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_30_ce0 : OUT STD_LOGIC;
    output_buffer_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_31_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_buffer_31_ce0 : OUT STD_LOGIC;
    output_buffer_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output_r_AWVALID : OUT STD_LOGIC;
    m_axi_Output_r_AWREADY : IN STD_LOGIC;
    m_axi_Output_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_WVALID : OUT STD_LOGIC;
    m_axi_Output_r_WREADY : IN STD_LOGIC;
    m_axi_Output_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output_r_WLAST : OUT STD_LOGIC;
    m_axi_Output_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_ARVALID : OUT STD_LOGIC;
    m_axi_Output_r_ARREADY : IN STD_LOGIC;
    m_axi_Output_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_RVALID : IN STD_LOGIC;
    m_axi_Output_r_RREADY : OUT STD_LOGIC;
    m_axi_Output_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output_r_RLAST : IN STD_LOGIC;
    m_axi_Output_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output_r_BVALID : IN STD_LOGIC;
    m_axi_Output_r_BREADY : OUT STD_LOGIC;
    m_axi_Output_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Output_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    m_axi_Output1_AWVALID : OUT STD_LOGIC;
    m_axi_Output1_AWREADY : IN STD_LOGIC;
    m_axi_Output1_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_WVALID : OUT STD_LOGIC;
    m_axi_Output1_WREADY : IN STD_LOGIC;
    m_axi_Output1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output1_WLAST : OUT STD_LOGIC;
    m_axi_Output1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_ARVALID : OUT STD_LOGIC;
    m_axi_Output1_ARREADY : IN STD_LOGIC;
    m_axi_Output1_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Output1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Output1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_RVALID : IN STD_LOGIC;
    m_axi_Output1_RREADY : OUT STD_LOGIC;
    m_axi_Output1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Output1_RLAST : IN STD_LOGIC;
    m_axi_Output1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output1_BVALID : IN STD_LOGIC;
    m_axi_Output1_BREADY : OUT STD_LOGIC;
    m_axi_Output1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Output1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Output1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Output1_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    r : IN STD_LOGIC_VECTOR (31 downto 0);
    c : IN STD_LOGIC_VECTOR (31 downto 0);
    m : IN STD_LOGIC_VECTOR (31 downto 0);
    Output_w : IN STD_LOGIC_VECTOR (31 downto 0);
    TM_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
    TC_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
    OHxOW : IN STD_LOGIC_VECTOR (17 downto 0);
    write_flag : IN STD_LOGIC;
    IsNL : IN STD_LOGIC;
    InterSubOutput : IN STD_LOGIC_VECTOR (7 downto 0);
    LayerType : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of write_back_output_re is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv18_152 : STD_LOGIC_VECTOR (17 downto 0) := "000000000101010010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal output_tmp00_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_tmp00_ce0 : STD_LOGIC;
    signal output_tmp00_we0 : STD_LOGIC;
    signal output_tmp00_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_tmp01_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_tmp01_ce0 : STD_LOGIC;
    signal output_tmp01_we0 : STD_LOGIC;
    signal output_tmp01_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_tmp10_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_tmp10_ce0 : STD_LOGIC;
    signal output_tmp10_we0 : STD_LOGIC;
    signal output_tmp10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_tmp11_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_tmp11_ce0 : STD_LOGIC;
    signal output_tmp11_we0 : STD_LOGIC;
    signal output_tmp11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag_read_read_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TM_MIN_6b_V_fu_506_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal TM_MIN_6b_V_reg_915 : STD_LOGIC_VECTOR (5 downto 0);
    signal Output_w_9b_V_fu_510_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal Output_w_9b_V_reg_921 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_9b_V_fu_518_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_9b_V_reg_927 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_9b_V_fu_522_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_9b_V_reg_932 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_fu_802_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_reg_937 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_3_fu_569_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of r_V_3_fu_569_p2 : signal is "no";
    signal r_V_3_reg_942 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal mLoop1_V_fu_586_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal mLoop1_V_reg_947 : STD_LOGIC_VECTOR (4 downto 0);
    signal mLoop2_V_1_fu_594_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal mLoop2_V_1_reg_954 : STD_LOGIC_VECTOR (5 downto 0);
    signal mLoop_reg_959 : STD_LOGIC_VECTOR (3 downto 0);
    signal OutputOffset1_sum_3_s_fu_612_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal TC_MINe26_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TC_MINe26_reg_969 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_816_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_fu_629_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_979 : STD_LOGIC_VECTOR (7 downto 0);
    signal mLoop_1_fu_637_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal mLoop_1_reg_985 : STD_LOGIC_VECTOR (4 downto 0);
    signal rLoop_cast4_cast_fu_644_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal rLoop_cast4_cast_reg_990 : STD_LOGIC_VECTOR (4 downto 0);
    signal OutputOffset_cast_fu_659_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal OutputOffset_cast_reg_995 : STD_LOGIC_VECTOR (28 downto 0);
    signal OutputOffset3_cast_fu_670_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal OutputOffset3_cast_reg_1001 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_cast3_cast_fu_674_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_cast3_cast_reg_1006 : STD_LOGIC_VECTOR (4 downto 0);
    signal tm_1_fu_687_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tm_1_reg_1014 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tr_1_fu_698_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tr_1_reg_1022 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal pingpong_load_load_fu_704_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal pingpong_load_reg_1027 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal wb_start_flag_load_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal tm_next_0_V_1_load_reg_1041 : STD_LOGIC_VECTOR (5 downto 0);
    signal tm_next1_0_V_1_load_reg_1047 : STD_LOGIC_VECTOR (5 downto 0);
    signal outputoffsetarray_0_2_reg_1053 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputoffsetarray_1_2_reg_1059 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputoffsetarray1_0_1_reg_1065 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputoffsetarray1_1_1_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1077 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1082 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutputOffset1_sum_1_fu_747_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal OutputOffset1_sum1_1_fu_752_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal OutputOffset2_sum_1_fu_787_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_outputpixel2buf_fu_367_ap_idle : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_ap_ready : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_ap_done : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_ap_idle : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_ap_ready : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_ap_done : STD_LOGIC;
    signal ap_block_state6_on_subcall_done : BOOLEAN;
    signal grp_outputpixel2buf_fu_367_ap_start : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_0_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_1_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_2_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_3_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_4_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_5_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_6_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_7_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_8_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_9_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_10_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_11_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_12_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_12_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_13_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_14_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_14_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_15_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_15_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_16_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_16_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_17_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_17_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_18_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_19_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_19_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_20_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_20_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_21_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_21_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_22_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_22_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_23_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_23_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_24_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_24_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_25_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_25_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_26_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_26_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_27_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_27_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_28_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_28_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_29_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_29_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_30_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_30_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_buffer_31_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_outputpixel2buf_fu_367_output_buffer_31_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_tmp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_outputpixel2buf_fu_367_output_tmp_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_tmp_we0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_tmp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_outputpixel2buf_fu_367_output_tmp1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_outputpixel2buf_fu_367_output_tmp1_ce0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_tmp1_we0 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_output_tmp1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_outputpixel2buf_fu_367_TC_MINe26 : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_init : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_outputoffsetarray_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_outputpixel2buf_fu_367_outputoffsetarray_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_outputpixel2buf_fu_367_tm_next_0_V_read : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_outputpixel2buf_fu_367_enable : STD_LOGIC;
    signal grp_outputpixel2buf_fu_367_ap_return_0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_outputpixel2buf_fu_367_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_outputpixel2buf_fu_367_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_ap_start : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWVALID : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WVALID : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WLAST : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARVALID : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_RREADY : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_BREADY : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWVALID : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WVALID : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WLAST : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARVALID : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_RREADY : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_m_axi_Output1_BREADY : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_output_tmp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_output_tmp_ce0 : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_output_tmp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_output_tmp1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0 : STD_LOGIC;
    signal grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_tm_V_6 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmcpy_outputpixel_fu_463_enable : STD_LOGIC;
    signal tm_reg_300 : STD_LOGIC_VECTOR (4 downto 0);
    signal OutputOffset1_sum_reg_312 : STD_LOGIC_VECTOR (28 downto 0);
    signal OutputOffset1_sum1_reg_322 : STD_LOGIC_VECTOR (28 downto 0);
    signal tr_reg_332 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond1_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OutputOffset2_sum_reg_344 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_pingpong_2_phi_fu_359_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_outputpixel2buf_fu_367_ap_start_reg : STD_LOGIC := '0';
    signal grp_mmcpy_outputpixel_fu_463_ap_start_reg : STD_LOGIC := '0';
    signal wb_start_flag_fu_190 : STD_LOGIC_VECTOR (0 downto 0);
    signal pingpong_fu_194 : STD_LOGIC_VECTOR (0 downto 0);
    signal tm_next_0_V_1_fu_198 : STD_LOGIC_VECTOR (5 downto 0);
    signal tm_next1_0_V_1_fu_202 : STD_LOGIC_VECTOR (5 downto 0);
    signal outputoffsetarray_0_1_fu_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputoffsetarray_1_1_fu_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputoffsetarray1_0_fu_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputoffsetarray1_1_fu_218 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_10b_V_fu_514_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal TM_MIN_g_V_fu_549_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_808_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_3_cast_fu_566_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal TM_MINaboveTmdiv2_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_556_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mLoop2_V_fu_580_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mLoop_3_fu_626_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal OutputOffset_fu_652_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal OutputOffset3_fu_663_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_fu_802_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_fu_802_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_808_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_808_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_816_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_816_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_816_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_808_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_808_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_816_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_816_p10 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_816_p20 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_fu_802_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_fu_802_p10 : STD_LOGIC_VECTOR (27 downto 0);

    component outputpixel2buf IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_buffer_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_0_ce0 : OUT STD_LOGIC;
        output_buffer_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_1_ce0 : OUT STD_LOGIC;
        output_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_2_ce0 : OUT STD_LOGIC;
        output_buffer_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_3_ce0 : OUT STD_LOGIC;
        output_buffer_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_4_ce0 : OUT STD_LOGIC;
        output_buffer_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_5_ce0 : OUT STD_LOGIC;
        output_buffer_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_6_ce0 : OUT STD_LOGIC;
        output_buffer_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_7_ce0 : OUT STD_LOGIC;
        output_buffer_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_8_ce0 : OUT STD_LOGIC;
        output_buffer_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_9_ce0 : OUT STD_LOGIC;
        output_buffer_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_10_ce0 : OUT STD_LOGIC;
        output_buffer_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_11_ce0 : OUT STD_LOGIC;
        output_buffer_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_12_ce0 : OUT STD_LOGIC;
        output_buffer_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_13_ce0 : OUT STD_LOGIC;
        output_buffer_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_14_ce0 : OUT STD_LOGIC;
        output_buffer_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_15_ce0 : OUT STD_LOGIC;
        output_buffer_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_16_ce0 : OUT STD_LOGIC;
        output_buffer_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_17_ce0 : OUT STD_LOGIC;
        output_buffer_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_18_ce0 : OUT STD_LOGIC;
        output_buffer_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_19_ce0 : OUT STD_LOGIC;
        output_buffer_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_20_ce0 : OUT STD_LOGIC;
        output_buffer_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_21_ce0 : OUT STD_LOGIC;
        output_buffer_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_22_ce0 : OUT STD_LOGIC;
        output_buffer_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_23_ce0 : OUT STD_LOGIC;
        output_buffer_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_24_ce0 : OUT STD_LOGIC;
        output_buffer_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_25_ce0 : OUT STD_LOGIC;
        output_buffer_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_26_ce0 : OUT STD_LOGIC;
        output_buffer_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_27_ce0 : OUT STD_LOGIC;
        output_buffer_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_28_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_28_ce0 : OUT STD_LOGIC;
        output_buffer_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_29_ce0 : OUT STD_LOGIC;
        output_buffer_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_30_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_30_ce0 : OUT STD_LOGIC;
        output_buffer_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_buffer_31_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_buffer_31_ce0 : OUT STD_LOGIC;
        output_buffer_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_tmp_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_tmp_ce0 : OUT STD_LOGIC;
        output_tmp_we0 : OUT STD_LOGIC;
        output_tmp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_tmp1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_tmp1_ce0 : OUT STD_LOGIC;
        output_tmp1_we0 : OUT STD_LOGIC;
        output_tmp1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        IsNL : IN STD_LOGIC;
        InterSubOutput : IN STD_LOGIC_VECTOR (7 downto 0);
        LayerType : IN STD_LOGIC_VECTOR (31 downto 0);
        TC_MINe26 : IN STD_LOGIC;
        TC_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
        mLoop : IN STD_LOGIC_VECTOR (4 downto 0);
        rLoop : IN STD_LOGIC_VECTOR (4 downto 0);
        init : IN STD_LOGIC;
        outputoffsetarray_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outputoffsetarray_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        OutputOffset1_sum : IN STD_LOGIC_VECTOR (28 downto 0);
        OutputOffset1_sum1 : IN STD_LOGIC_VECTOR (28 downto 0);
        OutputOffset2_sum : IN STD_LOGIC_VECTOR (13 downto 0);
        tm_next_0_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
        enable : IN STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mmcpy_outputpixel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_Output_r_AWVALID : OUT STD_LOGIC;
        m_axi_Output_r_AWREADY : IN STD_LOGIC;
        m_axi_Output_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_WVALID : OUT STD_LOGIC;
        m_axi_Output_r_WREADY : IN STD_LOGIC;
        m_axi_Output_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output_r_WLAST : OUT STD_LOGIC;
        m_axi_Output_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_ARVALID : OUT STD_LOGIC;
        m_axi_Output_r_ARREADY : IN STD_LOGIC;
        m_axi_Output_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_RVALID : IN STD_LOGIC;
        m_axi_Output_r_RREADY : OUT STD_LOGIC;
        m_axi_Output_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output_r_RLAST : IN STD_LOGIC;
        m_axi_Output_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output_r_BVALID : IN STD_LOGIC;
        m_axi_Output_r_BREADY : OUT STD_LOGIC;
        m_axi_Output_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Output_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        m_axi_Output1_AWVALID : OUT STD_LOGIC;
        m_axi_Output1_AWREADY : IN STD_LOGIC;
        m_axi_Output1_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_WVALID : OUT STD_LOGIC;
        m_axi_Output1_WREADY : IN STD_LOGIC;
        m_axi_Output1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output1_WLAST : OUT STD_LOGIC;
        m_axi_Output1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_ARVALID : OUT STD_LOGIC;
        m_axi_Output1_ARREADY : IN STD_LOGIC;
        m_axi_Output1_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Output1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Output1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_RVALID : IN STD_LOGIC;
        m_axi_Output1_RREADY : OUT STD_LOGIC;
        m_axi_Output1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Output1_RLAST : IN STD_LOGIC;
        m_axi_Output1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output1_BVALID : IN STD_LOGIC;
        m_axi_Output1_BREADY : OUT STD_LOGIC;
        m_axi_Output1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Output1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Output1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Output1_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        output_tmp_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_tmp_ce0 : OUT STD_LOGIC;
        output_tmp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_tmp1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_tmp1_ce0 : OUT STD_LOGIC;
        output_tmp1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tm_V_6 : IN STD_LOGIC_VECTOR (5 downto 0);
        mLoop1_V : IN STD_LOGIC_VECTOR (4 downto 0);
        mLoop2_V : IN STD_LOGIC_VECTOR (5 downto 0);
        outputoffsetarray_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outputoffsetarray_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        OutputLength : IN STD_LOGIC_VECTOR (7 downto 0);
        OutputLength1 : IN STD_LOGIC_VECTOR (7 downto 0);
        enable : IN STD_LOGIC );
    end component;


    component YOLO2_FPGA_mul_mueQU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component YOLO2_FPGA_mac_mueRU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component YOLO2_FPGA_mac_mueSV IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component write_back_outputeMU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    output_tmp00_U : component write_back_outputeMU
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_tmp00_address0,
        ce0 => output_tmp00_ce0,
        we0 => output_tmp00_we0,
        d0 => grp_outputpixel2buf_fu_367_output_tmp_d0,
        q0 => output_tmp00_q0);

    output_tmp01_U : component write_back_outputeMU
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_tmp01_address0,
        ce0 => output_tmp01_ce0,
        we0 => output_tmp01_we0,
        d0 => grp_outputpixel2buf_fu_367_output_tmp1_d0,
        q0 => output_tmp01_q0);

    output_tmp10_U : component write_back_outputeMU
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_tmp10_address0,
        ce0 => output_tmp10_ce0,
        we0 => output_tmp10_we0,
        d0 => grp_outputpixel2buf_fu_367_output_tmp_d0,
        q0 => output_tmp10_q0);

    output_tmp11_U : component write_back_outputeMU
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_tmp11_address0,
        ce0 => output_tmp11_ce0,
        we0 => output_tmp11_we0,
        d0 => grp_outputpixel2buf_fu_367_output_tmp1_d0,
        q0 => output_tmp11_q0);

    grp_outputpixel2buf_fu_367 : component outputpixel2buf
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_outputpixel2buf_fu_367_ap_start,
        ap_done => grp_outputpixel2buf_fu_367_ap_done,
        ap_idle => grp_outputpixel2buf_fu_367_ap_idle,
        ap_ready => grp_outputpixel2buf_fu_367_ap_ready,
        output_buffer_0_address0 => grp_outputpixel2buf_fu_367_output_buffer_0_address0,
        output_buffer_0_ce0 => grp_outputpixel2buf_fu_367_output_buffer_0_ce0,
        output_buffer_0_q0 => output_buffer_0_q0,
        output_buffer_1_address0 => grp_outputpixel2buf_fu_367_output_buffer_1_address0,
        output_buffer_1_ce0 => grp_outputpixel2buf_fu_367_output_buffer_1_ce0,
        output_buffer_1_q0 => output_buffer_1_q0,
        output_buffer_2_address0 => grp_outputpixel2buf_fu_367_output_buffer_2_address0,
        output_buffer_2_ce0 => grp_outputpixel2buf_fu_367_output_buffer_2_ce0,
        output_buffer_2_q0 => output_buffer_2_q0,
        output_buffer_3_address0 => grp_outputpixel2buf_fu_367_output_buffer_3_address0,
        output_buffer_3_ce0 => grp_outputpixel2buf_fu_367_output_buffer_3_ce0,
        output_buffer_3_q0 => output_buffer_3_q0,
        output_buffer_4_address0 => grp_outputpixel2buf_fu_367_output_buffer_4_address0,
        output_buffer_4_ce0 => grp_outputpixel2buf_fu_367_output_buffer_4_ce0,
        output_buffer_4_q0 => output_buffer_4_q0,
        output_buffer_5_address0 => grp_outputpixel2buf_fu_367_output_buffer_5_address0,
        output_buffer_5_ce0 => grp_outputpixel2buf_fu_367_output_buffer_5_ce0,
        output_buffer_5_q0 => output_buffer_5_q0,
        output_buffer_6_address0 => grp_outputpixel2buf_fu_367_output_buffer_6_address0,
        output_buffer_6_ce0 => grp_outputpixel2buf_fu_367_output_buffer_6_ce0,
        output_buffer_6_q0 => output_buffer_6_q0,
        output_buffer_7_address0 => grp_outputpixel2buf_fu_367_output_buffer_7_address0,
        output_buffer_7_ce0 => grp_outputpixel2buf_fu_367_output_buffer_7_ce0,
        output_buffer_7_q0 => output_buffer_7_q0,
        output_buffer_8_address0 => grp_outputpixel2buf_fu_367_output_buffer_8_address0,
        output_buffer_8_ce0 => grp_outputpixel2buf_fu_367_output_buffer_8_ce0,
        output_buffer_8_q0 => output_buffer_8_q0,
        output_buffer_9_address0 => grp_outputpixel2buf_fu_367_output_buffer_9_address0,
        output_buffer_9_ce0 => grp_outputpixel2buf_fu_367_output_buffer_9_ce0,
        output_buffer_9_q0 => output_buffer_9_q0,
        output_buffer_10_address0 => grp_outputpixel2buf_fu_367_output_buffer_10_address0,
        output_buffer_10_ce0 => grp_outputpixel2buf_fu_367_output_buffer_10_ce0,
        output_buffer_10_q0 => output_buffer_10_q0,
        output_buffer_11_address0 => grp_outputpixel2buf_fu_367_output_buffer_11_address0,
        output_buffer_11_ce0 => grp_outputpixel2buf_fu_367_output_buffer_11_ce0,
        output_buffer_11_q0 => output_buffer_11_q0,
        output_buffer_12_address0 => grp_outputpixel2buf_fu_367_output_buffer_12_address0,
        output_buffer_12_ce0 => grp_outputpixel2buf_fu_367_output_buffer_12_ce0,
        output_buffer_12_q0 => output_buffer_12_q0,
        output_buffer_13_address0 => grp_outputpixel2buf_fu_367_output_buffer_13_address0,
        output_buffer_13_ce0 => grp_outputpixel2buf_fu_367_output_buffer_13_ce0,
        output_buffer_13_q0 => output_buffer_13_q0,
        output_buffer_14_address0 => grp_outputpixel2buf_fu_367_output_buffer_14_address0,
        output_buffer_14_ce0 => grp_outputpixel2buf_fu_367_output_buffer_14_ce0,
        output_buffer_14_q0 => output_buffer_14_q0,
        output_buffer_15_address0 => grp_outputpixel2buf_fu_367_output_buffer_15_address0,
        output_buffer_15_ce0 => grp_outputpixel2buf_fu_367_output_buffer_15_ce0,
        output_buffer_15_q0 => output_buffer_15_q0,
        output_buffer_16_address0 => grp_outputpixel2buf_fu_367_output_buffer_16_address0,
        output_buffer_16_ce0 => grp_outputpixel2buf_fu_367_output_buffer_16_ce0,
        output_buffer_16_q0 => output_buffer_16_q0,
        output_buffer_17_address0 => grp_outputpixel2buf_fu_367_output_buffer_17_address0,
        output_buffer_17_ce0 => grp_outputpixel2buf_fu_367_output_buffer_17_ce0,
        output_buffer_17_q0 => output_buffer_17_q0,
        output_buffer_18_address0 => grp_outputpixel2buf_fu_367_output_buffer_18_address0,
        output_buffer_18_ce0 => grp_outputpixel2buf_fu_367_output_buffer_18_ce0,
        output_buffer_18_q0 => output_buffer_18_q0,
        output_buffer_19_address0 => grp_outputpixel2buf_fu_367_output_buffer_19_address0,
        output_buffer_19_ce0 => grp_outputpixel2buf_fu_367_output_buffer_19_ce0,
        output_buffer_19_q0 => output_buffer_19_q0,
        output_buffer_20_address0 => grp_outputpixel2buf_fu_367_output_buffer_20_address0,
        output_buffer_20_ce0 => grp_outputpixel2buf_fu_367_output_buffer_20_ce0,
        output_buffer_20_q0 => output_buffer_20_q0,
        output_buffer_21_address0 => grp_outputpixel2buf_fu_367_output_buffer_21_address0,
        output_buffer_21_ce0 => grp_outputpixel2buf_fu_367_output_buffer_21_ce0,
        output_buffer_21_q0 => output_buffer_21_q0,
        output_buffer_22_address0 => grp_outputpixel2buf_fu_367_output_buffer_22_address0,
        output_buffer_22_ce0 => grp_outputpixel2buf_fu_367_output_buffer_22_ce0,
        output_buffer_22_q0 => output_buffer_22_q0,
        output_buffer_23_address0 => grp_outputpixel2buf_fu_367_output_buffer_23_address0,
        output_buffer_23_ce0 => grp_outputpixel2buf_fu_367_output_buffer_23_ce0,
        output_buffer_23_q0 => output_buffer_23_q0,
        output_buffer_24_address0 => grp_outputpixel2buf_fu_367_output_buffer_24_address0,
        output_buffer_24_ce0 => grp_outputpixel2buf_fu_367_output_buffer_24_ce0,
        output_buffer_24_q0 => output_buffer_24_q0,
        output_buffer_25_address0 => grp_outputpixel2buf_fu_367_output_buffer_25_address0,
        output_buffer_25_ce0 => grp_outputpixel2buf_fu_367_output_buffer_25_ce0,
        output_buffer_25_q0 => output_buffer_25_q0,
        output_buffer_26_address0 => grp_outputpixel2buf_fu_367_output_buffer_26_address0,
        output_buffer_26_ce0 => grp_outputpixel2buf_fu_367_output_buffer_26_ce0,
        output_buffer_26_q0 => output_buffer_26_q0,
        output_buffer_27_address0 => grp_outputpixel2buf_fu_367_output_buffer_27_address0,
        output_buffer_27_ce0 => grp_outputpixel2buf_fu_367_output_buffer_27_ce0,
        output_buffer_27_q0 => output_buffer_27_q0,
        output_buffer_28_address0 => grp_outputpixel2buf_fu_367_output_buffer_28_address0,
        output_buffer_28_ce0 => grp_outputpixel2buf_fu_367_output_buffer_28_ce0,
        output_buffer_28_q0 => output_buffer_28_q0,
        output_buffer_29_address0 => grp_outputpixel2buf_fu_367_output_buffer_29_address0,
        output_buffer_29_ce0 => grp_outputpixel2buf_fu_367_output_buffer_29_ce0,
        output_buffer_29_q0 => output_buffer_29_q0,
        output_buffer_30_address0 => grp_outputpixel2buf_fu_367_output_buffer_30_address0,
        output_buffer_30_ce0 => grp_outputpixel2buf_fu_367_output_buffer_30_ce0,
        output_buffer_30_q0 => output_buffer_30_q0,
        output_buffer_31_address0 => grp_outputpixel2buf_fu_367_output_buffer_31_address0,
        output_buffer_31_ce0 => grp_outputpixel2buf_fu_367_output_buffer_31_ce0,
        output_buffer_31_q0 => output_buffer_31_q0,
        output_tmp_address0 => grp_outputpixel2buf_fu_367_output_tmp_address0,
        output_tmp_ce0 => grp_outputpixel2buf_fu_367_output_tmp_ce0,
        output_tmp_we0 => grp_outputpixel2buf_fu_367_output_tmp_we0,
        output_tmp_d0 => grp_outputpixel2buf_fu_367_output_tmp_d0,
        output_tmp1_address0 => grp_outputpixel2buf_fu_367_output_tmp1_address0,
        output_tmp1_ce0 => grp_outputpixel2buf_fu_367_output_tmp1_ce0,
        output_tmp1_we0 => grp_outputpixel2buf_fu_367_output_tmp1_we0,
        output_tmp1_d0 => grp_outputpixel2buf_fu_367_output_tmp1_d0,
        IsNL => IsNL,
        InterSubOutput => InterSubOutput,
        LayerType => LayerType,
        TC_MINe26 => grp_outputpixel2buf_fu_367_TC_MINe26,
        TC_MIN => TC_MIN,
        mLoop => tm_reg_300,
        rLoop => tr_reg_332,
        init => grp_outputpixel2buf_fu_367_init,
        outputoffsetarray_0 => grp_outputpixel2buf_fu_367_outputoffsetarray_0,
        outputoffsetarray_1 => grp_outputpixel2buf_fu_367_outputoffsetarray_1,
        OutputOffset1_sum => OutputOffset1_sum_reg_312,
        OutputOffset1_sum1 => OutputOffset1_sum1_reg_322,
        OutputOffset2_sum => OutputOffset2_sum_reg_344,
        tm_next_0_V_read => grp_outputpixel2buf_fu_367_tm_next_0_V_read,
        enable => grp_outputpixel2buf_fu_367_enable,
        ap_return_0 => grp_outputpixel2buf_fu_367_ap_return_0,
        ap_return_1 => grp_outputpixel2buf_fu_367_ap_return_1,
        ap_return_2 => grp_outputpixel2buf_fu_367_ap_return_2);

    grp_mmcpy_outputpixel_fu_463 : component mmcpy_outputpixel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mmcpy_outputpixel_fu_463_ap_start,
        ap_done => grp_mmcpy_outputpixel_fu_463_ap_done,
        ap_idle => grp_mmcpy_outputpixel_fu_463_ap_idle,
        ap_ready => grp_mmcpy_outputpixel_fu_463_ap_ready,
        m_axi_Output_r_AWVALID => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWVALID,
        m_axi_Output_r_AWREADY => m_axi_Output_r_AWREADY,
        m_axi_Output_r_AWADDR => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWADDR,
        m_axi_Output_r_AWID => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWID,
        m_axi_Output_r_AWLEN => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLEN,
        m_axi_Output_r_AWSIZE => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWSIZE,
        m_axi_Output_r_AWBURST => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWBURST,
        m_axi_Output_r_AWLOCK => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLOCK,
        m_axi_Output_r_AWCACHE => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWCACHE,
        m_axi_Output_r_AWPROT => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWPROT,
        m_axi_Output_r_AWQOS => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWQOS,
        m_axi_Output_r_AWREGION => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWREGION,
        m_axi_Output_r_AWUSER => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWUSER,
        m_axi_Output_r_WVALID => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WVALID,
        m_axi_Output_r_WREADY => m_axi_Output_r_WREADY,
        m_axi_Output_r_WDATA => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WDATA,
        m_axi_Output_r_WSTRB => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WSTRB,
        m_axi_Output_r_WLAST => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WLAST,
        m_axi_Output_r_WID => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WID,
        m_axi_Output_r_WUSER => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WUSER,
        m_axi_Output_r_ARVALID => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARVALID,
        m_axi_Output_r_ARREADY => ap_const_logic_0,
        m_axi_Output_r_ARADDR => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARADDR,
        m_axi_Output_r_ARID => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARID,
        m_axi_Output_r_ARLEN => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLEN,
        m_axi_Output_r_ARSIZE => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARSIZE,
        m_axi_Output_r_ARBURST => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARBURST,
        m_axi_Output_r_ARLOCK => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLOCK,
        m_axi_Output_r_ARCACHE => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARCACHE,
        m_axi_Output_r_ARPROT => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARPROT,
        m_axi_Output_r_ARQOS => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARQOS,
        m_axi_Output_r_ARREGION => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARREGION,
        m_axi_Output_r_ARUSER => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARUSER,
        m_axi_Output_r_RVALID => ap_const_logic_0,
        m_axi_Output_r_RREADY => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_RREADY,
        m_axi_Output_r_RDATA => ap_const_lv32_0,
        m_axi_Output_r_RLAST => ap_const_logic_0,
        m_axi_Output_r_RID => ap_const_lv1_0,
        m_axi_Output_r_RUSER => ap_const_lv1_0,
        m_axi_Output_r_RRESP => ap_const_lv2_0,
        m_axi_Output_r_BVALID => m_axi_Output_r_BVALID,
        m_axi_Output_r_BREADY => grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_BREADY,
        m_axi_Output_r_BRESP => m_axi_Output_r_BRESP,
        m_axi_Output_r_BID => m_axi_Output_r_BID,
        m_axi_Output_r_BUSER => m_axi_Output_r_BUSER,
        Output_offset => Output_offset,
        m_axi_Output1_AWVALID => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWVALID,
        m_axi_Output1_AWREADY => m_axi_Output1_AWREADY,
        m_axi_Output1_AWADDR => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWADDR,
        m_axi_Output1_AWID => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWID,
        m_axi_Output1_AWLEN => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLEN,
        m_axi_Output1_AWSIZE => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWSIZE,
        m_axi_Output1_AWBURST => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWBURST,
        m_axi_Output1_AWLOCK => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLOCK,
        m_axi_Output1_AWCACHE => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWCACHE,
        m_axi_Output1_AWPROT => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWPROT,
        m_axi_Output1_AWQOS => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWQOS,
        m_axi_Output1_AWREGION => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWREGION,
        m_axi_Output1_AWUSER => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWUSER,
        m_axi_Output1_WVALID => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WVALID,
        m_axi_Output1_WREADY => m_axi_Output1_WREADY,
        m_axi_Output1_WDATA => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WDATA,
        m_axi_Output1_WSTRB => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WSTRB,
        m_axi_Output1_WLAST => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WLAST,
        m_axi_Output1_WID => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WID,
        m_axi_Output1_WUSER => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WUSER,
        m_axi_Output1_ARVALID => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARVALID,
        m_axi_Output1_ARREADY => ap_const_logic_0,
        m_axi_Output1_ARADDR => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARADDR,
        m_axi_Output1_ARID => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARID,
        m_axi_Output1_ARLEN => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLEN,
        m_axi_Output1_ARSIZE => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARSIZE,
        m_axi_Output1_ARBURST => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARBURST,
        m_axi_Output1_ARLOCK => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLOCK,
        m_axi_Output1_ARCACHE => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARCACHE,
        m_axi_Output1_ARPROT => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARPROT,
        m_axi_Output1_ARQOS => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARQOS,
        m_axi_Output1_ARREGION => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARREGION,
        m_axi_Output1_ARUSER => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARUSER,
        m_axi_Output1_RVALID => ap_const_logic_0,
        m_axi_Output1_RREADY => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_RREADY,
        m_axi_Output1_RDATA => ap_const_lv32_0,
        m_axi_Output1_RLAST => ap_const_logic_0,
        m_axi_Output1_RID => ap_const_lv1_0,
        m_axi_Output1_RUSER => ap_const_lv1_0,
        m_axi_Output1_RRESP => ap_const_lv2_0,
        m_axi_Output1_BVALID => m_axi_Output1_BVALID,
        m_axi_Output1_BREADY => grp_mmcpy_outputpixel_fu_463_m_axi_Output1_BREADY,
        m_axi_Output1_BRESP => m_axi_Output1_BRESP,
        m_axi_Output1_BID => m_axi_Output1_BID,
        m_axi_Output1_BUSER => m_axi_Output1_BUSER,
        Output1_offset => Output1_offset,
        output_tmp_address0 => grp_mmcpy_outputpixel_fu_463_output_tmp_address0,
        output_tmp_ce0 => grp_mmcpy_outputpixel_fu_463_output_tmp_ce0,
        output_tmp_q0 => grp_mmcpy_outputpixel_fu_463_output_tmp_q0,
        output_tmp1_address0 => grp_mmcpy_outputpixel_fu_463_output_tmp1_address0,
        output_tmp1_ce0 => grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0,
        output_tmp1_q0 => grp_mmcpy_outputpixel_fu_463_output_tmp1_q0,
        tm_V_6 => grp_mmcpy_outputpixel_fu_463_tm_V_6,
        mLoop1_V => mLoop1_V_reg_947,
        mLoop2_V => mLoop2_V_1_reg_954,
        outputoffsetarray_0 => grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0,
        outputoffsetarray_1 => grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1,
        OutputLength => tmp_reg_979,
        OutputLength1 => tmp_reg_979,
        enable => grp_mmcpy_outputpixel_fu_463_enable);

    YOLO2_FPGA_mul_mueQU_U1075 : component YOLO2_FPGA_mul_mueQU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_fu_802_p0,
        din1 => r_V_fu_802_p1,
        dout => r_V_fu_802_p2);

    YOLO2_FPGA_mac_mueRU_U1076 : component YOLO2_FPGA_mac_mueRU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_808_p0,
        din1 => grp_fu_808_p1,
        din2 => r_V_reg_937,
        dout => grp_fu_808_p3);

    YOLO2_FPGA_mac_mueSV_U1077 : component YOLO2_FPGA_mac_mueSV
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 5,
        din2_WIDTH => 28,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_816_p0,
        din1 => grp_fu_816_p1,
        din2 => grp_fu_816_p2,
        dout => grp_fu_816_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_mmcpy_outputpixel_fu_463_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mmcpy_outputpixel_fu_463_ap_start_reg <= ap_const_logic_0;
            else
                if ((((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    grp_mmcpy_outputpixel_fu_463_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmcpy_outputpixel_fu_463_ap_ready = ap_const_logic_1)) then 
                    grp_mmcpy_outputpixel_fu_463_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_outputpixel2buf_fu_367_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_outputpixel2buf_fu_367_ap_start_reg <= ap_const_logic_0;
            else
                if ((((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    grp_outputpixel2buf_fu_367_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_outputpixel2buf_fu_367_ap_ready = ap_const_logic_1)) then 
                    grp_outputpixel2buf_fu_367_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    OutputOffset1_sum1_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                OutputOffset1_sum1_reg_322 <= OutputOffset1_sum1_1_fu_752_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                OutputOffset1_sum1_reg_322 <= grp_fu_816_p3;
            end if; 
        end if;
    end process;

    OutputOffset1_sum_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                OutputOffset1_sum_reg_312 <= OutputOffset1_sum_1_fu_747_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                OutputOffset1_sum_reg_312 <= OutputOffset1_sum_3_s_fu_612_p1;
            end if; 
        end if;
    end process;

    OutputOffset2_sum_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_flag_read_read_fu_240_p2 = ap_const_lv1_1) and (exitcond1_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                OutputOffset2_sum_reg_344 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                OutputOffset2_sum_reg_344 <= OutputOffset2_sum_1_fu_787_p2;
            end if; 
        end if;
    end process;

    pingpong_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                pingpong_fu_194 <= ap_phi_mux_pingpong_2_phi_fu_359_p4;
            elsif (((write_flag_read_read_fu_240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                pingpong_fu_194 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    tm_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                tm_reg_300 <= tm_1_reg_1014;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                tm_reg_300 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    tr_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_flag_read_read_fu_240_p2 = ap_const_lv1_1) and (exitcond1_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                tr_reg_332 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                tr_reg_332 <= tr_1_reg_1022;
            end if; 
        end if;
    end process;

    wb_start_flag_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                wb_start_flag_fu_190 <= ap_const_lv1_0;
            elsif (((write_flag_read_read_fu_240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                wb_start_flag_fu_190 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    OutputOffset3_cast_reg_1001(8 downto 0) <= OutputOffset3_cast_fu_670_p1(8 downto 0);
                    OutputOffset_cast_reg_995(17 downto 0) <= OutputOffset_cast_fu_659_p1(17 downto 0);
                TC_MINe26_reg_969 <= TC_MINe26_fu_615_p2;
                mLoop_1_reg_985 <= mLoop_1_fu_637_p3;
                    rLoop_cast4_cast_reg_990(1 downto 0) <= rLoop_cast4_cast_fu_644_p3(1 downto 0);    rLoop_cast4_cast_reg_990(4 downto 3) <= rLoop_cast4_cast_fu_644_p3(4 downto 3);
                    tmp_2_cast3_cast_reg_1006(0) <= tmp_2_cast3_cast_fu_674_p3(0);    tmp_2_cast3_cast_reg_1006(4 downto 3) <= tmp_2_cast3_cast_fu_674_p3(4 downto 3);
                    tmp_reg_979(2) <= tmp_fu_629_p3(2);    tmp_reg_979(5) <= tmp_fu_629_p3(5);    tmp_reg_979(7) <= tmp_fu_629_p3(7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_flag_read_read_fu_240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                Output_w_9b_V_reg_921 <= Output_w_9b_V_fu_510_p1;
                TM_MIN_6b_V_reg_915 <= TM_MIN_6b_V_fu_506_p1;
                c_9b_V_reg_932 <= c_9b_V_fu_522_p1;
                r_9b_V_reg_927 <= r_9b_V_fu_518_p1;
                r_V_reg_937 <= r_V_fu_802_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                mLoop1_V_reg_947 <= mLoop1_V_fu_586_p3;
                mLoop2_V_1_reg_954 <= mLoop2_V_1_fu_594_p3;
                mLoop_reg_959 <= mLoop1_V_fu_586_p3(4 downto 1);
                r_V_3_reg_942 <= r_V_3_fu_569_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                outputoffsetarray1_0_1_reg_1065 <= outputoffsetarray1_0_fu_214;
                outputoffsetarray1_1_1_reg_1071 <= outputoffsetarray1_1_fu_218;
                outputoffsetarray_0_2_reg_1053 <= outputoffsetarray_0_1_fu_206;
                outputoffsetarray_1_2_reg_1059 <= outputoffsetarray_1_1_fu_210;
                pingpong_load_reg_1027 <= pingpong_fu_194;
                tm_next1_0_V_1_load_reg_1047 <= tm_next1_0_V_1_fu_202;
                tm_next_0_V_1_load_reg_1041 <= tm_next_0_V_1_fu_198;
                tmp_5_reg_1031 <= tmp_5_fu_707_p2;
                wb_start_flag_load_reg_1036 <= wb_start_flag_fu_190;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                outputoffsetarray1_0_fu_214 <= grp_outputpixel2buf_fu_367_ap_return_1;
                outputoffsetarray1_1_fu_218 <= grp_outputpixel2buf_fu_367_ap_return_2;
                tm_next1_0_V_1_fu_202 <= grp_outputpixel2buf_fu_367_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                outputoffsetarray_0_1_fu_206 <= grp_outputpixel2buf_fu_367_ap_return_1;
                outputoffsetarray_1_1_fu_210 <= grp_outputpixel2buf_fu_367_ap_return_2;
                tm_next_0_V_1_fu_198 <= grp_outputpixel2buf_fu_367_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_flag_read_read_fu_240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tm_1_reg_1014 <= tm_1_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_6_reg_1082 <= grp_fu_487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_9_reg_1077 <= grp_fu_487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tr_1_reg_1022 <= tr_1_fu_698_p2;
            end if;
        end if;
    end process;
    tmp_reg_979(1 downto 0) <= "01";
    tmp_reg_979(4 downto 3) <= "01";
    tmp_reg_979(6) <= '0';
    rLoop_cast4_cast_reg_990(2) <= '0';
    OutputOffset_cast_reg_995(28 downto 18) <= "00000000000";
    OutputOffset3_cast_reg_1001(13 downto 9) <= "00000";
    tmp_2_cast3_cast_reg_1006(2 downto 1) <= "01";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, write_flag_read_read_fu_240_p2, ap_CS_fsm_state4, ap_CS_fsm_state5, exitcond_fu_693_p2, ap_CS_fsm_state6, ap_block_state6_on_subcall_done, exitcond1_fu_682_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((write_flag_read_read_fu_240_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((write_flag_read_read_fu_240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((exitcond1_fu_682_p2 = ap_const_lv1_1) or (write_flag_read_read_fu_240_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((exitcond_fu_693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    OutputOffset1_sum1_1_fu_752_p2 <= std_logic_vector(unsigned(OutputOffset_cast_reg_995) + unsigned(OutputOffset1_sum1_reg_322));
    OutputOffset1_sum_1_fu_747_p2 <= std_logic_vector(unsigned(OutputOffset_cast_reg_995) + unsigned(OutputOffset1_sum_reg_312));
    OutputOffset1_sum_3_s_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_reg_942),29));
    OutputOffset2_sum_1_fu_787_p2 <= std_logic_vector(unsigned(OutputOffset3_cast_reg_1001) + unsigned(OutputOffset2_sum_reg_344));
    OutputOffset3_cast_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(OutputOffset3_fu_663_p3),14));
    OutputOffset3_fu_663_p3 <= 
        Output_w_9b_V_reg_921 when (TC_MINe26_fu_615_p2(0) = '1') else 
        ap_const_lv9_0;
    OutputOffset_cast_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(OutputOffset_fu_652_p3),29));
    OutputOffset_fu_652_p3 <= 
        OHxOW when (TC_MINe26_fu_615_p2(0) = '1') else 
        ap_const_lv18_152;
    Output_w_9b_V_fu_510_p1 <= Output_w(9 - 1 downto 0);
    TC_MINe26_fu_615_p2 <= "1" when (TC_MIN = ap_const_lv32_1A) else "0";
    TM_MIN_6b_V_fu_506_p1 <= TM_MIN(6 - 1 downto 0);
    TM_MIN_g_V_fu_549_p3 <= 
        ap_const_lv6_C when (tmp_8_fu_544_p2(0) = '1') else 
        TM_MIN_6b_V_reg_915;
    TM_MINaboveTmdiv2_fu_574_p2 <= "1" when (unsigned(TM_MIN_g_V_fu_549_p3) > unsigned(ap_const_lv6_10)) else "0";
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state6_on_subcall_done_assign_proc : process(pingpong_load_reg_1027, grp_outputpixel2buf_fu_367_ap_done, grp_mmcpy_outputpixel_fu_463_ap_done)
    begin
                ap_block_state6_on_subcall_done <= (((pingpong_load_reg_1027 = ap_const_lv1_1) and (grp_mmcpy_outputpixel_fu_463_ap_done = ap_const_logic_0)) or ((grp_mmcpy_outputpixel_fu_463_ap_done = ap_const_logic_0) and (pingpong_load_reg_1027 = ap_const_lv1_0)) or ((pingpong_load_reg_1027 = ap_const_lv1_1) and (grp_outputpixel2buf_fu_367_ap_done = ap_const_logic_0)) or ((grp_outputpixel2buf_fu_367_ap_done = ap_const_logic_0) and (pingpong_load_reg_1027 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, write_flag_read_read_fu_240_p2, ap_CS_fsm_state4, exitcond1_fu_682_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and ((exitcond1_fu_682_p2 = ap_const_lv1_1) or (write_flag_read_read_fu_240_p2 = ap_const_lv1_0))) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_pingpong_2_phi_fu_359_p4_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                ap_phi_mux_pingpong_2_phi_fu_359_p4 <= ap_const_lv1_1;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                ap_phi_mux_pingpong_2_phi_fu_359_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_pingpong_2_phi_fu_359_p4 <= "X";
            end if;
        else 
            ap_phi_mux_pingpong_2_phi_fu_359_p4 <= "X";
        end if; 
    end process;


    ap_ready_assign_proc : process(write_flag_read_read_fu_240_p2, ap_CS_fsm_state4, exitcond1_fu_682_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((exitcond1_fu_682_p2 = ap_const_lv1_1) or (write_flag_read_read_fu_240_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_9b_V_fu_522_p1 <= c(9 - 1 downto 0);
    exitcond1_fu_682_p2 <= "1" when (tm_reg_300 = mLoop_1_reg_985) else "0";
    exitcond_fu_693_p2 <= "1" when (tr_reg_332 = tmp_2_cast3_cast_reg_1006) else "0";
    grp_fu_487_p2 <= "0" when (tr_reg_332 = ap_const_lv5_0) else "1";
    grp_fu_808_p0 <= grp_fu_808_p00(9 - 1 downto 0);
    grp_fu_808_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Output_w_9b_V_reg_921),18));
    grp_fu_808_p1 <= grp_fu_808_p10(9 - 1 downto 0);
    grp_fu_808_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_9b_V_reg_927),18));
    grp_fu_816_p0 <= grp_fu_816_p00(18 - 1 downto 0);
    grp_fu_816_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(OHxOW),23));
    grp_fu_816_p1 <= grp_fu_816_p10(5 - 1 downto 0);
    grp_fu_816_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mLoop1_V_reg_947),23));
    grp_fu_816_p2 <= grp_fu_816_p20(28 - 1 downto 0);
    grp_fu_816_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_reg_942),29));
    grp_mmcpy_outputpixel_fu_463_ap_start <= grp_mmcpy_outputpixel_fu_463_ap_start_reg;

    grp_mmcpy_outputpixel_fu_463_enable_assign_proc : process(pingpong_load_reg_1027, tmp_9_reg_1077, tmp_6_reg_1082, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_mmcpy_outputpixel_fu_463_enable <= tmp_6_reg_1082(0);
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_mmcpy_outputpixel_fu_463_enable <= tmp_9_reg_1077(0);
            else 
                grp_mmcpy_outputpixel_fu_463_enable <= 'X';
            end if;
        else 
            grp_mmcpy_outputpixel_fu_463_enable <= 'X';
        end if; 
    end process;


    grp_mmcpy_outputpixel_fu_463_output_tmp1_q0_assign_proc : process(output_tmp01_q0, output_tmp11_q0, pingpong_load_reg_1027, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 <= output_tmp11_q0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 <= output_tmp01_q0;
            else 
                grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_mmcpy_outputpixel_fu_463_output_tmp_q0_assign_proc : process(output_tmp00_q0, output_tmp10_q0, pingpong_load_reg_1027, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_mmcpy_outputpixel_fu_463_output_tmp_q0 <= output_tmp10_q0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_mmcpy_outputpixel_fu_463_output_tmp_q0 <= output_tmp00_q0;
            else 
                grp_mmcpy_outputpixel_fu_463_output_tmp_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_mmcpy_outputpixel_fu_463_output_tmp_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0_assign_proc : process(pingpong_load_reg_1027, outputoffsetarray_0_2_reg_1053, outputoffsetarray1_0_1_reg_1065, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 <= outputoffsetarray1_0_1_reg_1065;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 <= outputoffsetarray_0_2_reg_1053;
            else 
                grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1_assign_proc : process(pingpong_load_reg_1027, outputoffsetarray_1_2_reg_1059, outputoffsetarray1_1_1_reg_1071, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 <= outputoffsetarray1_1_1_reg_1071;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 <= outputoffsetarray_1_2_reg_1059;
            else 
                grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_mmcpy_outputpixel_fu_463_tm_V_6_assign_proc : process(pingpong_load_reg_1027, tm_next_0_V_1_load_reg_1041, tm_next1_0_V_1_load_reg_1047, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_mmcpy_outputpixel_fu_463_tm_V_6 <= tm_next1_0_V_1_load_reg_1047;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_mmcpy_outputpixel_fu_463_tm_V_6 <= tm_next_0_V_1_load_reg_1041;
            else 
                grp_mmcpy_outputpixel_fu_463_tm_V_6 <= "XXXXXX";
            end if;
        else 
            grp_mmcpy_outputpixel_fu_463_tm_V_6 <= "XXXXXX";
        end if; 
    end process;

    grp_outputpixel2buf_fu_367_TC_MINe26 <= TC_MINe26_reg_969(0);
    grp_outputpixel2buf_fu_367_ap_start <= grp_outputpixel2buf_fu_367_ap_start_reg;
    grp_outputpixel2buf_fu_367_enable <= tmp_5_reg_1031(0);
    grp_outputpixel2buf_fu_367_init <= wb_start_flag_load_reg_1036(0);

    grp_outputpixel2buf_fu_367_outputoffsetarray_0_assign_proc : process(pingpong_load_reg_1027, outputoffsetarray_0_2_reg_1053, outputoffsetarray1_0_1_reg_1065, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_outputpixel2buf_fu_367_outputoffsetarray_0 <= outputoffsetarray_0_2_reg_1053;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_outputpixel2buf_fu_367_outputoffsetarray_0 <= outputoffsetarray1_0_1_reg_1065;
            else 
                grp_outputpixel2buf_fu_367_outputoffsetarray_0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_outputpixel2buf_fu_367_outputoffsetarray_0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_outputpixel2buf_fu_367_outputoffsetarray_1_assign_proc : process(pingpong_load_reg_1027, outputoffsetarray_1_2_reg_1059, outputoffsetarray1_1_1_reg_1071, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_outputpixel2buf_fu_367_outputoffsetarray_1 <= outputoffsetarray_1_2_reg_1059;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_outputpixel2buf_fu_367_outputoffsetarray_1 <= outputoffsetarray1_1_1_reg_1071;
            else 
                grp_outputpixel2buf_fu_367_outputoffsetarray_1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_outputpixel2buf_fu_367_outputoffsetarray_1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_outputpixel2buf_fu_367_tm_next_0_V_read_assign_proc : process(pingpong_load_reg_1027, tm_next_0_V_1_load_reg_1041, tm_next1_0_V_1_load_reg_1047, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                grp_outputpixel2buf_fu_367_tm_next_0_V_read <= tm_next_0_V_1_load_reg_1041;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                grp_outputpixel2buf_fu_367_tm_next_0_V_read <= tm_next1_0_V_1_load_reg_1047;
            else 
                grp_outputpixel2buf_fu_367_tm_next_0_V_read <= "XXXXXX";
            end if;
        else 
            grp_outputpixel2buf_fu_367_tm_next_0_V_read <= "XXXXXX";
        end if; 
    end process;

    mLoop1_V_fu_586_p3 <= 
        ap_const_lv5_10 when (TM_MINaboveTmdiv2_fu_574_p2(0) = '1') else 
        tmp_10_fu_556_p1;
    mLoop2_V_1_fu_594_p3 <= 
        mLoop2_V_fu_580_p2 when (TM_MINaboveTmdiv2_fu_574_p2(0) = '1') else 
        ap_const_lv6_0;
    mLoop2_V_fu_580_p2 <= std_logic_vector(signed(ap_const_lv6_30) + signed(TM_MIN_g_V_fu_549_p3));
    mLoop_1_fu_637_p3 <= 
        mLoop1_V_reg_947 when (TC_MINe26_fu_615_p2(0) = '1') else 
        mLoop_3_fu_626_p1;
    mLoop_3_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mLoop_reg_959),5));
    m_10b_V_fu_514_p1 <= m(10 - 1 downto 0);
    m_axi_Output1_ARADDR <= ap_const_lv32_0;
    m_axi_Output1_ARBURST <= ap_const_lv2_0;
    m_axi_Output1_ARCACHE <= ap_const_lv4_0;
    m_axi_Output1_ARID <= ap_const_lv1_0;
    m_axi_Output1_ARLEN <= ap_const_lv32_0;
    m_axi_Output1_ARLOCK <= ap_const_lv2_0;
    m_axi_Output1_ARPROT <= ap_const_lv3_0;
    m_axi_Output1_ARQOS <= ap_const_lv4_0;
    m_axi_Output1_ARREGION <= ap_const_lv4_0;
    m_axi_Output1_ARSIZE <= ap_const_lv3_0;
    m_axi_Output1_ARUSER <= ap_const_lv1_0;
    m_axi_Output1_ARVALID <= ap_const_logic_0;
    m_axi_Output1_AWADDR <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWADDR;
    m_axi_Output1_AWBURST <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWBURST;
    m_axi_Output1_AWCACHE <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWCACHE;
    m_axi_Output1_AWID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWID;
    m_axi_Output1_AWLEN <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLEN;
    m_axi_Output1_AWLOCK <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLOCK;
    m_axi_Output1_AWPROT <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWPROT;
    m_axi_Output1_AWQOS <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWQOS;
    m_axi_Output1_AWREGION <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWREGION;
    m_axi_Output1_AWSIZE <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWSIZE;
    m_axi_Output1_AWUSER <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWUSER;

    m_axi_Output1_AWVALID_assign_proc : process(ap_CS_fsm_state5, pingpong_load_load_fu_704_p1, pingpong_load_reg_1027, exitcond_fu_693_p2, ap_CS_fsm_state6, grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWVALID)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_Output1_AWVALID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWVALID;
        else 
            m_axi_Output1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_Output1_BREADY_assign_proc : process(ap_CS_fsm_state5, pingpong_load_load_fu_704_p1, pingpong_load_reg_1027, exitcond_fu_693_p2, ap_CS_fsm_state6, grp_mmcpy_outputpixel_fu_463_m_axi_Output1_BREADY)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_Output1_BREADY <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_BREADY;
        else 
            m_axi_Output1_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Output1_RREADY <= ap_const_logic_0;
    m_axi_Output1_WDATA <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WDATA;
    m_axi_Output1_WID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WID;
    m_axi_Output1_WLAST <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WLAST;
    m_axi_Output1_WSTRB <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WSTRB;
    m_axi_Output1_WUSER <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WUSER;

    m_axi_Output1_WVALID_assign_proc : process(ap_CS_fsm_state5, pingpong_load_load_fu_704_p1, pingpong_load_reg_1027, exitcond_fu_693_p2, ap_CS_fsm_state6, grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WVALID)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_Output1_WVALID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WVALID;
        else 
            m_axi_Output1_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Output_r_ARADDR <= ap_const_lv32_0;
    m_axi_Output_r_ARBURST <= ap_const_lv2_0;
    m_axi_Output_r_ARCACHE <= ap_const_lv4_0;
    m_axi_Output_r_ARID <= ap_const_lv1_0;
    m_axi_Output_r_ARLEN <= ap_const_lv32_0;
    m_axi_Output_r_ARLOCK <= ap_const_lv2_0;
    m_axi_Output_r_ARPROT <= ap_const_lv3_0;
    m_axi_Output_r_ARQOS <= ap_const_lv4_0;
    m_axi_Output_r_ARREGION <= ap_const_lv4_0;
    m_axi_Output_r_ARSIZE <= ap_const_lv3_0;
    m_axi_Output_r_ARUSER <= ap_const_lv1_0;
    m_axi_Output_r_ARVALID <= ap_const_logic_0;
    m_axi_Output_r_AWADDR <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWADDR;
    m_axi_Output_r_AWBURST <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWBURST;
    m_axi_Output_r_AWCACHE <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWCACHE;
    m_axi_Output_r_AWID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWID;
    m_axi_Output_r_AWLEN <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLEN;
    m_axi_Output_r_AWLOCK <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLOCK;
    m_axi_Output_r_AWPROT <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWPROT;
    m_axi_Output_r_AWQOS <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWQOS;
    m_axi_Output_r_AWREGION <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWREGION;
    m_axi_Output_r_AWSIZE <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWSIZE;
    m_axi_Output_r_AWUSER <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWUSER;

    m_axi_Output_r_AWVALID_assign_proc : process(ap_CS_fsm_state5, pingpong_load_load_fu_704_p1, pingpong_load_reg_1027, exitcond_fu_693_p2, ap_CS_fsm_state6, grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWVALID)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_Output_r_AWVALID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWVALID;
        else 
            m_axi_Output_r_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_Output_r_BREADY_assign_proc : process(ap_CS_fsm_state5, pingpong_load_load_fu_704_p1, pingpong_load_reg_1027, exitcond_fu_693_p2, ap_CS_fsm_state6, grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_BREADY)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_Output_r_BREADY <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_BREADY;
        else 
            m_axi_Output_r_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Output_r_RREADY <= ap_const_logic_0;
    m_axi_Output_r_WDATA <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WDATA;
    m_axi_Output_r_WID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WID;
    m_axi_Output_r_WLAST <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WLAST;
    m_axi_Output_r_WSTRB <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WSTRB;
    m_axi_Output_r_WUSER <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WUSER;

    m_axi_Output_r_WVALID_assign_proc : process(ap_CS_fsm_state5, pingpong_load_load_fu_704_p1, pingpong_load_reg_1027, exitcond_fu_693_p2, ap_CS_fsm_state6, grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WVALID)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_load_fu_704_p1 = ap_const_lv1_1) and (exitcond_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((exitcond_fu_693_p2 = ap_const_lv1_0) and (pingpong_load_load_fu_704_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_Output_r_WVALID <= grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WVALID;
        else 
            m_axi_Output_r_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_0_address0 <= grp_outputpixel2buf_fu_367_output_buffer_0_address0;

    output_buffer_0_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_0_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_0_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_0_ce0;
        else 
            output_buffer_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_10_address0 <= grp_outputpixel2buf_fu_367_output_buffer_10_address0;

    output_buffer_10_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_10_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_10_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_10_ce0;
        else 
            output_buffer_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_11_address0 <= grp_outputpixel2buf_fu_367_output_buffer_11_address0;

    output_buffer_11_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_11_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_11_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_11_ce0;
        else 
            output_buffer_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_12_address0 <= grp_outputpixel2buf_fu_367_output_buffer_12_address0;

    output_buffer_12_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_12_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_12_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_12_ce0;
        else 
            output_buffer_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_13_address0 <= grp_outputpixel2buf_fu_367_output_buffer_13_address0;

    output_buffer_13_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_13_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_13_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_13_ce0;
        else 
            output_buffer_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_14_address0 <= grp_outputpixel2buf_fu_367_output_buffer_14_address0;

    output_buffer_14_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_14_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_14_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_14_ce0;
        else 
            output_buffer_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_15_address0 <= grp_outputpixel2buf_fu_367_output_buffer_15_address0;

    output_buffer_15_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_15_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_15_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_15_ce0;
        else 
            output_buffer_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_16_address0 <= grp_outputpixel2buf_fu_367_output_buffer_16_address0;

    output_buffer_16_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_16_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_16_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_16_ce0;
        else 
            output_buffer_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_17_address0 <= grp_outputpixel2buf_fu_367_output_buffer_17_address0;

    output_buffer_17_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_17_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_17_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_17_ce0;
        else 
            output_buffer_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_18_address0 <= grp_outputpixel2buf_fu_367_output_buffer_18_address0;

    output_buffer_18_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_18_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_18_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_18_ce0;
        else 
            output_buffer_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_19_address0 <= grp_outputpixel2buf_fu_367_output_buffer_19_address0;

    output_buffer_19_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_19_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_19_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_19_ce0;
        else 
            output_buffer_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_1_address0 <= grp_outputpixel2buf_fu_367_output_buffer_1_address0;

    output_buffer_1_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_1_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_1_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_1_ce0;
        else 
            output_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_20_address0 <= grp_outputpixel2buf_fu_367_output_buffer_20_address0;

    output_buffer_20_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_20_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_20_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_20_ce0;
        else 
            output_buffer_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_21_address0 <= grp_outputpixel2buf_fu_367_output_buffer_21_address0;

    output_buffer_21_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_21_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_21_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_21_ce0;
        else 
            output_buffer_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_22_address0 <= grp_outputpixel2buf_fu_367_output_buffer_22_address0;

    output_buffer_22_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_22_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_22_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_22_ce0;
        else 
            output_buffer_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_23_address0 <= grp_outputpixel2buf_fu_367_output_buffer_23_address0;

    output_buffer_23_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_23_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_23_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_23_ce0;
        else 
            output_buffer_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_24_address0 <= grp_outputpixel2buf_fu_367_output_buffer_24_address0;

    output_buffer_24_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_24_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_24_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_24_ce0;
        else 
            output_buffer_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_25_address0 <= grp_outputpixel2buf_fu_367_output_buffer_25_address0;

    output_buffer_25_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_25_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_25_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_25_ce0;
        else 
            output_buffer_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_26_address0 <= grp_outputpixel2buf_fu_367_output_buffer_26_address0;

    output_buffer_26_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_26_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_26_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_26_ce0;
        else 
            output_buffer_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_27_address0 <= grp_outputpixel2buf_fu_367_output_buffer_27_address0;

    output_buffer_27_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_27_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_27_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_27_ce0;
        else 
            output_buffer_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_28_address0 <= grp_outputpixel2buf_fu_367_output_buffer_28_address0;

    output_buffer_28_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_28_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_28_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_28_ce0;
        else 
            output_buffer_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_29_address0 <= grp_outputpixel2buf_fu_367_output_buffer_29_address0;

    output_buffer_29_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_29_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_29_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_29_ce0;
        else 
            output_buffer_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_2_address0 <= grp_outputpixel2buf_fu_367_output_buffer_2_address0;

    output_buffer_2_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_2_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_2_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_2_ce0;
        else 
            output_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_30_address0 <= grp_outputpixel2buf_fu_367_output_buffer_30_address0;

    output_buffer_30_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_30_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_30_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_30_ce0;
        else 
            output_buffer_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_31_address0 <= grp_outputpixel2buf_fu_367_output_buffer_31_address0;

    output_buffer_31_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_31_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_31_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_31_ce0;
        else 
            output_buffer_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_3_address0 <= grp_outputpixel2buf_fu_367_output_buffer_3_address0;

    output_buffer_3_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_3_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_3_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_3_ce0;
        else 
            output_buffer_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_4_address0 <= grp_outputpixel2buf_fu_367_output_buffer_4_address0;

    output_buffer_4_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_4_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_4_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_4_ce0;
        else 
            output_buffer_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_5_address0 <= grp_outputpixel2buf_fu_367_output_buffer_5_address0;

    output_buffer_5_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_5_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_5_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_5_ce0;
        else 
            output_buffer_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_6_address0 <= grp_outputpixel2buf_fu_367_output_buffer_6_address0;

    output_buffer_6_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_6_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_6_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_6_ce0;
        else 
            output_buffer_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_7_address0 <= grp_outputpixel2buf_fu_367_output_buffer_7_address0;

    output_buffer_7_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_7_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_7_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_7_ce0;
        else 
            output_buffer_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_8_address0 <= grp_outputpixel2buf_fu_367_output_buffer_8_address0;

    output_buffer_8_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_8_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_8_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_8_ce0;
        else 
            output_buffer_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_9_address0 <= grp_outputpixel2buf_fu_367_output_buffer_9_address0;

    output_buffer_9_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_buffer_9_ce0)
    begin
        if ((((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_buffer_9_ce0 <= grp_outputpixel2buf_fu_367_output_buffer_9_ce0;
        else 
            output_buffer_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp00_address0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp_address0, grp_mmcpy_outputpixel_fu_463_output_tmp_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp00_address0 <= grp_mmcpy_outputpixel_fu_463_output_tmp_address0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp00_address0 <= grp_outputpixel2buf_fu_367_output_tmp_address0;
            else 
                output_tmp00_address0 <= "XXXXXXXX";
            end if;
        else 
            output_tmp00_address0 <= "XXXXXXXX";
        end if; 
    end process;


    output_tmp00_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp_ce0, grp_mmcpy_outputpixel_fu_463_output_tmp_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp00_ce0 <= grp_mmcpy_outputpixel_fu_463_output_tmp_ce0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp00_ce0 <= grp_outputpixel2buf_fu_367_output_tmp_ce0;
            else 
                output_tmp00_ce0 <= ap_const_logic_0;
            end if;
        else 
            output_tmp00_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp00_we0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp_we0)
    begin
        if (((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_tmp00_we0 <= grp_outputpixel2buf_fu_367_output_tmp_we0;
        else 
            output_tmp00_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp01_address0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp1_address0, grp_mmcpy_outputpixel_fu_463_output_tmp1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp01_address0 <= grp_mmcpy_outputpixel_fu_463_output_tmp1_address0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp01_address0 <= grp_outputpixel2buf_fu_367_output_tmp1_address0;
            else 
                output_tmp01_address0 <= "XXXXXXXX";
            end if;
        else 
            output_tmp01_address0 <= "XXXXXXXX";
        end if; 
    end process;


    output_tmp01_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp1_ce0, grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp01_ce0 <= grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp01_ce0 <= grp_outputpixel2buf_fu_367_output_tmp1_ce0;
            else 
                output_tmp01_ce0 <= ap_const_logic_0;
            end if;
        else 
            output_tmp01_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp01_we0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp1_we0)
    begin
        if (((pingpong_load_reg_1027 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_tmp01_we0 <= grp_outputpixel2buf_fu_367_output_tmp1_we0;
        else 
            output_tmp01_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp10_address0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp_address0, grp_mmcpy_outputpixel_fu_463_output_tmp_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp10_address0 <= grp_mmcpy_outputpixel_fu_463_output_tmp_address0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp10_address0 <= grp_outputpixel2buf_fu_367_output_tmp_address0;
            else 
                output_tmp10_address0 <= "XXXXXXXX";
            end if;
        else 
            output_tmp10_address0 <= "XXXXXXXX";
        end if; 
    end process;


    output_tmp10_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp_ce0, grp_mmcpy_outputpixel_fu_463_output_tmp_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp10_ce0 <= grp_mmcpy_outputpixel_fu_463_output_tmp_ce0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp10_ce0 <= grp_outputpixel2buf_fu_367_output_tmp_ce0;
            else 
                output_tmp10_ce0 <= ap_const_logic_0;
            end if;
        else 
            output_tmp10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp10_we0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp_we0)
    begin
        if (((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_tmp10_we0 <= grp_outputpixel2buf_fu_367_output_tmp_we0;
        else 
            output_tmp10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp11_address0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp1_address0, grp_mmcpy_outputpixel_fu_463_output_tmp1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp11_address0 <= grp_mmcpy_outputpixel_fu_463_output_tmp1_address0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp11_address0 <= grp_outputpixel2buf_fu_367_output_tmp1_address0;
            else 
                output_tmp11_address0 <= "XXXXXXXX";
            end if;
        else 
            output_tmp11_address0 <= "XXXXXXXX";
        end if; 
    end process;


    output_tmp11_ce0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp1_ce0, grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((pingpong_load_reg_1027 = ap_const_lv1_1)) then 
                output_tmp11_ce0 <= grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0;
            elsif ((pingpong_load_reg_1027 = ap_const_lv1_0)) then 
                output_tmp11_ce0 <= grp_outputpixel2buf_fu_367_output_tmp1_ce0;
            else 
                output_tmp11_ce0 <= ap_const_logic_0;
            end if;
        else 
            output_tmp11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_tmp11_we0_assign_proc : process(pingpong_load_reg_1027, ap_CS_fsm_state6, grp_outputpixel2buf_fu_367_output_tmp1_we0)
    begin
        if (((pingpong_load_reg_1027 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_tmp11_we0 <= grp_outputpixel2buf_fu_367_output_tmp1_we0;
        else 
            output_tmp11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pingpong_load_load_fu_704_p1 <= pingpong_fu_194;
    rLoop_cast4_cast_fu_644_p3 <= 
        ap_const_lv5_1A when (TC_MINe26_fu_615_p2(0) = '1') else 
        ap_const_lv5_1;
    r_9b_V_fu_518_p1 <= r(9 - 1 downto 0);
    r_V_3_fu_569_p2 <= std_logic_vector(unsigned(grp_fu_808_p3) + unsigned(rhs_V_3_cast_fu_566_p1));
    r_V_fu_802_p0 <= r_V_fu_802_p00(18 - 1 downto 0);
    r_V_fu_802_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(OHxOW),28));
    r_V_fu_802_p1 <= r_V_fu_802_p10(10 - 1 downto 0);
    r_V_fu_802_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_10b_V_fu_514_p1),28));
    rhs_V_3_cast_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_9b_V_reg_932),28));
    tm_1_fu_687_p2 <= std_logic_vector(unsigned(tm_reg_300) + unsigned(ap_const_lv5_1));
    tmp_10_fu_556_p1 <= TM_MIN_g_V_fu_549_p3(5 - 1 downto 0);
    tmp_2_cast3_cast_fu_674_p3 <= 
        ap_const_lv5_1B when (TC_MINe26_fu_615_p2(0) = '1') else 
        ap_const_lv5_2;
    tmp_5_fu_707_p2 <= "0" when (tr_reg_332 = rLoop_cast4_cast_reg_990) else "1";
    tmp_8_fu_544_p2 <= "1" when (TM_MIN_6b_V_reg_915 = ap_const_lv6_9) else "0";
    tmp_fu_629_p3 <= 
        ap_const_lv8_D when (TC_MINe26_fu_615_p2(0) = '1') else 
        ap_const_lv8_A9;
    tr_1_fu_698_p2 <= std_logic_vector(unsigned(tr_reg_332) + unsigned(ap_const_lv5_1));
    write_flag_read_read_fu_240_p2 <= (0=>write_flag, others=>'-');
end behav;
