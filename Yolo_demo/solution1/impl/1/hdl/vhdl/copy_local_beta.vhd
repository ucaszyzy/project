-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity copy_local_beta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    beta_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    beta_buffer_ce0 : OUT STD_LOGIC;
    beta_buffer_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_beta_buffer_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_11 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_12 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_13 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_14 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_16 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_17 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_18 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_19 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_20 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_21 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_22 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_23 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_24 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_25 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_26 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_27 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_28 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_29 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_30 : IN STD_LOGIC_VECTOR (31 downto 0);
    local_beta_buffer_31 : IN STD_LOGIC_VECTOR (31 downto 0);
    TM_MIN : IN STD_LOGIC_VECTOR (31 downto 0);
    m : IN STD_LOGIC_VECTOR (31 downto 0);
    InterSubBeta : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of copy_local_beta is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal offset_reg_645 : STD_LOGIC_VECTOR (31 downto 0);
    signal tm_reg_654 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_cast_fu_669_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_cast_reg_2390 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_s_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tm_2_fu_842_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_fu_853_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_2409 : STD_LOGIC_VECTOR (4 downto 0);
    signal offset_1_fu_857_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_59_fu_848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal local_beta_buffer31_s_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_ca_fu_872_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal write_flag_fu_170 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag31_fu_174 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer30_s_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_s_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag30_fu_186 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer299_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag4_fu_194 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag29_fu_198 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer28_s_fu_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer16_s_fu_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag28_fu_210 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer27_s_fu_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag8_fu_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag27_fu_222 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer26_s_fu_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer2_s_fu_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag26_fu_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer25_s_fu_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag11_fu_242 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag25_fu_246 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer24_s_fu_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer3_s_fu_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag24_fu_258 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer23_s_fu_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag14_fu_266 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag23_fu_270 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer22_s_fu_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer4_s_fu_278 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag22_fu_282 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer21_s_fu_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag17_fu_290 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag21_fu_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer20_s_fu_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer5_s_fu_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag20_fu_306 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer19_s_fu_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag19_fu_314 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag18_fu_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer18_s_fu_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer6_s_fu_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag16_fu_330 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer17_s_fu_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag15_fu_338 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag13_fu_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer165_fu_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer7_s_fu_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag12_fu_354 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer155_fu_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag10_fu_362 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag9_fu_366 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer14_s_fu_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer8_s_fu_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag7_fu_378 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer13_s_fu_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag6_fu_386 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag5_fu_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer12_s_fu_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer9_s_fu_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag3_fu_402 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer11_s_fu_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag2_fu_410 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag1_fu_414 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_beta_buffer10_s_fu_418 : STD_LOGIC_VECTOR (31 downto 0);
    signal InterSubBeta_4b_V_fu_665_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tm_cast_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_92_cast_fu_863_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal local_beta_buffer_fu_867_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal local_beta_buffer_0_1_fu_1388_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_1_1_fu_1395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_2_1_fu_1402_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_3_1_fu_1409_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_4_1_fu_1416_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_5_1_fu_1423_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_6_1_fu_1430_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_7_1_fu_1437_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_8_1_fu_1444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_9_1_fu_1451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_10_1_fu_1458_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_11_1_fu_1465_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_12_1_fu_1472_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_13_1_fu_1479_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_14_1_fu_1486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_15_1_fu_1493_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_16_1_fu_1500_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_17_1_fu_1507_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_18_1_fu_1514_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_19_1_fu_1521_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_20_1_fu_1528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_21_1_fu_1535_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_22_1_fu_1542_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_23_1_fu_1549_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_24_1_fu_1556_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_25_1_fu_1563_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_26_1_fu_1570_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_27_1_fu_1577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_28_1_fu_1584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_29_1_fu_1591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_30_1_fu_1598_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_beta_buffer_31_1_fu_1605_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    offset_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_837_p2 = ap_const_lv1_1))) then 
                offset_reg_645 <= offset_1_fu_857_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                offset_reg_645 <= m;
            end if; 
        end if;
    end process;

    tm_reg_654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_837_p2 = ap_const_lv1_1))) then 
                tm_reg_654 <= tm_2_fu_842_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tm_reg_654 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    write_flag10_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag10_fu_362 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag10_fu_362 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag11_fu_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag11_fu_242 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag11_fu_242 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag12_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag12_fu_354 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag12_fu_354 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag13_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag13_fu_342 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag13_fu_342 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag14_fu_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag14_fu_266 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag14_fu_266 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag15_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag15_fu_338 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag15_fu_338 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag16_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag16_fu_330 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag16_fu_330 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag17_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag17_fu_290 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag17_fu_290 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag18_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_13) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag18_fu_318 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag18_fu_318 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag19_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag19_fu_314 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag19_fu_314 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag1_fu_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag1_fu_414 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag1_fu_414 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag20_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_14) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag20_fu_306 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag20_fu_306 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag21_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_15) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag21_fu_294 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag21_fu_294 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag22_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_16) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag22_fu_282 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag22_fu_282 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag23_fu_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_17) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag23_fu_270 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag23_fu_270 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag24_fu_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_18) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag24_fu_258 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag24_fu_258 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag25_fu_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_19) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag25_fu_246 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag25_fu_246 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag26_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag26_fu_234 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag26_fu_234 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag27_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag27_fu_222 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag27_fu_222 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag28_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag28_fu_210 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag28_fu_210 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag29_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag29_fu_198 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag29_fu_198 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag2_fu_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag2_fu_410 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag2_fu_410 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag30_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag30_fu_186 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag30_fu_186 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag31_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag31_fu_174 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag31_fu_174 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag3_fu_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag3_fu_402 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag3_fu_402 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag4_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag4_fu_194 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag4_fu_194 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag5_fu_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag5_fu_390 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag5_fu_390 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag6_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag6_fu_386 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag6_fu_386 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag7_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag7_fu_378 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag7_fu_378 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag8_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag8_fu_218 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag8_fu_218 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag9_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag9_fu_366 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag9_fu_366 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag_fu_170 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag_fu_170 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer10_s_fu_418 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer11_s_fu_406 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer12_s_fu_394 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer13_s_fu_382 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer14_s_fu_370 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer155_fu_358 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer165_fu_346 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer16_s_fu_206 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer17_s_fu_334 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer18_s_fu_322 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_13) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer19_s_fu_310 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_14) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer20_s_fu_298 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_15) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer21_s_fu_286 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_16) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer22_s_fu_274 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_17) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer23_s_fu_262 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_18) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer24_s_fu_250 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_19) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer25_s_fu_238 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer26_s_fu_226 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer27_s_fu_214 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer28_s_fu_202 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer299_fu_190 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer2_s_fu_230 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer30_s_fu_178 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer31_s_fu_166 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer3_s_fu_254 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer4_s_fu_278 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer5_s_fu_302 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer6_s_fu_326 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer7_s_fu_350 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer8_s_fu_374 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer9_s_fu_398 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_2409 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_beta_buffer_s_fu_182 <= local_beta_buffer_ca_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    tmp_cast_reg_2390(3 downto 0) <= tmp_cast_fu_669_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_837_p2 = ap_const_lv1_1))) then
                tmp_reg_2409 <= tmp_fu_853_p1;
            end if;
        end if;
    end process;
    tmp_cast_reg_2390(30 downto 4) <= "000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_s_fu_837_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_s_fu_837_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_s_fu_837_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    InterSubBeta_4b_V_fu_665_p1 <= InterSubBeta(4 - 1 downto 0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_s_fu_837_p2)
    begin
        if ((tmp_s_fu_837_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= local_beta_buffer_0_1_fu_1388_p3;
    ap_return_1 <= local_beta_buffer_1_1_fu_1395_p3;
    ap_return_10 <= local_beta_buffer_10_1_fu_1458_p3;
    ap_return_11 <= local_beta_buffer_11_1_fu_1465_p3;
    ap_return_12 <= local_beta_buffer_12_1_fu_1472_p3;
    ap_return_13 <= local_beta_buffer_13_1_fu_1479_p3;
    ap_return_14 <= local_beta_buffer_14_1_fu_1486_p3;
    ap_return_15 <= local_beta_buffer_15_1_fu_1493_p3;
    ap_return_16 <= local_beta_buffer_16_1_fu_1500_p3;
    ap_return_17 <= local_beta_buffer_17_1_fu_1507_p3;
    ap_return_18 <= local_beta_buffer_18_1_fu_1514_p3;
    ap_return_19 <= local_beta_buffer_19_1_fu_1521_p3;
    ap_return_2 <= local_beta_buffer_2_1_fu_1402_p3;
    ap_return_20 <= local_beta_buffer_20_1_fu_1528_p3;
    ap_return_21 <= local_beta_buffer_21_1_fu_1535_p3;
    ap_return_22 <= local_beta_buffer_22_1_fu_1542_p3;
    ap_return_23 <= local_beta_buffer_23_1_fu_1549_p3;
    ap_return_24 <= local_beta_buffer_24_1_fu_1556_p3;
    ap_return_25 <= local_beta_buffer_25_1_fu_1563_p3;
    ap_return_26 <= local_beta_buffer_26_1_fu_1570_p3;
    ap_return_27 <= local_beta_buffer_27_1_fu_1577_p3;
    ap_return_28 <= local_beta_buffer_28_1_fu_1584_p3;
    ap_return_29 <= local_beta_buffer_29_1_fu_1591_p3;
    ap_return_3 <= local_beta_buffer_3_1_fu_1409_p3;
    ap_return_30 <= local_beta_buffer_30_1_fu_1598_p3;
    ap_return_31 <= local_beta_buffer_31_1_fu_1605_p3;
    ap_return_4 <= local_beta_buffer_4_1_fu_1416_p3;
    ap_return_5 <= local_beta_buffer_5_1_fu_1423_p3;
    ap_return_6 <= local_beta_buffer_6_1_fu_1430_p3;
    ap_return_7 <= local_beta_buffer_7_1_fu_1437_p3;
    ap_return_8 <= local_beta_buffer_8_1_fu_1444_p3;
    ap_return_9 <= local_beta_buffer_9_1_fu_1451_p3;
    beta_buffer_address0 <= tmp_59_fu_848_p1(10 - 1 downto 0);

    beta_buffer_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            beta_buffer_ce0 <= ap_const_logic_1;
        else 
            beta_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    local_beta_buffer_0_1_fu_1388_p3 <= 
        local_beta_buffer_s_fu_182 when (write_flag_fu_170(0) = '1') else 
        local_beta_buffer_0;
    local_beta_buffer_10_1_fu_1458_p3 <= 
        local_beta_buffer10_s_fu_418 when (write_flag2_fu_410(0) = '1') else 
        local_beta_buffer_10;
    local_beta_buffer_11_1_fu_1465_p3 <= 
        local_beta_buffer11_s_fu_406 when (write_flag1_fu_414(0) = '1') else 
        local_beta_buffer_11;
    local_beta_buffer_12_1_fu_1472_p3 <= 
        local_beta_buffer12_s_fu_394 when (write_flag3_fu_402(0) = '1') else 
        local_beta_buffer_12;
    local_beta_buffer_13_1_fu_1479_p3 <= 
        local_beta_buffer13_s_fu_382 when (write_flag5_fu_390(0) = '1') else 
        local_beta_buffer_13;
    local_beta_buffer_14_1_fu_1486_p3 <= 
        local_beta_buffer14_s_fu_370 when (write_flag7_fu_378(0) = '1') else 
        local_beta_buffer_14;
    local_beta_buffer_15_1_fu_1493_p3 <= 
        local_beta_buffer155_fu_358 when (write_flag9_fu_366(0) = '1') else 
        local_beta_buffer_15;
    local_beta_buffer_16_1_fu_1500_p3 <= 
        local_beta_buffer165_fu_346 when (write_flag12_fu_354(0) = '1') else 
        local_beta_buffer_16;
    local_beta_buffer_17_1_fu_1507_p3 <= 
        local_beta_buffer17_s_fu_334 when (write_flag13_fu_342(0) = '1') else 
        local_beta_buffer_17;
    local_beta_buffer_18_1_fu_1514_p3 <= 
        local_beta_buffer18_s_fu_322 when (write_flag16_fu_330(0) = '1') else 
        local_beta_buffer_18;
    local_beta_buffer_19_1_fu_1521_p3 <= 
        local_beta_buffer19_s_fu_310 when (write_flag18_fu_318(0) = '1') else 
        local_beta_buffer_19;
    local_beta_buffer_1_1_fu_1395_p3 <= 
        local_beta_buffer16_s_fu_206 when (write_flag4_fu_194(0) = '1') else 
        local_beta_buffer_1;
    local_beta_buffer_20_1_fu_1528_p3 <= 
        local_beta_buffer20_s_fu_298 when (write_flag20_fu_306(0) = '1') else 
        local_beta_buffer_20;
    local_beta_buffer_21_1_fu_1535_p3 <= 
        local_beta_buffer21_s_fu_286 when (write_flag21_fu_294(0) = '1') else 
        local_beta_buffer_21;
    local_beta_buffer_22_1_fu_1542_p3 <= 
        local_beta_buffer22_s_fu_274 when (write_flag22_fu_282(0) = '1') else 
        local_beta_buffer_22;
    local_beta_buffer_23_1_fu_1549_p3 <= 
        local_beta_buffer23_s_fu_262 when (write_flag23_fu_270(0) = '1') else 
        local_beta_buffer_23;
    local_beta_buffer_24_1_fu_1556_p3 <= 
        local_beta_buffer24_s_fu_250 when (write_flag24_fu_258(0) = '1') else 
        local_beta_buffer_24;
    local_beta_buffer_25_1_fu_1563_p3 <= 
        local_beta_buffer25_s_fu_238 when (write_flag25_fu_246(0) = '1') else 
        local_beta_buffer_25;
    local_beta_buffer_26_1_fu_1570_p3 <= 
        local_beta_buffer26_s_fu_226 when (write_flag26_fu_234(0) = '1') else 
        local_beta_buffer_26;
    local_beta_buffer_27_1_fu_1577_p3 <= 
        local_beta_buffer27_s_fu_214 when (write_flag27_fu_222(0) = '1') else 
        local_beta_buffer_27;
    local_beta_buffer_28_1_fu_1584_p3 <= 
        local_beta_buffer28_s_fu_202 when (write_flag28_fu_210(0) = '1') else 
        local_beta_buffer_28;
    local_beta_buffer_29_1_fu_1591_p3 <= 
        local_beta_buffer299_fu_190 when (write_flag29_fu_198(0) = '1') else 
        local_beta_buffer_29;
    local_beta_buffer_2_1_fu_1402_p3 <= 
        local_beta_buffer2_s_fu_230 when (write_flag8_fu_218(0) = '1') else 
        local_beta_buffer_2;
    local_beta_buffer_30_1_fu_1598_p3 <= 
        local_beta_buffer30_s_fu_178 when (write_flag30_fu_186(0) = '1') else 
        local_beta_buffer_30;
    local_beta_buffer_31_1_fu_1605_p3 <= 
        local_beta_buffer31_s_fu_166 when (write_flag31_fu_174(0) = '1') else 
        local_beta_buffer_31;
    local_beta_buffer_3_1_fu_1409_p3 <= 
        local_beta_buffer3_s_fu_254 when (write_flag11_fu_242(0) = '1') else 
        local_beta_buffer_3;
    local_beta_buffer_4_1_fu_1416_p3 <= 
        local_beta_buffer4_s_fu_278 when (write_flag14_fu_266(0) = '1') else 
        local_beta_buffer_4;
    local_beta_buffer_5_1_fu_1423_p3 <= 
        local_beta_buffer5_s_fu_302 when (write_flag17_fu_290(0) = '1') else 
        local_beta_buffer_5;
    local_beta_buffer_6_1_fu_1430_p3 <= 
        local_beta_buffer6_s_fu_326 when (write_flag19_fu_314(0) = '1') else 
        local_beta_buffer_6;
    local_beta_buffer_7_1_fu_1437_p3 <= 
        local_beta_buffer7_s_fu_350 when (write_flag15_fu_338(0) = '1') else 
        local_beta_buffer_7;
    local_beta_buffer_8_1_fu_1444_p3 <= 
        local_beta_buffer8_s_fu_374 when (write_flag10_fu_362(0) = '1') else 
        local_beta_buffer_8;
    local_beta_buffer_9_1_fu_1451_p3 <= 
        local_beta_buffer9_s_fu_398 when (write_flag6_fu_386(0) = '1') else 
        local_beta_buffer_9;
        local_beta_buffer_ca_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(local_beta_buffer_fu_867_p2),32));

    local_beta_buffer_fu_867_p2 <= std_logic_vector(shift_left(unsigned(tmp_92_cast_fu_863_p1),to_integer(unsigned('0' & tmp_cast_reg_2390(31-1 downto 0)))));
    offset_1_fu_857_p2 <= std_logic_vector(signed(offset_reg_645) + signed(ap_const_lv32_1));
    tm_2_fu_842_p2 <= std_logic_vector(unsigned(tm_reg_654) + unsigned(ap_const_lv31_1));
    tm_cast_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tm_reg_654),32));
        tmp_59_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(offset_reg_645),64));

        tmp_92_cast_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(beta_buffer_q0),31));

    tmp_cast_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(InterSubBeta_4b_V_fu_665_p1),31));
    tmp_fu_853_p1 <= tm_reg_654(5 - 1 downto 0);
    tmp_s_fu_837_p2 <= "1" when (signed(tm_cast_fu_833_p1) < signed(TM_MIN)) else "0";
end behav;
