-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity copy_input2buf_row is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_buffer_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_0_ce0 : OUT STD_LOGIC;
    input_buffer_0_we0 : OUT STD_LOGIC;
    input_buffer_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_1_ce0 : OUT STD_LOGIC;
    input_buffer_1_we0 : OUT STD_LOGIC;
    input_buffer_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_2_ce0 : OUT STD_LOGIC;
    input_buffer_2_we0 : OUT STD_LOGIC;
    input_buffer_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buffer_3_ce0 : OUT STD_LOGIC;
    input_buffer_3_we0 : OUT STD_LOGIC;
    input_buffer_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    row_len_V : IN STD_LOGIC_VECTOR (5 downto 0);
    col_len_V : IN STD_LOGIC_VECTOR (5 downto 0);
    RowSub_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ColSub_V : IN STD_LOGIC_VECTOR (0 downto 0);
    input_memcpy_buffer_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    input_memcpy_buffer_ce0 : OUT STD_LOGIC;
    input_memcpy_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_memcpy_buffer1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    input_memcpy_buffer1_ce0 : OUT STD_LOGIC;
    input_memcpy_buffer1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_memcpy_buffer2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    input_memcpy_buffer2_ce0 : OUT STD_LOGIC;
    input_memcpy_buffer2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_memcpy_buffer3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    input_memcpy_buffer3_ce0 : OUT STD_LOGIC;
    input_memcpy_buffer3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    RowBeginByte_0_V_re : IN STD_LOGIC_VECTOR (0 downto 0);
    RowBeginByte_1_V_re : IN STD_LOGIC_VECTOR (0 downto 0);
    RowBeginByte_2_V_re : IN STD_LOGIC_VECTOR (0 downto 0);
    RowBeginByte_3_V_re : IN STD_LOGIC_VECTOR (0 downto 0);
    TCol : IN STD_LOGIC_VECTOR (7 downto 0);
    LayerType : IN STD_LOGIC_VECTOR (1 downto 0);
    next_t2_0_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read15 : IN STD_LOGIC;
    enable : IN STD_LOGIC;
    T2Rate_V : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of copy_input2buf_row is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv16_8001 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal t2_local_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal indvar_flatten_reg_412 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_7_reg_423 : STD_LOGIC_VECTOR (5 downto 0);
    signal t3_reg_432 : STD_LOGIC_VECTOR (7 downto 0);
    signal enable_read_read_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t2r_V_fu_453_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal t2r_V_reg_1464 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1472 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1477 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_fu_505_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal phitmp_reg_1482 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_s_fu_536_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_s_reg_1488 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_94_cast_fu_549_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_94_cast_reg_1496 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_95_cast_fu_552_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_95_cast_reg_1502 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_95_cast_cast_fu_555_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_95_cast_cast_reg_1507 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_cast_cast_fu_570_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_cast_cast_reg_1512 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_fu_580_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_2_reg_1517 : STD_LOGIC_VECTOR (6 downto 0);
    signal bound_fu_610_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal bound_reg_1523 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond_flatten_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1528 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_647_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal t3_mid2_fu_664_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal t3_mid2_reg_1537 : STD_LOGIC_VECTOR (7 downto 0);
    signal t3_mid2_reg_1537_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_mid2_v_fu_681_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_77_mid2_v_reg_1543 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_77_mid2_v_reg_1543_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_65_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_1549 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1554 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1554_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t3_1_fu_751_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read3_cnt_V_3_1_fu_801_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read3_cnt_V_3_1_reg_1563 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read2_cnt_V_2_1_fu_808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read2_cnt_V_2_1_reg_1568 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read1_cnt_V_1_1_fu_815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read1_cnt_V_1_1_reg_1573 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read_cnt_V_0_1_fu_822_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read_cnt_V_0_1_reg_1578 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_3_1_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_3_1_reg_1583 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_2_1_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_2_1_reg_1589 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_1_1_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_1_1_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_0_1_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_NextInputFlag_0_1_reg_1601 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_p_7_phi_fu_426_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_67_fu_859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_68_fu_878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_cast_fu_1186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_cast_fu_1267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal IsRowInit_flag_1_fu_108 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_IsRowInit_flag_1_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_mmcpy_offset_0_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_0_3_fu_870_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_1_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_1_3_fu_889_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_2_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_2_3_fu_908_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_3_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_3_3_fu_927_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal NextInputFlag_0_1_fu_128 : STD_LOGIC_VECTOR (0 downto 0);
    signal NextInputFlag_1_1_fu_132 : STD_LOGIC_VECTOR (0 downto 0);
    signal NextInputFlag_2_1_fu_136 : STD_LOGIC_VECTOR (0 downto 0);
    signal NextInputFlag_3_1_fu_140 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_0_V_1_fu_144 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_0_V_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_1_V_1_fu_148 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_1_V_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_2_V_1_fu_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_2_V_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_3_V_1_fu_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_3_V_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_array_0_0_fu_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_0_0_1_fu_1078_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_0_1_2_fu_164 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_0_1_1_fu_1071_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_1_0_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_1_0_1_fu_1106_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_1_1_2_fu_172 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_1_1_1_fu_1099_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_2_0_fu_176 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_2_0_1_fu_1134_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_2_1_2_fu_180 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_2_1_1_fu_1127_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_3_0_fu_184 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_3_0_1_fu_1162_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_3_1_2_fu_188 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_3_1_1_fu_1155_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_load_phi_fu_1169_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_load_1_p_fu_1194_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_load_2_p_fu_1202_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_load_3_p_fu_1210_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal initial_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal T2R_V_1_fu_473_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal T2R_V_fu_467_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal T2R_V_1_fu_473_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs_V_fu_485_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_fu_481_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_fu_493_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_29_fu_489_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal rhs_V_7_fu_561_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_9_fu_558_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_22_fu_564_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal rhs_V_1_fu_577_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_2_fu_574_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal T2R_bound_V_fu_543_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_60_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal umax1_fu_591_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_61_fu_598_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal bound_fu_610_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal bound_fu_610_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_99_cast4_fu_616_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ult_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t2r_V_1_fu_653_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_99_cast4_mid1_fu_672_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ult1_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_mid1_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_mid1_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult2_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t3_cast_fu_714_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rev2_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_mid2_fu_706_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal IsRowInit_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_859_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_0_2_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_0_2_fu_864_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_0_3_fu_870_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_878_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_1_2_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_1_2_fu_883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_1_3_fu_889_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_897_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_2_2_fu_902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_2_2_fu_902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_2_3_fu_908_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_916_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_3_2_fu_921_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_3_2_fu_921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_mmcpy_offset_3_3_fu_927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_1027_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_array_0_1_fu_1061_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_0_0_2_fu_1057_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_1_1_fu_1089_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_1_0_2_fu_1085_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_2_1_fu_1117_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_2_0_2_fu_1113_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_3_1_fu_1145_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_array_3_0_2_fu_1141_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_cast_fu_1177_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_63_fu_1027_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_fu_1180_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_69_cast_fu_1258_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_66_fu_1261_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_610_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal bound_fu_610_p10 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_63_fu_1027_p00 : STD_LOGIC_VECTOR (11 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    IsRowInit_flag_1_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (brmerge_reg_1554 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                IsRowInit_flag_1_fu_108 <= p_IsRowInit_flag_1_fu_853_p2;
            elsif (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                IsRowInit_flag_1_fu_108 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_642_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_412 <= indvar_flatten_next_fu_647_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_412 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    input_mmcpy_offset_0_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (brmerge_reg_1554 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                input_mmcpy_offset_0_fu_112 <= input_mmcpy_offset_0_3_fu_870_p3;
            elsif (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                input_mmcpy_offset_0_fu_112 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    input_mmcpy_offset_1_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (brmerge_reg_1554 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                input_mmcpy_offset_1_fu_116 <= input_mmcpy_offset_1_3_fu_889_p3;
            elsif (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                input_mmcpy_offset_1_fu_116 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    input_mmcpy_offset_2_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (brmerge_reg_1554 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                input_mmcpy_offset_2_fu_120 <= input_mmcpy_offset_2_3_fu_908_p3;
            elsif (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                input_mmcpy_offset_2_fu_120 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    input_mmcpy_offset_3_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (brmerge_reg_1554 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                input_mmcpy_offset_3_fu_124 <= input_mmcpy_offset_3_3_fu_927_p3;
            elsif (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                input_mmcpy_offset_3_fu_124 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_7_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1528 = ap_const_lv1_0))) then 
                p_7_reg_423 <= tmp_77_mid2_v_reg_1543;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_7_reg_423 <= t2r_V_reg_1464;
            end if; 
        end if;
    end process;

    t3_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_642_p2 = ap_const_lv1_0))) then 
                t3_reg_432 <= t3_1_fu_751_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                t3_reg_432 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (brmerge_reg_1554 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                NextInputFlag_0_1_fu_128 <= p_read_cnt_V_0_1_fu_822_p3;
                NextInputFlag_1_1_fu_132 <= p_read1_cnt_V_1_1_fu_815_p3;
                NextInputFlag_2_1_fu_136 <= p_read2_cnt_V_2_1_fu_808_p3;
                NextInputFlag_3_1_fu_140 <= p_read3_cnt_V_3_1_fu_801_p3;
                cnt_0_V_1_fu_144 <= cnt_0_V_fu_935_p2;
                cnt_1_V_1_fu_148 <= cnt_1_V_fu_941_p2;
                cnt_2_V_1_fu_152 <= cnt_2_V_fu_947_p2;
                cnt_3_V_1_fu_156 <= cnt_3_V_fu_953_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_1523 <= bound_fu_610_p2;
                    p_s_reg_1488(0) <= p_s_fu_536_p3(0);    p_s_reg_1488(15) <= p_s_fu_536_p3(15);
                r_V_2_reg_1517 <= r_V_2_fu_580_p2;
                    tmp_94_cast_reg_1496(0) <= tmp_94_cast_fu_549_p1(0);
                    tmp_95_cast_cast_reg_1507(0) <= tmp_95_cast_cast_fu_555_p1(0);
                    tmp_95_cast_reg_1502(0) <= tmp_95_cast_fu_552_p1(0);
                    tmp_96_cast_cast_reg_1512(6 downto 0) <= tmp_96_cast_cast_fu_570_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_642_p2 = ap_const_lv1_0))) then
                brmerge_reg_1554 <= brmerge_fu_745_p2;
                t3_mid2_reg_1537 <= t3_mid2_fu_664_p3;
                tmp_65_reg_1549 <= tmp_65_fu_734_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1554_pp0_iter1_reg <= brmerge_reg_1554;
                exitcond_flatten_reg_1528 <= exitcond_flatten_fu_642_p2;
                t3_mid2_reg_1537_pp0_iter1_reg <= t3_mid2_reg_1537;
                tmp_77_mid2_v_reg_1543_pp0_iter1_reg <= tmp_77_mid2_v_reg_1543;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                input_array_0_0_fu_160 <= input_array_0_0_1_fu_1078_p3;
                input_array_0_1_2_fu_164 <= input_array_0_1_1_fu_1071_p3;
                input_array_1_0_fu_168 <= input_array_1_0_1_fu_1106_p3;
                input_array_1_1_2_fu_172 <= input_array_1_1_1_fu_1099_p3;
                input_array_2_0_fu_176 <= input_array_2_0_1_fu_1134_p3;
                input_array_2_1_2_fu_180 <= input_array_2_1_1_fu_1127_p3;
                input_array_3_0_fu_184 <= input_array_3_0_1_fu_1162_p3;
                input_array_3_1_2_fu_188 <= input_array_3_1_1_fu_1155_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (brmerge_reg_1554 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_NextInputFlag_0_1_reg_1601 <= p_NextInputFlag_0_1_fu_847_p2;
                p_NextInputFlag_1_1_reg_1595 <= p_NextInputFlag_1_1_fu_841_p2;
                p_NextInputFlag_2_1_reg_1589 <= p_NextInputFlag_2_1_fu_835_p2;
                p_NextInputFlag_3_1_reg_1583 <= p_NextInputFlag_3_1_fu_829_p2;
                p_read1_cnt_V_1_1_reg_1573 <= p_read1_cnt_V_1_1_fu_815_p3;
                p_read2_cnt_V_2_1_reg_1568 <= p_read2_cnt_V_2_1_fu_808_p3;
                p_read3_cnt_V_3_1_reg_1563 <= p_read3_cnt_V_3_1_fu_801_p3;
                p_read_cnt_V_0_1_reg_1578 <= p_read_cnt_V_0_1_fu_822_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                phitmp_reg_1482 <= phitmp_fu_505_p2;
                t2r_V_reg_1464 <= t2r_V_fu_453_p3;
                tmp_reg_1472 <= tmp_fu_461_p2;
                tmp_s_reg_1477 <= tmp_s_fu_499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                t2_local_V <= phitmp_reg_1482;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_642_p2 = ap_const_lv1_0))) then
                tmp_77_mid2_v_reg_1543 <= tmp_77_mid2_v_fu_681_p3;
            end if;
        end if;
    end process;
    p_s_reg_1488(14 downto 1) <= "00000000000000";
    tmp_94_cast_reg_1496(5 downto 1) <= "00000";
    tmp_95_cast_reg_1502(8 downto 1) <= "00000000";
    tmp_95_cast_cast_reg_1507(7 downto 1) <= "0000000";
    tmp_96_cast_cast_reg_1512(7) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, enable_read_read_fu_198_p2, exitcond_flatten_fu_642_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((ap_start = ap_const_logic_1) and (enable_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_642_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_642_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    IsRowInit_fu_760_p2 <= (tmp_65_reg_1549 and IsRowInit_flag_1_fu_108);
    T2R_V_1_fu_473_p0 <= (0=>p_read15, others=>'-');
    T2R_V_1_fu_473_p3 <= 
        T2Rate_V when (T2R_V_1_fu_473_p0(0) = '1') else 
        T2R_V_fu_467_p2;
    T2R_V_fu_467_p2 <= std_logic_vector(unsigned(T2Rate_V) + unsigned(ap_const_lv3_1));
    T2R_bound_V_fu_543_p3 <= 
        phitmp_reg_1482 when (tmp_s_reg_1477(0) = '1') else 
        ap_const_lv6_35;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_fu_642_p2)
    begin
        if ((exitcond_flatten_fu_642_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_7_phi_fu_426_p4_assign_proc : process(p_7_reg_423, exitcond_flatten_reg_1528, ap_CS_fsm_pp0_stage0, tmp_77_mid2_v_reg_1543, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1528 = ap_const_lv1_0))) then 
            ap_phi_mux_p_7_phi_fu_426_p4 <= tmp_77_mid2_v_reg_1543;
        else 
            ap_phi_mux_p_7_phi_fu_426_p4 <= p_7_reg_423;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_610_p0 <= bound_fu_610_p00(6 - 1 downto 0);
    bound_fu_610_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_598_p2),14));
    bound_fu_610_p1 <= bound_fu_610_p10(8 - 1 downto 0);
    bound_fu_610_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(TCol),14));
    bound_fu_610_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_610_p0) * unsigned(bound_fu_610_p1), 14));
    brmerge_fu_745_p2 <= (tmp2_fu_739_p2 or tmp1_mid2_fu_706_p3);
    cnt_0_V_fu_935_p2 <= (p_read_cnt_V_0_1_fu_822_p3 xor ap_const_lv1_1);
    cnt_1_V_fu_941_p2 <= (p_read1_cnt_V_1_1_fu_815_p3 xor ap_const_lv1_1);
    cnt_2_V_fu_947_p2 <= (p_read2_cnt_V_2_1_fu_808_p3 xor ap_const_lv1_1);
    cnt_3_V_fu_953_p2 <= (p_read3_cnt_V_3_1_fu_801_p3 xor ap_const_lv1_1);
    enable_read_read_fu_198_p2 <= (0=>enable, others=>'-');
    exitcond_flatten_fu_642_p2 <= "1" when (indvar_flatten_reg_412 = bound_reg_1523) else "0";
    exitcond_fu_659_p2 <= "1" when (t3_reg_432 = TCol) else "0";
    indvar_flatten_next_fu_647_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_412) + unsigned(ap_const_lv14_1));
    initial_fu_443_p2 <= "1" when (next_t2_0_V_read = ap_const_lv6_0) else "0";
    input_array_0_0_1_fu_1078_p3 <= 
        input_array_0_0_2_fu_1057_p1 when (p_NextInputFlag_0_1_reg_1601(0) = '1') else 
        input_array_0_0_fu_160;
    input_array_0_0_2_fu_1057_p1 <= input_memcpy_buffer_q0(16 - 1 downto 0);
    input_array_0_1_1_fu_1071_p3 <= 
        input_array_0_1_fu_1061_p4 when (p_NextInputFlag_0_1_reg_1601(0) = '1') else 
        input_array_0_1_2_fu_164;
    input_array_0_1_fu_1061_p4 <= input_memcpy_buffer_q0(31 downto 16);
    input_array_1_0_1_fu_1106_p3 <= 
        input_array_1_0_2_fu_1085_p1 when (p_NextInputFlag_1_1_reg_1595(0) = '1') else 
        input_array_1_0_fu_168;
    input_array_1_0_2_fu_1085_p1 <= input_memcpy_buffer1_q0(16 - 1 downto 0);
    input_array_1_1_1_fu_1099_p3 <= 
        input_array_1_1_fu_1089_p4 when (p_NextInputFlag_1_1_reg_1595(0) = '1') else 
        input_array_1_1_2_fu_172;
    input_array_1_1_fu_1089_p4 <= input_memcpy_buffer1_q0(31 downto 16);
    input_array_2_0_1_fu_1134_p3 <= 
        input_array_2_0_2_fu_1113_p1 when (p_NextInputFlag_2_1_reg_1589(0) = '1') else 
        input_array_2_0_fu_176;
    input_array_2_0_2_fu_1113_p1 <= input_memcpy_buffer2_q0(16 - 1 downto 0);
    input_array_2_1_1_fu_1127_p3 <= 
        input_array_2_1_fu_1117_p4 when (p_NextInputFlag_2_1_reg_1589(0) = '1') else 
        input_array_2_1_2_fu_180;
    input_array_2_1_fu_1117_p4 <= input_memcpy_buffer2_q0(31 downto 16);
    input_array_3_0_1_fu_1162_p3 <= 
        input_array_3_0_2_fu_1141_p1 when (p_NextInputFlag_3_1_reg_1583(0) = '1') else 
        input_array_3_0_fu_184;
    input_array_3_0_2_fu_1141_p1 <= input_memcpy_buffer3_q0(16 - 1 downto 0);
    input_array_3_1_1_fu_1155_p3 <= 
        input_array_3_1_fu_1145_p4 when (p_NextInputFlag_3_1_reg_1583(0) = '1') else 
        input_array_3_1_2_fu_188;
    input_array_3_1_fu_1145_p4 <= input_memcpy_buffer3_q0(31 downto 16);
    input_array_load_1_p_fu_1194_p3 <= 
        input_array_1_1_1_fu_1099_p3 when (p_read1_cnt_V_1_1_reg_1573(0) = '1') else 
        input_array_1_0_1_fu_1106_p3;
    input_array_load_2_p_fu_1202_p3 <= 
        input_array_2_1_1_fu_1127_p3 when (p_read2_cnt_V_2_1_reg_1568(0) = '1') else 
        input_array_2_0_1_fu_1134_p3;
    input_array_load_3_p_fu_1210_p3 <= 
        input_array_3_1_1_fu_1155_p3 when (p_read3_cnt_V_3_1_reg_1563(0) = '1') else 
        input_array_3_0_1_fu_1162_p3;
    input_array_load_phi_fu_1169_p3 <= 
        input_array_0_1_1_fu_1071_p3 when (p_read_cnt_V_0_1_reg_1578(0) = '1') else 
        input_array_0_0_1_fu_1078_p3;

    input_buffer_0_address0_assign_proc : process(brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, tmp_76_cast_fu_1186_p1, tmp_70_cast_fu_1267_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_0_address0 <= tmp_70_cast_fu_1267_p1(12 - 1 downto 0);
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_0_address0 <= tmp_76_cast_fu_1186_p1(12 - 1 downto 0);
            else 
                input_buffer_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            input_buffer_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_0_ce0 <= ap_const_logic_1;
        else 
            input_buffer_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_0_d0_assign_proc : process(p_s_reg_1488, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, input_array_load_phi_fu_1169_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_0_d0 <= p_s_reg_1488;
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_0_d0 <= input_array_load_phi_fu_1169_p3;
            else 
                input_buffer_0_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            input_buffer_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_0_we0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_0_we0 <= ap_const_logic_1;
        else 
            input_buffer_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_address0_assign_proc : process(brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, tmp_76_cast_fu_1186_p1, tmp_70_cast_fu_1267_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_1_address0 <= tmp_70_cast_fu_1267_p1(12 - 1 downto 0);
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_1_address0 <= tmp_76_cast_fu_1186_p1(12 - 1 downto 0);
            else 
                input_buffer_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            input_buffer_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_1_ce0 <= ap_const_logic_1;
        else 
            input_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_d0_assign_proc : process(p_s_reg_1488, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, input_array_load_1_p_fu_1194_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_1_d0 <= p_s_reg_1488;
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_1_d0 <= input_array_load_1_p_fu_1194_p3;
            else 
                input_buffer_1_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            input_buffer_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_1_we0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_1_we0 <= ap_const_logic_1;
        else 
            input_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_address0_assign_proc : process(brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, tmp_76_cast_fu_1186_p1, tmp_70_cast_fu_1267_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_2_address0 <= tmp_70_cast_fu_1267_p1(12 - 1 downto 0);
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_2_address0 <= tmp_76_cast_fu_1186_p1(12 - 1 downto 0);
            else 
                input_buffer_2_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            input_buffer_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_2_ce0 <= ap_const_logic_1;
        else 
            input_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_d0_assign_proc : process(p_s_reg_1488, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, input_array_load_2_p_fu_1202_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_2_d0 <= p_s_reg_1488;
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_2_d0 <= input_array_load_2_p_fu_1202_p3;
            else 
                input_buffer_2_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            input_buffer_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_2_we0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_2_we0 <= ap_const_logic_1;
        else 
            input_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_address0_assign_proc : process(brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, tmp_76_cast_fu_1186_p1, tmp_70_cast_fu_1267_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_3_address0 <= tmp_70_cast_fu_1267_p1(12 - 1 downto 0);
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_3_address0 <= tmp_76_cast_fu_1186_p1(12 - 1 downto 0);
            else 
                input_buffer_3_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            input_buffer_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_3_ce0 <= ap_const_logic_1;
        else 
            input_buffer_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_d0_assign_proc : process(p_s_reg_1488, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, input_array_load_3_p_fu_1210_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) then 
                input_buffer_3_d0 <= p_s_reg_1488;
            elsif ((brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0)) then 
                input_buffer_3_d0 <= input_array_load_3_p_fu_1210_p3;
            else 
                input_buffer_3_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            input_buffer_3_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buffer_3_we0_assign_proc : process(ap_block_pp0_stage0_11001, brmerge_reg_1554_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (brmerge_reg_1554_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_buffer_3_we0 <= ap_const_logic_1;
        else 
            input_buffer_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    input_memcpy_buffer1_address0 <= tmp_68_fu_878_p1(5 - 1 downto 0);

    input_memcpy_buffer1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_memcpy_buffer1_ce0 <= ap_const_logic_1;
        else 
            input_memcpy_buffer1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    input_memcpy_buffer2_address0 <= tmp_69_fu_897_p1(5 - 1 downto 0);

    input_memcpy_buffer2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_memcpy_buffer2_ce0 <= ap_const_logic_1;
        else 
            input_memcpy_buffer2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    input_memcpy_buffer3_address0 <= tmp_70_fu_916_p1(5 - 1 downto 0);

    input_memcpy_buffer3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_memcpy_buffer3_ce0 <= ap_const_logic_1;
        else 
            input_memcpy_buffer3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    input_memcpy_buffer_address0 <= tmp_67_fu_859_p1(5 - 1 downto 0);

    input_memcpy_buffer_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            input_memcpy_buffer_ce0 <= ap_const_logic_1;
        else 
            input_memcpy_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    input_mmcpy_offset_0_2_fu_864_p1 <= input_mmcpy_offset_0_fu_112;
    input_mmcpy_offset_0_2_fu_864_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(input_mmcpy_offset_0_2_fu_864_p1));
    input_mmcpy_offset_0_3_fu_870_p2 <= input_mmcpy_offset_0_fu_112;
    input_mmcpy_offset_0_3_fu_870_p3 <= 
        input_mmcpy_offset_0_2_fu_864_p2 when (p_NextInputFlag_0_1_fu_847_p2(0) = '1') else 
        input_mmcpy_offset_0_3_fu_870_p2;
    input_mmcpy_offset_1_2_fu_883_p1 <= input_mmcpy_offset_1_fu_116;
    input_mmcpy_offset_1_2_fu_883_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(input_mmcpy_offset_1_2_fu_883_p1));
    input_mmcpy_offset_1_3_fu_889_p2 <= input_mmcpy_offset_1_fu_116;
    input_mmcpy_offset_1_3_fu_889_p3 <= 
        input_mmcpy_offset_1_2_fu_883_p2 when (p_NextInputFlag_1_1_fu_841_p2(0) = '1') else 
        input_mmcpy_offset_1_3_fu_889_p2;
    input_mmcpy_offset_2_2_fu_902_p1 <= input_mmcpy_offset_2_fu_120;
    input_mmcpy_offset_2_2_fu_902_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(input_mmcpy_offset_2_2_fu_902_p1));
    input_mmcpy_offset_2_3_fu_908_p2 <= input_mmcpy_offset_2_fu_120;
    input_mmcpy_offset_2_3_fu_908_p3 <= 
        input_mmcpy_offset_2_2_fu_902_p2 when (p_NextInputFlag_2_1_fu_835_p2(0) = '1') else 
        input_mmcpy_offset_2_3_fu_908_p2;
    input_mmcpy_offset_3_2_fu_921_p1 <= input_mmcpy_offset_3_fu_124;
    input_mmcpy_offset_3_2_fu_921_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(input_mmcpy_offset_3_2_fu_921_p1));
    input_mmcpy_offset_3_3_fu_927_p2 <= input_mmcpy_offset_3_fu_124;
    input_mmcpy_offset_3_3_fu_927_p3 <= 
        input_mmcpy_offset_3_2_fu_921_p2 when (p_NextInputFlag_3_1_fu_829_p2(0) = '1') else 
        input_mmcpy_offset_3_3_fu_927_p2;
    lhs_V_2_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_len_V),7));
    lhs_V_9_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_len_V),7));
    lhs_V_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t2r_V_fu_453_p3),7));
    p_IsRowInit_flag_1_fu_853_p2 <= (IsRowInit_fu_760_p2 xor IsRowInit_flag_1_fu_108);
    p_NextInputFlag_0_1_fu_847_p2 <= (NextInputFlag_0_1_fu_128 or IsRowInit_fu_760_p2);
    p_NextInputFlag_1_1_fu_841_p2 <= (NextInputFlag_1_1_fu_132 or IsRowInit_fu_760_p2);
    p_NextInputFlag_2_1_fu_835_p2 <= (NextInputFlag_2_1_fu_136 or IsRowInit_fu_760_p2);
    p_NextInputFlag_3_1_fu_829_p2 <= (NextInputFlag_3_1_fu_140 or IsRowInit_fu_760_p2);
    p_read1_cnt_V_1_1_fu_815_p3 <= 
        RowBeginByte_1_V_re when (IsRowInit_fu_760_p2(0) = '1') else 
        cnt_1_V_1_fu_148;
    p_read2_cnt_V_2_1_fu_808_p3 <= 
        RowBeginByte_2_V_re when (IsRowInit_fu_760_p2(0) = '1') else 
        cnt_2_V_1_fu_152;
    p_read3_cnt_V_3_1_fu_801_p3 <= 
        RowBeginByte_3_V_re when (IsRowInit_fu_760_p2(0) = '1') else 
        cnt_3_V_1_fu_156;
    p_read_cnt_V_0_1_fu_822_p3 <= 
        RowBeginByte_0_V_re when (IsRowInit_fu_760_p2(0) = '1') else 
        cnt_0_V_1_fu_144;
    p_s_fu_536_p3 <= 
        ap_const_lv16_8001 when (tmp_reg_1472(0) = '1') else 
        ap_const_lv16_0;
    phitmp_fu_505_p2 <= std_logic_vector(unsigned(tmp_29_fu_489_p1) + unsigned(t2r_V_fu_453_p3));
    r_V_22_fu_564_p2 <= std_logic_vector(unsigned(rhs_V_7_fu_561_p1) + unsigned(lhs_V_9_fu_558_p1));
    r_V_2_fu_580_p2 <= std_logic_vector(unsigned(rhs_V_1_fu_577_p1) + unsigned(lhs_V_2_fu_574_p1));
    r_V_fu_493_p2 <= std_logic_vector(unsigned(rhs_V_fu_485_p1) + unsigned(lhs_V_fu_481_p1));
    rev1_fu_694_p2 <= (ult1_fu_689_p2 xor ap_const_lv1_1);
    rev2_fu_728_p2 <= (ult2_fu_723_p2 xor ap_const_lv1_1);
    rev_fu_630_p2 <= (ult_fu_625_p2 xor ap_const_lv1_1);
    rhs_V_1_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(RowSub_V),7));
    rhs_V_7_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ColSub_V),7));
    rhs_V_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(T2R_V_1_fu_473_p3),7));
    t2r_V_1_fu_653_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_7_phi_fu_426_p4) + unsigned(ap_const_lv6_1));
    t2r_V_fu_453_p3 <= 
        ap_const_lv6_0 when (initial_fu_443_p2(0) = '1') else 
        t2_local_V;
    t3_1_fu_751_p2 <= std_logic_vector(unsigned(t3_mid2_fu_664_p3) + unsigned(ap_const_lv8_1));
    t3_cast_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t3_mid2_fu_664_p3),9));
    t3_mid2_fu_664_p3 <= 
        ap_const_lv8_0 when (exitcond_fu_659_p2(0) = '1') else 
        t3_reg_432;
    tmp1_fu_636_p2 <= (tmp_62_fu_620_p2 or rev_fu_630_p2);
    tmp1_mid1_fu_700_p2 <= (tmp_76_mid1_fu_676_p2 or rev1_fu_694_p2);
    tmp1_mid2_fu_706_p3 <= 
        tmp1_mid1_fu_700_p2 when (exitcond_fu_659_p2(0) = '1') else 
        tmp1_fu_636_p2;
    tmp2_fu_739_p2 <= (tmp_64_fu_718_p2 or rev2_fu_728_p2);
    tmp_29_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(T2R_V_1_fu_473_p3),6));
    tmp_60_fu_586_p2 <= "1" when (unsigned(t2r_V_reg_1464) > unsigned(T2R_bound_V_fu_543_p3)) else "0";
    tmp_61_fu_598_p2 <= std_logic_vector(unsigned(umax1_fu_591_p3) - unsigned(t2r_V_reg_1464));
    tmp_62_fu_620_p2 <= "1" when (unsigned(ap_phi_mux_p_7_phi_fu_426_p4) < unsigned(tmp_94_cast_reg_1496)) else "0";
    tmp_63_fu_1027_p0 <= tmp_63_fu_1027_p00(6 - 1 downto 0);
    tmp_63_fu_1027_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_mid2_v_reg_1543_pp0_iter1_reg),12));
    tmp_63_fu_1027_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_1027_p0) * unsigned(ap_const_lv12_35), 12));
    tmp_64_fu_718_p2 <= "1" when (unsigned(t3_mid2_fu_664_p3) < unsigned(tmp_95_cast_cast_reg_1507)) else "0";
    tmp_65_fu_734_p2 <= "1" when (t3_cast_fu_714_p1 = tmp_95_cast_reg_1502) else "0";
    tmp_66_fu_1261_p2 <= std_logic_vector(unsigned(tmp_63_fu_1027_p2) + unsigned(tmp_69_cast_fu_1258_p1));
    tmp_67_fu_859_p0 <= input_mmcpy_offset_0_fu_112;
        tmp_67_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_fu_859_p0),64));

    tmp_68_fu_878_p0 <= input_mmcpy_offset_1_fu_116;
        tmp_68_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_68_fu_878_p0),64));

    tmp_69_cast_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t3_mid2_reg_1537_pp0_iter1_reg),12));
    tmp_69_fu_897_p0 <= input_mmcpy_offset_2_fu_120;
        tmp_69_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_69_fu_897_p0),64));

    tmp_70_cast_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1261_p2),64));
    tmp_70_fu_916_p0 <= input_mmcpy_offset_3_fu_124;
        tmp_70_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_70_fu_916_p0),64));

    tmp_71_fu_1180_p2 <= std_logic_vector(unsigned(tmp_75_cast_fu_1177_p1) + unsigned(tmp_63_fu_1027_p2));
    tmp_75_cast_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t3_mid2_reg_1537_pp0_iter1_reg),12));
    tmp_76_cast_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_1180_p2),64));
    tmp_76_mid1_fu_676_p2 <= "1" when (unsigned(t2r_V_1_fu_653_p2) < unsigned(tmp_94_cast_reg_1496)) else "0";
    tmp_77_mid2_v_fu_681_p3 <= 
        t2r_V_1_fu_653_p2 when (exitcond_fu_659_p2(0) = '1') else 
        ap_phi_mux_p_7_phi_fu_426_p4;
    tmp_94_cast_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(RowSub_V),6));
    tmp_95_cast_cast_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ColSub_V),8));
    tmp_95_cast_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ColSub_V),9));
    tmp_96_cast_cast_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_22_fu_564_p2),8));
    tmp_99_cast4_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_7_phi_fu_426_p4),7));
    tmp_99_cast4_mid1_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t2r_V_1_fu_653_p2),7));
    tmp_fu_461_p2 <= "1" when (LayerType = ap_const_lv2_1) else "0";
    tmp_s_fu_499_p2 <= "1" when (unsigned(r_V_fu_493_p2) < unsigned(ap_const_lv7_35)) else "0";
    ult1_fu_689_p2 <= "1" when (unsigned(tmp_99_cast4_mid1_fu_672_p1) < unsigned(r_V_2_reg_1517)) else "0";
    ult2_fu_723_p2 <= "1" when (unsigned(t3_mid2_fu_664_p3) < unsigned(tmp_96_cast_cast_reg_1512)) else "0";
    ult_fu_625_p2 <= "1" when (unsigned(tmp_99_cast4_fu_616_p1) < unsigned(r_V_2_reg_1517)) else "0";
    umax1_fu_591_p3 <= 
        t2r_V_reg_1464 when (tmp_60_fu_586_p2(0) = '1') else 
        T2R_bound_V_fu_543_p3;
end behav;
