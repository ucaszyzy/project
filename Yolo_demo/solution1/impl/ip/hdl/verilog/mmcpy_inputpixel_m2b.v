// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mmcpy_inputpixel_m2b (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_input_r_AWVALID,
        m_axi_input_r_AWREADY,
        m_axi_input_r_AWADDR,
        m_axi_input_r_AWID,
        m_axi_input_r_AWLEN,
        m_axi_input_r_AWSIZE,
        m_axi_input_r_AWBURST,
        m_axi_input_r_AWLOCK,
        m_axi_input_r_AWCACHE,
        m_axi_input_r_AWPROT,
        m_axi_input_r_AWQOS,
        m_axi_input_r_AWREGION,
        m_axi_input_r_AWUSER,
        m_axi_input_r_WVALID,
        m_axi_input_r_WREADY,
        m_axi_input_r_WDATA,
        m_axi_input_r_WSTRB,
        m_axi_input_r_WLAST,
        m_axi_input_r_WID,
        m_axi_input_r_WUSER,
        m_axi_input_r_ARVALID,
        m_axi_input_r_ARREADY,
        m_axi_input_r_ARADDR,
        m_axi_input_r_ARID,
        m_axi_input_r_ARLEN,
        m_axi_input_r_ARSIZE,
        m_axi_input_r_ARBURST,
        m_axi_input_r_ARLOCK,
        m_axi_input_r_ARCACHE,
        m_axi_input_r_ARPROT,
        m_axi_input_r_ARQOS,
        m_axi_input_r_ARREGION,
        m_axi_input_r_ARUSER,
        m_axi_input_r_RVALID,
        m_axi_input_r_RREADY,
        m_axi_input_r_RDATA,
        m_axi_input_r_RLAST,
        m_axi_input_r_RID,
        m_axi_input_r_RUSER,
        m_axi_input_r_RRESP,
        m_axi_input_r_BVALID,
        m_axi_input_r_BREADY,
        m_axi_input_r_BRESP,
        m_axi_input_r_BID,
        m_axi_input_r_BUSER,
        input_offset,
        m_axi_input1_AWVALID,
        m_axi_input1_AWREADY,
        m_axi_input1_AWADDR,
        m_axi_input1_AWID,
        m_axi_input1_AWLEN,
        m_axi_input1_AWSIZE,
        m_axi_input1_AWBURST,
        m_axi_input1_AWLOCK,
        m_axi_input1_AWCACHE,
        m_axi_input1_AWPROT,
        m_axi_input1_AWQOS,
        m_axi_input1_AWREGION,
        m_axi_input1_AWUSER,
        m_axi_input1_WVALID,
        m_axi_input1_WREADY,
        m_axi_input1_WDATA,
        m_axi_input1_WSTRB,
        m_axi_input1_WLAST,
        m_axi_input1_WID,
        m_axi_input1_WUSER,
        m_axi_input1_ARVALID,
        m_axi_input1_ARREADY,
        m_axi_input1_ARADDR,
        m_axi_input1_ARID,
        m_axi_input1_ARLEN,
        m_axi_input1_ARSIZE,
        m_axi_input1_ARBURST,
        m_axi_input1_ARLOCK,
        m_axi_input1_ARCACHE,
        m_axi_input1_ARPROT,
        m_axi_input1_ARQOS,
        m_axi_input1_ARREGION,
        m_axi_input1_ARUSER,
        m_axi_input1_RVALID,
        m_axi_input1_RREADY,
        m_axi_input1_RDATA,
        m_axi_input1_RLAST,
        m_axi_input1_RID,
        m_axi_input1_RUSER,
        m_axi_input1_RRESP,
        m_axi_input1_BVALID,
        m_axi_input1_BREADY,
        m_axi_input1_BRESP,
        m_axi_input1_BID,
        m_axi_input1_BUSER,
        input1_offset,
        m_axi_input2_AWVALID,
        m_axi_input2_AWREADY,
        m_axi_input2_AWADDR,
        m_axi_input2_AWID,
        m_axi_input2_AWLEN,
        m_axi_input2_AWSIZE,
        m_axi_input2_AWBURST,
        m_axi_input2_AWLOCK,
        m_axi_input2_AWCACHE,
        m_axi_input2_AWPROT,
        m_axi_input2_AWQOS,
        m_axi_input2_AWREGION,
        m_axi_input2_AWUSER,
        m_axi_input2_WVALID,
        m_axi_input2_WREADY,
        m_axi_input2_WDATA,
        m_axi_input2_WSTRB,
        m_axi_input2_WLAST,
        m_axi_input2_WID,
        m_axi_input2_WUSER,
        m_axi_input2_ARVALID,
        m_axi_input2_ARREADY,
        m_axi_input2_ARADDR,
        m_axi_input2_ARID,
        m_axi_input2_ARLEN,
        m_axi_input2_ARSIZE,
        m_axi_input2_ARBURST,
        m_axi_input2_ARLOCK,
        m_axi_input2_ARCACHE,
        m_axi_input2_ARPROT,
        m_axi_input2_ARQOS,
        m_axi_input2_ARREGION,
        m_axi_input2_ARUSER,
        m_axi_input2_RVALID,
        m_axi_input2_RREADY,
        m_axi_input2_RDATA,
        m_axi_input2_RLAST,
        m_axi_input2_RID,
        m_axi_input2_RUSER,
        m_axi_input2_RRESP,
        m_axi_input2_BVALID,
        m_axi_input2_BREADY,
        m_axi_input2_BRESP,
        m_axi_input2_BID,
        m_axi_input2_BUSER,
        input2_offset,
        m_axi_input3_AWVALID,
        m_axi_input3_AWREADY,
        m_axi_input3_AWADDR,
        m_axi_input3_AWID,
        m_axi_input3_AWLEN,
        m_axi_input3_AWSIZE,
        m_axi_input3_AWBURST,
        m_axi_input3_AWLOCK,
        m_axi_input3_AWCACHE,
        m_axi_input3_AWPROT,
        m_axi_input3_AWQOS,
        m_axi_input3_AWREGION,
        m_axi_input3_AWUSER,
        m_axi_input3_WVALID,
        m_axi_input3_WREADY,
        m_axi_input3_WDATA,
        m_axi_input3_WSTRB,
        m_axi_input3_WLAST,
        m_axi_input3_WID,
        m_axi_input3_WUSER,
        m_axi_input3_ARVALID,
        m_axi_input3_ARREADY,
        m_axi_input3_ARADDR,
        m_axi_input3_ARID,
        m_axi_input3_ARLEN,
        m_axi_input3_ARSIZE,
        m_axi_input3_ARBURST,
        m_axi_input3_ARLOCK,
        m_axi_input3_ARCACHE,
        m_axi_input3_ARPROT,
        m_axi_input3_ARQOS,
        m_axi_input3_ARREGION,
        m_axi_input3_ARUSER,
        m_axi_input3_RVALID,
        m_axi_input3_RREADY,
        m_axi_input3_RDATA,
        m_axi_input3_RLAST,
        m_axi_input3_RID,
        m_axi_input3_RUSER,
        m_axi_input3_RRESP,
        m_axi_input3_BVALID,
        m_axi_input3_BREADY,
        m_axi_input3_BRESP,
        m_axi_input3_BID,
        m_axi_input3_BUSER,
        input3_offset,
        input_memcpy_buffer_address0,
        input_memcpy_buffer_ce0,
        input_memcpy_buffer_we0,
        input_memcpy_buffer_d0,
        input_memcpy_buffer1_address0,
        input_memcpy_buffer1_ce0,
        input_memcpy_buffer1_we0,
        input_memcpy_buffer1_d0,
        input_memcpy_buffer2_address0,
        input_memcpy_buffer2_ce0,
        input_memcpy_buffer2_we0,
        input_memcpy_buffer2_d0,
        input_memcpy_buffer3_address0,
        input_memcpy_buffer3_ce0,
        input_memcpy_buffer3_we0,
        input_memcpy_buffer3_d0,
        RowBeginByte_0_V_read,
        RowBeginByte_1_V_read,
        RowBeginByte_2_V_read,
        RowBeginByte_3_V_read,
        TN_MIN_3b_V,
        next_t2_0_V_write,
        IN_OFFSET,
        RowIncreaseLength_V,
        IHxIW_18b_V,
        ColIncreaseLength_V,
        IsRowPixel,
        enable,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_input_r_AWVALID;
input   m_axi_input_r_AWREADY;
output  [31:0] m_axi_input_r_AWADDR;
output  [0:0] m_axi_input_r_AWID;
output  [31:0] m_axi_input_r_AWLEN;
output  [2:0] m_axi_input_r_AWSIZE;
output  [1:0] m_axi_input_r_AWBURST;
output  [1:0] m_axi_input_r_AWLOCK;
output  [3:0] m_axi_input_r_AWCACHE;
output  [2:0] m_axi_input_r_AWPROT;
output  [3:0] m_axi_input_r_AWQOS;
output  [3:0] m_axi_input_r_AWREGION;
output  [0:0] m_axi_input_r_AWUSER;
output   m_axi_input_r_WVALID;
input   m_axi_input_r_WREADY;
output  [31:0] m_axi_input_r_WDATA;
output  [3:0] m_axi_input_r_WSTRB;
output   m_axi_input_r_WLAST;
output  [0:0] m_axi_input_r_WID;
output  [0:0] m_axi_input_r_WUSER;
output   m_axi_input_r_ARVALID;
input   m_axi_input_r_ARREADY;
output  [31:0] m_axi_input_r_ARADDR;
output  [0:0] m_axi_input_r_ARID;
output  [31:0] m_axi_input_r_ARLEN;
output  [2:0] m_axi_input_r_ARSIZE;
output  [1:0] m_axi_input_r_ARBURST;
output  [1:0] m_axi_input_r_ARLOCK;
output  [3:0] m_axi_input_r_ARCACHE;
output  [2:0] m_axi_input_r_ARPROT;
output  [3:0] m_axi_input_r_ARQOS;
output  [3:0] m_axi_input_r_ARREGION;
output  [0:0] m_axi_input_r_ARUSER;
input   m_axi_input_r_RVALID;
output   m_axi_input_r_RREADY;
input  [31:0] m_axi_input_r_RDATA;
input   m_axi_input_r_RLAST;
input  [0:0] m_axi_input_r_RID;
input  [0:0] m_axi_input_r_RUSER;
input  [1:0] m_axi_input_r_RRESP;
input   m_axi_input_r_BVALID;
output   m_axi_input_r_BREADY;
input  [1:0] m_axi_input_r_BRESP;
input  [0:0] m_axi_input_r_BID;
input  [0:0] m_axi_input_r_BUSER;
input  [29:0] input_offset;
output   m_axi_input1_AWVALID;
input   m_axi_input1_AWREADY;
output  [31:0] m_axi_input1_AWADDR;
output  [0:0] m_axi_input1_AWID;
output  [31:0] m_axi_input1_AWLEN;
output  [2:0] m_axi_input1_AWSIZE;
output  [1:0] m_axi_input1_AWBURST;
output  [1:0] m_axi_input1_AWLOCK;
output  [3:0] m_axi_input1_AWCACHE;
output  [2:0] m_axi_input1_AWPROT;
output  [3:0] m_axi_input1_AWQOS;
output  [3:0] m_axi_input1_AWREGION;
output  [0:0] m_axi_input1_AWUSER;
output   m_axi_input1_WVALID;
input   m_axi_input1_WREADY;
output  [31:0] m_axi_input1_WDATA;
output  [3:0] m_axi_input1_WSTRB;
output   m_axi_input1_WLAST;
output  [0:0] m_axi_input1_WID;
output  [0:0] m_axi_input1_WUSER;
output   m_axi_input1_ARVALID;
input   m_axi_input1_ARREADY;
output  [31:0] m_axi_input1_ARADDR;
output  [0:0] m_axi_input1_ARID;
output  [31:0] m_axi_input1_ARLEN;
output  [2:0] m_axi_input1_ARSIZE;
output  [1:0] m_axi_input1_ARBURST;
output  [1:0] m_axi_input1_ARLOCK;
output  [3:0] m_axi_input1_ARCACHE;
output  [2:0] m_axi_input1_ARPROT;
output  [3:0] m_axi_input1_ARQOS;
output  [3:0] m_axi_input1_ARREGION;
output  [0:0] m_axi_input1_ARUSER;
input   m_axi_input1_RVALID;
output   m_axi_input1_RREADY;
input  [31:0] m_axi_input1_RDATA;
input   m_axi_input1_RLAST;
input  [0:0] m_axi_input1_RID;
input  [0:0] m_axi_input1_RUSER;
input  [1:0] m_axi_input1_RRESP;
input   m_axi_input1_BVALID;
output   m_axi_input1_BREADY;
input  [1:0] m_axi_input1_BRESP;
input  [0:0] m_axi_input1_BID;
input  [0:0] m_axi_input1_BUSER;
input  [29:0] input1_offset;
output   m_axi_input2_AWVALID;
input   m_axi_input2_AWREADY;
output  [31:0] m_axi_input2_AWADDR;
output  [0:0] m_axi_input2_AWID;
output  [31:0] m_axi_input2_AWLEN;
output  [2:0] m_axi_input2_AWSIZE;
output  [1:0] m_axi_input2_AWBURST;
output  [1:0] m_axi_input2_AWLOCK;
output  [3:0] m_axi_input2_AWCACHE;
output  [2:0] m_axi_input2_AWPROT;
output  [3:0] m_axi_input2_AWQOS;
output  [3:0] m_axi_input2_AWREGION;
output  [0:0] m_axi_input2_AWUSER;
output   m_axi_input2_WVALID;
input   m_axi_input2_WREADY;
output  [31:0] m_axi_input2_WDATA;
output  [3:0] m_axi_input2_WSTRB;
output   m_axi_input2_WLAST;
output  [0:0] m_axi_input2_WID;
output  [0:0] m_axi_input2_WUSER;
output   m_axi_input2_ARVALID;
input   m_axi_input2_ARREADY;
output  [31:0] m_axi_input2_ARADDR;
output  [0:0] m_axi_input2_ARID;
output  [31:0] m_axi_input2_ARLEN;
output  [2:0] m_axi_input2_ARSIZE;
output  [1:0] m_axi_input2_ARBURST;
output  [1:0] m_axi_input2_ARLOCK;
output  [3:0] m_axi_input2_ARCACHE;
output  [2:0] m_axi_input2_ARPROT;
output  [3:0] m_axi_input2_ARQOS;
output  [3:0] m_axi_input2_ARREGION;
output  [0:0] m_axi_input2_ARUSER;
input   m_axi_input2_RVALID;
output   m_axi_input2_RREADY;
input  [31:0] m_axi_input2_RDATA;
input   m_axi_input2_RLAST;
input  [0:0] m_axi_input2_RID;
input  [0:0] m_axi_input2_RUSER;
input  [1:0] m_axi_input2_RRESP;
input   m_axi_input2_BVALID;
output   m_axi_input2_BREADY;
input  [1:0] m_axi_input2_BRESP;
input  [0:0] m_axi_input2_BID;
input  [0:0] m_axi_input2_BUSER;
input  [29:0] input2_offset;
output   m_axi_input3_AWVALID;
input   m_axi_input3_AWREADY;
output  [31:0] m_axi_input3_AWADDR;
output  [0:0] m_axi_input3_AWID;
output  [31:0] m_axi_input3_AWLEN;
output  [2:0] m_axi_input3_AWSIZE;
output  [1:0] m_axi_input3_AWBURST;
output  [1:0] m_axi_input3_AWLOCK;
output  [3:0] m_axi_input3_AWCACHE;
output  [2:0] m_axi_input3_AWPROT;
output  [3:0] m_axi_input3_AWQOS;
output  [3:0] m_axi_input3_AWREGION;
output  [0:0] m_axi_input3_AWUSER;
output   m_axi_input3_WVALID;
input   m_axi_input3_WREADY;
output  [31:0] m_axi_input3_WDATA;
output  [3:0] m_axi_input3_WSTRB;
output   m_axi_input3_WLAST;
output  [0:0] m_axi_input3_WID;
output  [0:0] m_axi_input3_WUSER;
output   m_axi_input3_ARVALID;
input   m_axi_input3_ARREADY;
output  [31:0] m_axi_input3_ARADDR;
output  [0:0] m_axi_input3_ARID;
output  [31:0] m_axi_input3_ARLEN;
output  [2:0] m_axi_input3_ARSIZE;
output  [1:0] m_axi_input3_ARBURST;
output  [1:0] m_axi_input3_ARLOCK;
output  [3:0] m_axi_input3_ARCACHE;
output  [2:0] m_axi_input3_ARPROT;
output  [3:0] m_axi_input3_ARQOS;
output  [3:0] m_axi_input3_ARREGION;
output  [0:0] m_axi_input3_ARUSER;
input   m_axi_input3_RVALID;
output   m_axi_input3_RREADY;
input  [31:0] m_axi_input3_RDATA;
input   m_axi_input3_RLAST;
input  [0:0] m_axi_input3_RID;
input  [0:0] m_axi_input3_RUSER;
input  [1:0] m_axi_input3_RRESP;
input   m_axi_input3_BVALID;
output   m_axi_input3_BREADY;
input  [1:0] m_axi_input3_BRESP;
input  [0:0] m_axi_input3_BID;
input  [0:0] m_axi_input3_BUSER;
input  [29:0] input3_offset;
output  [4:0] input_memcpy_buffer_address0;
output   input_memcpy_buffer_ce0;
output   input_memcpy_buffer_we0;
output  [31:0] input_memcpy_buffer_d0;
output  [4:0] input_memcpy_buffer1_address0;
output   input_memcpy_buffer1_ce0;
output   input_memcpy_buffer1_we0;
output  [31:0] input_memcpy_buffer1_d0;
output  [4:0] input_memcpy_buffer2_address0;
output   input_memcpy_buffer2_ce0;
output   input_memcpy_buffer2_we0;
output  [31:0] input_memcpy_buffer2_d0;
output  [4:0] input_memcpy_buffer3_address0;
output   input_memcpy_buffer3_ce0;
output   input_memcpy_buffer3_we0;
output  [31:0] input_memcpy_buffer3_d0;
input  [0:0] RowBeginByte_0_V_read;
input  [0:0] RowBeginByte_1_V_read;
input  [0:0] RowBeginByte_2_V_read;
input  [0:0] RowBeginByte_3_V_read;
input  [2:0] TN_MIN_3b_V;
input  [5:0] next_t2_0_V_write;
input  [29:0] IN_OFFSET;
input  [8:0] RowIncreaseLength_V;
input  [17:0] IHxIW_18b_V;
input  [5:0] ColIncreaseLength_V;
input   IsRowPixel;
input   enable;
output  [5:0] ap_return_0;
output  [0:0] ap_return_1;
output  [0:0] ap_return_2;
output  [0:0] ap_return_3;
output  [0:0] ap_return_4;
output  [0:0] ap_return_5;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_input_r_ARVALID;
reg m_axi_input_r_RREADY;
reg m_axi_input1_ARVALID;
reg m_axi_input1_RREADY;
reg m_axi_input2_ARVALID;
reg m_axi_input2_RREADY;
reg m_axi_input3_ARVALID;
reg m_axi_input3_RREADY;
reg[5:0] ap_return_0;
reg[0:0] ap_return_1;
reg[0:0] ap_return_2;
reg[0:0] ap_return_3;
reg[0:0] ap_return_4;
reg[0:0] ap_return_5;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] tmp_inoffset;
wire   [0:0] enable_read_read_fu_118_p2;
wire   [31:0] storemerge_fu_322_p3;
reg   [31:0] storemerge_reg_690;
reg   [30:0] tmp_18_reg_697;
wire   [0:0] tmp_59_fu_350_p1;
reg   [0:0] tmp_59_reg_702;
wire  signed [20:0] tmp_100_3_fu_366_p2;
reg  signed [20:0] tmp_100_3_reg_712;
wire   [0:0] tmp_62_fu_372_p1;
reg   [0:0] tmp_62_reg_717;
wire   [5:0] RowIntNum_2_fu_415_p3;
reg   [5:0] RowIntNum_2_reg_722;
wire    ap_CS_fsm_state2;
reg   [30:0] tmp_21_reg_728;
wire   [0:0] RowBeginByte_V1_fu_444_p2;
reg   [0:0] RowBeginByte_V1_reg_733;
wire   [5:0] RowIntNum_1_fu_481_p3;
reg   [5:0] RowIntNum_1_reg_738;
reg   [30:0] tmp_23_reg_743;
reg   [30:0] tmp_26_reg_748;
wire   [0:0] RowBeginByte_V3_fu_536_p2;
reg   [0:0] RowBeginByte_V3_reg_753;
wire   [5:0] RowIntNum_3_fu_572_p3;
reg   [5:0] RowIntNum_3_reg_758;
wire    grp_mmcpy_inputport_fu_250_ap_start;
wire    grp_mmcpy_inputport_fu_250_ap_done;
wire    grp_mmcpy_inputport_fu_250_ap_idle;
wire    grp_mmcpy_inputport_fu_250_ap_ready;
wire    grp_mmcpy_inputport_fu_250_m_axi_input_r_AWVALID;
wire   [31:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWADDR;
wire   [0:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWID;
wire   [31:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWLEN;
wire   [2:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWSIZE;
wire   [1:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWBURST;
wire   [1:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWLOCK;
wire   [3:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWCACHE;
wire   [2:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWPROT;
wire   [3:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWQOS;
wire   [3:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWREGION;
wire   [0:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_AWUSER;
wire    grp_mmcpy_inputport_fu_250_m_axi_input_r_WVALID;
wire   [31:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_WDATA;
wire   [3:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_WSTRB;
wire    grp_mmcpy_inputport_fu_250_m_axi_input_r_WLAST;
wire   [0:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_WID;
wire   [0:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_WUSER;
wire    grp_mmcpy_inputport_fu_250_m_axi_input_r_ARVALID;
wire   [31:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARADDR;
wire   [0:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARID;
wire   [31:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARLEN;
wire   [2:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARSIZE;
wire   [1:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARBURST;
wire   [1:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARLOCK;
wire   [3:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARCACHE;
wire   [2:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARPROT;
wire   [3:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARQOS;
wire   [3:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARREGION;
wire   [0:0] grp_mmcpy_inputport_fu_250_m_axi_input_r_ARUSER;
wire    grp_mmcpy_inputport_fu_250_m_axi_input_r_RREADY;
wire    grp_mmcpy_inputport_fu_250_m_axi_input_r_BREADY;
wire   [4:0] grp_mmcpy_inputport_fu_250_input_memcpy_buffer_address0;
wire    grp_mmcpy_inputport_fu_250_input_memcpy_buffer_ce0;
wire    grp_mmcpy_inputport_fu_250_input_memcpy_buffer_we0;
wire   [31:0] grp_mmcpy_inputport_fu_250_input_memcpy_buffer_d0;
wire    grp_mmcpy_inputport2_fu_262_ap_start;
wire    grp_mmcpy_inputport2_fu_262_ap_done;
wire    grp_mmcpy_inputport2_fu_262_ap_idle;
wire    grp_mmcpy_inputport2_fu_262_ap_ready;
wire    grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWVALID;
wire   [31:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWADDR;
wire   [0:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWID;
wire   [31:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWLEN;
wire   [2:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWSIZE;
wire   [1:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWBURST;
wire   [1:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWLOCK;
wire   [3:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWCACHE;
wire   [2:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWPROT;
wire   [3:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWQOS;
wire   [3:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWREGION;
wire   [0:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWUSER;
wire    grp_mmcpy_inputport2_fu_262_m_axi_input_r_WVALID;
wire   [31:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_WDATA;
wire   [3:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_WSTRB;
wire    grp_mmcpy_inputport2_fu_262_m_axi_input_r_WLAST;
wire   [0:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_WID;
wire   [0:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_WUSER;
wire    grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARVALID;
wire   [31:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARADDR;
wire   [0:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARID;
wire   [31:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARLEN;
wire   [2:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARSIZE;
wire   [1:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARBURST;
wire   [1:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARLOCK;
wire   [3:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARCACHE;
wire   [2:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARPROT;
wire   [3:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARQOS;
wire   [3:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARREGION;
wire   [0:0] grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARUSER;
wire    grp_mmcpy_inputport2_fu_262_m_axi_input_r_RREADY;
wire    grp_mmcpy_inputport2_fu_262_m_axi_input_r_BREADY;
wire   [4:0] grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_address0;
wire    grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_ce0;
wire    grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_we0;
wire   [31:0] grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_d0;
wire    grp_mmcpy_inputport1_fu_274_ap_start;
wire    grp_mmcpy_inputport1_fu_274_ap_done;
wire    grp_mmcpy_inputport1_fu_274_ap_idle;
wire    grp_mmcpy_inputport1_fu_274_ap_ready;
wire    grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWVALID;
wire   [31:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWADDR;
wire   [0:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWID;
wire   [31:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWLEN;
wire   [2:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWSIZE;
wire   [1:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWBURST;
wire   [1:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWLOCK;
wire   [3:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWCACHE;
wire   [2:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWPROT;
wire   [3:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWQOS;
wire   [3:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWREGION;
wire   [0:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWUSER;
wire    grp_mmcpy_inputport1_fu_274_m_axi_input_r_WVALID;
wire   [31:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_WDATA;
wire   [3:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_WSTRB;
wire    grp_mmcpy_inputport1_fu_274_m_axi_input_r_WLAST;
wire   [0:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_WID;
wire   [0:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_WUSER;
wire    grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARVALID;
wire   [31:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARADDR;
wire   [0:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARID;
wire   [31:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARLEN;
wire   [2:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARSIZE;
wire   [1:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARBURST;
wire   [1:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARLOCK;
wire   [3:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARCACHE;
wire   [2:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARPROT;
wire   [3:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARQOS;
wire   [3:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARREGION;
wire   [0:0] grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARUSER;
wire    grp_mmcpy_inputport1_fu_274_m_axi_input_r_RREADY;
wire    grp_mmcpy_inputport1_fu_274_m_axi_input_r_BREADY;
wire   [4:0] grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_address0;
wire    grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_ce0;
wire    grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_we0;
wire   [31:0] grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_d0;
wire    grp_mmcpy_inputport3_fu_286_ap_start;
wire    grp_mmcpy_inputport3_fu_286_ap_done;
wire    grp_mmcpy_inputport3_fu_286_ap_idle;
wire    grp_mmcpy_inputport3_fu_286_ap_ready;
wire    grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWVALID;
wire   [31:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWADDR;
wire   [0:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWID;
wire   [31:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWLEN;
wire   [2:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWSIZE;
wire   [1:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWBURST;
wire   [1:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWLOCK;
wire   [3:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWCACHE;
wire   [2:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWPROT;
wire   [3:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWQOS;
wire   [3:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWREGION;
wire   [0:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWUSER;
wire    grp_mmcpy_inputport3_fu_286_m_axi_input_r_WVALID;
wire   [31:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_WDATA;
wire   [3:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_WSTRB;
wire    grp_mmcpy_inputport3_fu_286_m_axi_input_r_WLAST;
wire   [0:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_WID;
wire   [0:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_WUSER;
wire    grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARVALID;
wire   [31:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARADDR;
wire   [0:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARID;
wire   [31:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARLEN;
wire   [2:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARSIZE;
wire   [1:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARBURST;
wire   [1:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARLOCK;
wire   [3:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARCACHE;
wire   [2:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARPROT;
wire   [3:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARQOS;
wire   [3:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARREGION;
wire   [0:0] grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARUSER;
wire    grp_mmcpy_inputport3_fu_286_m_axi_input_r_RREADY;
wire    grp_mmcpy_inputport3_fu_286_m_axi_input_r_BREADY;
wire   [4:0] grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_address0;
wire    grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_ce0;
wire    grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_we0;
wire   [31:0] grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_d0;
reg   [0:0] ap_phi_mux_RowBeginByte_1_V_wr_phi_fu_217_p4;
reg   [0:0] RowBeginByte_1_V_wr_reg_214;
wire    ap_CS_fsm_state3;
reg    ap_block_state3_on_subcall_done;
reg   [0:0] ap_phi_mux_RowBeginByte_2_V_wr_phi_fu_226_p4;
reg   [0:0] RowBeginByte_2_V_wr_reg_223;
reg   [0:0] ap_phi_mux_RowBeginByte_3_V_wr_phi_fu_235_p4;
reg   [0:0] RowBeginByte_3_V_wr_reg_232;
reg   [0:0] ap_phi_mux_RowBeginByte_0_V_wr_phi_fu_244_p4;
reg   [0:0] RowBeginByte_0_V_wr_reg_241;
reg    grp_mmcpy_inputport_fu_250_ap_start_reg;
reg    grp_mmcpy_inputport2_fu_262_ap_start_reg;
reg    grp_mmcpy_inputport1_fu_274_ap_start_reg;
reg    grp_mmcpy_inputport3_fu_286_ap_start_reg;
wire   [31:0] tmp_fu_312_p1;
wire   [0:0] init_fu_302_p2;
wire   [31:0] IN_OFFSET_cast_fu_298_p1;
wire   [31:0] tmp_s_fu_316_p2;
wire   [19:0] p_shl_fu_354_p3;
wire   [20:0] p_shl_cast_fu_362_p1;
wire   [20:0] tmp_53_cast5_fu_336_p1;
wire   [6:0] rhs_V_fu_382_p1;
wire   [6:0] lhs_V_fu_379_p1;
wire   [0:0] tmp_60_fu_385_p1;
wire   [6:0] r_V_fu_388_p2;
wire   [5:0] tmp_56_cast_fu_399_p4;
wire   [0:0] tmp_55_cast3_fu_394_p2;
wire   [5:0] tmp_32_fu_409_p2;
wire   [31:0] tmp_31_fu_376_p1;
wire   [31:0] tmp_101_1_fu_428_p2;
wire   [0:0] tmp_61_fu_425_p1;
wire   [6:0] rhs_V_1_fu_449_p1;
wire   [6:0] r_V_1_fu_453_p2;
wire   [5:0] tmp_106_1_cast_fu_465_p4;
wire   [0:0] tmp_105_1_cast2_fu_459_p2;
wire   [5:0] tmp_109_1_fu_475_p2;
wire   [18:0] tmp_100_2_fu_490_p3;
wire   [31:0] tmp_100_2_cast_fu_497_p1;
wire   [31:0] tmp_101_2_fu_501_p2;
wire  signed [31:0] tmp_100_3_cast_fu_517_p1;
wire   [31:0] tmp_101_3_fu_520_p2;
wire   [6:0] rhs_V_3_fu_540_p1;
wire   [6:0] r_V_3_fu_544_p2;
wire   [5:0] tmp_106_3_cast_fu_556_p4;
wire   [0:0] tmp_105_3_cast1_fu_550_p2;
wire   [5:0] tmp_109_3_fu_566_p2;
reg   [5:0] ap_return_0_preg;
reg   [0:0] ap_return_1_preg;
reg   [0:0] ap_return_2_preg;
reg   [0:0] ap_return_3_preg;
reg   [0:0] ap_return_4_preg;
reg   [0:0] ap_return_5_preg;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 tmp_inoffset = 32'd0;
#0 grp_mmcpy_inputport_fu_250_ap_start_reg = 1'b0;
#0 grp_mmcpy_inputport2_fu_262_ap_start_reg = 1'b0;
#0 grp_mmcpy_inputport1_fu_274_ap_start_reg = 1'b0;
#0 grp_mmcpy_inputport3_fu_286_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 6'd0;
#0 ap_return_1_preg = 1'd0;
#0 ap_return_2_preg = 1'd0;
#0 ap_return_3_preg = 1'd0;
#0 ap_return_4_preg = 1'd0;
#0 ap_return_5_preg = 1'd0;
end

mmcpy_inputport grp_mmcpy_inputport_fu_250(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_inputport_fu_250_ap_start),
    .ap_done(grp_mmcpy_inputport_fu_250_ap_done),
    .ap_idle(grp_mmcpy_inputport_fu_250_ap_idle),
    .ap_ready(grp_mmcpy_inputport_fu_250_ap_ready),
    .m_axi_input_r_AWVALID(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWVALID),
    .m_axi_input_r_AWREADY(1'b0),
    .m_axi_input_r_AWADDR(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWADDR),
    .m_axi_input_r_AWID(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWID),
    .m_axi_input_r_AWLEN(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWLEN),
    .m_axi_input_r_AWSIZE(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWSIZE),
    .m_axi_input_r_AWBURST(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWBURST),
    .m_axi_input_r_AWLOCK(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWLOCK),
    .m_axi_input_r_AWCACHE(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWCACHE),
    .m_axi_input_r_AWPROT(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWPROT),
    .m_axi_input_r_AWQOS(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWQOS),
    .m_axi_input_r_AWREGION(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWREGION),
    .m_axi_input_r_AWUSER(grp_mmcpy_inputport_fu_250_m_axi_input_r_AWUSER),
    .m_axi_input_r_WVALID(grp_mmcpy_inputport_fu_250_m_axi_input_r_WVALID),
    .m_axi_input_r_WREADY(1'b0),
    .m_axi_input_r_WDATA(grp_mmcpy_inputport_fu_250_m_axi_input_r_WDATA),
    .m_axi_input_r_WSTRB(grp_mmcpy_inputport_fu_250_m_axi_input_r_WSTRB),
    .m_axi_input_r_WLAST(grp_mmcpy_inputport_fu_250_m_axi_input_r_WLAST),
    .m_axi_input_r_WID(grp_mmcpy_inputport_fu_250_m_axi_input_r_WID),
    .m_axi_input_r_WUSER(grp_mmcpy_inputport_fu_250_m_axi_input_r_WUSER),
    .m_axi_input_r_ARVALID(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARVALID),
    .m_axi_input_r_ARREADY(m_axi_input_r_ARREADY),
    .m_axi_input_r_ARADDR(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARADDR),
    .m_axi_input_r_ARID(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARID),
    .m_axi_input_r_ARLEN(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARLEN),
    .m_axi_input_r_ARSIZE(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARSIZE),
    .m_axi_input_r_ARBURST(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARBURST),
    .m_axi_input_r_ARLOCK(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARLOCK),
    .m_axi_input_r_ARCACHE(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARCACHE),
    .m_axi_input_r_ARPROT(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARPROT),
    .m_axi_input_r_ARQOS(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARQOS),
    .m_axi_input_r_ARREGION(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARREGION),
    .m_axi_input_r_ARUSER(grp_mmcpy_inputport_fu_250_m_axi_input_r_ARUSER),
    .m_axi_input_r_RVALID(m_axi_input_r_RVALID),
    .m_axi_input_r_RREADY(grp_mmcpy_inputport_fu_250_m_axi_input_r_RREADY),
    .m_axi_input_r_RDATA(m_axi_input_r_RDATA),
    .m_axi_input_r_RLAST(m_axi_input_r_RLAST),
    .m_axi_input_r_RID(m_axi_input_r_RID),
    .m_axi_input_r_RUSER(m_axi_input_r_RUSER),
    .m_axi_input_r_RRESP(m_axi_input_r_RRESP),
    .m_axi_input_r_BVALID(1'b0),
    .m_axi_input_r_BREADY(grp_mmcpy_inputport_fu_250_m_axi_input_r_BREADY),
    .m_axi_input_r_BRESP(2'd0),
    .m_axi_input_r_BID(1'd0),
    .m_axi_input_r_BUSER(1'd0),
    .input_offset(input_offset),
    .input_memcpy_buffer_address0(grp_mmcpy_inputport_fu_250_input_memcpy_buffer_address0),
    .input_memcpy_buffer_ce0(grp_mmcpy_inputport_fu_250_input_memcpy_buffer_ce0),
    .input_memcpy_buffer_we0(grp_mmcpy_inputport_fu_250_input_memcpy_buffer_we0),
    .input_memcpy_buffer_d0(grp_mmcpy_inputport_fu_250_input_memcpy_buffer_d0),
    .TN_MIN_V(TN_MIN_3b_V),
    .RowOffset(tmp_18_reg_697),
    .RowIntNum(RowIntNum_2_reg_722)
);

mmcpy_inputport2 grp_mmcpy_inputport2_fu_262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_inputport2_fu_262_ap_start),
    .ap_done(grp_mmcpy_inputport2_fu_262_ap_done),
    .ap_idle(grp_mmcpy_inputport2_fu_262_ap_idle),
    .ap_ready(grp_mmcpy_inputport2_fu_262_ap_ready),
    .m_axi_input_r_AWVALID(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWVALID),
    .m_axi_input_r_AWREADY(1'b0),
    .m_axi_input_r_AWADDR(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWADDR),
    .m_axi_input_r_AWID(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWID),
    .m_axi_input_r_AWLEN(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWLEN),
    .m_axi_input_r_AWSIZE(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWSIZE),
    .m_axi_input_r_AWBURST(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWBURST),
    .m_axi_input_r_AWLOCK(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWLOCK),
    .m_axi_input_r_AWCACHE(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWCACHE),
    .m_axi_input_r_AWPROT(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWPROT),
    .m_axi_input_r_AWQOS(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWQOS),
    .m_axi_input_r_AWREGION(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWREGION),
    .m_axi_input_r_AWUSER(grp_mmcpy_inputport2_fu_262_m_axi_input_r_AWUSER),
    .m_axi_input_r_WVALID(grp_mmcpy_inputport2_fu_262_m_axi_input_r_WVALID),
    .m_axi_input_r_WREADY(1'b0),
    .m_axi_input_r_WDATA(grp_mmcpy_inputport2_fu_262_m_axi_input_r_WDATA),
    .m_axi_input_r_WSTRB(grp_mmcpy_inputport2_fu_262_m_axi_input_r_WSTRB),
    .m_axi_input_r_WLAST(grp_mmcpy_inputport2_fu_262_m_axi_input_r_WLAST),
    .m_axi_input_r_WID(grp_mmcpy_inputport2_fu_262_m_axi_input_r_WID),
    .m_axi_input_r_WUSER(grp_mmcpy_inputport2_fu_262_m_axi_input_r_WUSER),
    .m_axi_input_r_ARVALID(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARVALID),
    .m_axi_input_r_ARREADY(m_axi_input2_ARREADY),
    .m_axi_input_r_ARADDR(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARADDR),
    .m_axi_input_r_ARID(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARID),
    .m_axi_input_r_ARLEN(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARLEN),
    .m_axi_input_r_ARSIZE(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARSIZE),
    .m_axi_input_r_ARBURST(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARBURST),
    .m_axi_input_r_ARLOCK(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARLOCK),
    .m_axi_input_r_ARCACHE(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARCACHE),
    .m_axi_input_r_ARPROT(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARPROT),
    .m_axi_input_r_ARQOS(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARQOS),
    .m_axi_input_r_ARREGION(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARREGION),
    .m_axi_input_r_ARUSER(grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARUSER),
    .m_axi_input_r_RVALID(m_axi_input2_RVALID),
    .m_axi_input_r_RREADY(grp_mmcpy_inputport2_fu_262_m_axi_input_r_RREADY),
    .m_axi_input_r_RDATA(m_axi_input2_RDATA),
    .m_axi_input_r_RLAST(m_axi_input2_RLAST),
    .m_axi_input_r_RID(m_axi_input2_RID),
    .m_axi_input_r_RUSER(m_axi_input2_RUSER),
    .m_axi_input_r_RRESP(m_axi_input2_RRESP),
    .m_axi_input_r_BVALID(1'b0),
    .m_axi_input_r_BREADY(grp_mmcpy_inputport2_fu_262_m_axi_input_r_BREADY),
    .m_axi_input_r_BRESP(2'd0),
    .m_axi_input_r_BID(1'd0),
    .m_axi_input_r_BUSER(1'd0),
    .input_offset(input2_offset),
    .input_memcpy_buffer_address0(grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_address0),
    .input_memcpy_buffer_ce0(grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_ce0),
    .input_memcpy_buffer_we0(grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_we0),
    .input_memcpy_buffer_d0(grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_d0),
    .TN_MIN_V(TN_MIN_3b_V),
    .RowOffset(tmp_23_reg_743),
    .RowIntNum(RowIntNum_2_reg_722)
);

mmcpy_inputport1 grp_mmcpy_inputport1_fu_274(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_inputport1_fu_274_ap_start),
    .ap_done(grp_mmcpy_inputport1_fu_274_ap_done),
    .ap_idle(grp_mmcpy_inputport1_fu_274_ap_idle),
    .ap_ready(grp_mmcpy_inputport1_fu_274_ap_ready),
    .m_axi_input_r_AWVALID(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWVALID),
    .m_axi_input_r_AWREADY(1'b0),
    .m_axi_input_r_AWADDR(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWADDR),
    .m_axi_input_r_AWID(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWID),
    .m_axi_input_r_AWLEN(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWLEN),
    .m_axi_input_r_AWSIZE(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWSIZE),
    .m_axi_input_r_AWBURST(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWBURST),
    .m_axi_input_r_AWLOCK(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWLOCK),
    .m_axi_input_r_AWCACHE(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWCACHE),
    .m_axi_input_r_AWPROT(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWPROT),
    .m_axi_input_r_AWQOS(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWQOS),
    .m_axi_input_r_AWREGION(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWREGION),
    .m_axi_input_r_AWUSER(grp_mmcpy_inputport1_fu_274_m_axi_input_r_AWUSER),
    .m_axi_input_r_WVALID(grp_mmcpy_inputport1_fu_274_m_axi_input_r_WVALID),
    .m_axi_input_r_WREADY(1'b0),
    .m_axi_input_r_WDATA(grp_mmcpy_inputport1_fu_274_m_axi_input_r_WDATA),
    .m_axi_input_r_WSTRB(grp_mmcpy_inputport1_fu_274_m_axi_input_r_WSTRB),
    .m_axi_input_r_WLAST(grp_mmcpy_inputport1_fu_274_m_axi_input_r_WLAST),
    .m_axi_input_r_WID(grp_mmcpy_inputport1_fu_274_m_axi_input_r_WID),
    .m_axi_input_r_WUSER(grp_mmcpy_inputport1_fu_274_m_axi_input_r_WUSER),
    .m_axi_input_r_ARVALID(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARVALID),
    .m_axi_input_r_ARREADY(m_axi_input1_ARREADY),
    .m_axi_input_r_ARADDR(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARADDR),
    .m_axi_input_r_ARID(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARID),
    .m_axi_input_r_ARLEN(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARLEN),
    .m_axi_input_r_ARSIZE(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARSIZE),
    .m_axi_input_r_ARBURST(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARBURST),
    .m_axi_input_r_ARLOCK(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARLOCK),
    .m_axi_input_r_ARCACHE(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARCACHE),
    .m_axi_input_r_ARPROT(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARPROT),
    .m_axi_input_r_ARQOS(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARQOS),
    .m_axi_input_r_ARREGION(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARREGION),
    .m_axi_input_r_ARUSER(grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARUSER),
    .m_axi_input_r_RVALID(m_axi_input1_RVALID),
    .m_axi_input_r_RREADY(grp_mmcpy_inputport1_fu_274_m_axi_input_r_RREADY),
    .m_axi_input_r_RDATA(m_axi_input1_RDATA),
    .m_axi_input_r_RLAST(m_axi_input1_RLAST),
    .m_axi_input_r_RID(m_axi_input1_RID),
    .m_axi_input_r_RUSER(m_axi_input1_RUSER),
    .m_axi_input_r_RRESP(m_axi_input1_RRESP),
    .m_axi_input_r_BVALID(1'b0),
    .m_axi_input_r_BREADY(grp_mmcpy_inputport1_fu_274_m_axi_input_r_BREADY),
    .m_axi_input_r_BRESP(2'd0),
    .m_axi_input_r_BID(1'd0),
    .m_axi_input_r_BUSER(1'd0),
    .input_offset(input1_offset),
    .input_memcpy_buffer_address0(grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_address0),
    .input_memcpy_buffer_ce0(grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_ce0),
    .input_memcpy_buffer_we0(grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_we0),
    .input_memcpy_buffer_d0(grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_d0),
    .TN_MIN_V(TN_MIN_3b_V),
    .RowOffset(tmp_21_reg_728),
    .RowIntNum(RowIntNum_1_reg_738)
);

mmcpy_inputport3 grp_mmcpy_inputport3_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_inputport3_fu_286_ap_start),
    .ap_done(grp_mmcpy_inputport3_fu_286_ap_done),
    .ap_idle(grp_mmcpy_inputport3_fu_286_ap_idle),
    .ap_ready(grp_mmcpy_inputport3_fu_286_ap_ready),
    .m_axi_input_r_AWVALID(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWVALID),
    .m_axi_input_r_AWREADY(1'b0),
    .m_axi_input_r_AWADDR(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWADDR),
    .m_axi_input_r_AWID(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWID),
    .m_axi_input_r_AWLEN(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWLEN),
    .m_axi_input_r_AWSIZE(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWSIZE),
    .m_axi_input_r_AWBURST(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWBURST),
    .m_axi_input_r_AWLOCK(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWLOCK),
    .m_axi_input_r_AWCACHE(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWCACHE),
    .m_axi_input_r_AWPROT(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWPROT),
    .m_axi_input_r_AWQOS(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWQOS),
    .m_axi_input_r_AWREGION(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWREGION),
    .m_axi_input_r_AWUSER(grp_mmcpy_inputport3_fu_286_m_axi_input_r_AWUSER),
    .m_axi_input_r_WVALID(grp_mmcpy_inputport3_fu_286_m_axi_input_r_WVALID),
    .m_axi_input_r_WREADY(1'b0),
    .m_axi_input_r_WDATA(grp_mmcpy_inputport3_fu_286_m_axi_input_r_WDATA),
    .m_axi_input_r_WSTRB(grp_mmcpy_inputport3_fu_286_m_axi_input_r_WSTRB),
    .m_axi_input_r_WLAST(grp_mmcpy_inputport3_fu_286_m_axi_input_r_WLAST),
    .m_axi_input_r_WID(grp_mmcpy_inputport3_fu_286_m_axi_input_r_WID),
    .m_axi_input_r_WUSER(grp_mmcpy_inputport3_fu_286_m_axi_input_r_WUSER),
    .m_axi_input_r_ARVALID(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARVALID),
    .m_axi_input_r_ARREADY(m_axi_input3_ARREADY),
    .m_axi_input_r_ARADDR(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARADDR),
    .m_axi_input_r_ARID(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARID),
    .m_axi_input_r_ARLEN(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARLEN),
    .m_axi_input_r_ARSIZE(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARSIZE),
    .m_axi_input_r_ARBURST(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARBURST),
    .m_axi_input_r_ARLOCK(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARLOCK),
    .m_axi_input_r_ARCACHE(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARCACHE),
    .m_axi_input_r_ARPROT(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARPROT),
    .m_axi_input_r_ARQOS(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARQOS),
    .m_axi_input_r_ARREGION(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARREGION),
    .m_axi_input_r_ARUSER(grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARUSER),
    .m_axi_input_r_RVALID(m_axi_input3_RVALID),
    .m_axi_input_r_RREADY(grp_mmcpy_inputport3_fu_286_m_axi_input_r_RREADY),
    .m_axi_input_r_RDATA(m_axi_input3_RDATA),
    .m_axi_input_r_RLAST(m_axi_input3_RLAST),
    .m_axi_input_r_RID(m_axi_input3_RID),
    .m_axi_input_r_RUSER(m_axi_input3_RUSER),
    .m_axi_input_r_RRESP(m_axi_input3_RRESP),
    .m_axi_input_r_BVALID(1'b0),
    .m_axi_input_r_BREADY(grp_mmcpy_inputport3_fu_286_m_axi_input_r_BREADY),
    .m_axi_input_r_BRESP(2'd0),
    .m_axi_input_r_BID(1'd0),
    .m_axi_input_r_BUSER(1'd0),
    .input_offset(input3_offset),
    .input_memcpy_buffer_address0(grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_address0),
    .input_memcpy_buffer_ce0(grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_ce0),
    .input_memcpy_buffer_we0(grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_we0),
    .input_memcpy_buffer_d0(grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_d0),
    .TN_MIN_V(TN_MIN_3b_V),
    .RowOffset(tmp_26_reg_748),
    .RowIntNum(RowIntNum_3_reg_758)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_0_preg <= next_t2_0_V_write;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_1_preg <= IsRowPixel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_2_preg <= ap_phi_mux_RowBeginByte_0_V_wr_phi_fu_244_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_3_preg <= ap_phi_mux_RowBeginByte_1_V_wr_phi_fu_217_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_4_preg <= ap_phi_mux_RowBeginByte_2_V_wr_phi_fu_226_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_5_preg <= ap_phi_mux_RowBeginByte_3_V_wr_phi_fu_235_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_inputport1_fu_274_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_mmcpy_inputport1_fu_274_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_inputport1_fu_274_ap_ready == 1'b1)) begin
            grp_mmcpy_inputport1_fu_274_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_inputport2_fu_262_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_mmcpy_inputport2_fu_262_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_inputport2_fu_262_ap_ready == 1'b1)) begin
            grp_mmcpy_inputport2_fu_262_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_inputport3_fu_286_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_mmcpy_inputport3_fu_286_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_inputport3_fu_286_ap_ready == 1'b1)) begin
            grp_mmcpy_inputport3_fu_286_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_inputport_fu_250_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_mmcpy_inputport_fu_250_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_inputport_fu_250_ap_ready == 1'b1)) begin
            grp_mmcpy_inputport_fu_250_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (enable_read_read_fu_118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        RowBeginByte_0_V_wr_reg_241 <= RowBeginByte_0_V_read;
    end else if (((1'b0 == ap_block_state3_on_subcall_done) & (enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        RowBeginByte_0_V_wr_reg_241 <= tmp_59_reg_702;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (enable_read_read_fu_118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        RowBeginByte_1_V_wr_reg_214 <= RowBeginByte_1_V_read;
    end else if (((1'b0 == ap_block_state3_on_subcall_done) & (enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        RowBeginByte_1_V_wr_reg_214 <= RowBeginByte_V1_reg_733;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (enable_read_read_fu_118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        RowBeginByte_2_V_wr_reg_223 <= RowBeginByte_2_V_read;
    end else if (((1'b0 == ap_block_state3_on_subcall_done) & (enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        RowBeginByte_2_V_wr_reg_223 <= tmp_59_reg_702;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (enable_read_read_fu_118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        RowBeginByte_3_V_wr_reg_232 <= RowBeginByte_3_V_read;
    end else if (((1'b0 == ap_block_state3_on_subcall_done) & (enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        RowBeginByte_3_V_wr_reg_232 <= RowBeginByte_V3_reg_753;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        RowBeginByte_V1_reg_733 <= RowBeginByte_V1_fu_444_p2;
        RowBeginByte_V3_reg_753 <= RowBeginByte_V3_fu_536_p2;
        RowIntNum_1_reg_738 <= RowIntNum_1_fu_481_p3;
        RowIntNum_2_reg_722 <= RowIntNum_2_fu_415_p3;
        RowIntNum_3_reg_758 <= RowIntNum_3_fu_572_p3;
        tmp_21_reg_728 <= {{tmp_101_1_fu_428_p2[31:1]}};
        tmp_23_reg_743 <= {{tmp_101_2_fu_501_p2[31:1]}};
        tmp_26_reg_748 <= {{tmp_101_3_fu_520_p2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        storemerge_reg_690 <= storemerge_fu_322_p3;
        tmp_100_3_reg_712 <= tmp_100_3_fu_366_p2;
        tmp_18_reg_697 <= {{storemerge_fu_322_p3[31:1]}};
        tmp_59_reg_702 <= tmp_59_fu_350_p1;
        tmp_62_reg_717 <= tmp_62_fu_372_p1;
        tmp_inoffset <= storemerge_fu_322_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_RowBeginByte_0_V_wr_phi_fu_244_p4 = tmp_59_reg_702;
    end else begin
        ap_phi_mux_RowBeginByte_0_V_wr_phi_fu_244_p4 = RowBeginByte_0_V_wr_reg_241;
    end
end

always @ (*) begin
    if (((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_RowBeginByte_1_V_wr_phi_fu_217_p4 = RowBeginByte_V1_reg_733;
    end else begin
        ap_phi_mux_RowBeginByte_1_V_wr_phi_fu_217_p4 = RowBeginByte_1_V_wr_reg_214;
    end
end

always @ (*) begin
    if (((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_RowBeginByte_2_V_wr_phi_fu_226_p4 = tmp_59_reg_702;
    end else begin
        ap_phi_mux_RowBeginByte_2_V_wr_phi_fu_226_p4 = RowBeginByte_2_V_wr_reg_223;
    end
end

always @ (*) begin
    if (((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_RowBeginByte_3_V_wr_phi_fu_235_p4 = RowBeginByte_V3_reg_753;
    end else begin
        ap_phi_mux_RowBeginByte_3_V_wr_phi_fu_235_p4 = RowBeginByte_3_V_wr_reg_232;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_0 = next_t2_0_V_write;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_1 = IsRowPixel;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_2 = ap_phi_mux_RowBeginByte_0_V_wr_phi_fu_244_p4;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_3 = ap_phi_mux_RowBeginByte_1_V_wr_phi_fu_217_p4;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_4 = ap_phi_mux_RowBeginByte_2_V_wr_phi_fu_226_p4;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_5 = ap_phi_mux_RowBeginByte_3_V_wr_phi_fu_235_p4;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input1_ARVALID = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARVALID;
    end else begin
        m_axi_input1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input1_RREADY = grp_mmcpy_inputport1_fu_274_m_axi_input_r_RREADY;
    end else begin
        m_axi_input1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input2_ARVALID = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARVALID;
    end else begin
        m_axi_input2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input2_RREADY = grp_mmcpy_inputport2_fu_262_m_axi_input_r_RREADY;
    end else begin
        m_axi_input2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input3_ARVALID = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARVALID;
    end else begin
        m_axi_input3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input3_RREADY = grp_mmcpy_inputport3_fu_286_m_axi_input_r_RREADY;
    end else begin
        m_axi_input3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input_r_ARVALID = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARVALID;
    end else begin
        m_axi_input_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_input_r_RREADY = grp_mmcpy_inputport_fu_250_m_axi_input_r_RREADY;
    end else begin
        m_axi_input_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (enable_read_read_fu_118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((ap_start == 1'b1) & (enable_read_read_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IN_OFFSET_cast_fu_298_p1 = IN_OFFSET;

assign RowBeginByte_V1_fu_444_p2 = (tmp_61_fu_425_p1 ^ tmp_59_reg_702);

assign RowBeginByte_V3_fu_536_p2 = (tmp_62_reg_717 ^ tmp_59_reg_702);

assign RowIntNum_1_fu_481_p3 = ((tmp_105_1_cast2_fu_459_p2[0:0] === 1'b1) ? tmp_109_1_fu_475_p2 : tmp_106_1_cast_fu_465_p4);

assign RowIntNum_2_fu_415_p3 = ((tmp_55_cast3_fu_394_p2[0:0] === 1'b1) ? tmp_32_fu_409_p2 : tmp_56_cast_fu_399_p4);

assign RowIntNum_3_fu_572_p3 = ((tmp_105_3_cast1_fu_550_p2[0:0] === 1'b1) ? tmp_109_3_fu_566_p2 : tmp_106_3_cast_fu_556_p4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state3_on_subcall_done = (((grp_mmcpy_inputport3_fu_286_ap_done == 1'b0) & (enable_read_read_fu_118_p2 == 1'd1)) | ((grp_mmcpy_inputport2_fu_262_ap_done == 1'b0) & (enable_read_read_fu_118_p2 == 1'd1)) | ((grp_mmcpy_inputport1_fu_274_ap_done == 1'b0) & (enable_read_read_fu_118_p2 == 1'd1)) | ((grp_mmcpy_inputport_fu_250_ap_done == 1'b0) & (enable_read_read_fu_118_p2 == 1'd1)));
end

assign enable_read_read_fu_118_p2 = enable;

assign grp_mmcpy_inputport1_fu_274_ap_start = grp_mmcpy_inputport1_fu_274_ap_start_reg;

assign grp_mmcpy_inputport2_fu_262_ap_start = grp_mmcpy_inputport2_fu_262_ap_start_reg;

assign grp_mmcpy_inputport3_fu_286_ap_start = grp_mmcpy_inputport3_fu_286_ap_start_reg;

assign grp_mmcpy_inputport_fu_250_ap_start = grp_mmcpy_inputport_fu_250_ap_start_reg;

assign init_fu_302_p2 = ((next_t2_0_V_write == 6'd0) ? 1'b1 : 1'b0);

assign input_memcpy_buffer1_address0 = grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_address0;

assign input_memcpy_buffer1_ce0 = grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_ce0;

assign input_memcpy_buffer1_d0 = grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_d0;

assign input_memcpy_buffer1_we0 = grp_mmcpy_inputport1_fu_274_input_memcpy_buffer_we0;

assign input_memcpy_buffer2_address0 = grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_address0;

assign input_memcpy_buffer2_ce0 = grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_ce0;

assign input_memcpy_buffer2_d0 = grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_d0;

assign input_memcpy_buffer2_we0 = grp_mmcpy_inputport2_fu_262_input_memcpy_buffer_we0;

assign input_memcpy_buffer3_address0 = grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_address0;

assign input_memcpy_buffer3_ce0 = grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_ce0;

assign input_memcpy_buffer3_d0 = grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_d0;

assign input_memcpy_buffer3_we0 = grp_mmcpy_inputport3_fu_286_input_memcpy_buffer_we0;

assign input_memcpy_buffer_address0 = grp_mmcpy_inputport_fu_250_input_memcpy_buffer_address0;

assign input_memcpy_buffer_ce0 = grp_mmcpy_inputport_fu_250_input_memcpy_buffer_ce0;

assign input_memcpy_buffer_d0 = grp_mmcpy_inputport_fu_250_input_memcpy_buffer_d0;

assign input_memcpy_buffer_we0 = grp_mmcpy_inputport_fu_250_input_memcpy_buffer_we0;

assign lhs_V_fu_379_p1 = ColIncreaseLength_V;

assign m_axi_input1_ARADDR = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARADDR;

assign m_axi_input1_ARBURST = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARBURST;

assign m_axi_input1_ARCACHE = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARCACHE;

assign m_axi_input1_ARID = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARID;

assign m_axi_input1_ARLEN = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARLEN;

assign m_axi_input1_ARLOCK = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARLOCK;

assign m_axi_input1_ARPROT = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARPROT;

assign m_axi_input1_ARQOS = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARQOS;

assign m_axi_input1_ARREGION = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARREGION;

assign m_axi_input1_ARSIZE = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARSIZE;

assign m_axi_input1_ARUSER = grp_mmcpy_inputport1_fu_274_m_axi_input_r_ARUSER;

assign m_axi_input1_AWADDR = 32'd0;

assign m_axi_input1_AWBURST = 2'd0;

assign m_axi_input1_AWCACHE = 4'd0;

assign m_axi_input1_AWID = 1'd0;

assign m_axi_input1_AWLEN = 32'd0;

assign m_axi_input1_AWLOCK = 2'd0;

assign m_axi_input1_AWPROT = 3'd0;

assign m_axi_input1_AWQOS = 4'd0;

assign m_axi_input1_AWREGION = 4'd0;

assign m_axi_input1_AWSIZE = 3'd0;

assign m_axi_input1_AWUSER = 1'd0;

assign m_axi_input1_AWVALID = 1'b0;

assign m_axi_input1_BREADY = 1'b0;

assign m_axi_input1_WDATA = 32'd0;

assign m_axi_input1_WID = 1'd0;

assign m_axi_input1_WLAST = 1'b0;

assign m_axi_input1_WSTRB = 4'd0;

assign m_axi_input1_WUSER = 1'd0;

assign m_axi_input1_WVALID = 1'b0;

assign m_axi_input2_ARADDR = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARADDR;

assign m_axi_input2_ARBURST = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARBURST;

assign m_axi_input2_ARCACHE = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARCACHE;

assign m_axi_input2_ARID = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARID;

assign m_axi_input2_ARLEN = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARLEN;

assign m_axi_input2_ARLOCK = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARLOCK;

assign m_axi_input2_ARPROT = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARPROT;

assign m_axi_input2_ARQOS = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARQOS;

assign m_axi_input2_ARREGION = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARREGION;

assign m_axi_input2_ARSIZE = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARSIZE;

assign m_axi_input2_ARUSER = grp_mmcpy_inputport2_fu_262_m_axi_input_r_ARUSER;

assign m_axi_input2_AWADDR = 32'd0;

assign m_axi_input2_AWBURST = 2'd0;

assign m_axi_input2_AWCACHE = 4'd0;

assign m_axi_input2_AWID = 1'd0;

assign m_axi_input2_AWLEN = 32'd0;

assign m_axi_input2_AWLOCK = 2'd0;

assign m_axi_input2_AWPROT = 3'd0;

assign m_axi_input2_AWQOS = 4'd0;

assign m_axi_input2_AWREGION = 4'd0;

assign m_axi_input2_AWSIZE = 3'd0;

assign m_axi_input2_AWUSER = 1'd0;

assign m_axi_input2_AWVALID = 1'b0;

assign m_axi_input2_BREADY = 1'b0;

assign m_axi_input2_WDATA = 32'd0;

assign m_axi_input2_WID = 1'd0;

assign m_axi_input2_WLAST = 1'b0;

assign m_axi_input2_WSTRB = 4'd0;

assign m_axi_input2_WUSER = 1'd0;

assign m_axi_input2_WVALID = 1'b0;

assign m_axi_input3_ARADDR = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARADDR;

assign m_axi_input3_ARBURST = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARBURST;

assign m_axi_input3_ARCACHE = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARCACHE;

assign m_axi_input3_ARID = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARID;

assign m_axi_input3_ARLEN = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARLEN;

assign m_axi_input3_ARLOCK = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARLOCK;

assign m_axi_input3_ARPROT = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARPROT;

assign m_axi_input3_ARQOS = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARQOS;

assign m_axi_input3_ARREGION = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARREGION;

assign m_axi_input3_ARSIZE = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARSIZE;

assign m_axi_input3_ARUSER = grp_mmcpy_inputport3_fu_286_m_axi_input_r_ARUSER;

assign m_axi_input3_AWADDR = 32'd0;

assign m_axi_input3_AWBURST = 2'd0;

assign m_axi_input3_AWCACHE = 4'd0;

assign m_axi_input3_AWID = 1'd0;

assign m_axi_input3_AWLEN = 32'd0;

assign m_axi_input3_AWLOCK = 2'd0;

assign m_axi_input3_AWPROT = 3'd0;

assign m_axi_input3_AWQOS = 4'd0;

assign m_axi_input3_AWREGION = 4'd0;

assign m_axi_input3_AWSIZE = 3'd0;

assign m_axi_input3_AWUSER = 1'd0;

assign m_axi_input3_AWVALID = 1'b0;

assign m_axi_input3_BREADY = 1'b0;

assign m_axi_input3_WDATA = 32'd0;

assign m_axi_input3_WID = 1'd0;

assign m_axi_input3_WLAST = 1'b0;

assign m_axi_input3_WSTRB = 4'd0;

assign m_axi_input3_WUSER = 1'd0;

assign m_axi_input3_WVALID = 1'b0;

assign m_axi_input_r_ARADDR = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARADDR;

assign m_axi_input_r_ARBURST = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARBURST;

assign m_axi_input_r_ARCACHE = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARCACHE;

assign m_axi_input_r_ARID = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARID;

assign m_axi_input_r_ARLEN = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARLEN;

assign m_axi_input_r_ARLOCK = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARLOCK;

assign m_axi_input_r_ARPROT = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARPROT;

assign m_axi_input_r_ARQOS = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARQOS;

assign m_axi_input_r_ARREGION = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARREGION;

assign m_axi_input_r_ARSIZE = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARSIZE;

assign m_axi_input_r_ARUSER = grp_mmcpy_inputport_fu_250_m_axi_input_r_ARUSER;

assign m_axi_input_r_AWADDR = 32'd0;

assign m_axi_input_r_AWBURST = 2'd0;

assign m_axi_input_r_AWCACHE = 4'd0;

assign m_axi_input_r_AWID = 1'd0;

assign m_axi_input_r_AWLEN = 32'd0;

assign m_axi_input_r_AWLOCK = 2'd0;

assign m_axi_input_r_AWPROT = 3'd0;

assign m_axi_input_r_AWQOS = 4'd0;

assign m_axi_input_r_AWREGION = 4'd0;

assign m_axi_input_r_AWSIZE = 3'd0;

assign m_axi_input_r_AWUSER = 1'd0;

assign m_axi_input_r_AWVALID = 1'b0;

assign m_axi_input_r_BREADY = 1'b0;

assign m_axi_input_r_WDATA = 32'd0;

assign m_axi_input_r_WID = 1'd0;

assign m_axi_input_r_WLAST = 1'b0;

assign m_axi_input_r_WSTRB = 4'd0;

assign m_axi_input_r_WUSER = 1'd0;

assign m_axi_input_r_WVALID = 1'b0;

assign p_shl_cast_fu_362_p1 = p_shl_fu_354_p3;

assign p_shl_fu_354_p3 = {{IHxIW_18b_V}, {2'd0}};

assign r_V_1_fu_453_p2 = (rhs_V_1_fu_449_p1 + lhs_V_fu_379_p1);

assign r_V_3_fu_544_p2 = (rhs_V_3_fu_540_p1 + lhs_V_fu_379_p1);

assign r_V_fu_388_p2 = (rhs_V_fu_382_p1 + lhs_V_fu_379_p1);

assign rhs_V_1_fu_449_p1 = RowBeginByte_V1_fu_444_p2;

assign rhs_V_3_fu_540_p1 = RowBeginByte_V3_fu_536_p2;

assign rhs_V_fu_382_p1 = tmp_59_reg_702;

assign storemerge_fu_322_p3 = ((init_fu_302_p2[0:0] === 1'b1) ? IN_OFFSET_cast_fu_298_p1 : tmp_s_fu_316_p2);

assign tmp_100_2_cast_fu_497_p1 = tmp_100_2_fu_490_p3;

assign tmp_100_2_fu_490_p3 = {{IHxIW_18b_V}, {1'd0}};

assign tmp_100_3_cast_fu_517_p1 = tmp_100_3_reg_712;

assign tmp_100_3_fu_366_p2 = (p_shl_cast_fu_362_p1 - tmp_53_cast5_fu_336_p1);

assign tmp_101_1_fu_428_p2 = (tmp_31_fu_376_p1 + storemerge_reg_690);

assign tmp_101_2_fu_501_p2 = (storemerge_reg_690 + tmp_100_2_cast_fu_497_p1);

assign tmp_101_3_fu_520_p2 = ($signed(storemerge_reg_690) + $signed(tmp_100_3_cast_fu_517_p1));

assign tmp_105_1_cast2_fu_459_p2 = (tmp_60_fu_385_p1 ^ RowBeginByte_V1_fu_444_p2);

assign tmp_105_3_cast1_fu_550_p2 = (tmp_60_fu_385_p1 ^ RowBeginByte_V3_fu_536_p2);

assign tmp_106_1_cast_fu_465_p4 = {{r_V_1_fu_453_p2[6:1]}};

assign tmp_106_3_cast_fu_556_p4 = {{r_V_3_fu_544_p2[6:1]}};

assign tmp_109_1_fu_475_p2 = (6'd1 + tmp_106_1_cast_fu_465_p4);

assign tmp_109_3_fu_566_p2 = (6'd1 + tmp_106_3_cast_fu_556_p4);

assign tmp_31_fu_376_p1 = IHxIW_18b_V;

assign tmp_32_fu_409_p2 = (6'd1 + tmp_56_cast_fu_399_p4);

assign tmp_53_cast5_fu_336_p1 = IHxIW_18b_V;

assign tmp_55_cast3_fu_394_p2 = (tmp_60_fu_385_p1 ^ tmp_59_reg_702);

assign tmp_56_cast_fu_399_p4 = {{r_V_fu_388_p2[6:1]}};

assign tmp_59_fu_350_p1 = storemerge_fu_322_p3[0:0];

assign tmp_60_fu_385_p1 = ColIncreaseLength_V[0:0];

assign tmp_61_fu_425_p1 = IHxIW_18b_V[0:0];

assign tmp_62_fu_372_p1 = tmp_100_3_fu_366_p2[0:0];

assign tmp_fu_312_p1 = RowIncreaseLength_V;

assign tmp_s_fu_316_p2 = (tmp_fu_312_p1 + tmp_inoffset);

endmodule //mmcpy_inputpixel_m2b
