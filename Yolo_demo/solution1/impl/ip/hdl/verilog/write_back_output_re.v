// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module write_back_output_re (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_buffer_0_address0,
        output_buffer_0_ce0,
        output_buffer_0_q0,
        output_buffer_1_address0,
        output_buffer_1_ce0,
        output_buffer_1_q0,
        output_buffer_2_address0,
        output_buffer_2_ce0,
        output_buffer_2_q0,
        output_buffer_3_address0,
        output_buffer_3_ce0,
        output_buffer_3_q0,
        output_buffer_4_address0,
        output_buffer_4_ce0,
        output_buffer_4_q0,
        output_buffer_5_address0,
        output_buffer_5_ce0,
        output_buffer_5_q0,
        output_buffer_6_address0,
        output_buffer_6_ce0,
        output_buffer_6_q0,
        output_buffer_7_address0,
        output_buffer_7_ce0,
        output_buffer_7_q0,
        output_buffer_8_address0,
        output_buffer_8_ce0,
        output_buffer_8_q0,
        output_buffer_9_address0,
        output_buffer_9_ce0,
        output_buffer_9_q0,
        output_buffer_10_address0,
        output_buffer_10_ce0,
        output_buffer_10_q0,
        output_buffer_11_address0,
        output_buffer_11_ce0,
        output_buffer_11_q0,
        output_buffer_12_address0,
        output_buffer_12_ce0,
        output_buffer_12_q0,
        output_buffer_13_address0,
        output_buffer_13_ce0,
        output_buffer_13_q0,
        output_buffer_14_address0,
        output_buffer_14_ce0,
        output_buffer_14_q0,
        output_buffer_15_address0,
        output_buffer_15_ce0,
        output_buffer_15_q0,
        output_buffer_16_address0,
        output_buffer_16_ce0,
        output_buffer_16_q0,
        output_buffer_17_address0,
        output_buffer_17_ce0,
        output_buffer_17_q0,
        output_buffer_18_address0,
        output_buffer_18_ce0,
        output_buffer_18_q0,
        output_buffer_19_address0,
        output_buffer_19_ce0,
        output_buffer_19_q0,
        output_buffer_20_address0,
        output_buffer_20_ce0,
        output_buffer_20_q0,
        output_buffer_21_address0,
        output_buffer_21_ce0,
        output_buffer_21_q0,
        output_buffer_22_address0,
        output_buffer_22_ce0,
        output_buffer_22_q0,
        output_buffer_23_address0,
        output_buffer_23_ce0,
        output_buffer_23_q0,
        output_buffer_24_address0,
        output_buffer_24_ce0,
        output_buffer_24_q0,
        output_buffer_25_address0,
        output_buffer_25_ce0,
        output_buffer_25_q0,
        output_buffer_26_address0,
        output_buffer_26_ce0,
        output_buffer_26_q0,
        output_buffer_27_address0,
        output_buffer_27_ce0,
        output_buffer_27_q0,
        output_buffer_28_address0,
        output_buffer_28_ce0,
        output_buffer_28_q0,
        output_buffer_29_address0,
        output_buffer_29_ce0,
        output_buffer_29_q0,
        output_buffer_30_address0,
        output_buffer_30_ce0,
        output_buffer_30_q0,
        output_buffer_31_address0,
        output_buffer_31_ce0,
        output_buffer_31_q0,
        m_axi_Output_r_AWVALID,
        m_axi_Output_r_AWREADY,
        m_axi_Output_r_AWADDR,
        m_axi_Output_r_AWID,
        m_axi_Output_r_AWLEN,
        m_axi_Output_r_AWSIZE,
        m_axi_Output_r_AWBURST,
        m_axi_Output_r_AWLOCK,
        m_axi_Output_r_AWCACHE,
        m_axi_Output_r_AWPROT,
        m_axi_Output_r_AWQOS,
        m_axi_Output_r_AWREGION,
        m_axi_Output_r_AWUSER,
        m_axi_Output_r_WVALID,
        m_axi_Output_r_WREADY,
        m_axi_Output_r_WDATA,
        m_axi_Output_r_WSTRB,
        m_axi_Output_r_WLAST,
        m_axi_Output_r_WID,
        m_axi_Output_r_WUSER,
        m_axi_Output_r_ARVALID,
        m_axi_Output_r_ARREADY,
        m_axi_Output_r_ARADDR,
        m_axi_Output_r_ARID,
        m_axi_Output_r_ARLEN,
        m_axi_Output_r_ARSIZE,
        m_axi_Output_r_ARBURST,
        m_axi_Output_r_ARLOCK,
        m_axi_Output_r_ARCACHE,
        m_axi_Output_r_ARPROT,
        m_axi_Output_r_ARQOS,
        m_axi_Output_r_ARREGION,
        m_axi_Output_r_ARUSER,
        m_axi_Output_r_RVALID,
        m_axi_Output_r_RREADY,
        m_axi_Output_r_RDATA,
        m_axi_Output_r_RLAST,
        m_axi_Output_r_RID,
        m_axi_Output_r_RUSER,
        m_axi_Output_r_RRESP,
        m_axi_Output_r_BVALID,
        m_axi_Output_r_BREADY,
        m_axi_Output_r_BRESP,
        m_axi_Output_r_BID,
        m_axi_Output_r_BUSER,
        Output_offset,
        m_axi_Output1_AWVALID,
        m_axi_Output1_AWREADY,
        m_axi_Output1_AWADDR,
        m_axi_Output1_AWID,
        m_axi_Output1_AWLEN,
        m_axi_Output1_AWSIZE,
        m_axi_Output1_AWBURST,
        m_axi_Output1_AWLOCK,
        m_axi_Output1_AWCACHE,
        m_axi_Output1_AWPROT,
        m_axi_Output1_AWQOS,
        m_axi_Output1_AWREGION,
        m_axi_Output1_AWUSER,
        m_axi_Output1_WVALID,
        m_axi_Output1_WREADY,
        m_axi_Output1_WDATA,
        m_axi_Output1_WSTRB,
        m_axi_Output1_WLAST,
        m_axi_Output1_WID,
        m_axi_Output1_WUSER,
        m_axi_Output1_ARVALID,
        m_axi_Output1_ARREADY,
        m_axi_Output1_ARADDR,
        m_axi_Output1_ARID,
        m_axi_Output1_ARLEN,
        m_axi_Output1_ARSIZE,
        m_axi_Output1_ARBURST,
        m_axi_Output1_ARLOCK,
        m_axi_Output1_ARCACHE,
        m_axi_Output1_ARPROT,
        m_axi_Output1_ARQOS,
        m_axi_Output1_ARREGION,
        m_axi_Output1_ARUSER,
        m_axi_Output1_RVALID,
        m_axi_Output1_RREADY,
        m_axi_Output1_RDATA,
        m_axi_Output1_RLAST,
        m_axi_Output1_RID,
        m_axi_Output1_RUSER,
        m_axi_Output1_RRESP,
        m_axi_Output1_BVALID,
        m_axi_Output1_BREADY,
        m_axi_Output1_BRESP,
        m_axi_Output1_BID,
        m_axi_Output1_BUSER,
        Output1_offset,
        r,
        c,
        m,
        Output_w,
        TM_MIN,
        TC_MIN,
        OHxOW,
        write_flag,
        IsNL,
        InterSubOutput,
        LayerType
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] output_buffer_0_address0;
output   output_buffer_0_ce0;
input  [31:0] output_buffer_0_q0;
output  [9:0] output_buffer_1_address0;
output   output_buffer_1_ce0;
input  [31:0] output_buffer_1_q0;
output  [9:0] output_buffer_2_address0;
output   output_buffer_2_ce0;
input  [31:0] output_buffer_2_q0;
output  [9:0] output_buffer_3_address0;
output   output_buffer_3_ce0;
input  [31:0] output_buffer_3_q0;
output  [9:0] output_buffer_4_address0;
output   output_buffer_4_ce0;
input  [31:0] output_buffer_4_q0;
output  [9:0] output_buffer_5_address0;
output   output_buffer_5_ce0;
input  [31:0] output_buffer_5_q0;
output  [9:0] output_buffer_6_address0;
output   output_buffer_6_ce0;
input  [31:0] output_buffer_6_q0;
output  [9:0] output_buffer_7_address0;
output   output_buffer_7_ce0;
input  [31:0] output_buffer_7_q0;
output  [9:0] output_buffer_8_address0;
output   output_buffer_8_ce0;
input  [31:0] output_buffer_8_q0;
output  [9:0] output_buffer_9_address0;
output   output_buffer_9_ce0;
input  [31:0] output_buffer_9_q0;
output  [9:0] output_buffer_10_address0;
output   output_buffer_10_ce0;
input  [31:0] output_buffer_10_q0;
output  [9:0] output_buffer_11_address0;
output   output_buffer_11_ce0;
input  [31:0] output_buffer_11_q0;
output  [9:0] output_buffer_12_address0;
output   output_buffer_12_ce0;
input  [31:0] output_buffer_12_q0;
output  [9:0] output_buffer_13_address0;
output   output_buffer_13_ce0;
input  [31:0] output_buffer_13_q0;
output  [9:0] output_buffer_14_address0;
output   output_buffer_14_ce0;
input  [31:0] output_buffer_14_q0;
output  [9:0] output_buffer_15_address0;
output   output_buffer_15_ce0;
input  [31:0] output_buffer_15_q0;
output  [9:0] output_buffer_16_address0;
output   output_buffer_16_ce0;
input  [31:0] output_buffer_16_q0;
output  [9:0] output_buffer_17_address0;
output   output_buffer_17_ce0;
input  [31:0] output_buffer_17_q0;
output  [9:0] output_buffer_18_address0;
output   output_buffer_18_ce0;
input  [31:0] output_buffer_18_q0;
output  [9:0] output_buffer_19_address0;
output   output_buffer_19_ce0;
input  [31:0] output_buffer_19_q0;
output  [9:0] output_buffer_20_address0;
output   output_buffer_20_ce0;
input  [31:0] output_buffer_20_q0;
output  [9:0] output_buffer_21_address0;
output   output_buffer_21_ce0;
input  [31:0] output_buffer_21_q0;
output  [9:0] output_buffer_22_address0;
output   output_buffer_22_ce0;
input  [31:0] output_buffer_22_q0;
output  [9:0] output_buffer_23_address0;
output   output_buffer_23_ce0;
input  [31:0] output_buffer_23_q0;
output  [9:0] output_buffer_24_address0;
output   output_buffer_24_ce0;
input  [31:0] output_buffer_24_q0;
output  [9:0] output_buffer_25_address0;
output   output_buffer_25_ce0;
input  [31:0] output_buffer_25_q0;
output  [9:0] output_buffer_26_address0;
output   output_buffer_26_ce0;
input  [31:0] output_buffer_26_q0;
output  [9:0] output_buffer_27_address0;
output   output_buffer_27_ce0;
input  [31:0] output_buffer_27_q0;
output  [9:0] output_buffer_28_address0;
output   output_buffer_28_ce0;
input  [31:0] output_buffer_28_q0;
output  [9:0] output_buffer_29_address0;
output   output_buffer_29_ce0;
input  [31:0] output_buffer_29_q0;
output  [9:0] output_buffer_30_address0;
output   output_buffer_30_ce0;
input  [31:0] output_buffer_30_q0;
output  [9:0] output_buffer_31_address0;
output   output_buffer_31_ce0;
input  [31:0] output_buffer_31_q0;
output   m_axi_Output_r_AWVALID;
input   m_axi_Output_r_AWREADY;
output  [31:0] m_axi_Output_r_AWADDR;
output  [0:0] m_axi_Output_r_AWID;
output  [31:0] m_axi_Output_r_AWLEN;
output  [2:0] m_axi_Output_r_AWSIZE;
output  [1:0] m_axi_Output_r_AWBURST;
output  [1:0] m_axi_Output_r_AWLOCK;
output  [3:0] m_axi_Output_r_AWCACHE;
output  [2:0] m_axi_Output_r_AWPROT;
output  [3:0] m_axi_Output_r_AWQOS;
output  [3:0] m_axi_Output_r_AWREGION;
output  [0:0] m_axi_Output_r_AWUSER;
output   m_axi_Output_r_WVALID;
input   m_axi_Output_r_WREADY;
output  [31:0] m_axi_Output_r_WDATA;
output  [3:0] m_axi_Output_r_WSTRB;
output   m_axi_Output_r_WLAST;
output  [0:0] m_axi_Output_r_WID;
output  [0:0] m_axi_Output_r_WUSER;
output   m_axi_Output_r_ARVALID;
input   m_axi_Output_r_ARREADY;
output  [31:0] m_axi_Output_r_ARADDR;
output  [0:0] m_axi_Output_r_ARID;
output  [31:0] m_axi_Output_r_ARLEN;
output  [2:0] m_axi_Output_r_ARSIZE;
output  [1:0] m_axi_Output_r_ARBURST;
output  [1:0] m_axi_Output_r_ARLOCK;
output  [3:0] m_axi_Output_r_ARCACHE;
output  [2:0] m_axi_Output_r_ARPROT;
output  [3:0] m_axi_Output_r_ARQOS;
output  [3:0] m_axi_Output_r_ARREGION;
output  [0:0] m_axi_Output_r_ARUSER;
input   m_axi_Output_r_RVALID;
output   m_axi_Output_r_RREADY;
input  [31:0] m_axi_Output_r_RDATA;
input   m_axi_Output_r_RLAST;
input  [0:0] m_axi_Output_r_RID;
input  [0:0] m_axi_Output_r_RUSER;
input  [1:0] m_axi_Output_r_RRESP;
input   m_axi_Output_r_BVALID;
output   m_axi_Output_r_BREADY;
input  [1:0] m_axi_Output_r_BRESP;
input  [0:0] m_axi_Output_r_BID;
input  [0:0] m_axi_Output_r_BUSER;
input  [29:0] Output_offset;
output   m_axi_Output1_AWVALID;
input   m_axi_Output1_AWREADY;
output  [31:0] m_axi_Output1_AWADDR;
output  [0:0] m_axi_Output1_AWID;
output  [31:0] m_axi_Output1_AWLEN;
output  [2:0] m_axi_Output1_AWSIZE;
output  [1:0] m_axi_Output1_AWBURST;
output  [1:0] m_axi_Output1_AWLOCK;
output  [3:0] m_axi_Output1_AWCACHE;
output  [2:0] m_axi_Output1_AWPROT;
output  [3:0] m_axi_Output1_AWQOS;
output  [3:0] m_axi_Output1_AWREGION;
output  [0:0] m_axi_Output1_AWUSER;
output   m_axi_Output1_WVALID;
input   m_axi_Output1_WREADY;
output  [31:0] m_axi_Output1_WDATA;
output  [3:0] m_axi_Output1_WSTRB;
output   m_axi_Output1_WLAST;
output  [0:0] m_axi_Output1_WID;
output  [0:0] m_axi_Output1_WUSER;
output   m_axi_Output1_ARVALID;
input   m_axi_Output1_ARREADY;
output  [31:0] m_axi_Output1_ARADDR;
output  [0:0] m_axi_Output1_ARID;
output  [31:0] m_axi_Output1_ARLEN;
output  [2:0] m_axi_Output1_ARSIZE;
output  [1:0] m_axi_Output1_ARBURST;
output  [1:0] m_axi_Output1_ARLOCK;
output  [3:0] m_axi_Output1_ARCACHE;
output  [2:0] m_axi_Output1_ARPROT;
output  [3:0] m_axi_Output1_ARQOS;
output  [3:0] m_axi_Output1_ARREGION;
output  [0:0] m_axi_Output1_ARUSER;
input   m_axi_Output1_RVALID;
output   m_axi_Output1_RREADY;
input  [31:0] m_axi_Output1_RDATA;
input   m_axi_Output1_RLAST;
input  [0:0] m_axi_Output1_RID;
input  [0:0] m_axi_Output1_RUSER;
input  [1:0] m_axi_Output1_RRESP;
input   m_axi_Output1_BVALID;
output   m_axi_Output1_BREADY;
input  [1:0] m_axi_Output1_BRESP;
input  [0:0] m_axi_Output1_BID;
input  [0:0] m_axi_Output1_BUSER;
input  [29:0] Output1_offset;
input  [31:0] r;
input  [31:0] c;
input  [31:0] m;
input  [31:0] Output_w;
input  [31:0] TM_MIN;
input  [31:0] TC_MIN;
input  [17:0] OHxOW;
input   write_flag;
input   IsNL;
input  [7:0] InterSubOutput;
input  [31:0] LayerType;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_buffer_0_ce0;
reg output_buffer_1_ce0;
reg output_buffer_2_ce0;
reg output_buffer_3_ce0;
reg output_buffer_4_ce0;
reg output_buffer_5_ce0;
reg output_buffer_6_ce0;
reg output_buffer_7_ce0;
reg output_buffer_8_ce0;
reg output_buffer_9_ce0;
reg output_buffer_10_ce0;
reg output_buffer_11_ce0;
reg output_buffer_12_ce0;
reg output_buffer_13_ce0;
reg output_buffer_14_ce0;
reg output_buffer_15_ce0;
reg output_buffer_16_ce0;
reg output_buffer_17_ce0;
reg output_buffer_18_ce0;
reg output_buffer_19_ce0;
reg output_buffer_20_ce0;
reg output_buffer_21_ce0;
reg output_buffer_22_ce0;
reg output_buffer_23_ce0;
reg output_buffer_24_ce0;
reg output_buffer_25_ce0;
reg output_buffer_26_ce0;
reg output_buffer_27_ce0;
reg output_buffer_28_ce0;
reg output_buffer_29_ce0;
reg output_buffer_30_ce0;
reg output_buffer_31_ce0;
reg m_axi_Output_r_AWVALID;
reg m_axi_Output_r_WVALID;
reg m_axi_Output_r_BREADY;
reg m_axi_Output1_AWVALID;
reg m_axi_Output1_WVALID;
reg m_axi_Output1_BREADY;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] output_tmp00_address0;
reg    output_tmp00_ce0;
reg    output_tmp00_we0;
wire   [31:0] output_tmp00_q0;
reg   [7:0] output_tmp01_address0;
reg    output_tmp01_ce0;
reg    output_tmp01_we0;
wire   [31:0] output_tmp01_q0;
reg   [7:0] output_tmp10_address0;
reg    output_tmp10_ce0;
reg    output_tmp10_we0;
wire   [31:0] output_tmp10_q0;
reg   [7:0] output_tmp11_address0;
reg    output_tmp11_ce0;
reg    output_tmp11_we0;
wire   [31:0] output_tmp11_q0;
wire   [0:0] write_flag_read_read_fu_240_p2;
wire   [5:0] TM_MIN_6b_V_fu_506_p1;
reg   [5:0] TM_MIN_6b_V_reg_915;
wire   [8:0] Output_w_9b_V_fu_510_p1;
reg   [8:0] Output_w_9b_V_reg_921;
wire   [8:0] r_9b_V_fu_518_p1;
reg   [8:0] r_9b_V_reg_927;
wire   [8:0] c_9b_V_fu_522_p1;
reg   [8:0] c_9b_V_reg_932;
wire   [27:0] r_V_fu_802_p2;
reg   [27:0] r_V_reg_937;
(* use_dsp48 = "no" *) wire   [27:0] r_V_3_fu_569_p2;
reg   [27:0] r_V_3_reg_942;
wire    ap_CS_fsm_state2;
wire   [4:0] mLoop1_V_fu_586_p3;
reg   [4:0] mLoop1_V_reg_947;
wire   [5:0] mLoop2_V_1_fu_594_p3;
reg   [5:0] mLoop2_V_1_reg_954;
reg   [3:0] mLoop_reg_959;
wire   [28:0] OutputOffset1_sum_3_s_fu_612_p1;
wire    ap_CS_fsm_state3;
wire   [0:0] TC_MINe26_fu_615_p2;
reg   [0:0] TC_MINe26_reg_969;
wire   [28:0] grp_fu_816_p3;
wire   [7:0] tmp_fu_629_p3;
reg   [7:0] tmp_reg_979;
wire   [4:0] mLoop_1_fu_637_p3;
reg   [4:0] mLoop_1_reg_985;
wire   [4:0] rLoop_cast4_cast_fu_644_p3;
reg   [4:0] rLoop_cast4_cast_reg_990;
wire   [28:0] OutputOffset_cast_fu_659_p1;
reg   [28:0] OutputOffset_cast_reg_995;
wire   [13:0] OutputOffset3_cast_fu_670_p1;
reg   [13:0] OutputOffset3_cast_reg_1001;
wire   [4:0] tmp_2_cast3_cast_fu_674_p3;
reg   [4:0] tmp_2_cast3_cast_reg_1006;
wire   [4:0] tm_1_fu_687_p2;
reg   [4:0] tm_1_reg_1014;
wire    ap_CS_fsm_state4;
wire   [4:0] tr_1_fu_698_p2;
reg   [4:0] tr_1_reg_1022;
wire    ap_CS_fsm_state5;
wire   [0:0] pingpong_load_load_fu_704_p1;
reg   [0:0] pingpong_load_reg_1027;
wire   [0:0] exitcond_fu_693_p2;
wire   [0:0] tmp_5_fu_707_p2;
reg   [0:0] tmp_5_reg_1031;
reg   [0:0] wb_start_flag_load_reg_1036;
reg   [5:0] tm_next_0_V_1_load_reg_1041;
reg   [5:0] tm_next1_0_V_1_load_reg_1047;
reg   [31:0] outputoffsetarray_0_2_reg_1053;
reg   [31:0] outputoffsetarray_1_2_reg_1059;
reg   [31:0] outputoffsetarray1_0_1_reg_1065;
reg   [31:0] outputoffsetarray1_1_1_reg_1071;
wire   [0:0] grp_fu_487_p2;
reg   [0:0] tmp_9_reg_1077;
reg   [0:0] tmp_6_reg_1082;
wire   [28:0] OutputOffset1_sum_1_fu_747_p2;
wire   [28:0] OutputOffset1_sum1_1_fu_752_p2;
wire   [13:0] OutputOffset2_sum_1_fu_787_p2;
wire    ap_CS_fsm_state6;
wire    grp_outputpixel2buf_fu_367_ap_idle;
wire    grp_outputpixel2buf_fu_367_ap_ready;
wire    grp_outputpixel2buf_fu_367_ap_done;
wire    grp_mmcpy_outputpixel_fu_463_ap_idle;
wire    grp_mmcpy_outputpixel_fu_463_ap_ready;
wire    grp_mmcpy_outputpixel_fu_463_ap_done;
reg    ap_block_state6_on_subcall_done;
wire    grp_outputpixel2buf_fu_367_ap_start;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_0_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_0_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_1_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_1_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_2_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_2_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_3_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_3_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_4_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_4_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_5_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_5_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_6_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_6_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_7_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_7_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_8_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_8_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_9_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_9_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_10_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_10_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_11_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_11_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_12_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_12_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_13_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_13_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_14_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_14_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_15_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_15_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_16_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_16_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_17_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_17_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_18_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_18_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_19_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_19_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_20_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_20_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_21_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_21_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_22_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_22_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_23_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_23_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_24_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_24_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_25_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_25_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_26_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_26_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_27_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_27_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_28_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_28_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_29_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_29_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_30_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_30_ce0;
wire   [9:0] grp_outputpixel2buf_fu_367_output_buffer_31_address0;
wire    grp_outputpixel2buf_fu_367_output_buffer_31_ce0;
wire   [7:0] grp_outputpixel2buf_fu_367_output_tmp_address0;
wire    grp_outputpixel2buf_fu_367_output_tmp_ce0;
wire    grp_outputpixel2buf_fu_367_output_tmp_we0;
wire   [31:0] grp_outputpixel2buf_fu_367_output_tmp_d0;
wire   [7:0] grp_outputpixel2buf_fu_367_output_tmp1_address0;
wire    grp_outputpixel2buf_fu_367_output_tmp1_ce0;
wire    grp_outputpixel2buf_fu_367_output_tmp1_we0;
wire   [31:0] grp_outputpixel2buf_fu_367_output_tmp1_d0;
wire    grp_outputpixel2buf_fu_367_TC_MINe26;
wire    grp_outputpixel2buf_fu_367_init;
reg   [31:0] grp_outputpixel2buf_fu_367_outputoffsetarray_0;
reg   [31:0] grp_outputpixel2buf_fu_367_outputoffsetarray_1;
reg   [5:0] grp_outputpixel2buf_fu_367_tm_next_0_V_read;
wire    grp_outputpixel2buf_fu_367_enable;
wire   [5:0] grp_outputpixel2buf_fu_367_ap_return_0;
wire   [31:0] grp_outputpixel2buf_fu_367_ap_return_1;
wire   [31:0] grp_outputpixel2buf_fu_367_ap_return_2;
wire    grp_mmcpy_outputpixel_fu_463_ap_start;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWVALID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWADDR;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLEN;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWSIZE;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWBURST;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLOCK;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWCACHE;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWPROT;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWQOS;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWREGION;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWUSER;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WVALID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WDATA;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WSTRB;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WLAST;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WID;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WUSER;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARVALID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARADDR;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLEN;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARSIZE;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARBURST;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLOCK;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARCACHE;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARPROT;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARQOS;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARREGION;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARUSER;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_RREADY;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_BREADY;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWVALID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWADDR;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLEN;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWSIZE;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWBURST;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLOCK;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWCACHE;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWPROT;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWQOS;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWREGION;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWUSER;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WVALID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WDATA;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WSTRB;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WLAST;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WID;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WUSER;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARVALID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARADDR;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARID;
wire   [31:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLEN;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARSIZE;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARBURST;
wire   [1:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLOCK;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARCACHE;
wire   [2:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARPROT;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARQOS;
wire   [3:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARREGION;
wire   [0:0] grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARUSER;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output1_RREADY;
wire    grp_mmcpy_outputpixel_fu_463_m_axi_Output1_BREADY;
wire   [7:0] grp_mmcpy_outputpixel_fu_463_output_tmp_address0;
wire    grp_mmcpy_outputpixel_fu_463_output_tmp_ce0;
reg   [31:0] grp_mmcpy_outputpixel_fu_463_output_tmp_q0;
wire   [7:0] grp_mmcpy_outputpixel_fu_463_output_tmp1_address0;
wire    grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0;
reg   [31:0] grp_mmcpy_outputpixel_fu_463_output_tmp1_q0;
reg   [5:0] grp_mmcpy_outputpixel_fu_463_tm_V_6;
reg   [31:0] grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0;
reg   [31:0] grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1;
reg    grp_mmcpy_outputpixel_fu_463_enable;
reg   [4:0] tm_reg_300;
reg   [28:0] OutputOffset1_sum_reg_312;
reg   [28:0] OutputOffset1_sum1_reg_322;
reg   [4:0] tr_reg_332;
wire   [0:0] exitcond1_fu_682_p2;
reg   [13:0] OutputOffset2_sum_reg_344;
reg   [0:0] ap_phi_mux_pingpong_2_phi_fu_359_p4;
reg    grp_outputpixel2buf_fu_367_ap_start_reg;
reg    grp_mmcpy_outputpixel_fu_463_ap_start_reg;
reg   [0:0] wb_start_flag_fu_190;
reg   [0:0] pingpong_fu_194;
reg   [5:0] tm_next_0_V_1_fu_198;
reg   [5:0] tm_next1_0_V_1_fu_202;
reg   [31:0] outputoffsetarray_0_1_fu_206;
reg   [31:0] outputoffsetarray_1_1_fu_210;
reg   [31:0] outputoffsetarray1_0_fu_214;
reg   [31:0] outputoffsetarray1_1_fu_218;
wire   [9:0] m_10b_V_fu_514_p1;
wire   [0:0] tmp_8_fu_544_p2;
wire   [5:0] TM_MIN_g_V_fu_549_p3;
wire   [27:0] grp_fu_808_p3;
wire   [27:0] rhs_V_3_cast_fu_566_p1;
wire   [0:0] TM_MINaboveTmdiv2_fu_574_p2;
wire   [4:0] tmp_10_fu_556_p1;
wire   [5:0] mLoop2_V_fu_580_p2;
wire   [4:0] mLoop_3_fu_626_p1;
wire   [17:0] OutputOffset_fu_652_p3;
wire   [8:0] OutputOffset3_fu_663_p3;
wire   [17:0] r_V_fu_802_p0;
wire   [9:0] r_V_fu_802_p1;
wire   [8:0] grp_fu_808_p0;
wire   [8:0] grp_fu_808_p1;
wire   [17:0] grp_fu_816_p0;
wire   [4:0] grp_fu_816_p1;
wire   [27:0] grp_fu_816_p2;
reg   [5:0] ap_NS_fsm;
wire   [17:0] grp_fu_808_p00;
wire   [17:0] grp_fu_808_p10;
wire   [22:0] grp_fu_816_p00;
wire   [22:0] grp_fu_816_p10;
wire   [28:0] grp_fu_816_p20;
wire   [27:0] r_V_fu_802_p00;
wire   [27:0] r_V_fu_802_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_outputpixel2buf_fu_367_ap_start_reg = 1'b0;
#0 grp_mmcpy_outputpixel_fu_463_ap_start_reg = 1'b0;
end

write_back_outputeMU #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
output_tmp00_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_tmp00_address0),
    .ce0(output_tmp00_ce0),
    .we0(output_tmp00_we0),
    .d0(grp_outputpixel2buf_fu_367_output_tmp_d0),
    .q0(output_tmp00_q0)
);

write_back_outputeMU #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
output_tmp01_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_tmp01_address0),
    .ce0(output_tmp01_ce0),
    .we0(output_tmp01_we0),
    .d0(grp_outputpixel2buf_fu_367_output_tmp1_d0),
    .q0(output_tmp01_q0)
);

write_back_outputeMU #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
output_tmp10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_tmp10_address0),
    .ce0(output_tmp10_ce0),
    .we0(output_tmp10_we0),
    .d0(grp_outputpixel2buf_fu_367_output_tmp_d0),
    .q0(output_tmp10_q0)
);

write_back_outputeMU #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
output_tmp11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_tmp11_address0),
    .ce0(output_tmp11_ce0),
    .we0(output_tmp11_we0),
    .d0(grp_outputpixel2buf_fu_367_output_tmp1_d0),
    .q0(output_tmp11_q0)
);

outputpixel2buf grp_outputpixel2buf_fu_367(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_outputpixel2buf_fu_367_ap_start),
    .ap_done(grp_outputpixel2buf_fu_367_ap_done),
    .ap_idle(grp_outputpixel2buf_fu_367_ap_idle),
    .ap_ready(grp_outputpixel2buf_fu_367_ap_ready),
    .output_buffer_0_address0(grp_outputpixel2buf_fu_367_output_buffer_0_address0),
    .output_buffer_0_ce0(grp_outputpixel2buf_fu_367_output_buffer_0_ce0),
    .output_buffer_0_q0(output_buffer_0_q0),
    .output_buffer_1_address0(grp_outputpixel2buf_fu_367_output_buffer_1_address0),
    .output_buffer_1_ce0(grp_outputpixel2buf_fu_367_output_buffer_1_ce0),
    .output_buffer_1_q0(output_buffer_1_q0),
    .output_buffer_2_address0(grp_outputpixel2buf_fu_367_output_buffer_2_address0),
    .output_buffer_2_ce0(grp_outputpixel2buf_fu_367_output_buffer_2_ce0),
    .output_buffer_2_q0(output_buffer_2_q0),
    .output_buffer_3_address0(grp_outputpixel2buf_fu_367_output_buffer_3_address0),
    .output_buffer_3_ce0(grp_outputpixel2buf_fu_367_output_buffer_3_ce0),
    .output_buffer_3_q0(output_buffer_3_q0),
    .output_buffer_4_address0(grp_outputpixel2buf_fu_367_output_buffer_4_address0),
    .output_buffer_4_ce0(grp_outputpixel2buf_fu_367_output_buffer_4_ce0),
    .output_buffer_4_q0(output_buffer_4_q0),
    .output_buffer_5_address0(grp_outputpixel2buf_fu_367_output_buffer_5_address0),
    .output_buffer_5_ce0(grp_outputpixel2buf_fu_367_output_buffer_5_ce0),
    .output_buffer_5_q0(output_buffer_5_q0),
    .output_buffer_6_address0(grp_outputpixel2buf_fu_367_output_buffer_6_address0),
    .output_buffer_6_ce0(grp_outputpixel2buf_fu_367_output_buffer_6_ce0),
    .output_buffer_6_q0(output_buffer_6_q0),
    .output_buffer_7_address0(grp_outputpixel2buf_fu_367_output_buffer_7_address0),
    .output_buffer_7_ce0(grp_outputpixel2buf_fu_367_output_buffer_7_ce0),
    .output_buffer_7_q0(output_buffer_7_q0),
    .output_buffer_8_address0(grp_outputpixel2buf_fu_367_output_buffer_8_address0),
    .output_buffer_8_ce0(grp_outputpixel2buf_fu_367_output_buffer_8_ce0),
    .output_buffer_8_q0(output_buffer_8_q0),
    .output_buffer_9_address0(grp_outputpixel2buf_fu_367_output_buffer_9_address0),
    .output_buffer_9_ce0(grp_outputpixel2buf_fu_367_output_buffer_9_ce0),
    .output_buffer_9_q0(output_buffer_9_q0),
    .output_buffer_10_address0(grp_outputpixel2buf_fu_367_output_buffer_10_address0),
    .output_buffer_10_ce0(grp_outputpixel2buf_fu_367_output_buffer_10_ce0),
    .output_buffer_10_q0(output_buffer_10_q0),
    .output_buffer_11_address0(grp_outputpixel2buf_fu_367_output_buffer_11_address0),
    .output_buffer_11_ce0(grp_outputpixel2buf_fu_367_output_buffer_11_ce0),
    .output_buffer_11_q0(output_buffer_11_q0),
    .output_buffer_12_address0(grp_outputpixel2buf_fu_367_output_buffer_12_address0),
    .output_buffer_12_ce0(grp_outputpixel2buf_fu_367_output_buffer_12_ce0),
    .output_buffer_12_q0(output_buffer_12_q0),
    .output_buffer_13_address0(grp_outputpixel2buf_fu_367_output_buffer_13_address0),
    .output_buffer_13_ce0(grp_outputpixel2buf_fu_367_output_buffer_13_ce0),
    .output_buffer_13_q0(output_buffer_13_q0),
    .output_buffer_14_address0(grp_outputpixel2buf_fu_367_output_buffer_14_address0),
    .output_buffer_14_ce0(grp_outputpixel2buf_fu_367_output_buffer_14_ce0),
    .output_buffer_14_q0(output_buffer_14_q0),
    .output_buffer_15_address0(grp_outputpixel2buf_fu_367_output_buffer_15_address0),
    .output_buffer_15_ce0(grp_outputpixel2buf_fu_367_output_buffer_15_ce0),
    .output_buffer_15_q0(output_buffer_15_q0),
    .output_buffer_16_address0(grp_outputpixel2buf_fu_367_output_buffer_16_address0),
    .output_buffer_16_ce0(grp_outputpixel2buf_fu_367_output_buffer_16_ce0),
    .output_buffer_16_q0(output_buffer_16_q0),
    .output_buffer_17_address0(grp_outputpixel2buf_fu_367_output_buffer_17_address0),
    .output_buffer_17_ce0(grp_outputpixel2buf_fu_367_output_buffer_17_ce0),
    .output_buffer_17_q0(output_buffer_17_q0),
    .output_buffer_18_address0(grp_outputpixel2buf_fu_367_output_buffer_18_address0),
    .output_buffer_18_ce0(grp_outputpixel2buf_fu_367_output_buffer_18_ce0),
    .output_buffer_18_q0(output_buffer_18_q0),
    .output_buffer_19_address0(grp_outputpixel2buf_fu_367_output_buffer_19_address0),
    .output_buffer_19_ce0(grp_outputpixel2buf_fu_367_output_buffer_19_ce0),
    .output_buffer_19_q0(output_buffer_19_q0),
    .output_buffer_20_address0(grp_outputpixel2buf_fu_367_output_buffer_20_address0),
    .output_buffer_20_ce0(grp_outputpixel2buf_fu_367_output_buffer_20_ce0),
    .output_buffer_20_q0(output_buffer_20_q0),
    .output_buffer_21_address0(grp_outputpixel2buf_fu_367_output_buffer_21_address0),
    .output_buffer_21_ce0(grp_outputpixel2buf_fu_367_output_buffer_21_ce0),
    .output_buffer_21_q0(output_buffer_21_q0),
    .output_buffer_22_address0(grp_outputpixel2buf_fu_367_output_buffer_22_address0),
    .output_buffer_22_ce0(grp_outputpixel2buf_fu_367_output_buffer_22_ce0),
    .output_buffer_22_q0(output_buffer_22_q0),
    .output_buffer_23_address0(grp_outputpixel2buf_fu_367_output_buffer_23_address0),
    .output_buffer_23_ce0(grp_outputpixel2buf_fu_367_output_buffer_23_ce0),
    .output_buffer_23_q0(output_buffer_23_q0),
    .output_buffer_24_address0(grp_outputpixel2buf_fu_367_output_buffer_24_address0),
    .output_buffer_24_ce0(grp_outputpixel2buf_fu_367_output_buffer_24_ce0),
    .output_buffer_24_q0(output_buffer_24_q0),
    .output_buffer_25_address0(grp_outputpixel2buf_fu_367_output_buffer_25_address0),
    .output_buffer_25_ce0(grp_outputpixel2buf_fu_367_output_buffer_25_ce0),
    .output_buffer_25_q0(output_buffer_25_q0),
    .output_buffer_26_address0(grp_outputpixel2buf_fu_367_output_buffer_26_address0),
    .output_buffer_26_ce0(grp_outputpixel2buf_fu_367_output_buffer_26_ce0),
    .output_buffer_26_q0(output_buffer_26_q0),
    .output_buffer_27_address0(grp_outputpixel2buf_fu_367_output_buffer_27_address0),
    .output_buffer_27_ce0(grp_outputpixel2buf_fu_367_output_buffer_27_ce0),
    .output_buffer_27_q0(output_buffer_27_q0),
    .output_buffer_28_address0(grp_outputpixel2buf_fu_367_output_buffer_28_address0),
    .output_buffer_28_ce0(grp_outputpixel2buf_fu_367_output_buffer_28_ce0),
    .output_buffer_28_q0(output_buffer_28_q0),
    .output_buffer_29_address0(grp_outputpixel2buf_fu_367_output_buffer_29_address0),
    .output_buffer_29_ce0(grp_outputpixel2buf_fu_367_output_buffer_29_ce0),
    .output_buffer_29_q0(output_buffer_29_q0),
    .output_buffer_30_address0(grp_outputpixel2buf_fu_367_output_buffer_30_address0),
    .output_buffer_30_ce0(grp_outputpixel2buf_fu_367_output_buffer_30_ce0),
    .output_buffer_30_q0(output_buffer_30_q0),
    .output_buffer_31_address0(grp_outputpixel2buf_fu_367_output_buffer_31_address0),
    .output_buffer_31_ce0(grp_outputpixel2buf_fu_367_output_buffer_31_ce0),
    .output_buffer_31_q0(output_buffer_31_q0),
    .output_tmp_address0(grp_outputpixel2buf_fu_367_output_tmp_address0),
    .output_tmp_ce0(grp_outputpixel2buf_fu_367_output_tmp_ce0),
    .output_tmp_we0(grp_outputpixel2buf_fu_367_output_tmp_we0),
    .output_tmp_d0(grp_outputpixel2buf_fu_367_output_tmp_d0),
    .output_tmp1_address0(grp_outputpixel2buf_fu_367_output_tmp1_address0),
    .output_tmp1_ce0(grp_outputpixel2buf_fu_367_output_tmp1_ce0),
    .output_tmp1_we0(grp_outputpixel2buf_fu_367_output_tmp1_we0),
    .output_tmp1_d0(grp_outputpixel2buf_fu_367_output_tmp1_d0),
    .IsNL(IsNL),
    .InterSubOutput(InterSubOutput),
    .LayerType(LayerType),
    .TC_MINe26(grp_outputpixel2buf_fu_367_TC_MINe26),
    .TC_MIN(TC_MIN),
    .mLoop(tm_reg_300),
    .rLoop(tr_reg_332),
    .init(grp_outputpixel2buf_fu_367_init),
    .outputoffsetarray_0(grp_outputpixel2buf_fu_367_outputoffsetarray_0),
    .outputoffsetarray_1(grp_outputpixel2buf_fu_367_outputoffsetarray_1),
    .OutputOffset1_sum(OutputOffset1_sum_reg_312),
    .OutputOffset1_sum1(OutputOffset1_sum1_reg_322),
    .OutputOffset2_sum(OutputOffset2_sum_reg_344),
    .tm_next_0_V_read(grp_outputpixel2buf_fu_367_tm_next_0_V_read),
    .enable(grp_outputpixel2buf_fu_367_enable),
    .ap_return_0(grp_outputpixel2buf_fu_367_ap_return_0),
    .ap_return_1(grp_outputpixel2buf_fu_367_ap_return_1),
    .ap_return_2(grp_outputpixel2buf_fu_367_ap_return_2)
);

mmcpy_outputpixel grp_mmcpy_outputpixel_fu_463(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_outputpixel_fu_463_ap_start),
    .ap_done(grp_mmcpy_outputpixel_fu_463_ap_done),
    .ap_idle(grp_mmcpy_outputpixel_fu_463_ap_idle),
    .ap_ready(grp_mmcpy_outputpixel_fu_463_ap_ready),
    .m_axi_Output_r_AWVALID(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWVALID),
    .m_axi_Output_r_AWREADY(m_axi_Output_r_AWREADY),
    .m_axi_Output_r_AWADDR(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWADDR),
    .m_axi_Output_r_AWID(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWID),
    .m_axi_Output_r_AWLEN(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLEN),
    .m_axi_Output_r_AWSIZE(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWSIZE),
    .m_axi_Output_r_AWBURST(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWBURST),
    .m_axi_Output_r_AWLOCK(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLOCK),
    .m_axi_Output_r_AWCACHE(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWCACHE),
    .m_axi_Output_r_AWPROT(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWPROT),
    .m_axi_Output_r_AWQOS(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWQOS),
    .m_axi_Output_r_AWREGION(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWREGION),
    .m_axi_Output_r_AWUSER(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWUSER),
    .m_axi_Output_r_WVALID(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WVALID),
    .m_axi_Output_r_WREADY(m_axi_Output_r_WREADY),
    .m_axi_Output_r_WDATA(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WDATA),
    .m_axi_Output_r_WSTRB(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WSTRB),
    .m_axi_Output_r_WLAST(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WLAST),
    .m_axi_Output_r_WID(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WID),
    .m_axi_Output_r_WUSER(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WUSER),
    .m_axi_Output_r_ARVALID(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARVALID),
    .m_axi_Output_r_ARREADY(1'b0),
    .m_axi_Output_r_ARADDR(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARADDR),
    .m_axi_Output_r_ARID(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARID),
    .m_axi_Output_r_ARLEN(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLEN),
    .m_axi_Output_r_ARSIZE(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARSIZE),
    .m_axi_Output_r_ARBURST(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARBURST),
    .m_axi_Output_r_ARLOCK(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARLOCK),
    .m_axi_Output_r_ARCACHE(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARCACHE),
    .m_axi_Output_r_ARPROT(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARPROT),
    .m_axi_Output_r_ARQOS(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARQOS),
    .m_axi_Output_r_ARREGION(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARREGION),
    .m_axi_Output_r_ARUSER(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_ARUSER),
    .m_axi_Output_r_RVALID(1'b0),
    .m_axi_Output_r_RREADY(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_RREADY),
    .m_axi_Output_r_RDATA(32'd0),
    .m_axi_Output_r_RLAST(1'b0),
    .m_axi_Output_r_RID(1'd0),
    .m_axi_Output_r_RUSER(1'd0),
    .m_axi_Output_r_RRESP(2'd0),
    .m_axi_Output_r_BVALID(m_axi_Output_r_BVALID),
    .m_axi_Output_r_BREADY(grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_BREADY),
    .m_axi_Output_r_BRESP(m_axi_Output_r_BRESP),
    .m_axi_Output_r_BID(m_axi_Output_r_BID),
    .m_axi_Output_r_BUSER(m_axi_Output_r_BUSER),
    .Output_offset(Output_offset),
    .m_axi_Output1_AWVALID(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWVALID),
    .m_axi_Output1_AWREADY(m_axi_Output1_AWREADY),
    .m_axi_Output1_AWADDR(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWADDR),
    .m_axi_Output1_AWID(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWID),
    .m_axi_Output1_AWLEN(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLEN),
    .m_axi_Output1_AWSIZE(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWSIZE),
    .m_axi_Output1_AWBURST(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWBURST),
    .m_axi_Output1_AWLOCK(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLOCK),
    .m_axi_Output1_AWCACHE(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWCACHE),
    .m_axi_Output1_AWPROT(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWPROT),
    .m_axi_Output1_AWQOS(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWQOS),
    .m_axi_Output1_AWREGION(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWREGION),
    .m_axi_Output1_AWUSER(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWUSER),
    .m_axi_Output1_WVALID(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WVALID),
    .m_axi_Output1_WREADY(m_axi_Output1_WREADY),
    .m_axi_Output1_WDATA(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WDATA),
    .m_axi_Output1_WSTRB(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WSTRB),
    .m_axi_Output1_WLAST(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WLAST),
    .m_axi_Output1_WID(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WID),
    .m_axi_Output1_WUSER(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WUSER),
    .m_axi_Output1_ARVALID(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARVALID),
    .m_axi_Output1_ARREADY(1'b0),
    .m_axi_Output1_ARADDR(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARADDR),
    .m_axi_Output1_ARID(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARID),
    .m_axi_Output1_ARLEN(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLEN),
    .m_axi_Output1_ARSIZE(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARSIZE),
    .m_axi_Output1_ARBURST(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARBURST),
    .m_axi_Output1_ARLOCK(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARLOCK),
    .m_axi_Output1_ARCACHE(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARCACHE),
    .m_axi_Output1_ARPROT(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARPROT),
    .m_axi_Output1_ARQOS(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARQOS),
    .m_axi_Output1_ARREGION(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARREGION),
    .m_axi_Output1_ARUSER(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_ARUSER),
    .m_axi_Output1_RVALID(1'b0),
    .m_axi_Output1_RREADY(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_RREADY),
    .m_axi_Output1_RDATA(32'd0),
    .m_axi_Output1_RLAST(1'b0),
    .m_axi_Output1_RID(1'd0),
    .m_axi_Output1_RUSER(1'd0),
    .m_axi_Output1_RRESP(2'd0),
    .m_axi_Output1_BVALID(m_axi_Output1_BVALID),
    .m_axi_Output1_BREADY(grp_mmcpy_outputpixel_fu_463_m_axi_Output1_BREADY),
    .m_axi_Output1_BRESP(m_axi_Output1_BRESP),
    .m_axi_Output1_BID(m_axi_Output1_BID),
    .m_axi_Output1_BUSER(m_axi_Output1_BUSER),
    .Output1_offset(Output1_offset),
    .output_tmp_address0(grp_mmcpy_outputpixel_fu_463_output_tmp_address0),
    .output_tmp_ce0(grp_mmcpy_outputpixel_fu_463_output_tmp_ce0),
    .output_tmp_q0(grp_mmcpy_outputpixel_fu_463_output_tmp_q0),
    .output_tmp1_address0(grp_mmcpy_outputpixel_fu_463_output_tmp1_address0),
    .output_tmp1_ce0(grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0),
    .output_tmp1_q0(grp_mmcpy_outputpixel_fu_463_output_tmp1_q0),
    .tm_V_6(grp_mmcpy_outputpixel_fu_463_tm_V_6),
    .mLoop1_V(mLoop1_V_reg_947),
    .mLoop2_V(mLoop2_V_1_reg_954),
    .outputoffsetarray_0(grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0),
    .outputoffsetarray_1(grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1),
    .OutputLength(tmp_reg_979),
    .OutputLength1(tmp_reg_979),
    .enable(grp_mmcpy_outputpixel_fu_463_enable)
);

YOLO2_FPGA_mul_mueQU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 28 ))
YOLO2_FPGA_mul_mueQU_U1075(
    .din0(r_V_fu_802_p0),
    .din1(r_V_fu_802_p1),
    .dout(r_V_fu_802_p2)
);

YOLO2_FPGA_mac_mueRU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
YOLO2_FPGA_mac_mueRU_U1076(
    .din0(grp_fu_808_p0),
    .din1(grp_fu_808_p1),
    .din2(r_V_reg_937),
    .dout(grp_fu_808_p3)
);

YOLO2_FPGA_mac_mueSV #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 29 ))
YOLO2_FPGA_mac_mueSV_U1077(
    .din0(grp_fu_816_p0),
    .din1(grp_fu_816_p1),
    .din2(grp_fu_816_p2),
    .dout(grp_fu_816_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_outputpixel_fu_463_ap_start_reg <= 1'b0;
    end else begin
        if ((((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
            grp_mmcpy_outputpixel_fu_463_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_outputpixel_fu_463_ap_ready == 1'b1)) begin
            grp_mmcpy_outputpixel_fu_463_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_outputpixel2buf_fu_367_ap_start_reg <= 1'b0;
    end else begin
        if ((((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
            grp_outputpixel2buf_fu_367_ap_start_reg <= 1'b1;
        end else if ((grp_outputpixel2buf_fu_367_ap_ready == 1'b1)) begin
            grp_outputpixel2buf_fu_367_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        OutputOffset1_sum1_reg_322 <= OutputOffset1_sum1_1_fu_752_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        OutputOffset1_sum1_reg_322 <= grp_fu_816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        OutputOffset1_sum_reg_312 <= OutputOffset1_sum_1_fu_747_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        OutputOffset1_sum_reg_312 <= OutputOffset1_sum_3_s_fu_612_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((write_flag_read_read_fu_240_p2 == 1'd1) & (exitcond1_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        OutputOffset2_sum_reg_344 <= 14'd0;
    end else if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        OutputOffset2_sum_reg_344 <= OutputOffset2_sum_1_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        pingpong_fu_194 <= ap_phi_mux_pingpong_2_phi_fu_359_p4;
    end else if (((write_flag_read_read_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        pingpong_fu_194 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tm_reg_300 <= tm_1_reg_1014;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tm_reg_300 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((write_flag_read_read_fu_240_p2 == 1'd1) & (exitcond1_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tr_reg_332 <= 5'd0;
    end else if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        tr_reg_332 <= tr_1_reg_1022;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        wb_start_flag_fu_190 <= 1'd0;
    end else if (((write_flag_read_read_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        wb_start_flag_fu_190 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        OutputOffset3_cast_reg_1001[8 : 0] <= OutputOffset3_cast_fu_670_p1[8 : 0];
        OutputOffset_cast_reg_995[17 : 0] <= OutputOffset_cast_fu_659_p1[17 : 0];
        TC_MINe26_reg_969 <= TC_MINe26_fu_615_p2;
        mLoop_1_reg_985 <= mLoop_1_fu_637_p3;
        rLoop_cast4_cast_reg_990[1 : 0] <= rLoop_cast4_cast_fu_644_p3[1 : 0];
rLoop_cast4_cast_reg_990[4 : 3] <= rLoop_cast4_cast_fu_644_p3[4 : 3];
        tmp_2_cast3_cast_reg_1006[0] <= tmp_2_cast3_cast_fu_674_p3[0];
tmp_2_cast3_cast_reg_1006[4 : 3] <= tmp_2_cast3_cast_fu_674_p3[4 : 3];
        tmp_reg_979[2] <= tmp_fu_629_p3[2];
tmp_reg_979[5] <= tmp_fu_629_p3[5];
tmp_reg_979[7] <= tmp_fu_629_p3[7];
    end
end

always @ (posedge ap_clk) begin
    if (((write_flag_read_read_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        Output_w_9b_V_reg_921 <= Output_w_9b_V_fu_510_p1;
        TM_MIN_6b_V_reg_915 <= TM_MIN_6b_V_fu_506_p1;
        c_9b_V_reg_932 <= c_9b_V_fu_522_p1;
        r_9b_V_reg_927 <= r_9b_V_fu_518_p1;
        r_V_reg_937 <= r_V_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mLoop1_V_reg_947 <= mLoop1_V_fu_586_p3;
        mLoop2_V_1_reg_954 <= mLoop2_V_1_fu_594_p3;
        mLoop_reg_959 <= {{mLoop1_V_fu_586_p3[4:1]}};
        r_V_3_reg_942 <= r_V_3_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        outputoffsetarray1_0_1_reg_1065 <= outputoffsetarray1_0_fu_214;
        outputoffsetarray1_1_1_reg_1071 <= outputoffsetarray1_1_fu_218;
        outputoffsetarray_0_2_reg_1053 <= outputoffsetarray_0_1_fu_206;
        outputoffsetarray_1_2_reg_1059 <= outputoffsetarray_1_1_fu_210;
        pingpong_load_reg_1027 <= pingpong_fu_194;
        tm_next1_0_V_1_load_reg_1047 <= tm_next1_0_V_1_fu_202;
        tm_next_0_V_1_load_reg_1041 <= tm_next_0_V_1_fu_198;
        tmp_5_reg_1031 <= tmp_5_fu_707_p2;
        wb_start_flag_load_reg_1036 <= wb_start_flag_fu_190;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        outputoffsetarray1_0_fu_214 <= grp_outputpixel2buf_fu_367_ap_return_1;
        outputoffsetarray1_1_fu_218 <= grp_outputpixel2buf_fu_367_ap_return_2;
        tm_next1_0_V_1_fu_202 <= grp_outputpixel2buf_fu_367_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        outputoffsetarray_0_1_fu_206 <= grp_outputpixel2buf_fu_367_ap_return_1;
        outputoffsetarray_1_1_fu_210 <= grp_outputpixel2buf_fu_367_ap_return_2;
        tm_next_0_V_1_fu_198 <= grp_outputpixel2buf_fu_367_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((write_flag_read_read_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tm_1_reg_1014 <= tm_1_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_6_reg_1082 <= grp_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_9_reg_1077 <= grp_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tr_1_reg_1022 <= tr_1_fu_698_p2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & ((exitcond1_fu_682_p2 == 1'd1) | (write_flag_read_read_fu_240_p2 == 1'd0))) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd0)) begin
            ap_phi_mux_pingpong_2_phi_fu_359_p4 = 1'd1;
        end else if ((pingpong_load_reg_1027 == 1'd1)) begin
            ap_phi_mux_pingpong_2_phi_fu_359_p4 = 1'd0;
        end else begin
            ap_phi_mux_pingpong_2_phi_fu_359_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_pingpong_2_phi_fu_359_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((exitcond1_fu_682_p2 == 1'd1) | (write_flag_read_read_fu_240_p2 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_mmcpy_outputpixel_fu_463_enable = tmp_6_reg_1082;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_mmcpy_outputpixel_fu_463_enable = tmp_9_reg_1077;
        end else begin
            grp_mmcpy_outputpixel_fu_463_enable = 'bx;
        end
    end else begin
        grp_mmcpy_outputpixel_fu_463_enable = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 = output_tmp11_q0;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 = output_tmp01_q0;
        end else begin
            grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 = 'bx;
        end
    end else begin
        grp_mmcpy_outputpixel_fu_463_output_tmp1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_mmcpy_outputpixel_fu_463_output_tmp_q0 = output_tmp10_q0;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_mmcpy_outputpixel_fu_463_output_tmp_q0 = output_tmp00_q0;
        end else begin
            grp_mmcpy_outputpixel_fu_463_output_tmp_q0 = 'bx;
        end
    end else begin
        grp_mmcpy_outputpixel_fu_463_output_tmp_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 = outputoffsetarray1_0_1_reg_1065;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 = outputoffsetarray_0_2_reg_1053;
        end else begin
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 = 'bx;
        end
    end else begin
        grp_mmcpy_outputpixel_fu_463_outputoffsetarray_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 = outputoffsetarray1_1_1_reg_1071;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 = outputoffsetarray_1_2_reg_1059;
        end else begin
            grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 = 'bx;
        end
    end else begin
        grp_mmcpy_outputpixel_fu_463_outputoffsetarray_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_mmcpy_outputpixel_fu_463_tm_V_6 = tm_next1_0_V_1_load_reg_1047;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_mmcpy_outputpixel_fu_463_tm_V_6 = tm_next_0_V_1_load_reg_1041;
        end else begin
            grp_mmcpy_outputpixel_fu_463_tm_V_6 = 'bx;
        end
    end else begin
        grp_mmcpy_outputpixel_fu_463_tm_V_6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_outputpixel2buf_fu_367_outputoffsetarray_0 = outputoffsetarray_0_2_reg_1053;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_outputpixel2buf_fu_367_outputoffsetarray_0 = outputoffsetarray1_0_1_reg_1065;
        end else begin
            grp_outputpixel2buf_fu_367_outputoffsetarray_0 = 'bx;
        end
    end else begin
        grp_outputpixel2buf_fu_367_outputoffsetarray_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_outputpixel2buf_fu_367_outputoffsetarray_1 = outputoffsetarray_1_2_reg_1059;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_outputpixel2buf_fu_367_outputoffsetarray_1 = outputoffsetarray1_1_1_reg_1071;
        end else begin
            grp_outputpixel2buf_fu_367_outputoffsetarray_1 = 'bx;
        end
    end else begin
        grp_outputpixel2buf_fu_367_outputoffsetarray_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            grp_outputpixel2buf_fu_367_tm_next_0_V_read = tm_next_0_V_1_load_reg_1041;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            grp_outputpixel2buf_fu_367_tm_next_0_V_read = tm_next1_0_V_1_load_reg_1047;
        end else begin
            grp_outputpixel2buf_fu_367_tm_next_0_V_read = 'bx;
        end
    end else begin
        grp_outputpixel2buf_fu_367_tm_next_0_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output1_AWVALID = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWVALID;
    end else begin
        m_axi_Output1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output1_BREADY = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_BREADY;
    end else begin
        m_axi_Output1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output1_WVALID = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WVALID;
    end else begin
        m_axi_Output1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output_r_AWVALID = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWVALID;
    end else begin
        m_axi_Output_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output_r_BREADY = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_BREADY;
    end else begin
        m_axi_Output_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_load_fu_704_p1 == 1'd1) & (exitcond_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((exitcond_fu_693_p2 == 1'd0) & (pingpong_load_load_fu_704_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output_r_WVALID = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WVALID;
    end else begin
        m_axi_Output_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_0_ce0 = grp_outputpixel2buf_fu_367_output_buffer_0_ce0;
    end else begin
        output_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_10_ce0 = grp_outputpixel2buf_fu_367_output_buffer_10_ce0;
    end else begin
        output_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_11_ce0 = grp_outputpixel2buf_fu_367_output_buffer_11_ce0;
    end else begin
        output_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_12_ce0 = grp_outputpixel2buf_fu_367_output_buffer_12_ce0;
    end else begin
        output_buffer_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_13_ce0 = grp_outputpixel2buf_fu_367_output_buffer_13_ce0;
    end else begin
        output_buffer_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_14_ce0 = grp_outputpixel2buf_fu_367_output_buffer_14_ce0;
    end else begin
        output_buffer_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_15_ce0 = grp_outputpixel2buf_fu_367_output_buffer_15_ce0;
    end else begin
        output_buffer_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_16_ce0 = grp_outputpixel2buf_fu_367_output_buffer_16_ce0;
    end else begin
        output_buffer_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_17_ce0 = grp_outputpixel2buf_fu_367_output_buffer_17_ce0;
    end else begin
        output_buffer_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_18_ce0 = grp_outputpixel2buf_fu_367_output_buffer_18_ce0;
    end else begin
        output_buffer_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_19_ce0 = grp_outputpixel2buf_fu_367_output_buffer_19_ce0;
    end else begin
        output_buffer_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_1_ce0 = grp_outputpixel2buf_fu_367_output_buffer_1_ce0;
    end else begin
        output_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_20_ce0 = grp_outputpixel2buf_fu_367_output_buffer_20_ce0;
    end else begin
        output_buffer_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_21_ce0 = grp_outputpixel2buf_fu_367_output_buffer_21_ce0;
    end else begin
        output_buffer_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_22_ce0 = grp_outputpixel2buf_fu_367_output_buffer_22_ce0;
    end else begin
        output_buffer_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_23_ce0 = grp_outputpixel2buf_fu_367_output_buffer_23_ce0;
    end else begin
        output_buffer_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_24_ce0 = grp_outputpixel2buf_fu_367_output_buffer_24_ce0;
    end else begin
        output_buffer_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_25_ce0 = grp_outputpixel2buf_fu_367_output_buffer_25_ce0;
    end else begin
        output_buffer_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_26_ce0 = grp_outputpixel2buf_fu_367_output_buffer_26_ce0;
    end else begin
        output_buffer_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_27_ce0 = grp_outputpixel2buf_fu_367_output_buffer_27_ce0;
    end else begin
        output_buffer_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_28_ce0 = grp_outputpixel2buf_fu_367_output_buffer_28_ce0;
    end else begin
        output_buffer_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_29_ce0 = grp_outputpixel2buf_fu_367_output_buffer_29_ce0;
    end else begin
        output_buffer_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_2_ce0 = grp_outputpixel2buf_fu_367_output_buffer_2_ce0;
    end else begin
        output_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_30_ce0 = grp_outputpixel2buf_fu_367_output_buffer_30_ce0;
    end else begin
        output_buffer_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_31_ce0 = grp_outputpixel2buf_fu_367_output_buffer_31_ce0;
    end else begin
        output_buffer_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_3_ce0 = grp_outputpixel2buf_fu_367_output_buffer_3_ce0;
    end else begin
        output_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_4_ce0 = grp_outputpixel2buf_fu_367_output_buffer_4_ce0;
    end else begin
        output_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_5_ce0 = grp_outputpixel2buf_fu_367_output_buffer_5_ce0;
    end else begin
        output_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_6_ce0 = grp_outputpixel2buf_fu_367_output_buffer_6_ce0;
    end else begin
        output_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_7_ce0 = grp_outputpixel2buf_fu_367_output_buffer_7_ce0;
    end else begin
        output_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_8_ce0 = grp_outputpixel2buf_fu_367_output_buffer_8_ce0;
    end else begin
        output_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        output_buffer_9_ce0 = grp_outputpixel2buf_fu_367_output_buffer_9_ce0;
    end else begin
        output_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp00_address0 = grp_mmcpy_outputpixel_fu_463_output_tmp_address0;
        end else if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp00_address0 = grp_outputpixel2buf_fu_367_output_tmp_address0;
        end else begin
            output_tmp00_address0 = 'bx;
        end
    end else begin
        output_tmp00_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp00_ce0 = grp_mmcpy_outputpixel_fu_463_output_tmp_ce0;
        end else if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp00_ce0 = grp_outputpixel2buf_fu_367_output_tmp_ce0;
        end else begin
            output_tmp00_ce0 = 1'b0;
        end
    end else begin
        output_tmp00_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        output_tmp00_we0 = grp_outputpixel2buf_fu_367_output_tmp_we0;
    end else begin
        output_tmp00_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp01_address0 = grp_mmcpy_outputpixel_fu_463_output_tmp1_address0;
        end else if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp01_address0 = grp_outputpixel2buf_fu_367_output_tmp1_address0;
        end else begin
            output_tmp01_address0 = 'bx;
        end
    end else begin
        output_tmp01_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp01_ce0 = grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0;
        end else if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp01_ce0 = grp_outputpixel2buf_fu_367_output_tmp1_ce0;
        end else begin
            output_tmp01_ce0 = 1'b0;
        end
    end else begin
        output_tmp01_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_load_reg_1027 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        output_tmp01_we0 = grp_outputpixel2buf_fu_367_output_tmp1_we0;
    end else begin
        output_tmp01_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp10_address0 = grp_mmcpy_outputpixel_fu_463_output_tmp_address0;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp10_address0 = grp_outputpixel2buf_fu_367_output_tmp_address0;
        end else begin
            output_tmp10_address0 = 'bx;
        end
    end else begin
        output_tmp10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp10_ce0 = grp_mmcpy_outputpixel_fu_463_output_tmp_ce0;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp10_ce0 = grp_outputpixel2buf_fu_367_output_tmp_ce0;
        end else begin
            output_tmp10_ce0 = 1'b0;
        end
    end else begin
        output_tmp10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_tmp10_we0 = grp_outputpixel2buf_fu_367_output_tmp_we0;
    end else begin
        output_tmp10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp11_address0 = grp_mmcpy_outputpixel_fu_463_output_tmp1_address0;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp11_address0 = grp_outputpixel2buf_fu_367_output_tmp1_address0;
        end else begin
            output_tmp11_address0 = 'bx;
        end
    end else begin
        output_tmp11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_load_reg_1027 == 1'd1)) begin
            output_tmp11_ce0 = grp_mmcpy_outputpixel_fu_463_output_tmp1_ce0;
        end else if ((pingpong_load_reg_1027 == 1'd0)) begin
            output_tmp11_ce0 = grp_outputpixel2buf_fu_367_output_tmp1_ce0;
        end else begin
            output_tmp11_ce0 = 1'b0;
        end
    end else begin
        output_tmp11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_load_reg_1027 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_tmp11_we0 = grp_outputpixel2buf_fu_367_output_tmp1_we0;
    end else begin
        output_tmp11_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((write_flag_read_read_fu_240_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((write_flag_read_read_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ((exitcond1_fu_682_p2 == 1'd1) | (write_flag_read_read_fu_240_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutputOffset1_sum1_1_fu_752_p2 = (OutputOffset_cast_reg_995 + OutputOffset1_sum1_reg_322);

assign OutputOffset1_sum_1_fu_747_p2 = (OutputOffset_cast_reg_995 + OutputOffset1_sum_reg_312);

assign OutputOffset1_sum_3_s_fu_612_p1 = r_V_3_reg_942;

assign OutputOffset2_sum_1_fu_787_p2 = (OutputOffset3_cast_reg_1001 + OutputOffset2_sum_reg_344);

assign OutputOffset3_cast_fu_670_p1 = OutputOffset3_fu_663_p3;

assign OutputOffset3_fu_663_p3 = ((TC_MINe26_fu_615_p2[0:0] === 1'b1) ? Output_w_9b_V_reg_921 : 9'd0);

assign OutputOffset_cast_fu_659_p1 = OutputOffset_fu_652_p3;

assign OutputOffset_fu_652_p3 = ((TC_MINe26_fu_615_p2[0:0] === 1'b1) ? OHxOW : 18'd338);

assign Output_w_9b_V_fu_510_p1 = Output_w[8:0];

assign TC_MINe26_fu_615_p2 = ((TC_MIN == 32'd26) ? 1'b1 : 1'b0);

assign TM_MIN_6b_V_fu_506_p1 = TM_MIN[5:0];

assign TM_MIN_g_V_fu_549_p3 = ((tmp_8_fu_544_p2[0:0] === 1'b1) ? 6'd12 : TM_MIN_6b_V_reg_915);

assign TM_MINaboveTmdiv2_fu_574_p2 = ((TM_MIN_g_V_fu_549_p3 > 6'd16) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state6_on_subcall_done = (((pingpong_load_reg_1027 == 1'd1) & (grp_mmcpy_outputpixel_fu_463_ap_done == 1'b0)) | ((grp_mmcpy_outputpixel_fu_463_ap_done == 1'b0) & (pingpong_load_reg_1027 == 1'd0)) | ((pingpong_load_reg_1027 == 1'd1) & (grp_outputpixel2buf_fu_367_ap_done == 1'b0)) | ((grp_outputpixel2buf_fu_367_ap_done == 1'b0) & (pingpong_load_reg_1027 == 1'd0)));
end

assign c_9b_V_fu_522_p1 = c[8:0];

assign exitcond1_fu_682_p2 = ((tm_reg_300 == mLoop_1_reg_985) ? 1'b1 : 1'b0);

assign exitcond_fu_693_p2 = ((tr_reg_332 == tmp_2_cast3_cast_reg_1006) ? 1'b1 : 1'b0);

assign grp_fu_487_p2 = ((tr_reg_332 != 5'd0) ? 1'b1 : 1'b0);

assign grp_fu_808_p0 = grp_fu_808_p00;

assign grp_fu_808_p00 = Output_w_9b_V_reg_921;

assign grp_fu_808_p1 = grp_fu_808_p10;

assign grp_fu_808_p10 = r_9b_V_reg_927;

assign grp_fu_816_p0 = grp_fu_816_p00;

assign grp_fu_816_p00 = OHxOW;

assign grp_fu_816_p1 = grp_fu_816_p10;

assign grp_fu_816_p10 = mLoop1_V_reg_947;

assign grp_fu_816_p2 = grp_fu_816_p20;

assign grp_fu_816_p20 = r_V_3_reg_942;

assign grp_mmcpy_outputpixel_fu_463_ap_start = grp_mmcpy_outputpixel_fu_463_ap_start_reg;

assign grp_outputpixel2buf_fu_367_TC_MINe26 = TC_MINe26_reg_969;

assign grp_outputpixel2buf_fu_367_ap_start = grp_outputpixel2buf_fu_367_ap_start_reg;

assign grp_outputpixel2buf_fu_367_enable = tmp_5_reg_1031;

assign grp_outputpixel2buf_fu_367_init = wb_start_flag_load_reg_1036;

assign mLoop1_V_fu_586_p3 = ((TM_MINaboveTmdiv2_fu_574_p2[0:0] === 1'b1) ? 5'd16 : tmp_10_fu_556_p1);

assign mLoop2_V_1_fu_594_p3 = ((TM_MINaboveTmdiv2_fu_574_p2[0:0] === 1'b1) ? mLoop2_V_fu_580_p2 : 6'd0);

assign mLoop2_V_fu_580_p2 = ($signed(6'd48) + $signed(TM_MIN_g_V_fu_549_p3));

assign mLoop_1_fu_637_p3 = ((TC_MINe26_fu_615_p2[0:0] === 1'b1) ? mLoop1_V_reg_947 : mLoop_3_fu_626_p1);

assign mLoop_3_fu_626_p1 = mLoop_reg_959;

assign m_10b_V_fu_514_p1 = m[9:0];

assign m_axi_Output1_ARADDR = 32'd0;

assign m_axi_Output1_ARBURST = 2'd0;

assign m_axi_Output1_ARCACHE = 4'd0;

assign m_axi_Output1_ARID = 1'd0;

assign m_axi_Output1_ARLEN = 32'd0;

assign m_axi_Output1_ARLOCK = 2'd0;

assign m_axi_Output1_ARPROT = 3'd0;

assign m_axi_Output1_ARQOS = 4'd0;

assign m_axi_Output1_ARREGION = 4'd0;

assign m_axi_Output1_ARSIZE = 3'd0;

assign m_axi_Output1_ARUSER = 1'd0;

assign m_axi_Output1_ARVALID = 1'b0;

assign m_axi_Output1_AWADDR = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWADDR;

assign m_axi_Output1_AWBURST = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWBURST;

assign m_axi_Output1_AWCACHE = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWCACHE;

assign m_axi_Output1_AWID = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWID;

assign m_axi_Output1_AWLEN = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLEN;

assign m_axi_Output1_AWLOCK = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWLOCK;

assign m_axi_Output1_AWPROT = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWPROT;

assign m_axi_Output1_AWQOS = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWQOS;

assign m_axi_Output1_AWREGION = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWREGION;

assign m_axi_Output1_AWSIZE = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWSIZE;

assign m_axi_Output1_AWUSER = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_AWUSER;

assign m_axi_Output1_RREADY = 1'b0;

assign m_axi_Output1_WDATA = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WDATA;

assign m_axi_Output1_WID = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WID;

assign m_axi_Output1_WLAST = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WLAST;

assign m_axi_Output1_WSTRB = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WSTRB;

assign m_axi_Output1_WUSER = grp_mmcpy_outputpixel_fu_463_m_axi_Output1_WUSER;

assign m_axi_Output_r_ARADDR = 32'd0;

assign m_axi_Output_r_ARBURST = 2'd0;

assign m_axi_Output_r_ARCACHE = 4'd0;

assign m_axi_Output_r_ARID = 1'd0;

assign m_axi_Output_r_ARLEN = 32'd0;

assign m_axi_Output_r_ARLOCK = 2'd0;

assign m_axi_Output_r_ARPROT = 3'd0;

assign m_axi_Output_r_ARQOS = 4'd0;

assign m_axi_Output_r_ARREGION = 4'd0;

assign m_axi_Output_r_ARSIZE = 3'd0;

assign m_axi_Output_r_ARUSER = 1'd0;

assign m_axi_Output_r_ARVALID = 1'b0;

assign m_axi_Output_r_AWADDR = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWADDR;

assign m_axi_Output_r_AWBURST = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWBURST;

assign m_axi_Output_r_AWCACHE = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWCACHE;

assign m_axi_Output_r_AWID = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWID;

assign m_axi_Output_r_AWLEN = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLEN;

assign m_axi_Output_r_AWLOCK = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWLOCK;

assign m_axi_Output_r_AWPROT = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWPROT;

assign m_axi_Output_r_AWQOS = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWQOS;

assign m_axi_Output_r_AWREGION = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWREGION;

assign m_axi_Output_r_AWSIZE = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWSIZE;

assign m_axi_Output_r_AWUSER = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_AWUSER;

assign m_axi_Output_r_RREADY = 1'b0;

assign m_axi_Output_r_WDATA = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WDATA;

assign m_axi_Output_r_WID = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WID;

assign m_axi_Output_r_WLAST = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WLAST;

assign m_axi_Output_r_WSTRB = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WSTRB;

assign m_axi_Output_r_WUSER = grp_mmcpy_outputpixel_fu_463_m_axi_Output_r_WUSER;

assign output_buffer_0_address0 = grp_outputpixel2buf_fu_367_output_buffer_0_address0;

assign output_buffer_10_address0 = grp_outputpixel2buf_fu_367_output_buffer_10_address0;

assign output_buffer_11_address0 = grp_outputpixel2buf_fu_367_output_buffer_11_address0;

assign output_buffer_12_address0 = grp_outputpixel2buf_fu_367_output_buffer_12_address0;

assign output_buffer_13_address0 = grp_outputpixel2buf_fu_367_output_buffer_13_address0;

assign output_buffer_14_address0 = grp_outputpixel2buf_fu_367_output_buffer_14_address0;

assign output_buffer_15_address0 = grp_outputpixel2buf_fu_367_output_buffer_15_address0;

assign output_buffer_16_address0 = grp_outputpixel2buf_fu_367_output_buffer_16_address0;

assign output_buffer_17_address0 = grp_outputpixel2buf_fu_367_output_buffer_17_address0;

assign output_buffer_18_address0 = grp_outputpixel2buf_fu_367_output_buffer_18_address0;

assign output_buffer_19_address0 = grp_outputpixel2buf_fu_367_output_buffer_19_address0;

assign output_buffer_1_address0 = grp_outputpixel2buf_fu_367_output_buffer_1_address0;

assign output_buffer_20_address0 = grp_outputpixel2buf_fu_367_output_buffer_20_address0;

assign output_buffer_21_address0 = grp_outputpixel2buf_fu_367_output_buffer_21_address0;

assign output_buffer_22_address0 = grp_outputpixel2buf_fu_367_output_buffer_22_address0;

assign output_buffer_23_address0 = grp_outputpixel2buf_fu_367_output_buffer_23_address0;

assign output_buffer_24_address0 = grp_outputpixel2buf_fu_367_output_buffer_24_address0;

assign output_buffer_25_address0 = grp_outputpixel2buf_fu_367_output_buffer_25_address0;

assign output_buffer_26_address0 = grp_outputpixel2buf_fu_367_output_buffer_26_address0;

assign output_buffer_27_address0 = grp_outputpixel2buf_fu_367_output_buffer_27_address0;

assign output_buffer_28_address0 = grp_outputpixel2buf_fu_367_output_buffer_28_address0;

assign output_buffer_29_address0 = grp_outputpixel2buf_fu_367_output_buffer_29_address0;

assign output_buffer_2_address0 = grp_outputpixel2buf_fu_367_output_buffer_2_address0;

assign output_buffer_30_address0 = grp_outputpixel2buf_fu_367_output_buffer_30_address0;

assign output_buffer_31_address0 = grp_outputpixel2buf_fu_367_output_buffer_31_address0;

assign output_buffer_3_address0 = grp_outputpixel2buf_fu_367_output_buffer_3_address0;

assign output_buffer_4_address0 = grp_outputpixel2buf_fu_367_output_buffer_4_address0;

assign output_buffer_5_address0 = grp_outputpixel2buf_fu_367_output_buffer_5_address0;

assign output_buffer_6_address0 = grp_outputpixel2buf_fu_367_output_buffer_6_address0;

assign output_buffer_7_address0 = grp_outputpixel2buf_fu_367_output_buffer_7_address0;

assign output_buffer_8_address0 = grp_outputpixel2buf_fu_367_output_buffer_8_address0;

assign output_buffer_9_address0 = grp_outputpixel2buf_fu_367_output_buffer_9_address0;

assign pingpong_load_load_fu_704_p1 = pingpong_fu_194;

assign rLoop_cast4_cast_fu_644_p3 = ((TC_MINe26_fu_615_p2[0:0] === 1'b1) ? 5'd26 : 5'd1);

assign r_9b_V_fu_518_p1 = r[8:0];

assign r_V_3_fu_569_p2 = (grp_fu_808_p3 + rhs_V_3_cast_fu_566_p1);

assign r_V_fu_802_p0 = r_V_fu_802_p00;

assign r_V_fu_802_p00 = OHxOW;

assign r_V_fu_802_p1 = r_V_fu_802_p10;

assign r_V_fu_802_p10 = m_10b_V_fu_514_p1;

assign rhs_V_3_cast_fu_566_p1 = c_9b_V_reg_932;

assign tm_1_fu_687_p2 = (tm_reg_300 + 5'd1);

assign tmp_10_fu_556_p1 = TM_MIN_g_V_fu_549_p3[4:0];

assign tmp_2_cast3_cast_fu_674_p3 = ((TC_MINe26_fu_615_p2[0:0] === 1'b1) ? 5'd27 : 5'd2);

assign tmp_5_fu_707_p2 = ((tr_reg_332 != rLoop_cast4_cast_reg_990) ? 1'b1 : 1'b0);

assign tmp_8_fu_544_p2 = ((TM_MIN_6b_V_reg_915 == 6'd9) ? 1'b1 : 1'b0);

assign tmp_fu_629_p3 = ((TC_MINe26_fu_615_p2[0:0] === 1'b1) ? 8'd13 : 8'd169);

assign tr_1_fu_698_p2 = (tr_reg_332 + 5'd1);

assign write_flag_read_read_fu_240_p2 = write_flag;

always @ (posedge ap_clk) begin
    tmp_reg_979[1:0] <= 2'b01;
    tmp_reg_979[4:3] <= 2'b01;
    tmp_reg_979[6] <= 1'b0;
    rLoop_cast4_cast_reg_990[2] <= 1'b0;
    OutputOffset_cast_reg_995[28:18] <= 11'b00000000000;
    OutputOffset3_cast_reg_1001[13:9] <= 5'b00000;
    tmp_2_cast3_cast_reg_1006[2:1] <= 2'b01;
end

endmodule //write_back_output_re
