// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module input_load (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_input_r_AWVALID,
        m_axi_input_r_AWREADY,
        m_axi_input_r_AWADDR,
        m_axi_input_r_AWID,
        m_axi_input_r_AWLEN,
        m_axi_input_r_AWSIZE,
        m_axi_input_r_AWBURST,
        m_axi_input_r_AWLOCK,
        m_axi_input_r_AWCACHE,
        m_axi_input_r_AWPROT,
        m_axi_input_r_AWQOS,
        m_axi_input_r_AWREGION,
        m_axi_input_r_AWUSER,
        m_axi_input_r_WVALID,
        m_axi_input_r_WREADY,
        m_axi_input_r_WDATA,
        m_axi_input_r_WSTRB,
        m_axi_input_r_WLAST,
        m_axi_input_r_WID,
        m_axi_input_r_WUSER,
        m_axi_input_r_ARVALID,
        m_axi_input_r_ARREADY,
        m_axi_input_r_ARADDR,
        m_axi_input_r_ARID,
        m_axi_input_r_ARLEN,
        m_axi_input_r_ARSIZE,
        m_axi_input_r_ARBURST,
        m_axi_input_r_ARLOCK,
        m_axi_input_r_ARCACHE,
        m_axi_input_r_ARPROT,
        m_axi_input_r_ARQOS,
        m_axi_input_r_ARREGION,
        m_axi_input_r_ARUSER,
        m_axi_input_r_RVALID,
        m_axi_input_r_RREADY,
        m_axi_input_r_RDATA,
        m_axi_input_r_RLAST,
        m_axi_input_r_RID,
        m_axi_input_r_RUSER,
        m_axi_input_r_RRESP,
        m_axi_input_r_BVALID,
        m_axi_input_r_BREADY,
        m_axi_input_r_BRESP,
        m_axi_input_r_BID,
        m_axi_input_r_BUSER,
        input_offset,
        m_axi_input1_AWVALID,
        m_axi_input1_AWREADY,
        m_axi_input1_AWADDR,
        m_axi_input1_AWID,
        m_axi_input1_AWLEN,
        m_axi_input1_AWSIZE,
        m_axi_input1_AWBURST,
        m_axi_input1_AWLOCK,
        m_axi_input1_AWCACHE,
        m_axi_input1_AWPROT,
        m_axi_input1_AWQOS,
        m_axi_input1_AWREGION,
        m_axi_input1_AWUSER,
        m_axi_input1_WVALID,
        m_axi_input1_WREADY,
        m_axi_input1_WDATA,
        m_axi_input1_WSTRB,
        m_axi_input1_WLAST,
        m_axi_input1_WID,
        m_axi_input1_WUSER,
        m_axi_input1_ARVALID,
        m_axi_input1_ARREADY,
        m_axi_input1_ARADDR,
        m_axi_input1_ARID,
        m_axi_input1_ARLEN,
        m_axi_input1_ARSIZE,
        m_axi_input1_ARBURST,
        m_axi_input1_ARLOCK,
        m_axi_input1_ARCACHE,
        m_axi_input1_ARPROT,
        m_axi_input1_ARQOS,
        m_axi_input1_ARREGION,
        m_axi_input1_ARUSER,
        m_axi_input1_RVALID,
        m_axi_input1_RREADY,
        m_axi_input1_RDATA,
        m_axi_input1_RLAST,
        m_axi_input1_RID,
        m_axi_input1_RUSER,
        m_axi_input1_RRESP,
        m_axi_input1_BVALID,
        m_axi_input1_BREADY,
        m_axi_input1_BRESP,
        m_axi_input1_BID,
        m_axi_input1_BUSER,
        input1_offset,
        m_axi_input2_AWVALID,
        m_axi_input2_AWREADY,
        m_axi_input2_AWADDR,
        m_axi_input2_AWID,
        m_axi_input2_AWLEN,
        m_axi_input2_AWSIZE,
        m_axi_input2_AWBURST,
        m_axi_input2_AWLOCK,
        m_axi_input2_AWCACHE,
        m_axi_input2_AWPROT,
        m_axi_input2_AWQOS,
        m_axi_input2_AWREGION,
        m_axi_input2_AWUSER,
        m_axi_input2_WVALID,
        m_axi_input2_WREADY,
        m_axi_input2_WDATA,
        m_axi_input2_WSTRB,
        m_axi_input2_WLAST,
        m_axi_input2_WID,
        m_axi_input2_WUSER,
        m_axi_input2_ARVALID,
        m_axi_input2_ARREADY,
        m_axi_input2_ARADDR,
        m_axi_input2_ARID,
        m_axi_input2_ARLEN,
        m_axi_input2_ARSIZE,
        m_axi_input2_ARBURST,
        m_axi_input2_ARLOCK,
        m_axi_input2_ARCACHE,
        m_axi_input2_ARPROT,
        m_axi_input2_ARQOS,
        m_axi_input2_ARREGION,
        m_axi_input2_ARUSER,
        m_axi_input2_RVALID,
        m_axi_input2_RREADY,
        m_axi_input2_RDATA,
        m_axi_input2_RLAST,
        m_axi_input2_RID,
        m_axi_input2_RUSER,
        m_axi_input2_RRESP,
        m_axi_input2_BVALID,
        m_axi_input2_BREADY,
        m_axi_input2_BRESP,
        m_axi_input2_BID,
        m_axi_input2_BUSER,
        input2_offset,
        m_axi_input3_AWVALID,
        m_axi_input3_AWREADY,
        m_axi_input3_AWADDR,
        m_axi_input3_AWID,
        m_axi_input3_AWLEN,
        m_axi_input3_AWSIZE,
        m_axi_input3_AWBURST,
        m_axi_input3_AWLOCK,
        m_axi_input3_AWCACHE,
        m_axi_input3_AWPROT,
        m_axi_input3_AWQOS,
        m_axi_input3_AWREGION,
        m_axi_input3_AWUSER,
        m_axi_input3_WVALID,
        m_axi_input3_WREADY,
        m_axi_input3_WDATA,
        m_axi_input3_WSTRB,
        m_axi_input3_WLAST,
        m_axi_input3_WID,
        m_axi_input3_WUSER,
        m_axi_input3_ARVALID,
        m_axi_input3_ARREADY,
        m_axi_input3_ARADDR,
        m_axi_input3_ARID,
        m_axi_input3_ARLEN,
        m_axi_input3_ARSIZE,
        m_axi_input3_ARBURST,
        m_axi_input3_ARLOCK,
        m_axi_input3_ARCACHE,
        m_axi_input3_ARPROT,
        m_axi_input3_ARQOS,
        m_axi_input3_ARREGION,
        m_axi_input3_ARUSER,
        m_axi_input3_RVALID,
        m_axi_input3_RREADY,
        m_axi_input3_RDATA,
        m_axi_input3_RLAST,
        m_axi_input3_RID,
        m_axi_input3_RUSER,
        m_axi_input3_RRESP,
        m_axi_input3_BVALID,
        m_axi_input3_BREADY,
        m_axi_input3_BRESP,
        m_axi_input3_BID,
        m_axi_input3_BUSER,
        input3_offset,
        input_buffer_0_address0,
        input_buffer_0_ce0,
        input_buffer_0_we0,
        input_buffer_0_d0,
        input_buffer_1_address0,
        input_buffer_1_ce0,
        input_buffer_1_we0,
        input_buffer_1_d0,
        input_buffer_2_address0,
        input_buffer_2_ce0,
        input_buffer_2_we0,
        input_buffer_2_d0,
        input_buffer_3_address0,
        input_buffer_3_ce0,
        input_buffer_3_we0,
        input_buffer_3_d0,
        r,
        c,
        n,
        Kernel_stride,
        Padding,
        TRow,
        TCol,
        Input_w,
        Input_h,
        TN_MIN,
        IHxIW,
        LayerType,
        trow_loops_V
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_input_r_AWVALID;
input   m_axi_input_r_AWREADY;
output  [31:0] m_axi_input_r_AWADDR;
output  [0:0] m_axi_input_r_AWID;
output  [31:0] m_axi_input_r_AWLEN;
output  [2:0] m_axi_input_r_AWSIZE;
output  [1:0] m_axi_input_r_AWBURST;
output  [1:0] m_axi_input_r_AWLOCK;
output  [3:0] m_axi_input_r_AWCACHE;
output  [2:0] m_axi_input_r_AWPROT;
output  [3:0] m_axi_input_r_AWQOS;
output  [3:0] m_axi_input_r_AWREGION;
output  [0:0] m_axi_input_r_AWUSER;
output   m_axi_input_r_WVALID;
input   m_axi_input_r_WREADY;
output  [31:0] m_axi_input_r_WDATA;
output  [3:0] m_axi_input_r_WSTRB;
output   m_axi_input_r_WLAST;
output  [0:0] m_axi_input_r_WID;
output  [0:0] m_axi_input_r_WUSER;
output   m_axi_input_r_ARVALID;
input   m_axi_input_r_ARREADY;
output  [31:0] m_axi_input_r_ARADDR;
output  [0:0] m_axi_input_r_ARID;
output  [31:0] m_axi_input_r_ARLEN;
output  [2:0] m_axi_input_r_ARSIZE;
output  [1:0] m_axi_input_r_ARBURST;
output  [1:0] m_axi_input_r_ARLOCK;
output  [3:0] m_axi_input_r_ARCACHE;
output  [2:0] m_axi_input_r_ARPROT;
output  [3:0] m_axi_input_r_ARQOS;
output  [3:0] m_axi_input_r_ARREGION;
output  [0:0] m_axi_input_r_ARUSER;
input   m_axi_input_r_RVALID;
output   m_axi_input_r_RREADY;
input  [31:0] m_axi_input_r_RDATA;
input   m_axi_input_r_RLAST;
input  [0:0] m_axi_input_r_RID;
input  [0:0] m_axi_input_r_RUSER;
input  [1:0] m_axi_input_r_RRESP;
input   m_axi_input_r_BVALID;
output   m_axi_input_r_BREADY;
input  [1:0] m_axi_input_r_BRESP;
input  [0:0] m_axi_input_r_BID;
input  [0:0] m_axi_input_r_BUSER;
input  [29:0] input_offset;
output   m_axi_input1_AWVALID;
input   m_axi_input1_AWREADY;
output  [31:0] m_axi_input1_AWADDR;
output  [0:0] m_axi_input1_AWID;
output  [31:0] m_axi_input1_AWLEN;
output  [2:0] m_axi_input1_AWSIZE;
output  [1:0] m_axi_input1_AWBURST;
output  [1:0] m_axi_input1_AWLOCK;
output  [3:0] m_axi_input1_AWCACHE;
output  [2:0] m_axi_input1_AWPROT;
output  [3:0] m_axi_input1_AWQOS;
output  [3:0] m_axi_input1_AWREGION;
output  [0:0] m_axi_input1_AWUSER;
output   m_axi_input1_WVALID;
input   m_axi_input1_WREADY;
output  [31:0] m_axi_input1_WDATA;
output  [3:0] m_axi_input1_WSTRB;
output   m_axi_input1_WLAST;
output  [0:0] m_axi_input1_WID;
output  [0:0] m_axi_input1_WUSER;
output   m_axi_input1_ARVALID;
input   m_axi_input1_ARREADY;
output  [31:0] m_axi_input1_ARADDR;
output  [0:0] m_axi_input1_ARID;
output  [31:0] m_axi_input1_ARLEN;
output  [2:0] m_axi_input1_ARSIZE;
output  [1:0] m_axi_input1_ARBURST;
output  [1:0] m_axi_input1_ARLOCK;
output  [3:0] m_axi_input1_ARCACHE;
output  [2:0] m_axi_input1_ARPROT;
output  [3:0] m_axi_input1_ARQOS;
output  [3:0] m_axi_input1_ARREGION;
output  [0:0] m_axi_input1_ARUSER;
input   m_axi_input1_RVALID;
output   m_axi_input1_RREADY;
input  [31:0] m_axi_input1_RDATA;
input   m_axi_input1_RLAST;
input  [0:0] m_axi_input1_RID;
input  [0:0] m_axi_input1_RUSER;
input  [1:0] m_axi_input1_RRESP;
input   m_axi_input1_BVALID;
output   m_axi_input1_BREADY;
input  [1:0] m_axi_input1_BRESP;
input  [0:0] m_axi_input1_BID;
input  [0:0] m_axi_input1_BUSER;
input  [29:0] input1_offset;
output   m_axi_input2_AWVALID;
input   m_axi_input2_AWREADY;
output  [31:0] m_axi_input2_AWADDR;
output  [0:0] m_axi_input2_AWID;
output  [31:0] m_axi_input2_AWLEN;
output  [2:0] m_axi_input2_AWSIZE;
output  [1:0] m_axi_input2_AWBURST;
output  [1:0] m_axi_input2_AWLOCK;
output  [3:0] m_axi_input2_AWCACHE;
output  [2:0] m_axi_input2_AWPROT;
output  [3:0] m_axi_input2_AWQOS;
output  [3:0] m_axi_input2_AWREGION;
output  [0:0] m_axi_input2_AWUSER;
output   m_axi_input2_WVALID;
input   m_axi_input2_WREADY;
output  [31:0] m_axi_input2_WDATA;
output  [3:0] m_axi_input2_WSTRB;
output   m_axi_input2_WLAST;
output  [0:0] m_axi_input2_WID;
output  [0:0] m_axi_input2_WUSER;
output   m_axi_input2_ARVALID;
input   m_axi_input2_ARREADY;
output  [31:0] m_axi_input2_ARADDR;
output  [0:0] m_axi_input2_ARID;
output  [31:0] m_axi_input2_ARLEN;
output  [2:0] m_axi_input2_ARSIZE;
output  [1:0] m_axi_input2_ARBURST;
output  [1:0] m_axi_input2_ARLOCK;
output  [3:0] m_axi_input2_ARCACHE;
output  [2:0] m_axi_input2_ARPROT;
output  [3:0] m_axi_input2_ARQOS;
output  [3:0] m_axi_input2_ARREGION;
output  [0:0] m_axi_input2_ARUSER;
input   m_axi_input2_RVALID;
output   m_axi_input2_RREADY;
input  [31:0] m_axi_input2_RDATA;
input   m_axi_input2_RLAST;
input  [0:0] m_axi_input2_RID;
input  [0:0] m_axi_input2_RUSER;
input  [1:0] m_axi_input2_RRESP;
input   m_axi_input2_BVALID;
output   m_axi_input2_BREADY;
input  [1:0] m_axi_input2_BRESP;
input  [0:0] m_axi_input2_BID;
input  [0:0] m_axi_input2_BUSER;
input  [29:0] input2_offset;
output   m_axi_input3_AWVALID;
input   m_axi_input3_AWREADY;
output  [31:0] m_axi_input3_AWADDR;
output  [0:0] m_axi_input3_AWID;
output  [31:0] m_axi_input3_AWLEN;
output  [2:0] m_axi_input3_AWSIZE;
output  [1:0] m_axi_input3_AWBURST;
output  [1:0] m_axi_input3_AWLOCK;
output  [3:0] m_axi_input3_AWCACHE;
output  [2:0] m_axi_input3_AWPROT;
output  [3:0] m_axi_input3_AWQOS;
output  [3:0] m_axi_input3_AWREGION;
output  [0:0] m_axi_input3_AWUSER;
output   m_axi_input3_WVALID;
input   m_axi_input3_WREADY;
output  [31:0] m_axi_input3_WDATA;
output  [3:0] m_axi_input3_WSTRB;
output   m_axi_input3_WLAST;
output  [0:0] m_axi_input3_WID;
output  [0:0] m_axi_input3_WUSER;
output   m_axi_input3_ARVALID;
input   m_axi_input3_ARREADY;
output  [31:0] m_axi_input3_ARADDR;
output  [0:0] m_axi_input3_ARID;
output  [31:0] m_axi_input3_ARLEN;
output  [2:0] m_axi_input3_ARSIZE;
output  [1:0] m_axi_input3_ARBURST;
output  [1:0] m_axi_input3_ARLOCK;
output  [3:0] m_axi_input3_ARCACHE;
output  [2:0] m_axi_input3_ARPROT;
output  [3:0] m_axi_input3_ARQOS;
output  [3:0] m_axi_input3_ARREGION;
output  [0:0] m_axi_input3_ARUSER;
input   m_axi_input3_RVALID;
output   m_axi_input3_RREADY;
input  [31:0] m_axi_input3_RDATA;
input   m_axi_input3_RLAST;
input  [0:0] m_axi_input3_RID;
input  [0:0] m_axi_input3_RUSER;
input  [1:0] m_axi_input3_RRESP;
input   m_axi_input3_BVALID;
output   m_axi_input3_BREADY;
input  [1:0] m_axi_input3_BRESP;
input  [0:0] m_axi_input3_BID;
input  [0:0] m_axi_input3_BUSER;
input  [29:0] input3_offset;
output  [11:0] input_buffer_0_address0;
output   input_buffer_0_ce0;
output   input_buffer_0_we0;
output  [15:0] input_buffer_0_d0;
output  [11:0] input_buffer_1_address0;
output   input_buffer_1_ce0;
output   input_buffer_1_we0;
output  [15:0] input_buffer_1_d0;
output  [11:0] input_buffer_2_address0;
output   input_buffer_2_ce0;
output   input_buffer_2_we0;
output  [15:0] input_buffer_2_d0;
output  [11:0] input_buffer_3_address0;
output   input_buffer_3_ce0;
output   input_buffer_3_we0;
output  [15:0] input_buffer_3_d0;
input  [31:0] r;
input  [31:0] c;
input  [31:0] n;
input  [31:0] Kernel_stride;
input  [31:0] Padding;
input  [7:0] TRow;
input  [7:0] TCol;
input  [31:0] Input_w;
input  [31:0] Input_h;
input  [31:0] TN_MIN;
input  [18:0] IHxIW;
input  [1:0] LayerType;
input  [5:0] trow_loops_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_input_r_ARVALID;
reg m_axi_input_r_RREADY;
reg m_axi_input1_ARVALID;
reg m_axi_input1_RREADY;
reg m_axi_input2_ARVALID;
reg m_axi_input2_RREADY;
reg m_axi_input3_ARVALID;
reg m_axi_input3_RREADY;
reg input_buffer_0_ce0;
reg input_buffer_0_we0;
reg input_buffer_1_ce0;
reg input_buffer_1_we0;
reg input_buffer_2_ce0;
reg input_buffer_2_we0;
reg input_buffer_3_ce0;
reg input_buffer_3_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] input_memcpy_buffer0_address0;
reg    input_memcpy_buffer0_ce0;
reg    input_memcpy_buffer0_we0;
wire   [31:0] input_memcpy_buffer0_q0;
reg   [4:0] input_memcpy_buffer1_address0;
reg    input_memcpy_buffer1_ce0;
reg    input_memcpy_buffer1_we0;
wire   [31:0] input_memcpy_buffer1_q0;
reg   [4:0] input_memcpy_buffer2_address0;
reg    input_memcpy_buffer2_ce0;
reg    input_memcpy_buffer2_we0;
wire   [31:0] input_memcpy_buffer2_q0;
reg   [4:0] input_memcpy_buffer3_address0;
reg    input_memcpy_buffer3_ce0;
reg    input_memcpy_buffer3_we0;
wire   [31:0] input_memcpy_buffer3_q0;
reg   [4:0] input_memcpy_buffer0_1_address0;
reg    input_memcpy_buffer0_1_ce0;
reg    input_memcpy_buffer0_1_we0;
wire   [31:0] input_memcpy_buffer0_1_q0;
reg   [4:0] input_memcpy_buffer1_1_address0;
reg    input_memcpy_buffer1_1_ce0;
reg    input_memcpy_buffer1_1_we0;
wire   [31:0] input_memcpy_buffer1_1_q0;
reg   [4:0] input_memcpy_buffer2_1_address0;
reg    input_memcpy_buffer2_1_ce0;
reg    input_memcpy_buffer2_1_we0;
wire   [31:0] input_memcpy_buffer2_1_q0;
reg   [4:0] input_memcpy_buffer3_1_address0;
reg    input_memcpy_buffer3_1_ce0;
reg    input_memcpy_buffer3_1_we0;
wire   [31:0] input_memcpy_buffer3_1_q0;
wire   [10:0] rhs_V_fu_513_p1;
reg   [10:0] rhs_V_reg_1065;
wire   [11:0] rhs_V_2_fu_517_p1;
reg   [11:0] rhs_V_2_reg_1070;
wire   [11:0] grp_fu_956_p3;
reg   [11:0] r_V_21_reg_1075;
wire   [9:0] TRow_top_V_fu_525_p1;
reg   [9:0] TRow_top_V_reg_1081;
wire   [5:0] tmp_81_fu_528_p1;
reg   [5:0] tmp_81_reg_1086;
wire   [0:0] tmp_86_fu_531_p1;
reg   [0:0] tmp_86_reg_1091;
wire    ap_CS_fsm_state2;
wire   [17:0] IHxIW_18b_V_fu_546_p1;
reg   [17:0] IHxIW_18b_V_reg_1101;
wire   [0:0] tmp_fu_554_p2;
reg   [0:0] tmp_reg_1106;
wire   [9:0] TCol_left_V_fu_559_p1;
reg   [9:0] TCol_left_V_reg_1111;
wire   [11:0] r_V_12_fu_571_p2;
reg   [11:0] r_V_12_reg_1116;
wire   [5:0] tmp_46_fu_584_p2;
reg   [5:0] tmp_46_reg_1121;
wire   [9:0] TRow_top_V_1_fu_595_p3;
reg   [9:0] TRow_top_V_1_reg_1126;
wire   [5:0] row_len_V_fu_652_p2;
reg   [5:0] row_len_V_reg_1131;
wire   [28:0] r_V_15_fu_978_p2;
reg   [28:0] r_V_15_reg_1137;
wire   [0:0] RowSub_V_fu_670_p2;
reg   [0:0] RowSub_V_reg_1142;
wire   [0:0] tmp_88_fu_675_p1;
reg   [0:0] tmp_88_reg_1149;
wire    ap_CS_fsm_state3;
wire   [2:0] TN_MIN_3b_V_fu_682_p1;
reg   [2:0] TN_MIN_3b_V_reg_1184;
wire   [5:0] col_len_V_fu_716_p2;
reg   [5:0] col_len_V_reg_1189;
(* use_dsp48 = "no" *) wire   [29:0] r_V_18_fu_736_p2;
reg   [29:0] r_V_18_reg_1194;
wire   [8:0] p_2_fu_759_p3;
reg   [8:0] p_2_reg_1199;
wire   [5:0] p_3_fu_767_p3;
reg   [5:0] p_3_reg_1204;
wire   [2:0] p_4_fu_783_p3;
reg   [2:0] p_4_reg_1209;
wire   [0:0] ColSub_V_fu_795_p2;
reg   [0:0] ColSub_V_reg_1214;
wire   [6:0] r_V_19_fu_804_p2;
reg   [6:0] r_V_19_reg_1219;
wire   [5:0] tmp_81_cast_fu_810_p1;
reg   [5:0] tmp_81_cast_reg_1224;
wire   [5:0] tmp_51_fu_813_p1;
reg   [5:0] tmp_51_reg_1229;
wire   [6:0] r_V_1_fu_823_p2;
reg   [6:0] r_V_1_reg_1234;
wire   [5:0] TMP_t2_V_fu_838_p2;
reg   [5:0] TMP_t2_V_reg_1242;
wire    ap_CS_fsm_state4;
wire   [0:0] IsRowPixel_fu_864_p2;
reg   [0:0] IsRowPixel_reg_1247;
wire   [0:0] tmp_52_fu_833_p2;
wire   [0:0] tmp_54_fu_870_p2;
reg   [0:0] tmp_54_reg_1252;
wire   [0:0] grp_fu_431_p2;
reg   [0:0] tmp_58_reg_1257;
wire   [0:0] ap_phi_mux_pingpong_phi_fu_327_p4;
reg   [0:0] tmp_56_reg_1262;
wire    ap_CS_fsm_state5;
wire   [5:0] t2_V_fu_943_p2;
wire    ap_CS_fsm_state6;
wire    grp_mmcpy_inputpixel_m2b_fu_348_ap_idle;
wire    grp_mmcpy_inputpixel_m2b_fu_348_ap_ready;
wire    grp_mmcpy_inputpixel_m2b_fu_348_ap_done;
reg   [0:0] pingpong_reg_323;
wire    grp_copy_input2buf_row_fu_391_ap_idle;
wire    grp_copy_input2buf_row_fu_391_ap_ready;
wire    grp_copy_input2buf_row_fu_391_ap_done;
reg    ap_block_state6_on_subcall_done;
wire    ap_CS_fsm_state7;
wire    grp_mmcpy_inputpixel_m2b_fu_348_ap_start;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WDATA;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WSTRB;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WLAST;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WID;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_RREADY;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_BREADY;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WDATA;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WSTRB;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WLAST;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WID;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_RREADY;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_BREADY;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WDATA;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WSTRB;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WLAST;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WID;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_RREADY;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_BREADY;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WDATA;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WSTRB;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WLAST;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WID;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARVALID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARADDR;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARID;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARLEN;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARSIZE;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARBURST;
wire   [1:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARLOCK;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARCACHE;
wire   [2:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARPROT;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARQOS;
wire   [3:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARREGION;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARUSER;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_RREADY;
wire    grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_BREADY;
wire   [4:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_address0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_ce0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_we0;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_d0;
wire   [4:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_address0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_ce0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_we0;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_d0;
wire   [4:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_address0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_ce0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_we0;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_d0;
wire   [4:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_address0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_ce0;
wire    grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_we0;
wire   [31:0] grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_d0;
reg   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_0_V_read;
reg   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_1_V_read;
reg   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_2_V_read;
reg   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_3_V_read;
wire    grp_mmcpy_inputpixel_m2b_fu_348_IsRowPixel;
wire    grp_mmcpy_inputpixel_m2b_fu_348_enable;
wire   [5:0] grp_mmcpy_inputpixel_m2b_fu_348_ap_return_0;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_ap_return_1;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_ap_return_2;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_ap_return_3;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_ap_return_4;
wire   [0:0] grp_mmcpy_inputpixel_m2b_fu_348_ap_return_5;
wire    grp_copy_input2buf_row_fu_391_ap_start;
wire   [11:0] grp_copy_input2buf_row_fu_391_input_buffer_0_address0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_0_ce0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_0_we0;
wire   [15:0] grp_copy_input2buf_row_fu_391_input_buffer_0_d0;
wire   [11:0] grp_copy_input2buf_row_fu_391_input_buffer_1_address0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_1_ce0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_1_we0;
wire   [15:0] grp_copy_input2buf_row_fu_391_input_buffer_1_d0;
wire   [11:0] grp_copy_input2buf_row_fu_391_input_buffer_2_address0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_2_ce0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_2_we0;
wire   [15:0] grp_copy_input2buf_row_fu_391_input_buffer_2_d0;
wire   [11:0] grp_copy_input2buf_row_fu_391_input_buffer_3_address0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_3_ce0;
wire    grp_copy_input2buf_row_fu_391_input_buffer_3_we0;
wire   [15:0] grp_copy_input2buf_row_fu_391_input_buffer_3_d0;
wire   [4:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer_address0;
wire    grp_copy_input2buf_row_fu_391_input_memcpy_buffer_ce0;
reg   [31:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer_q0;
wire   [4:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_address0;
wire    grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_ce0;
reg   [31:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_q0;
wire   [4:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_address0;
wire    grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_ce0;
reg   [31:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_q0;
wire   [4:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_address0;
wire    grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_ce0;
reg   [31:0] grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_q0;
reg   [0:0] grp_copy_input2buf_row_fu_391_RowBeginByte_0_V_re;
reg   [0:0] grp_copy_input2buf_row_fu_391_RowBeginByte_1_V_re;
reg   [0:0] grp_copy_input2buf_row_fu_391_RowBeginByte_2_V_re;
reg   [0:0] grp_copy_input2buf_row_fu_391_RowBeginByte_3_V_re;
reg   [5:0] grp_copy_input2buf_row_fu_391_next_t2_0_V_read;
reg    grp_copy_input2buf_row_fu_391_p_read15;
reg    grp_copy_input2buf_row_fu_391_enable;
reg   [5:0] p_5_reg_300;
reg   [5:0] p_6_reg_311;
reg   [0:0] ap_phi_mux_pingpong_1_phi_fu_339_p4;
reg    grp_mmcpy_inputpixel_m2b_fu_348_ap_start_reg;
reg    grp_copy_input2buf_row_fu_391_ap_start_reg;
reg   [5:0] next_t2_0_V_1_fu_150;
reg   [0:0] next_IsRowPixel_0_1_fu_154;
reg   [5:0] next_t22_0_V_1_fu_158;
reg   [0:0] next_IsRowPixel2_0_1_fu_162;
reg   [0:0] RowBeginByte_0_V_1_fu_166;
reg   [0:0] RowBeginByte_1_V_1_fu_170;
reg   [0:0] RowBeginByte_2_V_1_fu_174;
reg   [0:0] RowBeginByte_3_V_1_fu_178;
reg   [0:0] RowBeginByte2_0_V_1_fu_182;
reg   [0:0] RowBeginByte2_1_V_1_fu_186;
reg   [0:0] RowBeginByte2_2_V_1_fu_190;
reg   [0:0] RowBeginByte2_3_V_1_fu_194;
wire   [1:0] Kernel_stride_2b_V_fu_505_p1;
wire   [0:0] Padding_1b_V_fu_509_p1;
wire   [8:0] r_9b_V_fu_501_p1;
wire   [8:0] c_9b_V_fu_534_p1;
wire   [11:0] grp_fu_967_p3;
wire   [11:0] rhs_V_8_cast_fu_562_p1;
(* use_dsp48 = "no" *) wire   [11:0] r_V_11_fu_566_p2;
wire   [5:0] tmp_77_fu_580_p1;
wire   [5:0] tmp_76_fu_577_p1;
wire   [0:0] tmp_48_fu_590_p2;
wire   [11:0] rhs_V_9_cast_fu_602_p1;
(* use_dsp48 = "no" *) wire   [11:0] r_V_13_fu_606_p2;
wire   [9:0] Input_h_10b_V_fu_542_p1;
wire   [11:0] r_V_14_fu_611_p2;
wire   [11:0] tmp_71_cast_fu_617_p1;
wire   [5:0] tmp_82_fu_627_p1;
wire   [0:0] tmp_49_fu_621_p2;
wire   [5:0] tmp_50_fu_631_p2;
wire   [5:0] tmp_83_fu_636_p1;
wire   [5:0] tmp_20_fu_640_p3;
wire   [5:0] tmp_84_fu_648_p1;
wire   [10:0] n_11b_V_fu_538_p1;
wire   [0:0] tmp_85_fu_666_p1;
wire   [8:0] Input_w_9b_V_fu_678_p1;
wire   [11:0] tmp_cast_fu_692_p1;
wire   [0:0] tmp_s_fu_696_p2;
wire   [5:0] tmp_78_fu_701_p1;
wire   [9:0] TCol_left_V_1_fu_686_p3;
wire   [5:0] tmp_18_fu_705_p3;
wire   [5:0] tmp_79_fu_712_p1;
wire   [29:0] rhs_V_13_cast_fu_732_p1;
wire   [29:0] grp_fu_984_p3;
wire   [0:0] sel_tmp2_fu_747_p2;
wire   [0:0] sel_tmp_fu_741_p2;
wire   [0:0] tmp_21_fu_753_p2;
wire   [2:0] sel_tmp9_fu_775_p3;
wire   [0:0] tmp_87_fu_791_p1;
wire   [6:0] lhs_V_20_cast_fu_800_p1;
wire   [6:0] rhs_V_6_fu_820_p1;
wire   [6:0] lhs_V_1_fu_817_p1;
wire   [6:0] tmp_84_cast_fu_829_p1;
wire   [6:0] tmp_86_cast_fu_844_p1;
wire   [0:0] ult_fu_853_p2;
wire   [0:0] tmp_53_fu_848_p2;
wire   [0:0] rev_fu_858_p2;
wire   [1:0] grp_fu_956_p0;
wire   [8:0] grp_fu_956_p1;
wire   [0:0] grp_fu_956_p2;
wire   [1:0] grp_fu_967_p0;
wire   [8:0] grp_fu_967_p1;
wire   [0:0] grp_fu_967_p2;
wire   [10:0] r_V_15_fu_978_p0;
wire   [17:0] r_V_15_fu_978_p1;
wire   [8:0] grp_fu_984_p0;
wire   [9:0] grp_fu_984_p1;
wire   [28:0] grp_fu_984_p2;
reg   [6:0] ap_NS_fsm;
wire   [10:0] grp_fu_956_p00;
wire   [10:0] grp_fu_956_p10;
wire   [11:0] grp_fu_956_p20;
wire   [10:0] grp_fu_967_p10;
wire   [18:0] grp_fu_984_p00;
wire   [18:0] grp_fu_984_p10;
wire   [29:0] grp_fu_984_p20;
wire   [28:0] r_V_15_fu_978_p00;
wire   [28:0] r_V_15_fu_978_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_mmcpy_inputpixel_m2b_fu_348_ap_start_reg = 1'b0;
#0 grp_copy_input2buf_row_fu_391_ap_start_reg = 1'b0;
end

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer0_address0),
    .ce0(input_memcpy_buffer0_ce0),
    .we0(input_memcpy_buffer0_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_d0),
    .q0(input_memcpy_buffer0_q0)
);

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer1_address0),
    .ce0(input_memcpy_buffer1_ce0),
    .we0(input_memcpy_buffer1_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_d0),
    .q0(input_memcpy_buffer1_q0)
);

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer2_address0),
    .ce0(input_memcpy_buffer2_ce0),
    .we0(input_memcpy_buffer2_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_d0),
    .q0(input_memcpy_buffer2_q0)
);

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer3_address0),
    .ce0(input_memcpy_buffer3_ce0),
    .we0(input_memcpy_buffer3_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_d0),
    .q0(input_memcpy_buffer3_q0)
);

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer0_1_address0),
    .ce0(input_memcpy_buffer0_1_ce0),
    .we0(input_memcpy_buffer0_1_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_d0),
    .q0(input_memcpy_buffer0_1_q0)
);

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer1_1_address0),
    .ce0(input_memcpy_buffer1_1_ce0),
    .we0(input_memcpy_buffer1_1_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_d0),
    .q0(input_memcpy_buffer1_1_q0)
);

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer2_1_address0),
    .ce0(input_memcpy_buffer2_1_ce0),
    .we0(input_memcpy_buffer2_1_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_d0),
    .q0(input_memcpy_buffer2_1_q0)
);

input_load_input_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
input_memcpy_buffer3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_memcpy_buffer3_1_address0),
    .ce0(input_memcpy_buffer3_1_ce0),
    .we0(input_memcpy_buffer3_1_we0),
    .d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_d0),
    .q0(input_memcpy_buffer3_1_q0)
);

mmcpy_inputpixel_m2b grp_mmcpy_inputpixel_m2b_fu_348(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmcpy_inputpixel_m2b_fu_348_ap_start),
    .ap_done(grp_mmcpy_inputpixel_m2b_fu_348_ap_done),
    .ap_idle(grp_mmcpy_inputpixel_m2b_fu_348_ap_idle),
    .ap_ready(grp_mmcpy_inputpixel_m2b_fu_348_ap_ready),
    .m_axi_input_r_AWVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWVALID),
    .m_axi_input_r_AWREADY(1'b0),
    .m_axi_input_r_AWADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWADDR),
    .m_axi_input_r_AWID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWID),
    .m_axi_input_r_AWLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWLEN),
    .m_axi_input_r_AWSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWSIZE),
    .m_axi_input_r_AWBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWBURST),
    .m_axi_input_r_AWLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWLOCK),
    .m_axi_input_r_AWCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWCACHE),
    .m_axi_input_r_AWPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWPROT),
    .m_axi_input_r_AWQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWQOS),
    .m_axi_input_r_AWREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWREGION),
    .m_axi_input_r_AWUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_AWUSER),
    .m_axi_input_r_WVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WVALID),
    .m_axi_input_r_WREADY(1'b0),
    .m_axi_input_r_WDATA(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WDATA),
    .m_axi_input_r_WSTRB(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WSTRB),
    .m_axi_input_r_WLAST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WLAST),
    .m_axi_input_r_WID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WID),
    .m_axi_input_r_WUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_WUSER),
    .m_axi_input_r_ARVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARVALID),
    .m_axi_input_r_ARREADY(m_axi_input_r_ARREADY),
    .m_axi_input_r_ARADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARADDR),
    .m_axi_input_r_ARID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARID),
    .m_axi_input_r_ARLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARLEN),
    .m_axi_input_r_ARSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARSIZE),
    .m_axi_input_r_ARBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARBURST),
    .m_axi_input_r_ARLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARLOCK),
    .m_axi_input_r_ARCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARCACHE),
    .m_axi_input_r_ARPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARPROT),
    .m_axi_input_r_ARQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARQOS),
    .m_axi_input_r_ARREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARREGION),
    .m_axi_input_r_ARUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARUSER),
    .m_axi_input_r_RVALID(m_axi_input_r_RVALID),
    .m_axi_input_r_RREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_RREADY),
    .m_axi_input_r_RDATA(m_axi_input_r_RDATA),
    .m_axi_input_r_RLAST(m_axi_input_r_RLAST),
    .m_axi_input_r_RID(m_axi_input_r_RID),
    .m_axi_input_r_RUSER(m_axi_input_r_RUSER),
    .m_axi_input_r_RRESP(m_axi_input_r_RRESP),
    .m_axi_input_r_BVALID(1'b0),
    .m_axi_input_r_BREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_BREADY),
    .m_axi_input_r_BRESP(2'd0),
    .m_axi_input_r_BID(1'd0),
    .m_axi_input_r_BUSER(1'd0),
    .input_offset(input_offset),
    .m_axi_input1_AWVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWVALID),
    .m_axi_input1_AWREADY(1'b0),
    .m_axi_input1_AWADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWADDR),
    .m_axi_input1_AWID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWID),
    .m_axi_input1_AWLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWLEN),
    .m_axi_input1_AWSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWSIZE),
    .m_axi_input1_AWBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWBURST),
    .m_axi_input1_AWLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWLOCK),
    .m_axi_input1_AWCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWCACHE),
    .m_axi_input1_AWPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWPROT),
    .m_axi_input1_AWQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWQOS),
    .m_axi_input1_AWREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWREGION),
    .m_axi_input1_AWUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_AWUSER),
    .m_axi_input1_WVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WVALID),
    .m_axi_input1_WREADY(1'b0),
    .m_axi_input1_WDATA(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WDATA),
    .m_axi_input1_WSTRB(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WSTRB),
    .m_axi_input1_WLAST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WLAST),
    .m_axi_input1_WID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WID),
    .m_axi_input1_WUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_WUSER),
    .m_axi_input1_ARVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARVALID),
    .m_axi_input1_ARREADY(m_axi_input1_ARREADY),
    .m_axi_input1_ARADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARADDR),
    .m_axi_input1_ARID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARID),
    .m_axi_input1_ARLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARLEN),
    .m_axi_input1_ARSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARSIZE),
    .m_axi_input1_ARBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARBURST),
    .m_axi_input1_ARLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARLOCK),
    .m_axi_input1_ARCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARCACHE),
    .m_axi_input1_ARPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARPROT),
    .m_axi_input1_ARQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARQOS),
    .m_axi_input1_ARREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARREGION),
    .m_axi_input1_ARUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARUSER),
    .m_axi_input1_RVALID(m_axi_input1_RVALID),
    .m_axi_input1_RREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_RREADY),
    .m_axi_input1_RDATA(m_axi_input1_RDATA),
    .m_axi_input1_RLAST(m_axi_input1_RLAST),
    .m_axi_input1_RID(m_axi_input1_RID),
    .m_axi_input1_RUSER(m_axi_input1_RUSER),
    .m_axi_input1_RRESP(m_axi_input1_RRESP),
    .m_axi_input1_BVALID(1'b0),
    .m_axi_input1_BREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_BREADY),
    .m_axi_input1_BRESP(2'd0),
    .m_axi_input1_BID(1'd0),
    .m_axi_input1_BUSER(1'd0),
    .input1_offset(input1_offset),
    .m_axi_input2_AWVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWVALID),
    .m_axi_input2_AWREADY(1'b0),
    .m_axi_input2_AWADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWADDR),
    .m_axi_input2_AWID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWID),
    .m_axi_input2_AWLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWLEN),
    .m_axi_input2_AWSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWSIZE),
    .m_axi_input2_AWBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWBURST),
    .m_axi_input2_AWLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWLOCK),
    .m_axi_input2_AWCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWCACHE),
    .m_axi_input2_AWPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWPROT),
    .m_axi_input2_AWQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWQOS),
    .m_axi_input2_AWREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWREGION),
    .m_axi_input2_AWUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_AWUSER),
    .m_axi_input2_WVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WVALID),
    .m_axi_input2_WREADY(1'b0),
    .m_axi_input2_WDATA(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WDATA),
    .m_axi_input2_WSTRB(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WSTRB),
    .m_axi_input2_WLAST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WLAST),
    .m_axi_input2_WID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WID),
    .m_axi_input2_WUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_WUSER),
    .m_axi_input2_ARVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARVALID),
    .m_axi_input2_ARREADY(m_axi_input2_ARREADY),
    .m_axi_input2_ARADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARADDR),
    .m_axi_input2_ARID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARID),
    .m_axi_input2_ARLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARLEN),
    .m_axi_input2_ARSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARSIZE),
    .m_axi_input2_ARBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARBURST),
    .m_axi_input2_ARLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARLOCK),
    .m_axi_input2_ARCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARCACHE),
    .m_axi_input2_ARPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARPROT),
    .m_axi_input2_ARQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARQOS),
    .m_axi_input2_ARREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARREGION),
    .m_axi_input2_ARUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARUSER),
    .m_axi_input2_RVALID(m_axi_input2_RVALID),
    .m_axi_input2_RREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_RREADY),
    .m_axi_input2_RDATA(m_axi_input2_RDATA),
    .m_axi_input2_RLAST(m_axi_input2_RLAST),
    .m_axi_input2_RID(m_axi_input2_RID),
    .m_axi_input2_RUSER(m_axi_input2_RUSER),
    .m_axi_input2_RRESP(m_axi_input2_RRESP),
    .m_axi_input2_BVALID(1'b0),
    .m_axi_input2_BREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_BREADY),
    .m_axi_input2_BRESP(2'd0),
    .m_axi_input2_BID(1'd0),
    .m_axi_input2_BUSER(1'd0),
    .input2_offset(input2_offset),
    .m_axi_input3_AWVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWVALID),
    .m_axi_input3_AWREADY(1'b0),
    .m_axi_input3_AWADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWADDR),
    .m_axi_input3_AWID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWID),
    .m_axi_input3_AWLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWLEN),
    .m_axi_input3_AWSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWSIZE),
    .m_axi_input3_AWBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWBURST),
    .m_axi_input3_AWLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWLOCK),
    .m_axi_input3_AWCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWCACHE),
    .m_axi_input3_AWPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWPROT),
    .m_axi_input3_AWQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWQOS),
    .m_axi_input3_AWREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWREGION),
    .m_axi_input3_AWUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_AWUSER),
    .m_axi_input3_WVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WVALID),
    .m_axi_input3_WREADY(1'b0),
    .m_axi_input3_WDATA(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WDATA),
    .m_axi_input3_WSTRB(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WSTRB),
    .m_axi_input3_WLAST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WLAST),
    .m_axi_input3_WID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WID),
    .m_axi_input3_WUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_WUSER),
    .m_axi_input3_ARVALID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARVALID),
    .m_axi_input3_ARREADY(m_axi_input3_ARREADY),
    .m_axi_input3_ARADDR(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARADDR),
    .m_axi_input3_ARID(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARID),
    .m_axi_input3_ARLEN(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARLEN),
    .m_axi_input3_ARSIZE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARSIZE),
    .m_axi_input3_ARBURST(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARBURST),
    .m_axi_input3_ARLOCK(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARLOCK),
    .m_axi_input3_ARCACHE(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARCACHE),
    .m_axi_input3_ARPROT(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARPROT),
    .m_axi_input3_ARQOS(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARQOS),
    .m_axi_input3_ARREGION(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARREGION),
    .m_axi_input3_ARUSER(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARUSER),
    .m_axi_input3_RVALID(m_axi_input3_RVALID),
    .m_axi_input3_RREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_RREADY),
    .m_axi_input3_RDATA(m_axi_input3_RDATA),
    .m_axi_input3_RLAST(m_axi_input3_RLAST),
    .m_axi_input3_RID(m_axi_input3_RID),
    .m_axi_input3_RUSER(m_axi_input3_RUSER),
    .m_axi_input3_RRESP(m_axi_input3_RRESP),
    .m_axi_input3_BVALID(1'b0),
    .m_axi_input3_BREADY(grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_BREADY),
    .m_axi_input3_BRESP(2'd0),
    .m_axi_input3_BID(1'd0),
    .m_axi_input3_BUSER(1'd0),
    .input3_offset(input3_offset),
    .input_memcpy_buffer_address0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_address0),
    .input_memcpy_buffer_ce0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_ce0),
    .input_memcpy_buffer_we0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_we0),
    .input_memcpy_buffer_d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_d0),
    .input_memcpy_buffer1_address0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_address0),
    .input_memcpy_buffer1_ce0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_ce0),
    .input_memcpy_buffer1_we0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_we0),
    .input_memcpy_buffer1_d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_d0),
    .input_memcpy_buffer2_address0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_address0),
    .input_memcpy_buffer2_ce0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_ce0),
    .input_memcpy_buffer2_we0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_we0),
    .input_memcpy_buffer2_d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_d0),
    .input_memcpy_buffer3_address0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_address0),
    .input_memcpy_buffer3_ce0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_ce0),
    .input_memcpy_buffer3_we0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_we0),
    .input_memcpy_buffer3_d0(grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_d0),
    .RowBeginByte_0_V_read(grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_0_V_read),
    .RowBeginByte_1_V_read(grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_1_V_read),
    .RowBeginByte_2_V_read(grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_2_V_read),
    .RowBeginByte_3_V_read(grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_3_V_read),
    .TN_MIN_3b_V(TN_MIN_3b_V_reg_1184),
    .next_t2_0_V_write(p_6_reg_311),
    .IN_OFFSET(r_V_18_reg_1194),
    .RowIncreaseLength_V(p_2_reg_1199),
    .IHxIW_18b_V(IHxIW_18b_V_reg_1101),
    .ColIncreaseLength_V(p_3_reg_1204),
    .IsRowPixel(grp_mmcpy_inputpixel_m2b_fu_348_IsRowPixel),
    .enable(grp_mmcpy_inputpixel_m2b_fu_348_enable),
    .ap_return_0(grp_mmcpy_inputpixel_m2b_fu_348_ap_return_0),
    .ap_return_1(grp_mmcpy_inputpixel_m2b_fu_348_ap_return_1),
    .ap_return_2(grp_mmcpy_inputpixel_m2b_fu_348_ap_return_2),
    .ap_return_3(grp_mmcpy_inputpixel_m2b_fu_348_ap_return_3),
    .ap_return_4(grp_mmcpy_inputpixel_m2b_fu_348_ap_return_4),
    .ap_return_5(grp_mmcpy_inputpixel_m2b_fu_348_ap_return_5)
);

copy_input2buf_row grp_copy_input2buf_row_fu_391(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_copy_input2buf_row_fu_391_ap_start),
    .ap_done(grp_copy_input2buf_row_fu_391_ap_done),
    .ap_idle(grp_copy_input2buf_row_fu_391_ap_idle),
    .ap_ready(grp_copy_input2buf_row_fu_391_ap_ready),
    .input_buffer_0_address0(grp_copy_input2buf_row_fu_391_input_buffer_0_address0),
    .input_buffer_0_ce0(grp_copy_input2buf_row_fu_391_input_buffer_0_ce0),
    .input_buffer_0_we0(grp_copy_input2buf_row_fu_391_input_buffer_0_we0),
    .input_buffer_0_d0(grp_copy_input2buf_row_fu_391_input_buffer_0_d0),
    .input_buffer_1_address0(grp_copy_input2buf_row_fu_391_input_buffer_1_address0),
    .input_buffer_1_ce0(grp_copy_input2buf_row_fu_391_input_buffer_1_ce0),
    .input_buffer_1_we0(grp_copy_input2buf_row_fu_391_input_buffer_1_we0),
    .input_buffer_1_d0(grp_copy_input2buf_row_fu_391_input_buffer_1_d0),
    .input_buffer_2_address0(grp_copy_input2buf_row_fu_391_input_buffer_2_address0),
    .input_buffer_2_ce0(grp_copy_input2buf_row_fu_391_input_buffer_2_ce0),
    .input_buffer_2_we0(grp_copy_input2buf_row_fu_391_input_buffer_2_we0),
    .input_buffer_2_d0(grp_copy_input2buf_row_fu_391_input_buffer_2_d0),
    .input_buffer_3_address0(grp_copy_input2buf_row_fu_391_input_buffer_3_address0),
    .input_buffer_3_ce0(grp_copy_input2buf_row_fu_391_input_buffer_3_ce0),
    .input_buffer_3_we0(grp_copy_input2buf_row_fu_391_input_buffer_3_we0),
    .input_buffer_3_d0(grp_copy_input2buf_row_fu_391_input_buffer_3_d0),
    .row_len_V(row_len_V_reg_1131),
    .col_len_V(col_len_V_reg_1189),
    .RowSub_V(RowSub_V_reg_1142),
    .ColSub_V(ColSub_V_reg_1214),
    .input_memcpy_buffer_address0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer_address0),
    .input_memcpy_buffer_ce0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer_ce0),
    .input_memcpy_buffer_q0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer_q0),
    .input_memcpy_buffer1_address0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_address0),
    .input_memcpy_buffer1_ce0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_ce0),
    .input_memcpy_buffer1_q0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_q0),
    .input_memcpy_buffer2_address0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_address0),
    .input_memcpy_buffer2_ce0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_ce0),
    .input_memcpy_buffer2_q0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_q0),
    .input_memcpy_buffer3_address0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_address0),
    .input_memcpy_buffer3_ce0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_ce0),
    .input_memcpy_buffer3_q0(grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_q0),
    .RowBeginByte_0_V_re(grp_copy_input2buf_row_fu_391_RowBeginByte_0_V_re),
    .RowBeginByte_1_V_re(grp_copy_input2buf_row_fu_391_RowBeginByte_1_V_re),
    .RowBeginByte_2_V_re(grp_copy_input2buf_row_fu_391_RowBeginByte_2_V_re),
    .RowBeginByte_3_V_re(grp_copy_input2buf_row_fu_391_RowBeginByte_3_V_re),
    .TCol(TCol),
    .LayerType(LayerType),
    .next_t2_0_V_read(grp_copy_input2buf_row_fu_391_next_t2_0_V_read),
    .p_read15(grp_copy_input2buf_row_fu_391_p_read15),
    .enable(grp_copy_input2buf_row_fu_391_enable),
    .T2Rate_V(p_4_reg_1209)
);

YOLO2_FPGA_mac_mujbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 12 ))
YOLO2_FPGA_mac_mujbC_U76(
    .din0(grp_fu_956_p0),
    .din1(grp_fu_956_p1),
    .din2(grp_fu_956_p2),
    .dout(grp_fu_956_p3)
);

YOLO2_FPGA_mac_mujbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 12 ))
YOLO2_FPGA_mac_mujbC_U77(
    .din0(grp_fu_967_p0),
    .din1(grp_fu_967_p1),
    .din2(grp_fu_967_p2),
    .dout(grp_fu_967_p3)
);

YOLO2_FPGA_mul_mukbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
YOLO2_FPGA_mul_mukbM_U78(
    .din0(r_V_15_fu_978_p0),
    .din1(r_V_15_fu_978_p1),
    .dout(r_V_15_fu_978_p2)
);

YOLO2_FPGA_mac_mulbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
YOLO2_FPGA_mac_mulbW_U79(
    .din0(grp_fu_984_p0),
    .din1(grp_fu_984_p1),
    .din2(grp_fu_984_p2),
    .dout(grp_fu_984_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_copy_input2buf_row_fu_391_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_copy_input2buf_row_fu_391_ap_start_reg <= 1'b1;
        end else if ((grp_copy_input2buf_row_fu_391_ap_ready == 1'b1)) begin
            grp_copy_input2buf_row_fu_391_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmcpy_inputpixel_m2b_fu_348_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_mmcpy_inputpixel_m2b_fu_348_ap_start_reg <= 1'b1;
        end else if ((grp_mmcpy_inputpixel_m2b_fu_348_ap_ready == 1'b1)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        p_5_reg_300 <= TMP_t2_V_reg_1242;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        p_5_reg_300 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        p_6_reg_311 <= t2_V_fu_943_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        p_6_reg_311 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        pingpong_reg_323 <= ap_phi_mux_pingpong_1_phi_fu_339_p4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pingpong_reg_323 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ColSub_V_reg_1214 <= ColSub_V_fu_795_p2;
        TN_MIN_3b_V_reg_1184 <= TN_MIN_3b_V_fu_682_p1;
        col_len_V_reg_1189 <= col_len_V_fu_716_p2;
        p_2_reg_1199 <= p_2_fu_759_p3;
        p_3_reg_1204 <= p_3_fu_767_p3;
        p_4_reg_1209 <= p_4_fu_783_p3;
        r_V_18_reg_1194 <= r_V_18_fu_736_p2;
        r_V_19_reg_1219 <= r_V_19_fu_804_p2;
        r_V_1_reg_1234 <= r_V_1_fu_823_p2;
        tmp_51_reg_1229[2 : 0] <= tmp_51_fu_813_p1[2 : 0];
        tmp_81_cast_reg_1224[0] <= tmp_81_cast_fu_810_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IHxIW_18b_V_reg_1101 <= IHxIW_18b_V_fu_546_p1;
        RowSub_V_reg_1142 <= RowSub_V_fu_670_p2;
        TCol_left_V_reg_1111 <= TCol_left_V_fu_559_p1;
        TRow_top_V_1_reg_1126 <= TRow_top_V_1_fu_595_p3;
        r_V_12_reg_1116 <= r_V_12_fu_571_p2;
        r_V_15_reg_1137 <= r_V_15_fu_978_p2;
        row_len_V_reg_1131 <= row_len_V_fu_652_p2;
        tmp_46_reg_1121 <= tmp_46_fu_584_p2;
        tmp_88_reg_1149 <= tmp_88_fu_675_p1;
        tmp_reg_1106 <= tmp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_52_fu_833_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        IsRowPixel_reg_1247 <= IsRowPixel_fu_864_p2;
        tmp_54_reg_1252 <= tmp_54_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((pingpong_reg_323 == 1'd0) & (1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        RowBeginByte2_0_V_1_fu_182 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_2;
        RowBeginByte2_1_V_1_fu_186 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_3;
        RowBeginByte2_2_V_1_fu_190 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_4;
        RowBeginByte2_3_V_1_fu_194 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_5;
        next_IsRowPixel2_0_1_fu_162 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_1;
        next_t22_0_V_1_fu_158 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        RowBeginByte_0_V_1_fu_166 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_2;
        RowBeginByte_1_V_1_fu_170 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_3;
        RowBeginByte_2_V_1_fu_174 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_4;
        RowBeginByte_3_V_1_fu_178 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_5;
        next_IsRowPixel_0_1_fu_154 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_1;
        next_t2_0_V_1_fu_150 <= grp_mmcpy_inputpixel_m2b_fu_348_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        TMP_t2_V_reg_1242 <= TMP_t2_V_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        TRow_top_V_reg_1081 <= TRow_top_V_fu_525_p1;
        r_V_21_reg_1075 <= grp_fu_956_p3;
        rhs_V_2_reg_1070[0] <= rhs_V_2_fu_517_p1[0];
        rhs_V_reg_1065[1 : 0] <= rhs_V_fu_513_p1[1 : 0];
        tmp_81_reg_1086 <= tmp_81_fu_528_p1;
        tmp_86_reg_1091 <= tmp_86_fu_531_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_pingpong_phi_fu_327_p4 == 1'd1) & (tmp_52_fu_833_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_56_reg_1262 <= grp_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_pingpong_phi_fu_327_p4 == 1'd0) & (tmp_52_fu_833_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_58_reg_1257 <= grp_fu_431_p2;
    end
end

always @ (*) begin
    if ((((tmp_52_fu_833_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            ap_phi_mux_pingpong_1_phi_fu_339_p4 = 1'd1;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            ap_phi_mux_pingpong_1_phi_fu_339_p4 = 1'd0;
        end else begin
            ap_phi_mux_pingpong_1_phi_fu_339_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_pingpong_1_phi_fu_339_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_52_fu_833_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_0_V_re = RowBeginByte2_0_V_1_fu_182;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_0_V_re = RowBeginByte_0_V_1_fu_166;
        end else begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_0_V_re = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_RowBeginByte_0_V_re = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_1_V_re = RowBeginByte2_1_V_1_fu_186;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_1_V_re = RowBeginByte_1_V_1_fu_170;
        end else begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_1_V_re = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_RowBeginByte_1_V_re = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_2_V_re = RowBeginByte2_2_V_1_fu_190;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_2_V_re = RowBeginByte_2_V_1_fu_174;
        end else begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_2_V_re = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_RowBeginByte_2_V_re = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_3_V_re = RowBeginByte2_3_V_1_fu_194;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_3_V_re = RowBeginByte_3_V_1_fu_178;
        end else begin
            grp_copy_input2buf_row_fu_391_RowBeginByte_3_V_re = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_RowBeginByte_3_V_re = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_enable = tmp_56_reg_1262;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_enable = tmp_58_reg_1257;
        end else begin
            grp_copy_input2buf_row_fu_391_enable = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_enable = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_q0 = input_memcpy_buffer1_1_q0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_q0 = input_memcpy_buffer1_q0;
        end else begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_q0 = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_q0 = input_memcpy_buffer2_1_q0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_q0 = input_memcpy_buffer2_q0;
        end else begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_q0 = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_q0 = input_memcpy_buffer3_1_q0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_q0 = input_memcpy_buffer3_q0;
        end else begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_q0 = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer_q0 = input_memcpy_buffer0_1_q0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer_q0 = input_memcpy_buffer0_q0;
        end else begin
            grp_copy_input2buf_row_fu_391_input_memcpy_buffer_q0 = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_input_memcpy_buffer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_next_t2_0_V_read = next_t22_0_V_1_fu_158;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_next_t2_0_V_read = next_t2_0_V_1_fu_150;
        end else begin
            grp_copy_input2buf_row_fu_391_next_t2_0_V_read = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_next_t2_0_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_copy_input2buf_row_fu_391_p_read15 = next_IsRowPixel2_0_1_fu_162;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_copy_input2buf_row_fu_391_p_read15 = next_IsRowPixel_0_1_fu_154;
        end else begin
            grp_copy_input2buf_row_fu_391_p_read15 = 'bx;
        end
    end else begin
        grp_copy_input2buf_row_fu_391_p_read15 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_0_V_read = RowBeginByte_0_V_1_fu_166;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_0_V_read = RowBeginByte2_0_V_1_fu_182;
        end else begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_0_V_read = 'bx;
        end
    end else begin
        grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_0_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_1_V_read = RowBeginByte_1_V_1_fu_170;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_1_V_read = RowBeginByte2_1_V_1_fu_186;
        end else begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_1_V_read = 'bx;
        end
    end else begin
        grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_1_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_2_V_read = RowBeginByte_2_V_1_fu_174;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_2_V_read = RowBeginByte2_2_V_1_fu_190;
        end else begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_2_V_read = 'bx;
        end
    end else begin
        grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_2_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_3_V_read = RowBeginByte_3_V_1_fu_178;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_3_V_read = RowBeginByte2_3_V_1_fu_194;
        end else begin
            grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_3_V_read = 'bx;
        end
    end else begin
        grp_mmcpy_inputpixel_m2b_fu_348_RowBeginByte_3_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_0_ce0 = grp_copy_input2buf_row_fu_391_input_buffer_0_ce0;
    end else begin
        input_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_0_we0 = grp_copy_input2buf_row_fu_391_input_buffer_0_we0;
    end else begin
        input_buffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_1_ce0 = grp_copy_input2buf_row_fu_391_input_buffer_1_ce0;
    end else begin
        input_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_1_we0 = grp_copy_input2buf_row_fu_391_input_buffer_1_we0;
    end else begin
        input_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_2_ce0 = grp_copy_input2buf_row_fu_391_input_buffer_2_ce0;
    end else begin
        input_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_2_we0 = grp_copy_input2buf_row_fu_391_input_buffer_2_we0;
    end else begin
        input_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_3_ce0 = grp_copy_input2buf_row_fu_391_input_buffer_3_ce0;
    end else begin
        input_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        input_buffer_3_we0 = grp_copy_input2buf_row_fu_391_input_buffer_3_we0;
    end else begin
        input_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer0_1_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer_address0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer0_1_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_address0;
        end else begin
            input_memcpy_buffer0_1_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer0_1_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer_ce0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer0_1_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_ce0;
        end else begin
            input_memcpy_buffer0_1_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer0_1_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_we0;
    end else begin
        input_memcpy_buffer0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer0_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer_address0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer0_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_address0;
        end else begin
            input_memcpy_buffer0_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer0_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer_ce0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer0_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_ce0;
        end else begin
            input_memcpy_buffer0_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer0_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer_we0;
    end else begin
        input_memcpy_buffer0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer1_1_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_address0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer1_1_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_address0;
        end else begin
            input_memcpy_buffer1_1_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer1_1_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_ce0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer1_1_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_ce0;
        end else begin
            input_memcpy_buffer1_1_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer1_1_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_we0;
    end else begin
        input_memcpy_buffer1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer1_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_address0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer1_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_address0;
        end else begin
            input_memcpy_buffer1_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer1_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer1_ce0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer1_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_ce0;
        end else begin
            input_memcpy_buffer1_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer1_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer1_we0;
    end else begin
        input_memcpy_buffer1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer2_1_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_address0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer2_1_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_address0;
        end else begin
            input_memcpy_buffer2_1_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer2_1_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_ce0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer2_1_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_ce0;
        end else begin
            input_memcpy_buffer2_1_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer2_1_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_we0;
    end else begin
        input_memcpy_buffer2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer2_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_address0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer2_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_address0;
        end else begin
            input_memcpy_buffer2_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer2_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer2_ce0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer2_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_ce0;
        end else begin
            input_memcpy_buffer2_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer2_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer2_we0;
    end else begin
        input_memcpy_buffer2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer3_1_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_address0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer3_1_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_address0;
        end else begin
            input_memcpy_buffer3_1_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer3_1_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_ce0;
        end else if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer3_1_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_ce0;
        end else begin
            input_memcpy_buffer3_1_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer3_1_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_we0;
    end else begin
        input_memcpy_buffer3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer3_address0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_address0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer3_address0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_address0;
        end else begin
            input_memcpy_buffer3_address0 = 'bx;
        end
    end else begin
        input_memcpy_buffer3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((pingpong_reg_323 == 1'd0)) begin
            input_memcpy_buffer3_ce0 = grp_copy_input2buf_row_fu_391_input_memcpy_buffer3_ce0;
        end else if ((pingpong_reg_323 == 1'd1)) begin
            input_memcpy_buffer3_ce0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_ce0;
        end else begin
            input_memcpy_buffer3_ce0 = 1'b0;
        end
    end else begin
        input_memcpy_buffer3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        input_memcpy_buffer3_we0 = grp_mmcpy_inputpixel_m2b_fu_348_input_memcpy_buffer3_we0;
    end else begin
        input_memcpy_buffer3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input1_ARVALID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARVALID;
    end else begin
        m_axi_input1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input1_RREADY = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_RREADY;
    end else begin
        m_axi_input1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input2_ARVALID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARVALID;
    end else begin
        m_axi_input2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input2_RREADY = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_RREADY;
    end else begin
        m_axi_input2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input3_ARVALID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARVALID;
    end else begin
        m_axi_input3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input3_RREADY = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_RREADY;
    end else begin
        m_axi_input3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input_r_ARVALID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARVALID;
    end else begin
        m_axi_input_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((pingpong_reg_323 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((pingpong_reg_323 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_input_r_RREADY = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_RREADY;
    end else begin
        m_axi_input_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_52_fu_833_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_phi_mux_pingpong_phi_fu_327_p4 == 1'd1) & (tmp_52_fu_833_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ColSub_V_fu_795_p2 = (tmp_88_reg_1149 ^ tmp_87_fu_791_p1);

assign IHxIW_18b_V_fu_546_p1 = IHxIW[17:0];

assign Input_h_10b_V_fu_542_p1 = Input_h[9:0];

assign Input_w_9b_V_fu_678_p1 = Input_w[8:0];

assign IsRowPixel_fu_864_p2 = (tmp_53_fu_848_p2 & rev_fu_858_p2);

assign Kernel_stride_2b_V_fu_505_p1 = Kernel_stride[1:0];

assign Padding_1b_V_fu_509_p1 = Padding[0:0];

assign RowSub_V_fu_670_p2 = (tmp_86_reg_1091 ^ tmp_85_fu_666_p1);

assign TCol_left_V_1_fu_686_p3 = ((tmp_reg_1106[0:0] === 1'b1) ? TCol_left_V_reg_1111 : 10'd0);

assign TCol_left_V_fu_559_p1 = grp_fu_967_p3[9:0];

assign TMP_t2_V_fu_838_p2 = (p_5_reg_300 + 6'd1);

assign TN_MIN_3b_V_fu_682_p1 = TN_MIN[2:0];

assign TRow_top_V_1_fu_595_p3 = ((tmp_48_fu_590_p2[0:0] === 1'b1) ? TRow_top_V_reg_1081 : 10'd0);

assign TRow_top_V_fu_525_p1 = grp_fu_956_p3[9:0];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state6_on_subcall_done = (((pingpong_reg_323 == 1'd1) & (grp_copy_input2buf_row_fu_391_ap_done == 1'b0)) | ((pingpong_reg_323 == 1'd0) & (grp_copy_input2buf_row_fu_391_ap_done == 1'b0)) | ((pingpong_reg_323 == 1'd1) & (grp_mmcpy_inputpixel_m2b_fu_348_ap_done == 1'b0)) | ((pingpong_reg_323 == 1'd0) & (grp_mmcpy_inputpixel_m2b_fu_348_ap_done == 1'b0)));
end

assign ap_phi_mux_pingpong_phi_fu_327_p4 = pingpong_reg_323;

assign c_9b_V_fu_534_p1 = c[8:0];

assign col_len_V_fu_716_p2 = (tmp_18_fu_705_p3 - tmp_79_fu_712_p1);

assign grp_copy_input2buf_row_fu_391_ap_start = grp_copy_input2buf_row_fu_391_ap_start_reg;

assign grp_fu_431_p2 = ((p_5_reg_300 != 6'd0) ? 1'b1 : 1'b0);

assign grp_fu_956_p0 = grp_fu_956_p00;

assign grp_fu_956_p00 = Kernel_stride_2b_V_fu_505_p1;

assign grp_fu_956_p1 = grp_fu_956_p10;

assign grp_fu_956_p10 = r_9b_V_fu_501_p1;

assign grp_fu_956_p2 = grp_fu_956_p20;

assign grp_fu_956_p20 = Padding_1b_V_fu_509_p1;

assign grp_fu_967_p0 = rhs_V_reg_1065;

assign grp_fu_967_p1 = grp_fu_967_p10;

assign grp_fu_967_p10 = c_9b_V_fu_534_p1;

assign grp_fu_967_p2 = rhs_V_2_reg_1070;

assign grp_fu_984_p0 = grp_fu_984_p00;

assign grp_fu_984_p00 = Input_w_9b_V_fu_678_p1;

assign grp_fu_984_p1 = grp_fu_984_p10;

assign grp_fu_984_p10 = TRow_top_V_1_reg_1126;

assign grp_fu_984_p2 = grp_fu_984_p20;

assign grp_fu_984_p20 = r_V_15_reg_1137;

assign grp_mmcpy_inputpixel_m2b_fu_348_IsRowPixel = IsRowPixel_reg_1247;

assign grp_mmcpy_inputpixel_m2b_fu_348_ap_start = grp_mmcpy_inputpixel_m2b_fu_348_ap_start_reg;

assign grp_mmcpy_inputpixel_m2b_fu_348_enable = tmp_54_reg_1252;

assign input_buffer_0_address0 = grp_copy_input2buf_row_fu_391_input_buffer_0_address0;

assign input_buffer_0_d0 = grp_copy_input2buf_row_fu_391_input_buffer_0_d0;

assign input_buffer_1_address0 = grp_copy_input2buf_row_fu_391_input_buffer_1_address0;

assign input_buffer_1_d0 = grp_copy_input2buf_row_fu_391_input_buffer_1_d0;

assign input_buffer_2_address0 = grp_copy_input2buf_row_fu_391_input_buffer_2_address0;

assign input_buffer_2_d0 = grp_copy_input2buf_row_fu_391_input_buffer_2_d0;

assign input_buffer_3_address0 = grp_copy_input2buf_row_fu_391_input_buffer_3_address0;

assign input_buffer_3_d0 = grp_copy_input2buf_row_fu_391_input_buffer_3_d0;

assign lhs_V_1_fu_817_p1 = row_len_V_reg_1131;

assign lhs_V_20_cast_fu_800_p1 = trow_loops_V;

assign m_axi_input1_ARADDR = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARADDR;

assign m_axi_input1_ARBURST = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARBURST;

assign m_axi_input1_ARCACHE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARCACHE;

assign m_axi_input1_ARID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARID;

assign m_axi_input1_ARLEN = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARLEN;

assign m_axi_input1_ARLOCK = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARLOCK;

assign m_axi_input1_ARPROT = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARPROT;

assign m_axi_input1_ARQOS = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARQOS;

assign m_axi_input1_ARREGION = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARREGION;

assign m_axi_input1_ARSIZE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARSIZE;

assign m_axi_input1_ARUSER = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input1_ARUSER;

assign m_axi_input1_AWADDR = 32'd0;

assign m_axi_input1_AWBURST = 2'd0;

assign m_axi_input1_AWCACHE = 4'd0;

assign m_axi_input1_AWID = 1'd0;

assign m_axi_input1_AWLEN = 32'd0;

assign m_axi_input1_AWLOCK = 2'd0;

assign m_axi_input1_AWPROT = 3'd0;

assign m_axi_input1_AWQOS = 4'd0;

assign m_axi_input1_AWREGION = 4'd0;

assign m_axi_input1_AWSIZE = 3'd0;

assign m_axi_input1_AWUSER = 1'd0;

assign m_axi_input1_AWVALID = 1'b0;

assign m_axi_input1_BREADY = 1'b0;

assign m_axi_input1_WDATA = 32'd0;

assign m_axi_input1_WID = 1'd0;

assign m_axi_input1_WLAST = 1'b0;

assign m_axi_input1_WSTRB = 4'd0;

assign m_axi_input1_WUSER = 1'd0;

assign m_axi_input1_WVALID = 1'b0;

assign m_axi_input2_ARADDR = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARADDR;

assign m_axi_input2_ARBURST = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARBURST;

assign m_axi_input2_ARCACHE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARCACHE;

assign m_axi_input2_ARID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARID;

assign m_axi_input2_ARLEN = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARLEN;

assign m_axi_input2_ARLOCK = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARLOCK;

assign m_axi_input2_ARPROT = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARPROT;

assign m_axi_input2_ARQOS = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARQOS;

assign m_axi_input2_ARREGION = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARREGION;

assign m_axi_input2_ARSIZE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARSIZE;

assign m_axi_input2_ARUSER = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input2_ARUSER;

assign m_axi_input2_AWADDR = 32'd0;

assign m_axi_input2_AWBURST = 2'd0;

assign m_axi_input2_AWCACHE = 4'd0;

assign m_axi_input2_AWID = 1'd0;

assign m_axi_input2_AWLEN = 32'd0;

assign m_axi_input2_AWLOCK = 2'd0;

assign m_axi_input2_AWPROT = 3'd0;

assign m_axi_input2_AWQOS = 4'd0;

assign m_axi_input2_AWREGION = 4'd0;

assign m_axi_input2_AWSIZE = 3'd0;

assign m_axi_input2_AWUSER = 1'd0;

assign m_axi_input2_AWVALID = 1'b0;

assign m_axi_input2_BREADY = 1'b0;

assign m_axi_input2_WDATA = 32'd0;

assign m_axi_input2_WID = 1'd0;

assign m_axi_input2_WLAST = 1'b0;

assign m_axi_input2_WSTRB = 4'd0;

assign m_axi_input2_WUSER = 1'd0;

assign m_axi_input2_WVALID = 1'b0;

assign m_axi_input3_ARADDR = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARADDR;

assign m_axi_input3_ARBURST = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARBURST;

assign m_axi_input3_ARCACHE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARCACHE;

assign m_axi_input3_ARID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARID;

assign m_axi_input3_ARLEN = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARLEN;

assign m_axi_input3_ARLOCK = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARLOCK;

assign m_axi_input3_ARPROT = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARPROT;

assign m_axi_input3_ARQOS = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARQOS;

assign m_axi_input3_ARREGION = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARREGION;

assign m_axi_input3_ARSIZE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARSIZE;

assign m_axi_input3_ARUSER = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input3_ARUSER;

assign m_axi_input3_AWADDR = 32'd0;

assign m_axi_input3_AWBURST = 2'd0;

assign m_axi_input3_AWCACHE = 4'd0;

assign m_axi_input3_AWID = 1'd0;

assign m_axi_input3_AWLEN = 32'd0;

assign m_axi_input3_AWLOCK = 2'd0;

assign m_axi_input3_AWPROT = 3'd0;

assign m_axi_input3_AWQOS = 4'd0;

assign m_axi_input3_AWREGION = 4'd0;

assign m_axi_input3_AWSIZE = 3'd0;

assign m_axi_input3_AWUSER = 1'd0;

assign m_axi_input3_AWVALID = 1'b0;

assign m_axi_input3_BREADY = 1'b0;

assign m_axi_input3_WDATA = 32'd0;

assign m_axi_input3_WID = 1'd0;

assign m_axi_input3_WLAST = 1'b0;

assign m_axi_input3_WSTRB = 4'd0;

assign m_axi_input3_WUSER = 1'd0;

assign m_axi_input3_WVALID = 1'b0;

assign m_axi_input_r_ARADDR = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARADDR;

assign m_axi_input_r_ARBURST = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARBURST;

assign m_axi_input_r_ARCACHE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARCACHE;

assign m_axi_input_r_ARID = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARID;

assign m_axi_input_r_ARLEN = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARLEN;

assign m_axi_input_r_ARLOCK = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARLOCK;

assign m_axi_input_r_ARPROT = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARPROT;

assign m_axi_input_r_ARQOS = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARQOS;

assign m_axi_input_r_ARREGION = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARREGION;

assign m_axi_input_r_ARSIZE = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARSIZE;

assign m_axi_input_r_ARUSER = grp_mmcpy_inputpixel_m2b_fu_348_m_axi_input_r_ARUSER;

assign m_axi_input_r_AWADDR = 32'd0;

assign m_axi_input_r_AWBURST = 2'd0;

assign m_axi_input_r_AWCACHE = 4'd0;

assign m_axi_input_r_AWID = 1'd0;

assign m_axi_input_r_AWLEN = 32'd0;

assign m_axi_input_r_AWLOCK = 2'd0;

assign m_axi_input_r_AWPROT = 3'd0;

assign m_axi_input_r_AWQOS = 4'd0;

assign m_axi_input_r_AWREGION = 4'd0;

assign m_axi_input_r_AWSIZE = 3'd0;

assign m_axi_input_r_AWUSER = 1'd0;

assign m_axi_input_r_AWVALID = 1'b0;

assign m_axi_input_r_BREADY = 1'b0;

assign m_axi_input_r_WDATA = 32'd0;

assign m_axi_input_r_WID = 1'd0;

assign m_axi_input_r_WLAST = 1'b0;

assign m_axi_input_r_WSTRB = 4'd0;

assign m_axi_input_r_WUSER = 1'd0;

assign m_axi_input_r_WVALID = 1'b0;

assign n_11b_V_fu_538_p1 = n[10:0];

assign p_2_fu_759_p3 = ((tmp_21_fu_753_p2[0:0] === 1'b1) ? 9'd52 : Input_w_9b_V_fu_678_p1);

assign p_3_fu_767_p3 = ((tmp_21_fu_753_p2[0:0] === 1'b1) ? 6'd52 : col_len_V_fu_716_p2);

assign p_4_fu_783_p3 = ((tmp_21_fu_753_p2[0:0] === 1'b1) ? sel_tmp9_fu_775_p3 : 3'd1);

assign r_9b_V_fu_501_p1 = r[8:0];

assign r_V_11_fu_566_p2 = (rhs_V_8_cast_fu_562_p1 + grp_fu_967_p3);

assign r_V_12_fu_571_p2 = ($signed(12'd4095) + $signed(r_V_11_fu_566_p2));

assign r_V_13_fu_606_p2 = (rhs_V_9_cast_fu_602_p1 + r_V_21_reg_1075);

assign r_V_14_fu_611_p2 = ($signed(12'd4095) + $signed(r_V_13_fu_606_p2));

assign r_V_15_fu_978_p0 = r_V_15_fu_978_p00;

assign r_V_15_fu_978_p00 = n_11b_V_fu_538_p1;

assign r_V_15_fu_978_p1 = r_V_15_fu_978_p10;

assign r_V_15_fu_978_p10 = IHxIW_18b_V_fu_546_p1;

assign r_V_18_fu_736_p2 = (rhs_V_13_cast_fu_732_p1 + grp_fu_984_p3);

assign r_V_19_fu_804_p2 = (7'd1 + lhs_V_20_cast_fu_800_p1);

assign r_V_1_fu_823_p2 = (rhs_V_6_fu_820_p1 + lhs_V_1_fu_817_p1);

assign rev_fu_858_p2 = (ult_fu_853_p2 ^ 1'd1);

assign rhs_V_13_cast_fu_732_p1 = TCol_left_V_1_fu_686_p3;

assign rhs_V_2_fu_517_p1 = Padding_1b_V_fu_509_p1;

assign rhs_V_6_fu_820_p1 = RowSub_V_reg_1142;

assign rhs_V_8_cast_fu_562_p1 = TCol;

assign rhs_V_9_cast_fu_602_p1 = TRow;

assign rhs_V_fu_513_p1 = Kernel_stride_2b_V_fu_505_p1;

assign row_len_V_fu_652_p2 = (tmp_20_fu_640_p3 - tmp_84_fu_648_p1);

assign sel_tmp2_fu_747_p2 = ((Input_w_9b_V_fu_678_p1 == 9'd26) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_775_p3 = ((sel_tmp2_fu_747_p2[0:0] === 1'b1) ? 3'd2 : 3'd4);

assign sel_tmp_fu_741_p2 = ((Input_w_9b_V_fu_678_p1 == 9'd13) ? 1'b1 : 1'b0);

assign t2_V_fu_943_p2 = (tmp_51_reg_1229 + p_6_reg_311);

assign tmp_18_fu_705_p3 = ((tmp_s_fu_696_p2[0:0] === 1'b1) ? tmp_46_reg_1121 : tmp_78_fu_701_p1);

assign tmp_20_fu_640_p3 = ((tmp_49_fu_621_p2[0:0] === 1'b1) ? tmp_50_fu_631_p2 : tmp_83_fu_636_p1);

assign tmp_21_fu_753_p2 = (sel_tmp_fu_741_p2 | sel_tmp2_fu_747_p2);

assign tmp_46_fu_584_p2 = (tmp_77_fu_580_p1 + tmp_76_fu_577_p1);

assign tmp_48_fu_590_p2 = (($signed(r_V_21_reg_1075) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_49_fu_621_p2 = (($signed(r_V_14_fu_611_p2) < $signed(tmp_71_cast_fu_617_p1)) ? 1'b1 : 1'b0);

assign tmp_50_fu_631_p2 = (tmp_82_fu_627_p1 + tmp_81_reg_1086);

assign tmp_51_fu_813_p1 = p_4_fu_783_p3;

assign tmp_52_fu_833_p2 = ((tmp_84_cast_fu_829_p1 < r_V_19_reg_1219) ? 1'b1 : 1'b0);

assign tmp_53_fu_848_p2 = ((tmp_86_cast_fu_844_p1 < r_V_1_reg_1234) ? 1'b1 : 1'b0);

assign tmp_54_fu_870_p2 = ((p_5_reg_300 != trow_loops_V) ? 1'b1 : 1'b0);

assign tmp_71_cast_fu_617_p1 = Input_h_10b_V_fu_542_p1;

assign tmp_76_fu_577_p1 = grp_fu_967_p3[5:0];

assign tmp_77_fu_580_p1 = TCol[5:0];

assign tmp_78_fu_701_p1 = Input_w[5:0];

assign tmp_79_fu_712_p1 = TCol_left_V_1_fu_686_p3[5:0];

assign tmp_81_cast_fu_810_p1 = RowSub_V_reg_1142;

assign tmp_81_fu_528_p1 = grp_fu_956_p3[5:0];

assign tmp_82_fu_627_p1 = TRow[5:0];

assign tmp_83_fu_636_p1 = Input_h[5:0];

assign tmp_84_cast_fu_829_p1 = p_5_reg_300;

assign tmp_84_fu_648_p1 = TRow_top_V_1_fu_595_p3[5:0];

assign tmp_85_fu_666_p1 = TRow_top_V_1_fu_595_p3[0:0];

assign tmp_86_cast_fu_844_p1 = p_6_reg_311;

assign tmp_86_fu_531_p1 = grp_fu_956_p3[0:0];

assign tmp_87_fu_791_p1 = TCol_left_V_1_fu_686_p3[0:0];

assign tmp_88_fu_675_p1 = grp_fu_967_p3[0:0];

assign tmp_cast_fu_692_p1 = Input_w_9b_V_fu_678_p1;

assign tmp_fu_554_p2 = (($signed(grp_fu_967_p3) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_s_fu_696_p2 = (($signed(r_V_12_reg_1116) < $signed(tmp_cast_fu_692_p1)) ? 1'b1 : 1'b0);

assign ult_fu_853_p2 = ((p_6_reg_311 < tmp_81_cast_reg_1224) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    rhs_V_reg_1065[10:2] <= 9'b000000000;
    rhs_V_2_reg_1070[11:1] <= 11'b00000000000;
    tmp_81_cast_reg_1224[5:1] <= 5'b00000;
    tmp_51_reg_1229[5:3] <= 3'b000;
end

endmodule //input_load
