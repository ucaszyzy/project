// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mmcpy_outputpixel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mmcpy_outputpixel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mmcpy_outputpixel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> mmcpy_outputpixel::ap_ST_fsm_state1 = "1";
const sc_lv<2> mmcpy_outputpixel::ap_ST_fsm_state2 = "10";
const sc_lv<32> mmcpy_outputpixel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> mmcpy_outputpixel::ap_const_lv1_0 = "0";
const sc_lv<3> mmcpy_outputpixel::ap_const_lv3_0 = "000";
const sc_lv<2> mmcpy_outputpixel::ap_const_lv2_0 = "00";
const sc_lv<4> mmcpy_outputpixel::ap_const_lv4_0 = "0000";
const sc_lv<1> mmcpy_outputpixel::ap_const_lv1_1 = "1";
const sc_lv<32> mmcpy_outputpixel::ap_const_lv32_1 = "1";
const bool mmcpy_outputpixel::ap_const_boolean_0 = false;
const bool mmcpy_outputpixel::ap_const_boolean_1 = true;

mmcpy_outputpixel::mmcpy_outputpixel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_mmcpy_outputport_fu_124 = new mmcpy_outputport("grp_mmcpy_outputport_fu_124");
    grp_mmcpy_outputport_fu_124->ap_clk(ap_clk);
    grp_mmcpy_outputport_fu_124->ap_rst(ap_rst);
    grp_mmcpy_outputport_fu_124->ap_start(grp_mmcpy_outputport_fu_124_ap_start);
    grp_mmcpy_outputport_fu_124->ap_done(grp_mmcpy_outputport_fu_124_ap_done);
    grp_mmcpy_outputport_fu_124->ap_idle(grp_mmcpy_outputport_fu_124_ap_idle);
    grp_mmcpy_outputport_fu_124->ap_ready(grp_mmcpy_outputport_fu_124_ap_ready);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWVALID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWREADY(m_axi_Output_r_AWREADY);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWADDR(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWLEN(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWSIZE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWBURST(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWLOCK(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWCACHE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWPROT(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWQOS(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWREGION(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_AWUSER(grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_WVALID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_WREADY(m_axi_Output_r_WREADY);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_WDATA(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_WSTRB(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_WLAST(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_WID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_WUSER(grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARVALID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARVALID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARREADY(ap_var_for_const0);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARADDR(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARADDR);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARID(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARLEN(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLEN);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARSIZE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARSIZE);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARBURST(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARBURST);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARLOCK(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLOCK);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARCACHE(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARCACHE);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARPROT(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARPROT);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARQOS(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARQOS);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARREGION(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARREGION);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_ARUSER(grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARUSER);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_RVALID(ap_var_for_const0);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_RREADY(grp_mmcpy_outputport_fu_124_m_axi_Output_r_RREADY);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_RDATA(ap_var_for_const1);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_RLAST(ap_var_for_const0);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_RID(ap_var_for_const2);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_RUSER(ap_var_for_const2);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_RRESP(ap_var_for_const3);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_BVALID(m_axi_Output_r_BVALID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_BREADY(grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_BRESP(m_axi_Output_r_BRESP);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_BID(m_axi_Output_r_BID);
    grp_mmcpy_outputport_fu_124->m_axi_Output_r_BUSER(m_axi_Output_r_BUSER);
    grp_mmcpy_outputport_fu_124->Output_offset(Output_offset);
    grp_mmcpy_outputport_fu_124->output_tmp_address0(grp_mmcpy_outputport_fu_124_output_tmp_address0);
    grp_mmcpy_outputport_fu_124->output_tmp_ce0(grp_mmcpy_outputport_fu_124_output_tmp_ce0);
    grp_mmcpy_outputport_fu_124->output_tmp_q0(output_tmp_q0);
    grp_mmcpy_outputport_fu_124->tm_V_4(tm_V_6);
    grp_mmcpy_outputport_fu_124->mLoop_V(mLoop1_V);
    grp_mmcpy_outputport_fu_124->OutputOffset(outputoffsetarray_0);
    grp_mmcpy_outputport_fu_124->OutputLength(OutputLength);
    grp_mmcpy_outputport1_fu_142 = new mmcpy_outputport1("grp_mmcpy_outputport1_fu_142");
    grp_mmcpy_outputport1_fu_142->ap_clk(ap_clk);
    grp_mmcpy_outputport1_fu_142->ap_rst(ap_rst);
    grp_mmcpy_outputport1_fu_142->ap_start(grp_mmcpy_outputport1_fu_142_ap_start);
    grp_mmcpy_outputport1_fu_142->ap_done(grp_mmcpy_outputport1_fu_142_ap_done);
    grp_mmcpy_outputport1_fu_142->ap_idle(grp_mmcpy_outputport1_fu_142_ap_idle);
    grp_mmcpy_outputport1_fu_142->ap_ready(grp_mmcpy_outputport1_fu_142_ap_ready);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWVALID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWREADY(m_axi_Output1_AWREADY);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWADDR(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWLEN(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWSIZE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWBURST(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWLOCK(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWCACHE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWPROT(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWQOS(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWREGION(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_AWUSER(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_WVALID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_WREADY(m_axi_Output1_WREADY);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_WDATA(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_WSTRB(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_WLAST(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_WID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_WUSER(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARVALID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARVALID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARREADY(ap_var_for_const0);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARADDR(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARADDR);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARID(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARLEN(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLEN);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARSIZE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARSIZE);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARBURST(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARBURST);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARLOCK(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLOCK);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARCACHE(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARCACHE);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARPROT(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARPROT);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARQOS(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARQOS);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARREGION(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARREGION);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_ARUSER(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARUSER);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_RVALID(ap_var_for_const0);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_RREADY(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_RREADY);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_RDATA(ap_var_for_const1);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_RLAST(ap_var_for_const0);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_RID(ap_var_for_const2);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_RUSER(ap_var_for_const2);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_RRESP(ap_var_for_const3);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_BVALID(m_axi_Output1_BVALID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_BREADY(grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_BRESP(m_axi_Output1_BRESP);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_BID(m_axi_Output1_BID);
    grp_mmcpy_outputport1_fu_142->m_axi_Output_r_BUSER(m_axi_Output1_BUSER);
    grp_mmcpy_outputport1_fu_142->Output_offset(Output1_offset);
    grp_mmcpy_outputport1_fu_142->output_tmp_address0(grp_mmcpy_outputport1_fu_142_output_tmp_address0);
    grp_mmcpy_outputport1_fu_142->output_tmp_ce0(grp_mmcpy_outputport1_fu_142_output_tmp_ce0);
    grp_mmcpy_outputport1_fu_142->output_tmp_q0(output_tmp1_q0);
    grp_mmcpy_outputport1_fu_142->tm_V_2(tm_V_6);
    grp_mmcpy_outputport1_fu_142->mLoop_V(mLoop2_V);
    grp_mmcpy_outputport1_fu_142->OutputOffset(outputoffsetarray_1);
    grp_mmcpy_outputport1_fu_142->OutputLength(OutputLength1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2_on_subcall_done);
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_ap_done );
    sensitive << ( grp_mmcpy_outputport1_fu_142_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_enable_read_read_fu_64_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable );

    SC_METHOD(thread_grp_mmcpy_outputport1_fu_142_ap_start);
    sensitive << ( grp_mmcpy_outputport1_fu_142_ap_start_reg );

    SC_METHOD(thread_grp_mmcpy_outputport_fu_124_ap_start);
    sensitive << ( grp_mmcpy_outputport_fu_124_ap_start_reg );

    SC_METHOD(thread_m_axi_Output1_ARADDR);

    SC_METHOD(thread_m_axi_Output1_ARBURST);

    SC_METHOD(thread_m_axi_Output1_ARCACHE);

    SC_METHOD(thread_m_axi_Output1_ARID);

    SC_METHOD(thread_m_axi_Output1_ARLEN);

    SC_METHOD(thread_m_axi_Output1_ARLOCK);

    SC_METHOD(thread_m_axi_Output1_ARPROT);

    SC_METHOD(thread_m_axi_Output1_ARQOS);

    SC_METHOD(thread_m_axi_Output1_ARREGION);

    SC_METHOD(thread_m_axi_Output1_ARSIZE);

    SC_METHOD(thread_m_axi_Output1_ARUSER);

    SC_METHOD(thread_m_axi_Output1_ARVALID);

    SC_METHOD(thread_m_axi_Output1_AWADDR);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWBURST);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWCACHE);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWLEN);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWLOCK);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWPROT);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWQOS);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWREGION);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWSIZE);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWUSER);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_AWVALID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_BREADY);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_RREADY);

    SC_METHOD(thread_m_axi_Output1_WDATA);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_WID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_WLAST);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_WSTRB);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_WUSER);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output1_WVALID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_ARADDR);

    SC_METHOD(thread_m_axi_Output_r_ARBURST);

    SC_METHOD(thread_m_axi_Output_r_ARCACHE);

    SC_METHOD(thread_m_axi_Output_r_ARID);

    SC_METHOD(thread_m_axi_Output_r_ARLEN);

    SC_METHOD(thread_m_axi_Output_r_ARLOCK);

    SC_METHOD(thread_m_axi_Output_r_ARPROT);

    SC_METHOD(thread_m_axi_Output_r_ARQOS);

    SC_METHOD(thread_m_axi_Output_r_ARREGION);

    SC_METHOD(thread_m_axi_Output_r_ARSIZE);

    SC_METHOD(thread_m_axi_Output_r_ARUSER);

    SC_METHOD(thread_m_axi_Output_r_ARVALID);

    SC_METHOD(thread_m_axi_Output_r_AWADDR);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWBURST);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWCACHE);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWLEN);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWLOCK);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWPROT);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWQOS);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWREGION);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWSIZE);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWUSER);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_AWVALID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_BREADY);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_RREADY);

    SC_METHOD(thread_m_axi_Output_r_WDATA);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_WID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_WLAST);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_WSTRB);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_WUSER);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_Output_r_WVALID);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_output_tmp1_address0);
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_output_tmp_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_output_tmp1_ce0);
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport1_fu_142_output_tmp_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_output_tmp_address0);
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_output_tmp_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_output_tmp_ce0);
    sensitive << ( enable_read_read_fu_64_p2 );
    sensitive << ( grp_mmcpy_outputport_fu_124_output_tmp_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    ap_CS_fsm = "01";
    grp_mmcpy_outputport_fu_124_ap_start_reg = SC_LOGIC_0;
    grp_mmcpy_outputport1_fu_142_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mmcpy_outputpixel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_Output_r_AWVALID, "(port)m_axi_Output_r_AWVALID");
    sc_trace(mVcdFile, m_axi_Output_r_AWREADY, "(port)m_axi_Output_r_AWREADY");
    sc_trace(mVcdFile, m_axi_Output_r_AWADDR, "(port)m_axi_Output_r_AWADDR");
    sc_trace(mVcdFile, m_axi_Output_r_AWID, "(port)m_axi_Output_r_AWID");
    sc_trace(mVcdFile, m_axi_Output_r_AWLEN, "(port)m_axi_Output_r_AWLEN");
    sc_trace(mVcdFile, m_axi_Output_r_AWSIZE, "(port)m_axi_Output_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_Output_r_AWBURST, "(port)m_axi_Output_r_AWBURST");
    sc_trace(mVcdFile, m_axi_Output_r_AWLOCK, "(port)m_axi_Output_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_Output_r_AWCACHE, "(port)m_axi_Output_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_Output_r_AWPROT, "(port)m_axi_Output_r_AWPROT");
    sc_trace(mVcdFile, m_axi_Output_r_AWQOS, "(port)m_axi_Output_r_AWQOS");
    sc_trace(mVcdFile, m_axi_Output_r_AWREGION, "(port)m_axi_Output_r_AWREGION");
    sc_trace(mVcdFile, m_axi_Output_r_AWUSER, "(port)m_axi_Output_r_AWUSER");
    sc_trace(mVcdFile, m_axi_Output_r_WVALID, "(port)m_axi_Output_r_WVALID");
    sc_trace(mVcdFile, m_axi_Output_r_WREADY, "(port)m_axi_Output_r_WREADY");
    sc_trace(mVcdFile, m_axi_Output_r_WDATA, "(port)m_axi_Output_r_WDATA");
    sc_trace(mVcdFile, m_axi_Output_r_WSTRB, "(port)m_axi_Output_r_WSTRB");
    sc_trace(mVcdFile, m_axi_Output_r_WLAST, "(port)m_axi_Output_r_WLAST");
    sc_trace(mVcdFile, m_axi_Output_r_WID, "(port)m_axi_Output_r_WID");
    sc_trace(mVcdFile, m_axi_Output_r_WUSER, "(port)m_axi_Output_r_WUSER");
    sc_trace(mVcdFile, m_axi_Output_r_ARVALID, "(port)m_axi_Output_r_ARVALID");
    sc_trace(mVcdFile, m_axi_Output_r_ARREADY, "(port)m_axi_Output_r_ARREADY");
    sc_trace(mVcdFile, m_axi_Output_r_ARADDR, "(port)m_axi_Output_r_ARADDR");
    sc_trace(mVcdFile, m_axi_Output_r_ARID, "(port)m_axi_Output_r_ARID");
    sc_trace(mVcdFile, m_axi_Output_r_ARLEN, "(port)m_axi_Output_r_ARLEN");
    sc_trace(mVcdFile, m_axi_Output_r_ARSIZE, "(port)m_axi_Output_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_Output_r_ARBURST, "(port)m_axi_Output_r_ARBURST");
    sc_trace(mVcdFile, m_axi_Output_r_ARLOCK, "(port)m_axi_Output_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_Output_r_ARCACHE, "(port)m_axi_Output_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_Output_r_ARPROT, "(port)m_axi_Output_r_ARPROT");
    sc_trace(mVcdFile, m_axi_Output_r_ARQOS, "(port)m_axi_Output_r_ARQOS");
    sc_trace(mVcdFile, m_axi_Output_r_ARREGION, "(port)m_axi_Output_r_ARREGION");
    sc_trace(mVcdFile, m_axi_Output_r_ARUSER, "(port)m_axi_Output_r_ARUSER");
    sc_trace(mVcdFile, m_axi_Output_r_RVALID, "(port)m_axi_Output_r_RVALID");
    sc_trace(mVcdFile, m_axi_Output_r_RREADY, "(port)m_axi_Output_r_RREADY");
    sc_trace(mVcdFile, m_axi_Output_r_RDATA, "(port)m_axi_Output_r_RDATA");
    sc_trace(mVcdFile, m_axi_Output_r_RLAST, "(port)m_axi_Output_r_RLAST");
    sc_trace(mVcdFile, m_axi_Output_r_RID, "(port)m_axi_Output_r_RID");
    sc_trace(mVcdFile, m_axi_Output_r_RUSER, "(port)m_axi_Output_r_RUSER");
    sc_trace(mVcdFile, m_axi_Output_r_RRESP, "(port)m_axi_Output_r_RRESP");
    sc_trace(mVcdFile, m_axi_Output_r_BVALID, "(port)m_axi_Output_r_BVALID");
    sc_trace(mVcdFile, m_axi_Output_r_BREADY, "(port)m_axi_Output_r_BREADY");
    sc_trace(mVcdFile, m_axi_Output_r_BRESP, "(port)m_axi_Output_r_BRESP");
    sc_trace(mVcdFile, m_axi_Output_r_BID, "(port)m_axi_Output_r_BID");
    sc_trace(mVcdFile, m_axi_Output_r_BUSER, "(port)m_axi_Output_r_BUSER");
    sc_trace(mVcdFile, Output_offset, "(port)Output_offset");
    sc_trace(mVcdFile, m_axi_Output1_AWVALID, "(port)m_axi_Output1_AWVALID");
    sc_trace(mVcdFile, m_axi_Output1_AWREADY, "(port)m_axi_Output1_AWREADY");
    sc_trace(mVcdFile, m_axi_Output1_AWADDR, "(port)m_axi_Output1_AWADDR");
    sc_trace(mVcdFile, m_axi_Output1_AWID, "(port)m_axi_Output1_AWID");
    sc_trace(mVcdFile, m_axi_Output1_AWLEN, "(port)m_axi_Output1_AWLEN");
    sc_trace(mVcdFile, m_axi_Output1_AWSIZE, "(port)m_axi_Output1_AWSIZE");
    sc_trace(mVcdFile, m_axi_Output1_AWBURST, "(port)m_axi_Output1_AWBURST");
    sc_trace(mVcdFile, m_axi_Output1_AWLOCK, "(port)m_axi_Output1_AWLOCK");
    sc_trace(mVcdFile, m_axi_Output1_AWCACHE, "(port)m_axi_Output1_AWCACHE");
    sc_trace(mVcdFile, m_axi_Output1_AWPROT, "(port)m_axi_Output1_AWPROT");
    sc_trace(mVcdFile, m_axi_Output1_AWQOS, "(port)m_axi_Output1_AWQOS");
    sc_trace(mVcdFile, m_axi_Output1_AWREGION, "(port)m_axi_Output1_AWREGION");
    sc_trace(mVcdFile, m_axi_Output1_AWUSER, "(port)m_axi_Output1_AWUSER");
    sc_trace(mVcdFile, m_axi_Output1_WVALID, "(port)m_axi_Output1_WVALID");
    sc_trace(mVcdFile, m_axi_Output1_WREADY, "(port)m_axi_Output1_WREADY");
    sc_trace(mVcdFile, m_axi_Output1_WDATA, "(port)m_axi_Output1_WDATA");
    sc_trace(mVcdFile, m_axi_Output1_WSTRB, "(port)m_axi_Output1_WSTRB");
    sc_trace(mVcdFile, m_axi_Output1_WLAST, "(port)m_axi_Output1_WLAST");
    sc_trace(mVcdFile, m_axi_Output1_WID, "(port)m_axi_Output1_WID");
    sc_trace(mVcdFile, m_axi_Output1_WUSER, "(port)m_axi_Output1_WUSER");
    sc_trace(mVcdFile, m_axi_Output1_ARVALID, "(port)m_axi_Output1_ARVALID");
    sc_trace(mVcdFile, m_axi_Output1_ARREADY, "(port)m_axi_Output1_ARREADY");
    sc_trace(mVcdFile, m_axi_Output1_ARADDR, "(port)m_axi_Output1_ARADDR");
    sc_trace(mVcdFile, m_axi_Output1_ARID, "(port)m_axi_Output1_ARID");
    sc_trace(mVcdFile, m_axi_Output1_ARLEN, "(port)m_axi_Output1_ARLEN");
    sc_trace(mVcdFile, m_axi_Output1_ARSIZE, "(port)m_axi_Output1_ARSIZE");
    sc_trace(mVcdFile, m_axi_Output1_ARBURST, "(port)m_axi_Output1_ARBURST");
    sc_trace(mVcdFile, m_axi_Output1_ARLOCK, "(port)m_axi_Output1_ARLOCK");
    sc_trace(mVcdFile, m_axi_Output1_ARCACHE, "(port)m_axi_Output1_ARCACHE");
    sc_trace(mVcdFile, m_axi_Output1_ARPROT, "(port)m_axi_Output1_ARPROT");
    sc_trace(mVcdFile, m_axi_Output1_ARQOS, "(port)m_axi_Output1_ARQOS");
    sc_trace(mVcdFile, m_axi_Output1_ARREGION, "(port)m_axi_Output1_ARREGION");
    sc_trace(mVcdFile, m_axi_Output1_ARUSER, "(port)m_axi_Output1_ARUSER");
    sc_trace(mVcdFile, m_axi_Output1_RVALID, "(port)m_axi_Output1_RVALID");
    sc_trace(mVcdFile, m_axi_Output1_RREADY, "(port)m_axi_Output1_RREADY");
    sc_trace(mVcdFile, m_axi_Output1_RDATA, "(port)m_axi_Output1_RDATA");
    sc_trace(mVcdFile, m_axi_Output1_RLAST, "(port)m_axi_Output1_RLAST");
    sc_trace(mVcdFile, m_axi_Output1_RID, "(port)m_axi_Output1_RID");
    sc_trace(mVcdFile, m_axi_Output1_RUSER, "(port)m_axi_Output1_RUSER");
    sc_trace(mVcdFile, m_axi_Output1_RRESP, "(port)m_axi_Output1_RRESP");
    sc_trace(mVcdFile, m_axi_Output1_BVALID, "(port)m_axi_Output1_BVALID");
    sc_trace(mVcdFile, m_axi_Output1_BREADY, "(port)m_axi_Output1_BREADY");
    sc_trace(mVcdFile, m_axi_Output1_BRESP, "(port)m_axi_Output1_BRESP");
    sc_trace(mVcdFile, m_axi_Output1_BID, "(port)m_axi_Output1_BID");
    sc_trace(mVcdFile, m_axi_Output1_BUSER, "(port)m_axi_Output1_BUSER");
    sc_trace(mVcdFile, Output1_offset, "(port)Output1_offset");
    sc_trace(mVcdFile, output_tmp_address0, "(port)output_tmp_address0");
    sc_trace(mVcdFile, output_tmp_ce0, "(port)output_tmp_ce0");
    sc_trace(mVcdFile, output_tmp_q0, "(port)output_tmp_q0");
    sc_trace(mVcdFile, output_tmp1_address0, "(port)output_tmp1_address0");
    sc_trace(mVcdFile, output_tmp1_ce0, "(port)output_tmp1_ce0");
    sc_trace(mVcdFile, output_tmp1_q0, "(port)output_tmp1_q0");
    sc_trace(mVcdFile, tm_V_6, "(port)tm_V_6");
    sc_trace(mVcdFile, mLoop1_V, "(port)mLoop1_V");
    sc_trace(mVcdFile, mLoop2_V, "(port)mLoop2_V");
    sc_trace(mVcdFile, outputoffsetarray_0, "(port)outputoffsetarray_0");
    sc_trace(mVcdFile, outputoffsetarray_1, "(port)outputoffsetarray_1");
    sc_trace(mVcdFile, OutputLength, "(port)OutputLength");
    sc_trace(mVcdFile, OutputLength1, "(port)OutputLength1");
    sc_trace(mVcdFile, enable, "(port)enable");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, enable_read_read_fu_64_p2, "enable_read_read_fu_64_p2");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_ap_start, "grp_mmcpy_outputport_fu_124_ap_start");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_ap_done, "grp_mmcpy_outputport_fu_124_ap_done");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_ap_idle, "grp_mmcpy_outputport_fu_124_ap_idle");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_ap_ready, "grp_mmcpy_outputport_fu_124_ap_ready");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARVALID, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARVALID");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARADDR, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARADDR");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARID, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARID");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLEN, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLEN");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARSIZE, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARSIZE");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARBURST, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARBURST");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLOCK, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARLOCK");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARCACHE, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARCACHE");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARPROT, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARPROT");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARQOS, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARQOS");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARREGION, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARREGION");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARUSER, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_ARUSER");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_RREADY, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_RREADY");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY, "grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_output_tmp_address0, "grp_mmcpy_outputport_fu_124_output_tmp_address0");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_output_tmp_ce0, "grp_mmcpy_outputport_fu_124_output_tmp_ce0");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_ap_start, "grp_mmcpy_outputport1_fu_142_ap_start");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_ap_done, "grp_mmcpy_outputport1_fu_142_ap_done");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_ap_idle, "grp_mmcpy_outputport1_fu_142_ap_idle");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_ap_ready, "grp_mmcpy_outputport1_fu_142_ap_ready");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARVALID, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARVALID");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARADDR, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARADDR");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARID, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARID");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLEN, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLEN");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARSIZE, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARSIZE");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARBURST, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARBURST");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLOCK, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARLOCK");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARCACHE, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARCACHE");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARPROT, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARPROT");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARQOS, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARQOS");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARREGION, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARREGION");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARUSER, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_ARUSER");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_RREADY, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_RREADY");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY, "grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_output_tmp_address0, "grp_mmcpy_outputport1_fu_142_output_tmp_address0");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_output_tmp_ce0, "grp_mmcpy_outputport1_fu_142_output_tmp_ce0");
    sc_trace(mVcdFile, grp_mmcpy_outputport_fu_124_ap_start_reg, "grp_mmcpy_outputport_fu_124_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_mmcpy_outputport1_fu_142_ap_start_reg, "grp_mmcpy_outputport1_fu_142_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_on_subcall_done, "ap_block_state2_on_subcall_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

mmcpy_outputpixel::~mmcpy_outputpixel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_mmcpy_outputport_fu_124;
    delete grp_mmcpy_outputport1_fu_142;
}

void mmcpy_outputpixel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_0;
}

void mmcpy_outputpixel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void mmcpy_outputpixel::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv1_0;
}

void mmcpy_outputpixel::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv2_0;
}

void mmcpy_outputpixel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_mmcpy_outputport1_fu_142_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1))) {
            grp_mmcpy_outputport1_fu_142_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mmcpy_outputport1_fu_142_ap_ready.read())) {
            grp_mmcpy_outputport1_fu_142_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_mmcpy_outputport_fu_124_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1))) {
            grp_mmcpy_outputport_fu_124_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mmcpy_outputport_fu_124_ap_ready.read())) {
            grp_mmcpy_outputport_fu_124_ap_start_reg = ap_const_logic_0;
        }
    }
}

void mmcpy_outputpixel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mmcpy_outputpixel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mmcpy_outputpixel::thread_ap_block_state2_on_subcall_done() {
    ap_block_state2_on_subcall_done = ((esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_mmcpy_outputport_fu_124_ap_done.read())) || (esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_mmcpy_outputport1_fu_142_ap_done.read())));
}

void mmcpy_outputpixel::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_enable_read_read_fu_64_p2() {
    enable_read_read_fu_64_p2 =  (sc_lv<1>) (enable.read());
}

void mmcpy_outputpixel::thread_grp_mmcpy_outputport1_fu_142_ap_start() {
    grp_mmcpy_outputport1_fu_142_ap_start = grp_mmcpy_outputport1_fu_142_ap_start_reg.read();
}

void mmcpy_outputpixel::thread_grp_mmcpy_outputport_fu_124_ap_start() {
    grp_mmcpy_outputport_fu_124_ap_start = grp_mmcpy_outputport_fu_124_ap_start_reg.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARADDR() {
    m_axi_Output1_ARADDR = ap_const_lv32_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARBURST() {
    m_axi_Output1_ARBURST = ap_const_lv2_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARCACHE() {
    m_axi_Output1_ARCACHE = ap_const_lv4_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARID() {
    m_axi_Output1_ARID = ap_const_lv1_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARLEN() {
    m_axi_Output1_ARLEN = ap_const_lv32_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARLOCK() {
    m_axi_Output1_ARLOCK = ap_const_lv2_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARPROT() {
    m_axi_Output1_ARPROT = ap_const_lv3_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARQOS() {
    m_axi_Output1_ARQOS = ap_const_lv4_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARREGION() {
    m_axi_Output1_ARREGION = ap_const_lv4_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARSIZE() {
    m_axi_Output1_ARSIZE = ap_const_lv3_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARUSER() {
    m_axi_Output1_ARUSER = ap_const_lv1_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_ARVALID() {
    m_axi_Output1_ARVALID = ap_const_logic_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWADDR() {
    m_axi_Output1_AWADDR = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWADDR.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWBURST() {
    m_axi_Output1_AWBURST = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWBURST.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWCACHE() {
    m_axi_Output1_AWCACHE = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWCACHE.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWID() {
    m_axi_Output1_AWID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWID.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWLEN() {
    m_axi_Output1_AWLEN = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLEN.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWLOCK() {
    m_axi_Output1_AWLOCK = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWLOCK.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWPROT() {
    m_axi_Output1_AWPROT = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWPROT.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWQOS() {
    m_axi_Output1_AWQOS = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWQOS.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWREGION() {
    m_axi_Output1_AWREGION = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWREGION.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWSIZE() {
    m_axi_Output1_AWSIZE = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWSIZE.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWUSER() {
    m_axi_Output1_AWUSER = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWUSER.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        m_axi_Output1_AWVALID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_AWVALID.read();
    } else {
        m_axi_Output1_AWVALID = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_m_axi_Output1_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        m_axi_Output1_BREADY = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_BREADY.read();
    } else {
        m_axi_Output1_BREADY = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_m_axi_Output1_RREADY() {
    m_axi_Output1_RREADY = ap_const_logic_0;
}

void mmcpy_outputpixel::thread_m_axi_Output1_WDATA() {
    m_axi_Output1_WDATA = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WDATA.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_WID() {
    m_axi_Output1_WID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WID.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_WLAST() {
    m_axi_Output1_WLAST = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WLAST.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_WSTRB() {
    m_axi_Output1_WSTRB = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WSTRB.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_WUSER() {
    m_axi_Output1_WUSER = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WUSER.read();
}

void mmcpy_outputpixel::thread_m_axi_Output1_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        m_axi_Output1_WVALID = grp_mmcpy_outputport1_fu_142_m_axi_Output_r_WVALID.read();
    } else {
        m_axi_Output1_WVALID = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARADDR() {
    m_axi_Output_r_ARADDR = ap_const_lv32_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARBURST() {
    m_axi_Output_r_ARBURST = ap_const_lv2_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARCACHE() {
    m_axi_Output_r_ARCACHE = ap_const_lv4_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARID() {
    m_axi_Output_r_ARID = ap_const_lv1_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARLEN() {
    m_axi_Output_r_ARLEN = ap_const_lv32_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARLOCK() {
    m_axi_Output_r_ARLOCK = ap_const_lv2_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARPROT() {
    m_axi_Output_r_ARPROT = ap_const_lv3_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARQOS() {
    m_axi_Output_r_ARQOS = ap_const_lv4_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARREGION() {
    m_axi_Output_r_ARREGION = ap_const_lv4_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARSIZE() {
    m_axi_Output_r_ARSIZE = ap_const_lv3_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARUSER() {
    m_axi_Output_r_ARUSER = ap_const_lv1_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_ARVALID() {
    m_axi_Output_r_ARVALID = ap_const_logic_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWADDR() {
    m_axi_Output_r_AWADDR = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWADDR.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWBURST() {
    m_axi_Output_r_AWBURST = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWBURST.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWCACHE() {
    m_axi_Output_r_AWCACHE = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWCACHE.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWID() {
    m_axi_Output_r_AWID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWID.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWLEN() {
    m_axi_Output_r_AWLEN = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLEN.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWLOCK() {
    m_axi_Output_r_AWLOCK = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWLOCK.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWPROT() {
    m_axi_Output_r_AWPROT = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWPROT.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWQOS() {
    m_axi_Output_r_AWQOS = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWQOS.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWREGION() {
    m_axi_Output_r_AWREGION = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWREGION.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWSIZE() {
    m_axi_Output_r_AWSIZE = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWSIZE.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWUSER() {
    m_axi_Output_r_AWUSER = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWUSER.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        m_axi_Output_r_AWVALID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_AWVALID.read();
    } else {
        m_axi_Output_r_AWVALID = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_m_axi_Output_r_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        m_axi_Output_r_BREADY = grp_mmcpy_outputport_fu_124_m_axi_Output_r_BREADY.read();
    } else {
        m_axi_Output_r_BREADY = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_m_axi_Output_r_RREADY() {
    m_axi_Output_r_RREADY = ap_const_logic_0;
}

void mmcpy_outputpixel::thread_m_axi_Output_r_WDATA() {
    m_axi_Output_r_WDATA = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WDATA.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_WID() {
    m_axi_Output_r_WID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WID.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_WLAST() {
    m_axi_Output_r_WLAST = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WLAST.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_WSTRB() {
    m_axi_Output_r_WSTRB = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WSTRB.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_WUSER() {
    m_axi_Output_r_WUSER = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WUSER.read();
}

void mmcpy_outputpixel::thread_m_axi_Output_r_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(enable_read_read_fu_64_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        m_axi_Output_r_WVALID = grp_mmcpy_outputport_fu_124_m_axi_Output_r_WVALID.read();
    } else {
        m_axi_Output_r_WVALID = ap_const_logic_0;
    }
}

void mmcpy_outputpixel::thread_output_tmp1_address0() {
    output_tmp1_address0 = grp_mmcpy_outputport1_fu_142_output_tmp_address0.read();
}

void mmcpy_outputpixel::thread_output_tmp1_ce0() {
    output_tmp1_ce0 = grp_mmcpy_outputport1_fu_142_output_tmp_ce0.read();
}

void mmcpy_outputpixel::thread_output_tmp_address0() {
    output_tmp_address0 = grp_mmcpy_outputport_fu_124_output_tmp_address0.read();
}

void mmcpy_outputpixel::thread_output_tmp_ce0() {
    output_tmp_ce0 = grp_mmcpy_outputport_fu_124_output_tmp_ce0.read();
}

void mmcpy_outputpixel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

